

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Apr 11 14:33:56 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataCOMRAM
    69  001C84                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _randx
    73  001C84  0001               	dw	1
    74  001C86  0000               	dw	0
    75                           
    76                           	psect	mediumconst
    77  00FE5A                     __pmediumconst:
    78                           	opt stack 0
    79  00FE5A  00                 	db	0
    80  00FE5B                     _dpowers:
    81                           	opt stack 0
    82  00FE5B  0001               	dw	1
    83  00FE5D  000A               	dw	10
    84  00FE5F  0064               	dw	100
    85  00FE61  03E8               	dw	1000
    86  00FE63  2710               	dw	10000
    87  00FE65                     __end_of_dpowers:
    88                           	opt stack 0
    89  00FE65                     _hexpowers:
    90                           	opt stack 0
    91  00FE65  0001               	dw	1
    92  00FE67  0010               	dw	16
    93  00FE69  0100               	dw	256
    94  00FE6B  1000               	dw	4096
    95  00FE6D                     __end_of_hexpowers:
    96                           	opt stack 0
    97  00FE6D                     STR_25:
    98  00FE6D  72                 	db	114	;'r'
    99  00FE6E  61                 	db	97	;'a'
   100  00FE6F  64                 	db	100	;'d'
   101  00FE70  69                 	db	105	;'i'
   102  00FE71  6F                 	db	111	;'o'
   103  00FE72  20                 	db	32
   104  00FE73  74                 	db	116	;'t'
   105  00FE74  78                 	db	120	;'x'
   106  00FE75  20                 	db	32
   107  00FE76  34                 	db	52	;'4'
   108  00FE77  32                 	db	50	;'2'
   109  00FE78  25                 	db	37
   110  00FE79  73                 	db	115	;'s'
   111  00FE7A  25                 	db	37
   112  00FE7B  30                 	db	48	;'0'
   113  00FE7C  32                 	db	50	;'2'
   114  00FE7D  58                 	db	88	;'X'
   115  00FE7E  25                 	db	37
   116  00FE7F  30                 	db	48	;'0'
   117  00FE80  32                 	db	50	;'2'
   118  00FE81  58                 	db	88	;'X'
   119  00FE82  30                 	db	48	;'0'
   120  00FE83  30                 	db	48	;'0'
   121  00FE84  30                 	db	48	;'0'
   122  00FE85  30                 	db	48	;'0'
   123  00FE86  30                 	db	48	;'0'
   124  00FE87  30                 	db	48	;'0'
   125  00FE88  30                 	db	48	;'0'
   126  00FE89  30                 	db	48	;'0'
   127  00FE8A  0D                 	db	13
   128  00FE8B  0A                 	db	10
   129  00FE8C  00                 	db	0
   130  00FE8D                     STR_23:
   131  00FE8D  72                 	db	114	;'r'
   132  00FE8E  61                 	db	97	;'a'
   133  00FE8F  64                 	db	100	;'d'
   134  00FE90  69                 	db	105	;'i'
   135  00FE91  6F                 	db	111	;'o'
   136  00FE92  20                 	db	32
   137  00FE93  74                 	db	116	;'t'
   138  00FE94  78                 	db	120	;'x'
   139  00FE95  20                 	db	32
   140  00FE96  34                 	db	52	;'4'
   141  00FE97  32                 	db	50	;'2'
   142  00FE98  25                 	db	37
   143  00FE99  73                 	db	115	;'s'
   144  00FE9A  25                 	db	37
   145  00FE9B  30                 	db	48	;'0'
   146  00FE9C  32                 	db	50	;'2'
   147  00FE9D  58                 	db	88	;'X'
   148  00FE9E  25                 	db	37
   149  00FE9F  30                 	db	48	;'0'
   150  00FEA0  32                 	db	50	;'2'
   151  00FEA1  58                 	db	88	;'X'
   152  00FEA2  30                 	db	48	;'0'
   153  00FEA3  30                 	db	48	;'0'
   154  00FEA4  30                 	db	48	;'0'
   155  00FEA5  30                 	db	48	;'0'
   156  00FEA6  30                 	db	48	;'0'
   157  00FEA7  30                 	db	48	;'0'
   158  00FEA8  30                 	db	48	;'0'
   159  00FEA9  31                 	db	49	;'1'
   160  00FEAA  0D                 	db	13
   161  00FEAB  0A                 	db	10
   162  00FEAC  00                 	db	0
   163  00FEAD                     STR_17:
   164  00FEAD  72                 	db	114	;'r'
   165  00FEAE  61                 	db	97	;'a'
   166  00FEAF  64                 	db	100	;'d'
   167  00FEB0  69                 	db	105	;'i'
   168  00FEB1  6F                 	db	111	;'o'
   169  00FEB2  20                 	db	32
   170  00FEB3  73                 	db	115	;'s'
   171  00FEB4  65                 	db	101	;'e'
   172  00FEB5  74                 	db	116	;'t'
   173  00FEB6  20                 	db	32
   174  00FEB7  62                 	db	98	;'b'
   175  00FEB8  77                 	db	119	;'w'
   176  00FEB9  20                 	db	32
   177  00FEBA  35                 	db	53	;'5'
   178  00FEBB  30                 	db	48	;'0'
   179  00FEBC  30                 	db	48	;'0'
   180  00FEBD  0D                 	db	13
   181  00FEBE  0A                 	db	10
   182  00FEBF  00                 	db	0
   183  00FEC0                     STR_16:
   184  00FEC0  72                 	db	114	;'r'
   185  00FEC1  61                 	db	97	;'a'
   186  00FEC2  64                 	db	100	;'d'
   187  00FEC3  69                 	db	105	;'i'
   188  00FEC4  6F                 	db	111	;'o'
   189  00FEC5  20                 	db	32
   190  00FEC6  73                 	db	115	;'s'
   191  00FEC7  65                 	db	101	;'e'
   192  00FEC8  74                 	db	116	;'t'
   193  00FEC9  20                 	db	32
   194  00FECA  70                 	db	112	;'p'
   195  00FECB  77                 	db	119	;'w'
   196  00FECC  72                 	db	114	;'r'
   197  00FECD  20                 	db	32
   198  00FECE  2D                 	db	45
   199  00FECF  32                 	db	50	;'2'
   200  00FED0  0D                 	db	13
   201  00FED1  0A                 	db	10
   202  00FED2  00                 	db	0
   203  00FED3                     STR_18:
   204  00FED3  72                 	db	114	;'r'
   205  00FED4  61                 	db	97	;'a'
   206  00FED5  64                 	db	100	;'d'
   207  00FED6  69                 	db	105	;'i'
   208  00FED7  6F                 	db	111	;'o'
   209  00FED8  20                 	db	32
   210  00FED9  73                 	db	115	;'s'
   211  00FEDA  65                 	db	101	;'e'
   212  00FEDB  74                 	db	116	;'t'
   213  00FEDC  20                 	db	32
   214  00FEDD  73                 	db	115	;'s'
   215  00FEDE  66                 	db	102	;'f'
   216  00FEDF  20                 	db	32
   217  00FEE0  73                 	db	115	;'s'
   218  00FEE1  66                 	db	102	;'f'
   219  00FEE2  37                 	db	55	;'7'
   220  00FEE3  0D                 	db	13
   221  00FEE4  0A                 	db	10
   222  00FEE5  00                 	db	0
   223  00FEE6                     STR_19:
   224  00FEE6  72                 	db	114	;'r'
   225  00FEE7  61                 	db	97	;'a'
   226  00FEE8  64                 	db	100	;'d'
   227  00FEE9  69                 	db	105	;'i'
   228  00FEEA  6F                 	db	111	;'o'
   229  00FEEB  20                 	db	32
   230  00FEEC  73                 	db	115	;'s'
   231  00FEED  65                 	db	101	;'e'
   232  00FEEE  74                 	db	116	;'t'
   233  00FEEF  20                 	db	32
   234  00FEF0  63                 	db	99	;'c'
   235  00FEF1  72                 	db	114	;'r'
   236  00FEF2  20                 	db	32
   237  00FEF3  34                 	db	52	;'4'
   238  00FEF4  2F                 	db	47
   239  00FEF5  38                 	db	56	;'8'
   240  00FEF6  0D                 	db	13
   241  00FEF7  0A                 	db	10
   242  00FEF8  00                 	db	0
   243  00FEF9                     STR_21:
   244  00FEF9  72                 	db	114	;'r'
   245  00FEFA  61                 	db	97	;'a'
   246  00FEFB  64                 	db	100	;'d'
   247  00FEFC  69                 	db	105	;'i'
   248  00FEFD  6F                 	db	111	;'o'
   249  00FEFE  20                 	db	32
   250  00FEFF  73                 	db	115	;'s'
   251  00FF00  65                 	db	101	;'e'
   252  00FF01  74                 	db	116	;'t'
   253  00FF02  20                 	db	32
   254  00FF03  77                 	db	119	;'w'
   255  00FF04  64                 	db	100	;'d'
   256  00FF05  74                 	db	116	;'t'
   257  00FF06  20                 	db	32
   258  00FF07  25                 	db	37
   259  00FF08  64                 	db	100	;'d'
   260  00FF09  0D                 	db	13
   261  00FF0A  0A                 	db	10
   262  00FF0B  00                 	db	0
   263  00FF0C                     STR_20:
   264  00FF0C  72                 	db	114	;'r'
   265  00FF0D  61                 	db	97	;'a'
   266  00FF0E  64                 	db	100	;'d'
   267  00FF0F  69                 	db	105	;'i'
   268  00FF10  6F                 	db	111	;'o'
   269  00FF11  20                 	db	32
   270  00FF12  73                 	db	115	;'s'
   271  00FF13  65                 	db	101	;'e'
   272  00FF14  74                 	db	116	;'t'
   273  00FF15  20                 	db	32
   274  00FF16  63                 	db	99	;'c'
   275  00FF17  72                 	db	114	;'r'
   276  00FF18  63                 	db	99	;'c'
   277  00FF19  20                 	db	32
   278  00FF1A  6F                 	db	111	;'o'
   279  00FF1B  6E                 	db	110	;'n'
   280  00FF1C  0D                 	db	13
   281  00FF1D  0A                 	db	10
   282  00FF1E  00                 	db	0
   283  00FF1F                     STR_13:
   284  00FF1F  72                 	db	114	;'r'
   285  00FF20  61                 	db	97	;'a'
   286  00FF21  64                 	db	100	;'d'
   287  00FF22  69                 	db	105	;'i'
   288  00FF23  6F                 	db	111	;'o'
   289  00FF24  20                 	db	32
   290  00FF25  67                 	db	103	;'g'
   291  00FF26  65                 	db	101	;'e'
   292  00FF27  74                 	db	116	;'t'
   293  00FF28  20                 	db	32
   294  00FF29  70                 	db	112	;'p'
   295  00FF2A  72                 	db	114	;'r'
   296  00FF2B  6C                 	db	108	;'l'
   297  00FF2C  65                 	db	101	;'e'
   298  00FF2D  6E                 	db	110	;'n'
   299  00FF2E  0D                 	db	13
   300  00FF2F  0A                 	db	10
   301  00FF30  00                 	db	0
   302  00FF31                     STR_29:
   303  00FF31  30                 	db	48	;'0'
   304  00FF32  31                 	db	49	;'1'
   305  00FF33  32                 	db	50	;'2'
   306  00FF34  33                 	db	51	;'3'
   307  00FF35  34                 	db	52	;'4'
   308  00FF36  35                 	db	53	;'5'
   309  00FF37  36                 	db	54	;'6'
   310  00FF38  37                 	db	55	;'7'
   311  00FF39  38                 	db	56	;'8'
   312  00FF3A  39                 	db	57	;'9'
   313  00FF3B  41                 	db	65	;'A'
   314  00FF3C  42                 	db	66	;'B'
   315  00FF3D  43                 	db	67	;'C'
   316  00FF3E  44                 	db	68	;'D'
   317  00FF3F  45                 	db	69	;'E'
   318  00FF40  46                 	db	70	;'F'
   319  00FF41  00                 	db	0
   320  00FF42                     STR_6:
   321  00FF42  46                 	db	70	;'F'
   322  00FF43  46                 	db	70	;'F'
   323  00FF44  46                 	db	70	;'F'
   324  00FF45  46                 	db	70	;'F'
   325  00FF46  46                 	db	70	;'F'
   326  00FF47  46                 	db	70	;'F'
   327  00FF48  46                 	db	70	;'F'
   328  00FF49  46                 	db	70	;'F'
   329  00FF4A  46                 	db	70	;'F'
   330  00FF4B  46                 	db	70	;'F'
   331  00FF4C  46                 	db	70	;'F'
   332  00FF4D  46                 	db	70	;'F'
   333  00FF4E  46                 	db	70	;'F'
   334  00FF4F  46                 	db	70	;'F'
   335  00FF50  46                 	db	70	;'F'
   336  00FF51  46                 	db	70	;'F'
   337  00FF52  00                 	db	0
   338  00FF53                     STR_5:
   339  00FF53  73                 	db	115	;'s'
   340  00FF54  79                 	db	121	;'y'
   341  00FF55  73                 	db	115	;'s'
   342  00FF56  20                 	db	32
   343  00FF57  67                 	db	103	;'g'
   344  00FF58  65                 	db	101	;'e'
   345  00FF59  74                 	db	116	;'t'
   346  00FF5A  20                 	db	32
   347  00FF5B  68                 	db	104	;'h'
   348  00FF5C  77                 	db	119	;'w'
   349  00FF5D  65                 	db	101	;'e'
   350  00FF5E  75                 	db	117	;'u'
   351  00FF5F  69                 	db	105	;'i'
   352  00FF60  0D                 	db	13
   353  00FF61  0A                 	db	10
   354  00FF62  00                 	db	0
   355  00FF63                     STR_14:
   356  00FF63  72                 	db	114	;'r'
   357  00FF64  61                 	db	97	;'a'
   358  00FF65  64                 	db	100	;'d'
   359  00FF66  69                 	db	105	;'i'
   360  00FF67  6F                 	db	111	;'o'
   361  00FF68  20                 	db	32
   362  00FF69  67                 	db	103	;'g'
   363  00FF6A  65                 	db	101	;'e'
   364  00FF6B  74                 	db	116	;'t'
   365  00FF6C  20                 	db	32
   366  00FF6D  70                 	db	112	;'p'
   367  00FF6E  77                 	db	119	;'w'
   368  00FF6F  72                 	db	114	;'r'
   369  00FF70  0D                 	db	13
   370  00FF71  0A                 	db	10
   371  00FF72  00                 	db	0
   372  00FF73                     STR_10:
   373  00FF73  72                 	db	114	;'r'
   374  00FF74  61                 	db	97	;'a'
   375  00FF75  64                 	db	100	;'d'
   376  00FF76  69                 	db	105	;'i'
   377  00FF77  6F                 	db	111	;'o'
   378  00FF78  20                 	db	32
   379  00FF79  67                 	db	103	;'g'
   380  00FF7A  65                 	db	101	;'e'
   381  00FF7B  74                 	db	116	;'t'
   382  00FF7C  20                 	db	32
   383  00FF7D  73                 	db	115	;'s'
   384  00FF7E  66                 	db	102	;'f'
   385  00FF7F  0D                 	db	13
   386  00FF80  0A                 	db	10
   387  00FF81  00                 	db	0
   388  00FF82                     STR_12:
   389  00FF82  72                 	db	114	;'r'
   390  00FF83  61                 	db	97	;'a'
   391  00FF84  64                 	db	100	;'d'
   392  00FF85  69                 	db	105	;'i'
   393  00FF86  6F                 	db	111	;'o'
   394  00FF87  20                 	db	32
   395  00FF88  67                 	db	103	;'g'
   396  00FF89  65                 	db	101	;'e'
   397  00FF8A  74                 	db	116	;'t'
   398  00FF8B  20                 	db	32
   399  00FF8C  63                 	db	99	;'c'
   400  00FF8D  72                 	db	114	;'r'
   401  00FF8E  0D                 	db	13
   402  00FF8F  0A                 	db	10
   403  00FF90  00                 	db	0
   404  00FF91                     STR_11:
   405  00FF91  72                 	db	114	;'r'
   406  00FF92  61                 	db	97	;'a'
   407  00FF93  64                 	db	100	;'d'
   408  00FF94  69                 	db	105	;'i'
   409  00FF95  6F                 	db	111	;'o'
   410  00FF96  20                 	db	32
   411  00FF97  67                 	db	103	;'g'
   412  00FF98  65                 	db	101	;'e'
   413  00FF99  74                 	db	116	;'t'
   414  00FF9A  20                 	db	32
   415  00FF9B  62                 	db	98	;'b'
   416  00FF9C  77                 	db	119	;'w'
   417  00FF9D  0D                 	db	13
   418  00FF9E  0A                 	db	10
   419  00FF9F  00                 	db	0
   420  00FFA0                     STR_9:
   421  00FFA0  73                 	db	115	;'s'
   422  00FFA1  79                 	db	121	;'y'
   423  00FFA2  73                 	db	115	;'s'
   424  00FFA3  20                 	db	32
   425  00FFA4  67                 	db	103	;'g'
   426  00FFA5  65                 	db	101	;'e'
   427  00FFA6  74                 	db	116	;'t'
   428  00FFA7  20                 	db	32
   429  00FFA8  76                 	db	118	;'v'
   430  00FFA9  65                 	db	101	;'e'
   431  00FFAA  72                 	db	114	;'r'
   432  00FFAB  0D                 	db	13
   433  00FFAC  0A                 	db	10
   434  00FFAD  00                 	db	0
   435  00FFAE                     STR_22:
   436  00FFAE  72                 	db	114	;'r'
   437  00FFAF  61                 	db	97	;'a'
   438  00FFB0  64                 	db	100	;'d'
   439  00FFB1  69                 	db	105	;'i'
   440  00FFB2  6F                 	db	111	;'o'
   441  00FFB3  20                 	db	32
   442  00FFB4  72                 	db	114	;'r'
   443  00FFB5  78                 	db	120	;'x'
   444  00FFB6  20                 	db	32
   445  00FFB7  30                 	db	48	;'0'
   446  00FFB8  0D                 	db	13
   447  00FFB9  0A                 	db	10
   448  00FFBA  00                 	db	0
   449  00FFBB                     STR_15:
   450  00FFBB  6D                 	db	109	;'m'
   451  00FFBC  61                 	db	97	;'a'
   452  00FFBD  63                 	db	99	;'c'
   453  00FFBE  20                 	db	32
   454  00FFBF  70                 	db	112	;'p'
   455  00FFC0  61                 	db	97	;'a'
   456  00FFC1  75                 	db	117	;'u'
   457  00FFC2  73                 	db	115	;'s'
   458  00FFC3  65                 	db	101	;'e'
   459  00FFC4  0D                 	db	13
   460  00FFC5  0A                 	db	10
   461  00FFC6  00                 	db	0
   462  00FFC7                     STR_8:
   463  00FFC7  73                 	db	115	;'s'
   464  00FFC8  79                 	db	121	;'y'
   465  00FFC9  73                 	db	115	;'s'
   466  00FFCA  20                 	db	32
   467  00FFCB  72                 	db	114	;'r'
   468  00FFCC  65                 	db	101	;'e'
   469  00FFCD  73                 	db	115	;'s'
   470  00FFCE  65                 	db	101	;'e'
   471  00FFCF  74                 	db	116	;'t'
   472  00FFD0  0D                 	db	13
   473  00FFD1  0A                 	db	10
   474  00FFD2  00                 	db	0
   475  00FFD3                     STR_3:
   476  00FFD3  72                 	db	114	;'r'
   477  00FFD4  61                 	db	97	;'a'
   478  00FFD5  64                 	db	100	;'d'
   479  00FFD6  69                 	db	105	;'i'
   480  00FFD7  6F                 	db	111	;'o'
   481  00FFD8  5F                 	db	95	;'_'
   482  00FFD9  74                 	db	116	;'t'
   483  00FFDA  78                 	db	120	;'x'
   484  00FFDB  5F                 	db	95	;'_'
   485  00FFDC  6F                 	db	111	;'o'
   486  00FFDD  6B                 	db	107	;'k'
   487  00FFDE  00                 	db	0
   488  00FFDF                     STR_1:
   489  00FFDF  72                 	db	114	;'r'
   490  00FFE0  61                 	db	97	;'a'
   491  00FFE1  64                 	db	100	;'d'
   492  00FFE2  69                 	db	105	;'i'
   493  00FFE3  6F                 	db	111	;'o'
   494  00FFE4  5F                 	db	95	;'_'
   495  00FFE5  65                 	db	101	;'e'
   496  00FFE6  72                 	db	114	;'r'
   497  00FFE7  72                 	db	114	;'r'
   498  00FFE8  00                 	db	0
   499  00FFE9                     STR_2:
   500  00FFE9  72                 	db	114	;'r'
   501  00FFEA  61                 	db	97	;'a'
   502  00FFEB  64                 	db	100	;'d'
   503  00FFEC  69                 	db	105	;'i'
   504  00FFED  6F                 	db	111	;'o'
   505  00FFEE  5F                 	db	95	;'_'
   506  00FFEF  72                 	db	114	;'r'
   507  00FFF0  78                 	db	120	;'x'
   508  00FFF1  00                 	db	0
   509  00FFF2                     STR_28:
   510  00FFF2  28                 	db	40
   511  00FFF3  6E                 	db	110	;'n'
   512  00FFF4  75                 	db	117	;'u'
   513  00FFF5  6C                 	db	108	;'l'
   514  00FFF6  6C                 	db	108	;'l'
   515  00FFF7  29                 	db	41
   516  00FFF8  00                 	db	0
   517  00FFF9                     STR_7:
   518  00FFF9  25                 	db	37
   519  00FFFA  63                 	db	99	;'c'
   520  00FFFB  25                 	db	37
   521  00FFFC  63                 	db	99	;'c'
   522  00FFFD  00                 	db	0
   523  0000                     
   524                           ; #config settings
   525  00FFFE  00                 	db	0	; dummy byte at the end
   526  0000                     
   527                           	psect	nvCOMRAM
   528  000039                     __pnvCOMRAM:
   529                           	opt stack 0
   530  000039                     _eusart1TxBufferRemaining:
   531                           	opt stack 0
   532  000039                     	ds	1
   533  0000                     _ANSELA	set	3896
   534  0000                     _ANSELB	set	3897
   535  0000                     _ANSELC	set	3898
   536  0000                     _CCPTMRS0bits	set	3913
   537  0000                     _BAUDCON1	set	4024
   538  0000                     _CCP1CON	set	4029
   539  0000                     _CCPR1H	set	4031
   540  0000                     _CCPR1L	set	4030
   541  0000                     _ECCP1AS	set	4022
   542  0000                     _INTCON2bits	set	4081
   543  0000                     _INTCONbits	set	4082
   544  0000                     _IPR1bits	set	3999
   545  0000                     _LATA	set	3977
   546  0000                     _LATB	set	3978
   547  0000                     _LATC	set	3979
   548  0000                     _OSCCON	set	4051
   549  0000                     _OSCCON2	set	4050
   550  0000                     _OSCTUNE	set	3995
   551  0000                     _PIE1bits	set	3997
   552  0000                     _PIR1bits	set	3998
   553  0000                     _PR2	set	4027
   554  0000                     _PSTR1CON	set	4025
   555  0000                     _PWM1CON	set	4023
   556  0000                     _RCONbits	set	4048
   557  0000                     _RCREG1	set	4014
   558  0000                     _RCSTA1	set	4011
   559  0000                     _RCSTA1bits	set	4011
   560  0000                     _SPBRG1	set	4015
   561  0000                     _SPBRGH1	set	4016
   562  0000                     _T2CON	set	4026
   563  0000                     _T2CONbits	set	4026
   564  0000                     _TMR2	set	4028
   565  0000                     _TRISA	set	3986
   566  0000                     _TRISB	set	3987
   567  0000                     _TRISC	set	3988
   568  0000                     _TXREG1	set	4013
   569  0000                     _TXSTA1	set	4012
   570  0000                     _WPUB	set	3937
   571                           
   572                           	psect	cinit
   573  00165E                     __pcinit:
   574                           	opt stack 0
   575  00165E                     start_initialization:
   576                           	opt stack 0
   577  00165E                     __initialization:
   578                           	opt stack 0
   579                           
   580                           ; Clear objects allocated to BANK2 (128 bytes)
   581  00165E  EE02  F000         	lfsr	0,__pbssBANK2
   582  001662  0E80               	movlw	128
   583  001664                     clear_0:
   584  001664  6AEE               	clrf	postinc0,c
   585  001666  06E8               	decf	wreg,f,c
   586  001668  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to BANK1 (256 bytes)
   589  00166A  EE01  F000         	lfsr	0,__pbssBANK1
   590  00166E  EE11 F000          	lfsr	1,256
   591  001672                     clear_1:
   592  001672  6AEE               	clrf	postinc0,c
   593  001674  50E5               	movf	postdec1,w,c
   594  001676  50E1               	movf	fsr1l,w,c
   595  001678  E1FC               	bnz	clear_1
   596  00167A  50E2               	movf	fsr1h,w,c
   597  00167C  E1FA               	bnz	clear_1
   598                           
   599                           ; Clear objects allocated to BANK0 (43 bytes)
   600  00167E  EE00  F098         	lfsr	0,__pbssBANK0
   601  001682  0E2B               	movlw	43
   602  001684                     clear_2:
   603  001684  6AEE               	clrf	postinc0,c
   604  001686  06E8               	decf	wreg,f,c
   605  001688  E1FD               	bnz	clear_2
   606                           
   607                           ; Clear objects allocated to COMRAM (8 bytes)
   608  00168A  EE00  F02D         	lfsr	0,__pbssCOMRAM
   609  00168E  0E08               	movlw	8
   610  001690                     clear_3:
   611  001690  6AEE               	clrf	postinc0,c
   612  001692  06E8               	decf	wreg,f,c
   613  001694  E1FD               	bnz	clear_3
   614                           
   615                           ; Initialize objects allocated to COMRAM (4 bytes)
   616                           ; load TBLPTR registers with __pidataCOMRAM
   617  001696  0E84               	movlw	low __pidataCOMRAM
   618  001698  6EF6               	movwf	tblptrl,c
   619  00169A  0E1C               	movlw	high __pidataCOMRAM
   620  00169C  6EF7               	movwf	tblptrh,c
   621  00169E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   622  0016A0  6EF8               	movwf	tblptru,c
   623  0016A2  EE00  F035         	lfsr	0,__pdataCOMRAM
   624  0016A6  EE10 F004          	lfsr	1,4
   625  0016AA                     copy_data0:
   626  0016AA  0009               	tblrd		*+
   627  0016AC  CFF5 FFEE          	movff	tablat,postinc0
   628  0016B0  50E5               	movf	postdec1,w,c
   629  0016B2  50E1               	movf	fsr1l,w,c
   630  0016B4  E1FA               	bnz	copy_data0
   631  0016B6                     end_of_initialization:
   632                           	opt stack 0
   633  0016B6                     __end_of__initialization:
   634                           	opt stack 0
   635  0016B6  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   636  0016B8  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   637  0016BA  0100               	movlb	0
   638  0016BC  EFC1  F004         	goto	_main	;jump to C main() function
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1h	equ	0xFE2
   647                           fsr1l	equ	0xFE1
   648                           
   649                           	psect	bssCOMRAM
   650  00002D                     __pbssCOMRAM:
   651                           	opt stack 0
   652  00002D                     _index:
   653                           	opt stack 0
   654  00002D                     	ds	2
   655  00002F                     _eusart1RxCount:
   656                           	opt stack 0
   657  00002F                     	ds	1
   658  000030                     _eusart1RxHead:
   659                           	opt stack 0
   660  000030                     	ds	1
   661  000031                     _eusart1RxTail:
   662                           	opt stack 0
   663  000031                     	ds	1
   664  000032                     _eusart1TxHead:
   665                           	opt stack 0
   666  000032                     	ds	1
   667  000033                     _eusart1TxTail:
   668                           	opt stack 0
   669  000033                     	ds	1
   670  000034                     _ready:
   671                           	opt stack 0
   672  000034                     	ds	1
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1h	equ	0xFE2
   681                           fsr1l	equ	0xFE1
   682                           
   683                           	psect	dataCOMRAM
   684  000035                     __pdataCOMRAM:
   685                           	opt stack 0
   686  000035                     _randx:
   687                           	opt stack 0
   688  000035                     	ds	4
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1h	equ	0xFE2
   697                           fsr1l	equ	0xFE1
   698                           
   699                           	psect	bssBANK0
   700  000098                     __pbssBANK0:
   701                           	opt stack 0
   702  000098                     _inc:
   703                           	opt stack 0
   704  000098                     	ds	1
   705  000099                     _uartState:
   706                           	opt stack 0
   707  000099                     	ds	1
   708  00009A                     _val:
   709                           	opt stack 0
   710  00009A                     	ds	1
   711  00009B                     _uuid:
   712                           	opt stack 0
   713  00009B                     	ds	40
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           postdec1	equ	0xFE5
   721                           fsr1h	equ	0xFE2
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	bssBANK1
   725  000100                     __pbssBANK1:
   726                           	opt stack 0
   727  000100                     _eusart1TxBuffer:
   728                           	opt stack 0
   729  000100                     	ds	128
   730  000180                     _line:
   731                           	opt stack 0
   732  000180                     	ds	128
   733                           tblptru	equ	0xFF8
   734                           tblptrh	equ	0xFF7
   735                           tblptrl	equ	0xFF6
   736                           tablat	equ	0xFF5
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           postdec1	equ	0xFE5
   740                           fsr1h	equ	0xFE2
   741                           fsr1l	equ	0xFE1
   742                           
   743                           	psect	bssBANK2
   744  000200                     __pbssBANK2:
   745                           	opt stack 0
   746  000200                     _eusart1RxBuffer:
   747                           	opt stack 0
   748  000200                     	ds	128
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           postdec1	equ	0xFE5
   756                           fsr1h	equ	0xFE2
   757                           fsr1l	equ	0xFE1
   758                           
   759                           	psect	cstackBANK0
   760  000060                     __pcstackBANK0:
   761                           	opt stack 0
   762  000060                     ?_strncmp:
   763                           	opt stack 0
   764  000060                     ?___lwmod:
   765                           	opt stack 0
   766  000060                     ?___lmul:
   767                           	opt stack 0
   768  000060                     ___lwmod@dividend:
   769                           	opt stack 0
   770  000060                     strncmp@s1:
   771                           	opt stack 0
   772  000060                     ___lmul@multiplier:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x0
   776  000060                     	ds	2
   777  000062                     ___lwmod@divisor:
   778                           	opt stack 0
   779  000062                     strncmp@s2:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783  000062                     	ds	2
   784  000064                     ___lwmod@counter:
   785                           	opt stack 0
   786  000064                     strncmp@len:
   787                           	opt stack 0
   788  000064                     ___lmul@multiplicand:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000064                     	ds	1
   793  000065                     ?__doprnt:
   794                           	opt stack 0
   795  000065                     __doprnt@pb:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x5
   799  000065                     	ds	1
   800  000066                     ??_strncmp:
   801                           
   802                           ; 1 bytes @ 0x6
   803  000066                     	ds	1
   804  000067                     __doprnt@f:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x7
   808  000067                     	ds	1
   809  000068                     ?___awmod:
   810                           	opt stack 0
   811  000068                     ?_strtol:
   812                           	opt stack 0
   813  000068                     ___awmod@dividend:
   814                           	opt stack 0
   815  000068                     strtol@s:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x8
   819  000068                     	ds	1
   820  000069                     ?_strstr:
   821                           	opt stack 0
   822  000069                     __doprnt@ap:
   823                           	opt stack 0
   824  000069                     strstr@s1:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x9
   828  000069                     	ds	1
   829  00006A                     ___awmod@divisor:
   830                           	opt stack 0
   831  00006A                     strtol@endptr:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0xA
   835  00006A                     	ds	1
   836  00006B                     ??__doprnt:
   837  00006B                     strstr@s2:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00006B                     	ds	1
   842  00006C                     ___awmod@counter:
   843                           	opt stack 0
   844  00006C                     strtol@base:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0xC
   848  00006C                     	ds	1
   849  00006D                     ___awmod@sign:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0xD
   853  00006D                     	ds	1
   854  00006E                     ??_strtol:
   855                           
   856                           ; 1 bytes @ 0xE
   857  00006E                     	ds	1
   858  00006F                     __doprnt@idx:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0xF
   862  00006F                     	ds	1
   863  000070                     __doprnt@prec:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x10
   867  000070                     	ds	1
   868  000071                     __doprnt@len:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x11
   872  000071                     	ds	1
   873  000072                     strtol@sign:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x12
   877  000072                     	ds	1
   878  000073                     __doprnt@cp:
   879                           	opt stack 0
   880  000073                     strtol@a:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x13
   884  000073                     	ds	2
   885  000075                     __doprnt@val:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x15
   889  000075                     	ds	2
   890  000077                     __doprnt@flag:
   891                           	opt stack 0
   892  000077                     strtol@c:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x17
   896  000077                     	ds	1
   897  000078                     __doprnt@width:
   898                           	opt stack 0
   899  000078                     srand@x:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x18
   903  000078                     	ds	2
   904  00007A                     __doprnt@c:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x1A
   908  00007A                     	ds	1
   909  00007B                     ?_printf:
   910                           	opt stack 0
   911  00007B                     ?_sprintf:
   912                           	opt stack 0
   913  00007B                     printf@f:
   914                           	opt stack 0
   915  00007B                     sprintf@wh:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1B
   919  00007B                     	ds	2
   920  00007D                     sprintf@f:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x1D
   924  00007D                     	ds	6
   925  000083                     printf@ap:
   926                           	opt stack 0
   927  000083                     sprintf@ap:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0x23
   931  000083                     	ds	2
   932  000085                     printf@pb:
   933                           	opt stack 0
   934  000085                     sprintf@pb:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x25
   938  000085                     	ds	4
   939  000089                     ?_process_message:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x29
   943  000089                     	ds	2
   944  00008B                     process_message@res:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x2B
   948  00008B                     	ds	2
   949  00008D                     process_message@hexval:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x2D
   953  00008D                     	ds	4
   954  000091                     ??_main:
   955                           
   956                           ; 1 bytes @ 0x31
   957  000091                     	ds	3
   958  000094                     main@q:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x34
   962  000094                     	ds	2
   963  000096                     main@delay:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x36
   967  000096                     	ds	2
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1h	equ	0xFE2
   976                           fsr1l	equ	0xFE1
   977                           
   978                           	psect	cstackCOMRAM
   979  000001                     __pcstackCOMRAM:
   980                           	opt stack 0
   981  000001                     ?_strcmp:
   982                           	opt stack 0
   983  000001                     ?i2_strlen:
   984                           	opt stack 0
   985  000001                     ?i2_strchr:
   986                           	opt stack 0
   987  000001                     EUSART1_Read@readValue:
   988                           	opt stack 0
   989  000001                     strcmp@s1:
   990                           	opt stack 0
   991  000001                     i2strlen@s:
   992                           	opt stack 0
   993  000001                     i2strchr@ptr:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x0
   997  000001                     	ds	2
   998  000003                     ??i2_strlen:
   999  000003                     strcmp@s2:
  1000                           	opt stack 0
  1001  000003                     i2strchr@chr:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x2
  1005  000003                     	ds	2
  1006  000005                     ??_strcmp:
  1007  000005                     i2strlen@cp:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x4
  1011  000005                     	ds	1
  1012  000006                     strcmp@r:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  000006                     	ds	1
  1017  000007                     ?i2_strncmp:
  1018                           	opt stack 0
  1019  000007                     i2strncmp@s1:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  000007                     	ds	2
  1024  000009                     i2strncmp@s2:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x8
  1028  000009                     	ds	2
  1029  00000B                     i2strncmp@len:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0xA
  1033  00000B                     	ds	2
  1034  00000D                     ??i2_strncmp:
  1035                           
  1036                           ; 1 bytes @ 0xC
  1037  00000D                     	ds	3
  1038  000010                     ?i2_strstr:
  1039                           	opt stack 0
  1040  000010                     i2strstr@s1:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0xF
  1044  000010                     	ds	2
  1045  000012                     i2strstr@s2:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x11
  1049  000012                     	ds	2
  1050  000014                     ??i2_strstr:
  1051                           
  1052                           ; 1 bytes @ 0x13
  1053  000014                     	ds	1
  1054  000015                     ??_EUSART1_Receive_ISR:
  1055                           
  1056                           ; 1 bytes @ 0x14
  1057  000015                     	ds	1
  1058  000016                     EUSART1_Receive_ISR@state:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x15
  1062  000016                     	ds	2
  1063  000018                     ??_INTERRUPT_InterruptManager:
  1064                           
  1065                           ; 1 bytes @ 0x17
  1066  000018                     	ds	14
  1067  000026                     ??_isdigit:
  1068  000026                     ??_isspace:
  1069  000026                     ??_isupper:
  1070  000026                     ?_strlen:
  1071                           	opt stack 0
  1072  000026                     ?_strchr:
  1073                           	opt stack 0
  1074  000026                     ?___wmul:
  1075                           	opt stack 0
  1076  000026                     ?___lwdiv:
  1077                           	opt stack 0
  1078  000026                     EUSART1_Write@txData:
  1079                           	opt stack 0
  1080  000026                     toupper@c:
  1081                           	opt stack 0
  1082  000026                     EPWM1_LoadDutyValue@dutyValue:
  1083                           	opt stack 0
  1084  000026                     wait_5ms@j:
  1085                           	opt stack 0
  1086  000026                     ___wmul@multiplier:
  1087                           	opt stack 0
  1088  000026                     ___lwdiv@dividend:
  1089                           	opt stack 0
  1090  000026                     strcpy@to:
  1091                           	opt stack 0
  1092  000026                     strlen@s:
  1093                           	opt stack 0
  1094  000026                     strchr@ptr:
  1095                           	opt stack 0
  1096  000026                     ___lmul@product:
  1097                           	opt stack 0
  1098                           
  1099                           ; 4 bytes @ 0x25
  1100  000026                     	ds	1
  1101  000027                     putch@txData:
  1102                           	opt stack 0
  1103  000027                     _isdigit$1033:
  1104                           	opt stack 0
  1105  000027                     _isspace$1316:
  1106                           	opt stack 0
  1107  000027                     _isupper$1319:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x26
  1111  000027                     	ds	1
  1112  000028                     ??_strlen:
  1113  000028                     ??_EPWM1_LoadDutyValue:
  1114  000028                     ??_wait_5ms:
  1115  000028                     isdigit@c:
  1116                           	opt stack 0
  1117  000028                     isspace@c:
  1118                           	opt stack 0
  1119  000028                     isupper@c:
  1120                           	opt stack 0
  1121  000028                     ___wmul@multiplicand:
  1122                           	opt stack 0
  1123  000028                     ___lwdiv@divisor:
  1124                           	opt stack 0
  1125  000028                     strcpy@from:
  1126                           	opt stack 0
  1127  000028                     strchr@chr:
  1128                           	opt stack 0
  1129                           
  1130                           ; 2 bytes @ 0x27
  1131  000028                     	ds	1
  1132  000029                     ??_isalpha:
  1133                           
  1134                           ; 1 bytes @ 0x28
  1135  000029                     	ds	1
  1136  00002A                     ?_rand:
  1137                           	opt stack 0
  1138  00002A                     _isalpha$1313:
  1139                           	opt stack 0
  1140  00002A                     ___wmul@product:
  1141                           	opt stack 0
  1142  00002A                     ___lwdiv@quotient:
  1143                           	opt stack 0
  1144  00002A                     strcpy@cp:
  1145                           	opt stack 0
  1146  00002A                     strlen@cp:
  1147                           	opt stack 0
  1148                           
  1149                           ; 2 bytes @ 0x29
  1150  00002A                     	ds	1
  1151  00002B                     wait_5ms@i:
  1152                           	opt stack 0
  1153  00002B                     isalpha@c:
  1154                           	opt stack 0
  1155                           
  1156                           ; 1 bytes @ 0x2A
  1157  00002B                     	ds	1
  1158  00002C                     ??_strstr:
  1159  00002C                     ___lwdiv@counter:
  1160                           	opt stack 0
  1161                           
  1162                           ; 1 bytes @ 0x2B
  1163  00002C                     	ds	1
  1164  00002D                     tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1h	equ	0xFE2
  1172                           fsr1l	equ	0xFE1
  1173                           
  1174                           ; 1 bytes @ 0x2C
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1177 ;;
  1178 ;; *************** function _main *****************
  1179 ;; Defined at:
  1180 ;;		line 121 in file "main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  delay           2   54[BANK0 ] int 
  1185 ;;  q               2   52[BANK0 ] int 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        7 bytes
  1200 ;; Hardware stack levels required when called:   10
  1201 ;; This function calls:
  1202 ;;		_EPWM1_LoadDutyValue
  1203 ;;		_InitRadio
  1204 ;;		_SYSTEM_Initialize
  1205 ;;		___awmod
  1206 ;;		_printf
  1207 ;;		_process_message
  1208 ;;		_rand
  1209 ;;		_read_line
  1210 ;;		_srand
  1211 ;;		_strtol
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text0
  1218  000982                     __ptext0:
  1219                           	opt stack 0
  1220  000982                     _main:
  1221                           	opt stack 21
  1222                           
  1223                           ;main.c: 122: SYSTEM_Initialize();
  1224                           
  1225                           ;incstack = 0
  1226  000982  EC04  F00E         	call	_SYSTEM_Initialize	;wreg free
  1227                           
  1228                           ;main.c: 123: (INTCONbits.GIE = 1);
  1229  000986  8EF2               	bsf	intcon,7,c	;volatile
  1230                           
  1231                           ;main.c: 124: (INTCONbits.PEIE = 1);
  1232  000988  8CF2               	bsf	intcon,6,c	;volatile
  1233                           
  1234                           ;main.c: 126: InitRadio();
  1235  00098A  ECE6  F007         	call	_InitRadio	;wreg free
  1236                           
  1237                           ;main.c: 129: srand((int)strtol(uuid, (0), 0));
  1238  00098E  0E9B               	movlw	low _uuid
  1239  000990  0100               	movlb	0	; () banked
  1240  000992  6F68               	movwf	strtol@s& (0+255),b
  1241  000994  0E00               	movlw	high _uuid
  1242  000996  0100               	movlb	0	; () banked
  1243  000998  6F69               	movwf	(strtol@s+1)& (0+255),b
  1244  00099A  0E00               	movlw	0
  1245  00099C  0100               	movlb	0	; () banked
  1246  00099E  6F6A               	movwf	strtol@endptr& (0+255),b
  1247  0009A0  0E00               	movlw	0
  1248  0009A2  0100               	movlb	0	; () banked
  1249  0009A4  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  1250  0009A6  0E00               	movlw	0
  1251  0009A8  0100               	movlb	0	; () banked
  1252  0009AA  6F6D               	movwf	(strtol@base+1)& (0+255),b
  1253  0009AC  0E00               	movlw	0
  1254  0009AE  6F6C               	movwf	strtol@base& (0+255),b
  1255  0009B0  EC20  F006         	call	_strtol	;wreg free
  1256  0009B4  C068  F078         	movff	?_strtol,srand@x
  1257  0009B8  C069  F079         	movff	?_strtol+1,srand@x+1
  1258  0009BC  EC24  F00E         	call	_srand	;wreg free
  1259                           
  1260                           ;main.c: 130: int delay = 2000+(rand()%1000);
  1261  0009C0  EC91  F00B         	call	_rand	;wreg free
  1262  0009C4  C02A  F068         	movff	?_rand,___awmod@dividend
  1263  0009C8  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1264  0009CC  0E03               	movlw	3
  1265  0009CE  0100               	movlb	0	; () banked
  1266  0009D0  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1267  0009D2  0EE8               	movlw	232
  1268  0009D4  6F6A               	movwf	___awmod@divisor& (0+255),b
  1269  0009D6  EC11  F00A         	call	___awmod	;wreg free
  1270  0009DA  0ED0               	movlw	208
  1271  0009DC  0100               	movlb	0	; () banked
  1272  0009DE  2568               	addwf	?___awmod& (0+255),w,b
  1273  0009E0  0100               	movlb	0	; () banked
  1274  0009E2  6F96               	movwf	main@delay& (0+255),b
  1275  0009E4  0E07               	movlw	7
  1276  0009E6  0100               	movlb	0	; () banked
  1277  0009E8  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1278  0009EA  0100               	movlb	0	; () banked
  1279  0009EC  6F97               	movwf	(main@delay+1)& (0+255),b
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;main.c: 131: printf("radio set wdt %d\r\n",delay);
  1283  0009EE  0EF9               	movlw	low STR_21
  1284  0009F0  0100               	movlb	0	; () banked
  1285  0009F2  6F7B               	movwf	printf@f& (0+255),b
  1286  0009F4  0EFE               	movlw	high STR_21
  1287  0009F6  0100               	movlb	0	; () banked
  1288  0009F8  6F7C               	movwf	(printf@f+1)& (0+255),b
  1289  0009FA  C096  F07D         	movff	main@delay,?_printf+2
  1290  0009FE  C097  F07E         	movff	main@delay+1,?_printf+3
  1291  000A02  EC61  F00C         	call	_printf	;wreg free
  1292                           
  1293                           ;main.c: 132: read_line();
  1294  000A06  EC32  F00E         	call	_read_line	;wreg free
  1295                           
  1296                           ;main.c: 134: printf("radio rx 0\r\n");
  1297  000A0A  0EAE               	movlw	low STR_22
  1298  000A0C  0100               	movlb	0	; () banked
  1299  000A0E  6F7B               	movwf	printf@f& (0+255),b
  1300  000A10  0EFF               	movlw	high STR_22
  1301  000A12  0100               	movlb	0	; () banked
  1302  000A14  6F7C               	movwf	(printf@f+1)& (0+255),b
  1303  000A16  EC61  F00C         	call	_printf	;wreg free
  1304                           
  1305                           ;main.c: 135: read_line();
  1306  000A1A  EC32  F00E         	call	_read_line	;wreg free
  1307                           
  1308                           ;main.c: 137: int q=0;
  1309  000A1E  0E00               	movlw	0
  1310  000A20  0100               	movlb	0	; () banked
  1311  000A22  6F95               	movwf	(main@q+1)& (0+255),b
  1312  000A24  0E00               	movlw	0
  1313  000A26  6F94               	movwf	main@q& (0+255),b
  1314  000A28                     l3640:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 140: _delay((unsigned long)((1)*(64000000/4000.0)));
  1318  000A28  0E15               	movlw	21
  1319  000A2A  0100               	movlb	0	; () banked
  1320  000A2C  6F91               	movwf	??_main& (0+255),b
  1321  000A2E  0EC6               	movlw	198
  1322  000A30                     u4137:
  1323  000A30  2EE8               	decfsz	wreg,f,c
  1324  000A32  D7FE               	goto	u4137
  1325  000A34  2F91               	decfsz	??_main& (0+255),f,b
  1326  000A36  D7FC               	goto	u4137
  1327  000A38  D000               	nop2	
  1328                           
  1329                           ;main.c: 141: q++;
  1330  000A3A  0100               	movlb	0	; () banked
  1331  000A3C  4B94               	infsnz	main@q& (0+255),f,b
  1332  000A3E  2B95               	incf	(main@q+1)& (0+255),f,b
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 145: if(q>(2*delay)){break;}
  1336  000A40  C096  F091         	movff	main@delay,??_main
  1337  000A44  C097  F092         	movff	main@delay+1,??_main+1
  1338  000A48  90D8               	bcf	status,0,c
  1339  000A4A  0100               	movlb	0	; () banked
  1340  000A4C  3791               	rlcf	??_main& (0+255),f,b
  1341  000A4E  3792               	rlcf	(??_main+1)& (0+255),f,b
  1342  000A50  0100               	movlb	0	; () banked
  1343  000A52  5194               	movf	main@q& (0+255),w,b
  1344  000A54  0100               	movlb	0	; () banked
  1345  000A56  5D91               	subwf	??_main& (0+255),w,b
  1346  000A58  0100               	movlb	0	; () banked
  1347  000A5A  5192               	movf	(??_main+1)& (0+255),w,b
  1348  000A5C  0A80               	xorlw	128
  1349  000A5E  0100               	movlb	0	; () banked
  1350  000A60  6F93               	movwf	(??_main+2)& (0+255),b
  1351  000A62  0100               	movlb	0	; () banked
  1352  000A64  5195               	movf	(main@q+1)& (0+255),w,b
  1353  000A66  0A80               	xorlw	128
  1354  000A68  0100               	movlb	0	; () banked
  1355  000A6A  5993               	subwfb	(??_main+2)& (0+255),w,b
  1356  000A6C  A0D8               	btfss	status,0,c
  1357  000A6E  EF4A  F000         	goto	start
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;main.c: 147: if(uartState>2){
  1361                           
  1362                           ; BSR set to: 0
  1363                           
  1364                           ; BSR set to: 0
  1365  000A72  0E02               	movlw	2
  1366  000A74  0100               	movlb	0	; () banked
  1367  000A76  6599               	cpfsgt	_uartState& (0+255),b	;volatile
  1368  000A78  D7D7               	goto	l3640
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;main.c: 148: read_line();
  1372  000A7A  EC32  F00E         	call	_read_line	;wreg free
  1373                           
  1374                           ;main.c: 149: if(uartState==3){
  1375  000A7E  0E03               	movlw	3
  1376  000A80  0100               	movlb	0	; () banked
  1377  000A82  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1378  000A84  A4D8               	btfss	status,2,c
  1379  000A86  D013               	goto	l3658
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 150: if(q>delay){
  1383  000A88  0100               	movlb	0	; () banked
  1384  000A8A  5194               	movf	main@q& (0+255),w,b
  1385  000A8C  0100               	movlb	0	; () banked
  1386  000A8E  5D96               	subwf	main@delay& (0+255),w,b
  1387  000A90  0100               	movlb	0	; () banked
  1388  000A92  5197               	movf	(main@delay+1)& (0+255),w,b
  1389  000A94  0A80               	xorlw	128
  1390  000A96  0100               	movlb	0	; () banked
  1391  000A98  6F91               	movwf	??_main& (0+255),b
  1392  000A9A  0100               	movlb	0	; () banked
  1393  000A9C  5195               	movf	(main@q+1)& (0+255),w,b
  1394  000A9E  0A80               	xorlw	128
  1395  000AA0  0100               	movlb	0	; () banked
  1396  000AA2  5991               	subwfb	??_main& (0+255),w,b
  1397  000AA4  B0D8               	btfsc	status,0,c
  1398  000AA6  D003               	goto	l3658
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;main.c: 151: uartState=5;
  1402  000AA8  0E05               	movlw	5
  1403  000AAA  0100               	movlb	0	; () banked
  1404  000AAC  6F99               	movwf	_uartState& (0+255),b	;volatile
  1405  000AAE                     l3658:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 152: }
  1409                           ;main.c: 153: }
  1410                           ;main.c: 155: if(uartState==4){
  1411  000AAE  0E04               	movlw	4
  1412  000AB0  0100               	movlb	0	; () banked
  1413  000AB2  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1414  000AB4  A4D8               	btfss	status,2,c
  1415  000AB6  D06B               	goto	l3684
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;main.c: 157: if(process_message()){
  1419  000AB8  EC75  F008         	call	_process_message	;wreg free
  1420  000ABC  0100               	movlb	0	; () banked
  1421  000ABE  5189               	movf	?_process_message& (0+255),w,b
  1422  000AC0  0100               	movlb	0	; () banked
  1423  000AC2  118A               	iorwf	(?_process_message+1)& (0+255),w,b
  1424  000AC4  B4D8               	btfsc	status,2,c
  1425  000AC6  D050               	goto	l3680
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;main.c: 158: delay = 2000+(rand()%1000);
  1429  000AC8  EC91  F00B         	call	_rand	;wreg free
  1430  000ACC  C02A  F068         	movff	?_rand,___awmod@dividend
  1431  000AD0  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1432  000AD4  0E03               	movlw	3
  1433  000AD6  0100               	movlb	0	; () banked
  1434  000AD8  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1435  000ADA  0EE8               	movlw	232
  1436  000ADC  6F6A               	movwf	___awmod@divisor& (0+255),b
  1437  000ADE  EC11  F00A         	call	___awmod	;wreg free
  1438  000AE2  0ED0               	movlw	208
  1439  000AE4  0100               	movlb	0	; () banked
  1440  000AE6  2568               	addwf	?___awmod& (0+255),w,b
  1441  000AE8  0100               	movlb	0	; () banked
  1442  000AEA  6F96               	movwf	main@delay& (0+255),b
  1443  000AEC  0E07               	movlw	7
  1444  000AEE  0100               	movlb	0	; () banked
  1445  000AF0  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1446  000AF2  0100               	movlb	0	; () banked
  1447  000AF4  6F97               	movwf	(main@delay+1)& (0+255),b
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;main.c: 159: printf("radio tx 42%s%02X%02X00000001\r\n",uuid,inc++,val);
  1451  000AF6  0E8D               	movlw	low STR_23
  1452  000AF8  0100               	movlb	0	; () banked
  1453  000AFA  6F7B               	movwf	printf@f& (0+255),b
  1454  000AFC  0EFE               	movlw	high STR_23
  1455  000AFE  0100               	movlb	0	; () banked
  1456  000B00  6F7C               	movwf	(printf@f+1)& (0+255),b
  1457  000B02  0E9B               	movlw	low _uuid
  1458  000B04  0100               	movlb	0	; () banked
  1459  000B06  6F7D               	movwf	(?_printf+2)& (0+255),b
  1460  000B08  0E00               	movlw	high _uuid
  1461  000B0A  0100               	movlb	0	; () banked
  1462  000B0C  6F7E               	movwf	(?_printf+3)& (0+255),b
  1463  000B0E  C098  F07F         	movff	_inc,?_printf+4
  1464  000B12  0100               	movlb	0	; () banked
  1465  000B14  6B80               	clrf	(?_printf+5)& (0+255),b
  1466  000B16  C09A  F081         	movff	_val,?_printf+6
  1467  000B1A  0100               	movlb	0	; () banked
  1468  000B1C  6B82               	clrf	(?_printf+7)& (0+255),b
  1469  000B1E  EC61  F00C         	call	_printf	;wreg free
  1470  000B22  0100               	movlb	0	; () banked
  1471  000B24  2B98               	incf	_inc& (0+255),f,b
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 160: read_line();
  1475  000B26  EC32  F00E         	call	_read_line	;wreg free
  1476                           
  1477                           ;main.c: 161: read_line();
  1478  000B2A  EC32  F00E         	call	_read_line	;wreg free
  1479                           
  1480                           ;main.c: 162: printf("radio set wdt %d\r\n",delay);
  1481  000B2E  0EF9               	movlw	low STR_21
  1482  000B30  0100               	movlb	0	; () banked
  1483  000B32  6F7B               	movwf	printf@f& (0+255),b
  1484  000B34  0EFE               	movlw	high STR_21
  1485  000B36  0100               	movlb	0	; () banked
  1486  000B38  6F7C               	movwf	(printf@f+1)& (0+255),b
  1487  000B3A  C096  F07D         	movff	main@delay,?_printf+2
  1488  000B3E  C097  F07E         	movff	main@delay+1,?_printf+3
  1489  000B42  EC61  F00C         	call	_printf	;wreg free
  1490                           
  1491                           ;main.c: 163: read_line();
  1492  000B46  EC32  F00E         	call	_read_line	;wreg free
  1493                           
  1494                           ;main.c: 165: EPWM1_LoadDutyValue((uint16_t) val*4);
  1495  000B4A  0100               	movlb	0	; () banked
  1496  000B4C  519A               	movf	_val& (0+255),w,b
  1497  000B4E  0D04               	mullw	4
  1498  000B50  CFF3 F026          	movff	prodl,EPWM1_LoadDutyValue@dutyValue
  1499  000B54  CFF4 F027          	movff	prodh,EPWM1_LoadDutyValue@dutyValue+1
  1500  000B58  EC41  F00D         	call	_EPWM1_LoadDutyValue	;wreg free
  1501                           
  1502                           ;main.c: 166: q=0;
  1503  000B5C  0E00               	movlw	0
  1504  000B5E  0100               	movlb	0	; () banked
  1505  000B60  6F95               	movwf	(main@q+1)& (0+255),b
  1506  000B62  0E00               	movlw	0
  1507  000B64  6F94               	movwf	main@q& (0+255),b
  1508                           
  1509                           ;main.c: 167: } else {
  1510  000B66  D013               	goto	l3684
  1511  000B68                     l3680:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 168: if(q>delay){
  1515  000B68  0100               	movlb	0	; () banked
  1516  000B6A  5194               	movf	main@q& (0+255),w,b
  1517  000B6C  0100               	movlb	0	; () banked
  1518  000B6E  5D96               	subwf	main@delay& (0+255),w,b
  1519  000B70  0100               	movlb	0	; () banked
  1520  000B72  5197               	movf	(main@delay+1)& (0+255),w,b
  1521  000B74  0A80               	xorlw	128
  1522  000B76  0100               	movlb	0	; () banked
  1523  000B78  6F91               	movwf	??_main& (0+255),b
  1524  000B7A  0100               	movlb	0	; () banked
  1525  000B7C  5195               	movf	(main@q+1)& (0+255),w,b
  1526  000B7E  0A80               	xorlw	128
  1527  000B80  0100               	movlb	0	; () banked
  1528  000B82  5991               	subwfb	??_main& (0+255),w,b
  1529  000B84  B0D8               	btfsc	status,0,c
  1530  000B86  D003               	goto	l3684
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 169: uartState=5;
  1534  000B88  0E05               	movlw	5
  1535  000B8A  0100               	movlb	0	; () banked
  1536  000B8C  6F99               	movwf	_uartState& (0+255),b	;volatile
  1537  000B8E                     l3684:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;main.c: 170: }
  1541                           ;main.c: 171: }
  1542                           ;main.c: 172: }
  1543                           ;main.c: 174: if(uartState==5){
  1544  000B8E  0E05               	movlw	5
  1545  000B90  0100               	movlb	0	; () banked
  1546  000B92  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1547  000B94  A4D8               	btfss	status,2,c
  1548  000B96  D046               	goto	l3702
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 175: delay = 2000+(rand()%1000);
  1552  000B98  EC91  F00B         	call	_rand	;wreg free
  1553  000B9C  C02A  F068         	movff	?_rand,___awmod@dividend
  1554  000BA0  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1555  000BA4  0E03               	movlw	3
  1556  000BA6  0100               	movlb	0	; () banked
  1557  000BA8  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1558  000BAA  0EE8               	movlw	232
  1559  000BAC  6F6A               	movwf	___awmod@divisor& (0+255),b
  1560  000BAE  EC11  F00A         	call	___awmod	;wreg free
  1561  000BB2  0ED0               	movlw	208
  1562  000BB4  0100               	movlb	0	; () banked
  1563  000BB6  2568               	addwf	?___awmod& (0+255),w,b
  1564  000BB8  0100               	movlb	0	; () banked
  1565  000BBA  6F96               	movwf	main@delay& (0+255),b
  1566  000BBC  0E07               	movlw	7
  1567  000BBE  0100               	movlb	0	; () banked
  1568  000BC0  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1569  000BC2  0100               	movlb	0	; () banked
  1570  000BC4  6F97               	movwf	(main@delay+1)& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 176: printf("radio tx 42%s%02X%02X00000000\r\n",uuid,inc++,val);
  1574  000BC6  0E6D               	movlw	low STR_25
  1575  000BC8  0100               	movlb	0	; () banked
  1576  000BCA  6F7B               	movwf	printf@f& (0+255),b
  1577  000BCC  0EFE               	movlw	high STR_25
  1578  000BCE  0100               	movlb	0	; () banked
  1579  000BD0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1580  000BD2  0E9B               	movlw	low _uuid
  1581  000BD4  0100               	movlb	0	; () banked
  1582  000BD6  6F7D               	movwf	(?_printf+2)& (0+255),b
  1583  000BD8  0E00               	movlw	high _uuid
  1584  000BDA  0100               	movlb	0	; () banked
  1585  000BDC  6F7E               	movwf	(?_printf+3)& (0+255),b
  1586  000BDE  C098  F07F         	movff	_inc,?_printf+4
  1587  000BE2  0100               	movlb	0	; () banked
  1588  000BE4  6B80               	clrf	(?_printf+5)& (0+255),b
  1589  000BE6  C09A  F081         	movff	_val,?_printf+6
  1590  000BEA  0100               	movlb	0	; () banked
  1591  000BEC  6B82               	clrf	(?_printf+7)& (0+255),b
  1592  000BEE  EC61  F00C         	call	_printf	;wreg free
  1593  000BF2  0100               	movlb	0	; () banked
  1594  000BF4  2B98               	incf	_inc& (0+255),f,b
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;main.c: 177: read_line();
  1598  000BF6  EC32  F00E         	call	_read_line	;wreg free
  1599                           
  1600                           ;main.c: 178: read_line();
  1601  000BFA  EC32  F00E         	call	_read_line	;wreg free
  1602                           
  1603                           ;main.c: 179: printf("radio set wdt %d\r\n",delay);
  1604  000BFE  0EF9               	movlw	low STR_21
  1605  000C00  0100               	movlb	0	; () banked
  1606  000C02  6F7B               	movwf	printf@f& (0+255),b
  1607  000C04  0EFE               	movlw	high STR_21
  1608  000C06  0100               	movlb	0	; () banked
  1609  000C08  6F7C               	movwf	(printf@f+1)& (0+255),b
  1610  000C0A  C096  F07D         	movff	main@delay,?_printf+2
  1611  000C0E  C097  F07E         	movff	main@delay+1,?_printf+3
  1612  000C12  EC61  F00C         	call	_printf	;wreg free
  1613                           
  1614                           ;main.c: 180: read_line();
  1615  000C16  EC32  F00E         	call	_read_line	;wreg free
  1616                           
  1617                           ;main.c: 181: q=0;
  1618  000C1A  0E00               	movlw	0
  1619  000C1C  0100               	movlb	0	; () banked
  1620  000C1E  6F95               	movwf	(main@q+1)& (0+255),b
  1621  000C20  0E00               	movlw	0
  1622  000C22  6F94               	movwf	main@q& (0+255),b
  1623  000C24                     l3702:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;main.c: 182: }
  1627                           ;main.c: 184: printf("radio rx 0\r\n");
  1628  000C24  0EAE               	movlw	low STR_22
  1629  000C26  0100               	movlb	0	; () banked
  1630  000C28  6F7B               	movwf	printf@f& (0+255),b
  1631  000C2A  0EFF               	movlw	high STR_22
  1632  000C2C  0100               	movlb	0	; () banked
  1633  000C2E  6F7C               	movwf	(printf@f+1)& (0+255),b
  1634  000C30  EC61  F00C         	call	_printf	;wreg free
  1635                           
  1636                           ;main.c: 185: read_line();
  1637  000C34  EC32  F00E         	call	_read_line	;wreg free
  1638                           
  1639                           ;main.c: 186: uartState=0;
  1640  000C38  0E00               	movlw	0
  1641  000C3A  0100               	movlb	0	; () banked
  1642  000C3C  6F99               	movwf	_uartState& (0+255),b	;volatile
  1643                           
  1644                           ; BSR set to: 0
  1645                           
  1646                           ; BSR set to: 0
  1647  000C3E  D6F4               	goto	l3640
  1648  000C40                     __end_of_main:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           prodh	equ	0xFF4
  1655                           prodl	equ	0xFF3
  1656                           intcon	equ	0xFF2
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           postdec1	equ	0xFE5
  1660                           fsr1h	equ	0xFE2
  1661                           fsr1l	equ	0xFE1
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _srand *****************
  1665 ;; Defined at:
  1666 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  x               2   24[BANK0 ] unsigned int 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;Total ram usage:        2 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    4
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text1
  1695  001C48                     __ptext1:
  1696                           	opt stack 0
  1697  001C48                     _srand:
  1698                           	opt stack 26
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;incstack = 0
  1702  001C48  C078  F035         	movff	srand@x,_randx
  1703  001C4C  C079  F036         	movff	srand@x+1,_randx+1
  1704  001C50  6A37               	clrf	_randx+2,c
  1705  001C52  6A38               	clrf	_randx+3,c
  1706  001C54  0012               	return		;funcret
  1707  001C56                     __end_of_srand:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           prodh	equ	0xFF4
  1714                           prodl	equ	0xFF3
  1715                           intcon	equ	0xFF2
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           postdec1	equ	0xFE5
  1719                           fsr1h	equ	0xFE2
  1720                           fsr1l	equ	0xFE1
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _rand *****************
  1724 ;; Defined at:
  1725 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2   41[COMRAM] int 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    5
  1746 ;; This function calls:
  1747 ;;		___lmul
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text2
  1754  001722                     __ptext2:
  1755                           	opt stack 0
  1756  001722                     _rand:
  1757                           	opt stack 25
  1758                           
  1759                           ;incstack = 0
  1760  001722  C035  F060         	movff	_randx,___lmul@multiplier
  1761  001726  C036  F061         	movff	_randx+1,___lmul@multiplier+1
  1762  00172A  C037  F062         	movff	_randx+2,___lmul@multiplier+2
  1763  00172E  C038  F063         	movff	_randx+3,___lmul@multiplier+3
  1764  001732  0E6D               	movlw	109
  1765  001734  0100               	movlb	0	; () banked
  1766  001736  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1767  001738  0E4E               	movlw	78
  1768  00173A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1769  00173C  0EC6               	movlw	198
  1770  00173E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1771  001740  0E41               	movlw	65
  1772  001742  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1773  001744  ECF9  F00A         	call	___lmul	;wreg free
  1774  001748  C060  F035         	movff	?___lmul,_randx
  1775  00174C  C061  F036         	movff	?___lmul+1,_randx+1
  1776  001750  C062  F037         	movff	?___lmul+2,_randx+2
  1777  001754  C063  F038         	movff	?___lmul+3,_randx+3
  1778  001758  0E39               	movlw	57
  1779  00175A  2635               	addwf	_randx,f,c
  1780  00175C  0E30               	movlw	48
  1781  00175E  2236               	addwfc	_randx+1,f,c
  1782  001760  0E00               	movlw	0
  1783  001762  2237               	addwfc	_randx+2,f,c
  1784  001764  0E00               	movlw	0
  1785  001766  2238               	addwfc	_randx+3,f,c
  1786  001768  0EFF               	movlw	255
  1787  00176A  1437               	andwf	_randx+2,w,c
  1788  00176C  6E2A               	movwf	?_rand,c
  1789  00176E  0E7F               	movlw	127
  1790  001770  1438               	andwf	_randx+3,w,c
  1791  001772  6E2B               	movwf	?_rand+1,c
  1792  001774  0012               	return	
  1793  001776                     __end_of_rand:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function _process_message *****************
  1810 ;; Defined at:
  1811 ;;		line 58 in file "main.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  hexval          4   45[BANK0 ] unsigned char [4]
  1816 ;;  res             2   43[BANK0 ] int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  2   41[BANK0 ] int 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;Total ram usage:        8 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    8
  1833 ;; This function calls:
  1834 ;;		_sprintf
  1835 ;;		_strlen
  1836 ;;		_strstr
  1837 ;;		_strtol
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text3
  1844  0010EA                     __ptext3:
  1845                           	opt stack 0
  1846  0010EA                     _process_message:
  1847                           	opt stack 22
  1848                           
  1849                           ;main.c: 60: if(strlen(line)!=32)return 0;
  1850                           
  1851                           ;incstack = 0
  1852  0010EA  0E80               	movlw	low _line
  1853  0010EC  6E26               	movwf	strlen@s,c
  1854  0010EE  0E01               	movlw	high _line
  1855  0010F0  6E27               	movwf	strlen@s+1,c
  1856  0010F2  ECBB  F00B         	call	_strlen	;wreg free
  1857  0010F6  0E20               	movlw	32
  1858  0010F8  1826               	xorwf	?_strlen,w,c
  1859  0010FA  1027               	iorwf	?_strlen+1,w,c
  1860  0010FC  B4D8               	btfsc	status,2,c
  1861  0010FE  D006               	goto	l3510
  1862  001100  0E00               	movlw	0
  1863  001102  0100               	movlb	0	; () banked
  1864  001104  6F8A               	movwf	(?_process_message+1)& (0+255),b
  1865  001106  0E00               	movlw	0
  1866  001108  6F89               	movwf	?_process_message& (0+255),b
  1867                           
  1868                           ; BSR set to: 0
  1869  00110A  0012               	return	
  1870  00110C                     l3510:
  1871                           
  1872                           ;main.c: 62: int res = 0;
  1873  00110C  0E00               	movlw	0
  1874  00110E  0100               	movlb	0	; () banked
  1875  001110  6F8C               	movwf	(process_message@res+1)& (0+255),b
  1876  001112  0E00               	movlw	0
  1877  001114  6F8B               	movwf	process_message@res& (0+255),b
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 64: if(strstr(line,uuid)!=0)res++;
  1881  001116  0E80               	movlw	low _line
  1882  001118  0100               	movlb	0	; () banked
  1883  00111A  6F69               	movwf	strstr@s1& (0+255),b
  1884  00111C  0E01               	movlw	high _line
  1885  00111E  0100               	movlb	0	; () banked
  1886  001120  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  1887  001122  0E9B               	movlw	low _uuid
  1888  001124  0100               	movlb	0	; () banked
  1889  001126  6F6B               	movwf	strstr@s2& (0+255),b
  1890  001128  0E00               	movlw	high _uuid
  1891  00112A  0100               	movlb	0	; () banked
  1892  00112C  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  1893  00112E  EC63  F009         	call	_strstr	;wreg free
  1894  001132  0100               	movlb	0	; () banked
  1895  001134  5169               	movf	?_strstr& (0+255),w,b
  1896  001136  0100               	movlb	0	; () banked
  1897  001138  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  1898  00113A  B4D8               	btfsc	status,2,c
  1899  00113C  D003               	goto	l3516
  1900                           
  1901                           ; BSR set to: 0
  1902  00113E  0100               	movlb	0	; () banked
  1903  001140  4B8B               	infsnz	process_message@res& (0+255),f,b
  1904  001142  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  1905  001144                     l3516:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 66: if(strstr(line,"FFFFFFFFFFFFFFFF")!=0)res++;
  1909  001144  0E80               	movlw	low _line
  1910  001146  0100               	movlb	0	; () banked
  1911  001148  6F69               	movwf	strstr@s1& (0+255),b
  1912  00114A  0E01               	movlw	high _line
  1913  00114C  0100               	movlb	0	; () banked
  1914  00114E  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  1915  001150  0E42               	movlw	low STR_6
  1916  001152  0100               	movlb	0	; () banked
  1917  001154  6F6B               	movwf	strstr@s2& (0+255),b
  1918  001156  0EFF               	movlw	high STR_6
  1919  001158  0100               	movlb	0	; () banked
  1920  00115A  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  1921  00115C  EC63  F009         	call	_strstr	;wreg free
  1922  001160  0100               	movlb	0	; () banked
  1923  001162  5169               	movf	?_strstr& (0+255),w,b
  1924  001164  0100               	movlb	0	; () banked
  1925  001166  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  1926  001168  B4D8               	btfsc	status,2,c
  1927  00116A  D003               	goto	l3520
  1928                           
  1929                           ; BSR set to: 0
  1930  00116C  0100               	movlb	0	; () banked
  1931  00116E  4B8B               	infsnz	process_message@res& (0+255),f,b
  1932  001170  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  1933  001172                     l3520:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 68: if(res>0){
  1937  001172  0100               	movlb	0	; () banked
  1938  001174  BF8C               	btfsc	(process_message@res+1)& (0+255),7,b
  1939  001176  D03A               	goto	l3530
  1940  001178  0100               	movlb	0	; () banked
  1941  00117A  518C               	movf	(process_message@res+1)& (0+255),w,b
  1942  00117C  E104               	bnz	u3980
  1943  00117E  0100               	movlb	0	; () banked
  1944  001180  058B               	decf	process_message@res& (0+255),w,b
  1945  001182  A0D8               	btfss	status,0,c
  1946  001184  D033               	goto	l3530
  1947  001186                     u3980:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;main.c: 70: char hexval[4];
  1951                           ;main.c: 71: sprintf(hexval,"%c%c",line[28],line[29]);
  1952  001186  0E8D               	movlw	low process_message@hexval
  1953  001188  0100               	movlb	0	; () banked
  1954  00118A  6F7B               	movwf	sprintf@wh& (0+255),b
  1955  00118C  0E00               	movlw	high process_message@hexval
  1956  00118E  0100               	movlb	0	; () banked
  1957  001190  6F7C               	movwf	(sprintf@wh+1)& (0+255),b
  1958  001192  0EF9               	movlw	low STR_7
  1959  001194  0100               	movlb	0	; () banked
  1960  001196  6F7D               	movwf	sprintf@f& (0+255),b
  1961  001198  0EFF               	movlw	high STR_7
  1962  00119A  0100               	movlb	0	; () banked
  1963  00119C  6F7E               	movwf	(sprintf@f+1)& (0+255),b
  1964  00119E  C19C  F07F         	movff	_line+28,?_sprintf+4	;volatile
  1965  0011A2  0100               	movlb	0	; () banked
  1966  0011A4  6B80               	clrf	(?_sprintf+5)& (0+255),b
  1967  0011A6  C19D  F081         	movff	_line+29,?_sprintf+6	;volatile
  1968  0011AA  0100               	movlb	0	; () banked
  1969  0011AC  6B82               	clrf	(?_sprintf+7)& (0+255),b
  1970  0011AE  EC0F  F00C         	call	_sprintf	;wreg free
  1971                           
  1972                           ;main.c: 72: val = (int)strtol(hexval, (0), 16);
  1973  0011B2  0E8D               	movlw	low process_message@hexval
  1974  0011B4  0100               	movlb	0	; () banked
  1975  0011B6  6F68               	movwf	strtol@s& (0+255),b
  1976  0011B8  0E00               	movlw	high process_message@hexval
  1977  0011BA  0100               	movlb	0	; () banked
  1978  0011BC  6F69               	movwf	(strtol@s+1)& (0+255),b
  1979  0011BE  0E00               	movlw	0
  1980  0011C0  0100               	movlb	0	; () banked
  1981  0011C2  6F6A               	movwf	strtol@endptr& (0+255),b
  1982  0011C4  0E00               	movlw	0
  1983  0011C6  0100               	movlb	0	; () banked
  1984  0011C8  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  1985  0011CA  0E00               	movlw	0
  1986  0011CC  0100               	movlb	0	; () banked
  1987  0011CE  6F6D               	movwf	(strtol@base+1)& (0+255),b
  1988  0011D0  0E10               	movlw	16
  1989  0011D2  6F6C               	movwf	strtol@base& (0+255),b
  1990  0011D4  EC20  F006         	call	_strtol	;wreg free
  1991  0011D8  0100               	movlb	0	; () banked
  1992  0011DA  5168               	movf	?_strtol& (0+255),w,b
  1993  0011DC  0100               	movlb	0	; () banked
  1994  0011DE  6F9A               	movwf	_val& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 73: return 1;
  1998  0011E0  0E00               	movlw	0
  1999  0011E2  0100               	movlb	0	; () banked
  2000  0011E4  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2001  0011E6  0E01               	movlw	1
  2002  0011E8  6F89               	movwf	?_process_message& (0+255),b
  2003                           
  2004                           ; BSR set to: 0
  2005  0011EA  0012               	return	
  2006  0011EC                     l3530:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 74: }
  2010                           ;main.c: 75: return 0;
  2011  0011EC  0E00               	movlw	0
  2012  0011EE  0100               	movlb	0	; () banked
  2013  0011F0  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2014  0011F2  0E00               	movlw	0
  2015  0011F4  6F89               	movwf	?_process_message& (0+255),b
  2016  0011F6  0012               	return	
  2017  0011F8                     __end_of_process_message:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _strtol *****************
  2034 ;; Defined at:
  2035 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2038 ;;		 -> process_message@hexval(4), uuid(40), 
  2039 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2040 ;;		 -> NULL(0), 
  2041 ;;  base            2   12[BANK0 ] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  a               4   19[BANK0 ] long 
  2044 ;;  c               1   23[BANK0 ] unsigned char 
  2045 ;;  sign            1   18[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  4    8[BANK0 ] long 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:       16 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    6
  2062 ;; This function calls:
  2063 ;;		___lmul
  2064 ;;		_isalpha
  2065 ;;		_isdigit
  2066 ;;		_isspace
  2067 ;;		_toupper
  2068 ;; This function is called by:
  2069 ;;		_process_message
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text4
  2075  000C40                     __ptext4:
  2076                           	opt stack 0
  2077  000C40                     _strtol:
  2078                           	opt stack 24
  2079  000C40  C068  FFD9         	movff	strtol@s,fsr2l
  2080  000C44  C069  FFDA         	movff	strtol@s+1,fsr2h
  2081  000C48  50DF               	movf	indf2,w,c
  2082  000C4A  0100               	movlb	0	; () banked
  2083  000C4C  6F77               	movwf	strtol@c& (0+255),b
  2084                           
  2085                           ; BSR set to: 0
  2086  000C4E  0100               	movlb	0	; () banked
  2087  000C50  4B68               	infsnz	strtol@s& (0+255),f,b
  2088  000C52  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2089                           
  2090                           ; BSR set to: 0
  2091  000C54  0100               	movlb	0	; () banked
  2092  000C56  5177               	movf	strtol@c& (0+255),w,b
  2093  000C58  ECB0  F00D         	call	_isspace
  2094  000C5C  B0D8               	btfsc	status,0,c
  2095  000C5E  D7F0               	goto	l3426
  2096  000C60  0E00               	movlw	0
  2097  000C62  0100               	movlb	0	; () banked
  2098  000C64  6F73               	movwf	strtol@a& (0+255),b
  2099  000C66  0E00               	movlw	0
  2100  000C68  6F74               	movwf	(strtol@a+1)& (0+255),b
  2101  000C6A  0E00               	movlw	0
  2102  000C6C  6F75               	movwf	(strtol@a+2)& (0+255),b
  2103  000C6E  0E00               	movlw	0
  2104  000C70  6F76               	movwf	(strtol@a+3)& (0+255),b
  2105  000C72  0E00               	movlw	0
  2106  000C74  0100               	movlb	0	; () banked
  2107  000C76  6F72               	movwf	strtol@sign& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110  000C78  0E2D               	movlw	45
  2111  000C7A  0100               	movlb	0	; () banked
  2112  000C7C  1977               	xorwf	strtol@c& (0+255),w,b
  2113  000C7E  A4D8               	btfss	status,2,c
  2114  000C80  D008               	goto	l3442
  2115                           
  2116                           ; BSR set to: 0
  2117  000C82  0E01               	movlw	1
  2118  000C84  0100               	movlb	0	; () banked
  2119  000C86  6F72               	movwf	strtol@sign& (0+255),b
  2120  000C88  D009               	goto	l3444
  2121  000C8A                     l3440:
  2122                           
  2123                           ; BSR set to: 0
  2124  000C8A  0100               	movlb	0	; () banked
  2125  000C8C  4B68               	infsnz	strtol@s& (0+255),f,b
  2126  000C8E  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2127  000C90  D00D               	goto	l3448
  2128  000C92                     l3442:
  2129                           
  2130                           ; BSR set to: 0
  2131  000C92  0E2B               	movlw	43
  2132  000C94  0100               	movlb	0	; () banked
  2133  000C96  1977               	xorwf	strtol@c& (0+255),w,b
  2134  000C98  A4D8               	btfss	status,2,c
  2135  000C9A  D008               	goto	l3448
  2136  000C9C                     l3444:
  2137                           
  2138                           ; BSR set to: 0
  2139  000C9C  C068  FFD9         	movff	strtol@s,fsr2l
  2140  000CA0  C069  FFDA         	movff	strtol@s+1,fsr2h
  2141  000CA4  50DF               	movf	indf2,w,c
  2142  000CA6  0100               	movlb	0	; () banked
  2143  000CA8  6F77               	movwf	strtol@c& (0+255),b
  2144  000CAA  D7EF               	goto	l3440
  2145  000CAC                     l3448:
  2146                           
  2147                           ; BSR set to: 0
  2148  000CAC  0E30               	movlw	48
  2149  000CAE  0100               	movlb	0	; () banked
  2150  000CB0  1977               	xorwf	strtol@c& (0+255),w,b
  2151  000CB2  A4D8               	btfss	status,2,c
  2152  000CB4  D03C               	goto	l3472
  2153                           
  2154                           ; BSR set to: 0
  2155  000CB6  C068  FFD9         	movff	strtol@s,fsr2l
  2156  000CBA  C069  FFDA         	movff	strtol@s+1,fsr2h
  2157  000CBE  50DF               	movf	indf2,w,c
  2158  000CC0  0100               	movlb	0	; () banked
  2159  000CC2  6F77               	movwf	strtol@c& (0+255),b
  2160                           
  2161                           ; BSR set to: 0
  2162  000CC4  0100               	movlb	0	; () banked
  2163  000CC6  4B68               	infsnz	strtol@s& (0+255),f,b
  2164  000CC8  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2165                           
  2166                           ; BSR set to: 0
  2167  000CCA  0100               	movlb	0	; () banked
  2168  000CCC  516C               	movf	strtol@base& (0+255),w,b
  2169  000CCE  0100               	movlb	0	; () banked
  2170  000CD0  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2171  000CD2  B4D8               	btfsc	status,2,c
  2172  000CD4  D007               	goto	l3458
  2173                           
  2174                           ; BSR set to: 0
  2175  000CD6  0E10               	movlw	16
  2176  000CD8  0100               	movlb	0	; () banked
  2177  000CDA  196C               	xorwf	strtol@base& (0+255),w,b
  2178  000CDC  0100               	movlb	0	; () banked
  2179  000CDE  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2180  000CE0  A4D8               	btfss	status,2,c
  2181  000CE2  D01A               	goto	l3468
  2182  000CE4                     l3458:
  2183                           
  2184                           ; BSR set to: 0
  2185  000CE4  0E78               	movlw	120
  2186  000CE6  0100               	movlb	0	; () banked
  2187  000CE8  1977               	xorwf	strtol@c& (0+255),w,b
  2188  000CEA  B4D8               	btfsc	status,2,c
  2189  000CEC  D005               	goto	l3462
  2190                           
  2191                           ; BSR set to: 0
  2192  000CEE  0E58               	movlw	88
  2193  000CF0  0100               	movlb	0	; () banked
  2194  000CF2  1977               	xorwf	strtol@c& (0+255),w,b
  2195  000CF4  A4D8               	btfss	status,2,c
  2196  000CF6  D010               	goto	l3468
  2197  000CF8                     l3462:
  2198                           
  2199                           ; BSR set to: 0
  2200  000CF8  0E00               	movlw	0
  2201  000CFA  0100               	movlb	0	; () banked
  2202  000CFC  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2203  000CFE  0E10               	movlw	16
  2204  000D00  6F6C               	movwf	strtol@base& (0+255),b
  2205                           
  2206                           ; BSR set to: 0
  2207  000D02  C068  FFD9         	movff	strtol@s,fsr2l
  2208  000D06  C069  FFDA         	movff	strtol@s+1,fsr2h
  2209  000D0A  50DF               	movf	indf2,w,c
  2210  000D0C  0100               	movlb	0	; () banked
  2211  000D0E  6F77               	movwf	strtol@c& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214  000D10  0100               	movlb	0	; () banked
  2215  000D12  4B68               	infsnz	strtol@s& (0+255),f,b
  2216  000D14  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2217  000D16  D00B               	goto	l3472
  2218  000D18                     l3468:
  2219                           
  2220                           ; BSR set to: 0
  2221  000D18  0100               	movlb	0	; () banked
  2222  000D1A  516C               	movf	strtol@base& (0+255),w,b
  2223  000D1C  0100               	movlb	0	; () banked
  2224  000D1E  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2225  000D20  A4D8               	btfss	status,2,c
  2226  000D22  D005               	goto	l3472
  2227                           
  2228                           ; BSR set to: 0
  2229  000D24  0E00               	movlw	0
  2230  000D26  0100               	movlb	0	; () banked
  2231  000D28  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2232  000D2A  0E08               	movlw	8
  2233  000D2C  6F6C               	movwf	strtol@base& (0+255),b
  2234  000D2E                     l3472:
  2235                           
  2236                           ; BSR set to: 0
  2237  000D2E  0100               	movlb	0	; () banked
  2238  000D30  516C               	movf	strtol@base& (0+255),w,b
  2239  000D32  0100               	movlb	0	; () banked
  2240  000D34  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2241  000D36  A4D8               	btfss	status,2,c
  2242  000D38  D005               	goto	l3476
  2243                           
  2244                           ; BSR set to: 0
  2245  000D3A  0E00               	movlw	0
  2246  000D3C  0100               	movlb	0	; () banked
  2247  000D3E  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2248  000D40  0E0A               	movlw	10
  2249  000D42  6F6C               	movwf	strtol@base& (0+255),b
  2250  000D44                     l3476:
  2251                           
  2252                           ; BSR set to: 0
  2253  000D44  0100               	movlb	0	; () banked
  2254  000D46  5177               	movf	strtol@c& (0+255),w,b
  2255  000D48  EC9C  F00D         	call	_isalpha
  2256  000D4C  A0D8               	btfss	status,0,c
  2257  000D4E  D008               	goto	l3480
  2258  000D50  0100               	movlb	0	; () banked
  2259  000D52  5177               	movf	strtol@c& (0+255),w,b
  2260  000D54  EC11  F00E         	call	_toupper
  2261  000D58  0FC9               	addlw	201
  2262  000D5A  0100               	movlb	0	; () banked
  2263  000D5C  6F77               	movwf	strtol@c& (0+255),b
  2264  000D5E  D009               	goto	l3484
  2265  000D60                     l3480:
  2266  000D60  0100               	movlb	0	; () banked
  2267  000D62  5177               	movf	strtol@c& (0+255),w,b
  2268  000D64  ECF5  F00D         	call	_isdigit
  2269  000D68  A0D8               	btfss	status,0,c
  2270  000D6A  D04C               	goto	l3494
  2271  000D6C  0E30               	movlw	48
  2272  000D6E  0100               	movlb	0	; () banked
  2273  000D70  5F77               	subwf	strtol@c& (0+255),f,b
  2274  000D72                     l3484:
  2275                           
  2276                           ; BSR set to: 0
  2277  000D72  0100               	movlb	0	; () banked
  2278  000D74  5177               	movf	strtol@c& (0+255),w,b
  2279  000D76  0100               	movlb	0	; () banked
  2280  000D78  6F6E               	movwf	??_strtol& (0+255),b
  2281  000D7A  6B6F               	clrf	(??_strtol+1)& (0+255),b
  2282  000D7C  0100               	movlb	0	; () banked
  2283  000D7E  516C               	movf	strtol@base& (0+255),w,b
  2284  000D80  0100               	movlb	0	; () banked
  2285  000D82  5D6E               	subwf	??_strtol& (0+255),w,b
  2286  000D84  0100               	movlb	0	; () banked
  2287  000D86  516F               	movf	(??_strtol+1)& (0+255),w,b
  2288  000D88  0A80               	xorlw	128
  2289  000D8A  0100               	movlb	0	; () banked
  2290  000D8C  6F70               	movwf	(??_strtol+2)& (0+255),b
  2291  000D8E  0100               	movlb	0	; () banked
  2292  000D90  516D               	movf	(strtol@base+1)& (0+255),w,b
  2293  000D92  0A80               	xorlw	128
  2294  000D94  0100               	movlb	0	; () banked
  2295  000D96  5970               	subwfb	(??_strtol+2)& (0+255),w,b
  2296  000D98  B0D8               	btfsc	status,0,c
  2297  000D9A  D034               	goto	l3494
  2298                           
  2299                           ; BSR set to: 0
  2300                           
  2301                           ; BSR set to: 0
  2302                           
  2303                           ; BSR set to: 0
  2304  000D9C  C06C  F060         	movff	strtol@base,___lmul@multiplier
  2305  000DA0  C06D  F061         	movff	strtol@base+1,___lmul@multiplier+1
  2306  000DA4  0100               	movlb	0	; () banked
  2307  000DA6  0E00               	movlw	0
  2308  000DA8  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2309  000DAA  0EFF               	movlw	-1
  2310  000DAC  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
  2311  000DAE  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
  2312  000DB0  C073  F064         	movff	strtol@a,___lmul@multiplicand
  2313  000DB4  C074  F065         	movff	strtol@a+1,___lmul@multiplicand+1
  2314  000DB8  C075  F066         	movff	strtol@a+2,___lmul@multiplicand+2
  2315  000DBC  C076  F067         	movff	strtol@a+3,___lmul@multiplicand+3
  2316  000DC0  ECF9  F00A         	call	___lmul	;wreg free
  2317  000DC4  0100               	movlb	0	; () banked
  2318  000DC6  5177               	movf	strtol@c& (0+255),w,b
  2319  000DC8  0100               	movlb	0	; () banked
  2320  000DCA  2560               	addwf	?___lmul& (0+255),w,b
  2321  000DCC  0100               	movlb	0	; () banked
  2322  000DCE  6F73               	movwf	strtol@a& (0+255),b
  2323  000DD0  0E00               	movlw	0
  2324  000DD2  0100               	movlb	0	; () banked
  2325  000DD4  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  2326  000DD6  0100               	movlb	0	; () banked
  2327  000DD8  6F74               	movwf	(strtol@a+1)& (0+255),b
  2328  000DDA  0E00               	movlw	0
  2329  000DDC  0100               	movlb	0	; () banked
  2330  000DDE  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  2331  000DE0  0100               	movlb	0	; () banked
  2332  000DE2  6F75               	movwf	(strtol@a+2)& (0+255),b
  2333  000DE4  0E00               	movlw	0
  2334  000DE6  0100               	movlb	0	; () banked
  2335  000DE8  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  2336  000DEA  0100               	movlb	0	; () banked
  2337  000DEC  6F76               	movwf	(strtol@a+3)& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340  000DEE  C068  FFD9         	movff	strtol@s,fsr2l
  2341  000DF2  C069  FFDA         	movff	strtol@s+1,fsr2h
  2342  000DF6  50DF               	movf	indf2,w,c
  2343  000DF8  0100               	movlb	0	; () banked
  2344  000DFA  6F77               	movwf	strtol@c& (0+255),b
  2345                           
  2346                           ; BSR set to: 0
  2347  000DFC  0100               	movlb	0	; () banked
  2348  000DFE  4B68               	infsnz	strtol@s& (0+255),f,b
  2349  000E00  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2350  000E02  D7A0               	goto	l3476
  2351  000E04                     l3494:
  2352  000E04  0100               	movlb	0	; () banked
  2353  000E06  516A               	movf	strtol@endptr& (0+255),w,b
  2354  000E08  0100               	movlb	0	; () banked
  2355  000E0A  116B               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2356  000E0C  B4D8               	btfsc	status,2,c
  2357  000E0E  D012               	goto	l3498
  2358                           
  2359                           ; BSR set to: 0
  2360  000E10  0EFF               	movlw	255
  2361  000E12  0100               	movlb	0	; () banked
  2362  000E14  2568               	addwf	strtol@s& (0+255),w,b
  2363  000E16  0100               	movlb	0	; () banked
  2364  000E18  6F6E               	movwf	??_strtol& (0+255),b
  2365  000E1A  0EFF               	movlw	255
  2366  000E1C  0100               	movlb	0	; () banked
  2367  000E1E  2169               	addwfc	(strtol@s+1)& (0+255),w,b
  2368  000E20  0100               	movlb	0	; () banked
  2369  000E22  6F6F               	movwf	(??_strtol+1)& (0+255),b
  2370  000E24  C06A  FFD9         	movff	strtol@endptr,fsr2l
  2371  000E28  C06B  FFDA         	movff	strtol@endptr+1,fsr2h
  2372  000E2C  C06E  FFDE         	movff	??_strtol,postinc2
  2373  000E30  C06F  FFDD         	movff	??_strtol+1,postdec2
  2374  000E34                     l3498:
  2375                           
  2376                           ; BSR set to: 0
  2377  000E34  0100               	movlb	0	; () banked
  2378  000E36  5172               	movf	strtol@sign& (0+255),w,b
  2379  000E38  0100               	movlb	0	; () banked
  2380  000E3A  B4D8               	btfsc	status,2,c
  2381  000E3C  D01B               	goto	l1056
  2382                           
  2383                           ; BSR set to: 0
  2384  000E3E  C073  F06E         	movff	strtol@a,??_strtol
  2385  000E42  C074  F06F         	movff	strtol@a+1,??_strtol+1
  2386  000E46  C075  F070         	movff	strtol@a+2,??_strtol+2
  2387  000E4A  C076  F071         	movff	strtol@a+3,??_strtol+3
  2388  000E4E  0100               	movlb	0	; () banked
  2389  000E50  1F6E               	comf	??_strtol& (0+255),f,b
  2390  000E52  1F6F               	comf	(??_strtol+1)& (0+255),f,b
  2391  000E54  1F70               	comf	(??_strtol+2)& (0+255),f,b
  2392  000E56  1F71               	comf	(??_strtol+3)& (0+255),f,b
  2393  000E58  2B6E               	incf	??_strtol& (0+255),f,b
  2394  000E5A  0E00               	movlw	0
  2395  000E5C  236F               	addwfc	(??_strtol+1)& (0+255),f,b
  2396  000E5E  2370               	addwfc	(??_strtol+2)& (0+255),f,b
  2397  000E60  2371               	addwfc	(??_strtol+3)& (0+255),f,b
  2398  000E62  C06E  F068         	movff	??_strtol,?_strtol
  2399  000E66  C06F  F069         	movff	??_strtol+1,?_strtol+1
  2400  000E6A  C070  F06A         	movff	??_strtol+2,?_strtol+2
  2401  000E6E  C071  F06B         	movff	??_strtol+3,?_strtol+3
  2402                           
  2403                           ; BSR set to: 0
  2404  000E72  0012               	return	
  2405  000E74                     l1056:
  2406                           
  2407                           ; BSR set to: 0
  2408  000E74  C073  F068         	movff	strtol@a,?_strtol
  2409  000E78  C074  F069         	movff	strtol@a+1,?_strtol+1
  2410  000E7C  C075  F06A         	movff	strtol@a+2,?_strtol+2
  2411  000E80  C076  F06B         	movff	strtol@a+3,?_strtol+3
  2412                           
  2413                           ; BSR set to: 0
  2414  000E84  0012               	return		;funcret
  2415  000E86                     __end_of_strtol:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           intcon	equ	0xFF2
  2424                           postinc0	equ	0xFEE
  2425                           wreg	equ	0xFE8
  2426                           postdec1	equ	0xFE5
  2427                           fsr1h	equ	0xFE2
  2428                           fsr1l	equ	0xFE1
  2429                           indf2	equ	0xFDF
  2430                           postinc2	equ	0xFDE
  2431                           postdec2	equ	0xFDD
  2432                           fsr2h	equ	0xFDA
  2433                           fsr2l	equ	0xFD9
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _toupper *****************
  2437 ;; Defined at:
  2438 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  c               1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  c               1   37[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      unsigned char 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        1 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    4
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_strtol
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text5
  2467  001C22                     __ptext5:
  2468                           	opt stack 0
  2469  001C22                     _toupper:
  2470                           	opt stack 25
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;incstack = 0
  2474                           ;toupper@c stored from wreg
  2475  001C22  6E26               	movwf	toupper@c,c
  2476  001C24  0E7B               	movlw	123
  2477  001C26  6026               	cpfslt	toupper@c,c
  2478  001C28  D004               	goto	l2584
  2479  001C2A  0E60               	movlw	96
  2480  001C2C  6426               	cpfsgt	toupper@c,c
  2481  001C2E  D001               	goto	l2584
  2482  001C30  9A26               	bcf	toupper@c,5,c
  2483  001C32                     l2584:
  2484  001C32  5026               	movf	toupper@c,w,c
  2485  001C34  0012               	return	
  2486  001C36                     __end_of_toupper:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon	equ	0xFF2
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           postinc2	equ	0xFDE
  2502                           postdec2	equ	0xFDD
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _isspace *****************
  2508 ;; Defined at:
  2509 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  c               1    wreg     unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  c               1   39[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;		None               void
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_strtol
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text6
  2538  001B60                     __ptext6:
  2539                           	opt stack 0
  2540  001B60                     _isspace:
  2541                           	opt stack 25
  2542                           
  2543                           ;incstack = 0
  2544                           ;isspace@c stored from wreg
  2545  001B60  6E28               	movwf	isspace@c,c
  2546  001B62  0E01               	movlw	1
  2547  001B64  6E27               	movwf	_isspace$1316,c
  2548  001B66  0E20               	movlw	32
  2549  001B68  1828               	xorwf	isspace@c,w,c
  2550  001B6A  B4D8               	btfsc	status,2,c
  2551  001B6C  D008               	goto	l2560
  2552  001B6E  0E0E               	movlw	14
  2553  001B70  6028               	cpfslt	isspace@c,c
  2554  001B72  D003               	goto	l2558
  2555  001B74  0E09               	movlw	9
  2556  001B76  6028               	cpfslt	isspace@c,c
  2557  001B78  D002               	goto	l2560
  2558  001B7A                     l2558:
  2559  001B7A  0E00               	movlw	0
  2560  001B7C  6E27               	movwf	_isspace$1316,c
  2561  001B7E                     l2560:
  2562  001B7E  C027  F026         	movff	_isspace$1316,??_isspace
  2563  001B82  3026               	rrcf	??_isspace,w,c
  2564  001B84  0012               	return	
  2565  001B86                     __end_of_isspace:
  2566                           	opt stack 0
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           postdec1	equ	0xFE5
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _isalpha *****************
  2587 ;; Defined at:
  2588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  c               1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  c               1   42[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        3 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    5
  2609 ;; This function calls:
  2610 ;;		_isupper
  2611 ;; This function is called by:
  2612 ;;		_strtol
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text7
  2617  001B38                     __ptext7:
  2618                           	opt stack 0
  2619  001B38                     _isalpha:
  2620                           	opt stack 24
  2621                           
  2622                           ;incstack = 0
  2623                           ;isalpha@c stored from wreg
  2624  001B38  6E2B               	movwf	isalpha@c,c
  2625  001B3A  0E01               	movlw	1
  2626  001B3C  6E2A               	movwf	_isalpha$1313,c
  2627  001B3E  0E7B               	movlw	123
  2628  001B40  602B               	cpfslt	isalpha@c,c
  2629  001B42  D003               	goto	l2570
  2630  001B44  0E61               	movlw	97
  2631  001B46  602B               	cpfslt	isalpha@c,c
  2632  001B48  D007               	goto	l2574
  2633  001B4A                     l2570:
  2634  001B4A  502B               	movf	isalpha@c,w,c
  2635  001B4C  ECE6  F00D         	call	_isupper
  2636  001B50  B0D8               	btfsc	status,0,c
  2637  001B52  D002               	goto	l2574
  2638  001B54  0E00               	movlw	0
  2639  001B56  6E2A               	movwf	_isalpha$1313,c
  2640  001B58                     l2574:
  2641  001B58  C02A  F029         	movff	_isalpha$1313,??_isalpha
  2642  001B5C  3029               	rrcf	??_isalpha,w,c
  2643  001B5E  0012               	return	
  2644  001B60                     __end_of_isalpha:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postdec1	equ	0xFE5
  2656                           fsr1h	equ	0xFE2
  2657                           fsr1l	equ	0xFE1
  2658                           indf2	equ	0xFDF
  2659                           postinc2	equ	0xFDE
  2660                           postdec2	equ	0xFDD
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _isupper *****************
  2666 ;; Defined at:
  2667 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  c               1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  c               1   39[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;Total ram usage:        3 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    4
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_isalpha
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text8
  2696  001BCC                     __ptext8:
  2697                           	opt stack 0
  2698  001BCC                     _isupper:
  2699                           	opt stack 24
  2700                           
  2701                           ;incstack = 0
  2702                           ;isupper@c stored from wreg
  2703  001BCC  6E28               	movwf	isupper@c,c
  2704  001BCE  0E00               	movlw	0
  2705  001BD0  6E27               	movwf	_isupper$1319,c
  2706  001BD2  0E5B               	movlw	91
  2707  001BD4  6028               	cpfslt	isupper@c,c
  2708  001BD6  D005               	goto	l2474
  2709  001BD8  0E40               	movlw	64
  2710  001BDA  6428               	cpfsgt	isupper@c,c
  2711  001BDC  D002               	goto	l2474
  2712  001BDE  0E01               	movlw	1
  2713  001BE0  6E27               	movwf	_isupper$1319,c
  2714  001BE2                     l2474:
  2715  001BE2  C027  F026         	movff	_isupper$1319,??_isupper
  2716  001BE6  3026               	rrcf	??_isupper,w,c
  2717  001BE8  0012               	return	
  2718  001BEA                     __end_of_isupper:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function ___lmul *****************
  2740 ;; Defined at:
  2741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2744 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  product         4   37[COMRAM] unsigned long 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  4    0[BANK0 ] unsigned long 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:       12 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    4
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_rand
  2767 ;;		_strtol
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text9
  2772  0015F2                     __ptext9:
  2773                           	opt stack 0
  2774  0015F2                     ___lmul:
  2775                           	opt stack 25
  2776                           
  2777                           ;incstack = 0
  2778  0015F2  0E00               	movlw	0
  2779  0015F4  6E26               	movwf	___lmul@product,c
  2780  0015F6  0E00               	movlw	0
  2781  0015F8  6E27               	movwf	___lmul@product+1,c
  2782  0015FA  0E00               	movlw	0
  2783  0015FC  6E28               	movwf	___lmul@product+2,c
  2784  0015FE  0E00               	movlw	0
  2785  001600  6E29               	movwf	___lmul@product+3,c
  2786  001602                     l3368:
  2787  001602  0100               	movlb	0	; () banked
  2788  001604  A160               	btfss	___lmul@multiplier& (0+255),0,b
  2789  001606  D00C               	goto	l3372
  2790                           
  2791                           ; BSR set to: 0
  2792  001608  0100               	movlb	0	; () banked
  2793  00160A  5164               	movf	___lmul@multiplicand& (0+255),w,b
  2794  00160C  2626               	addwf	___lmul@product,f,c
  2795  00160E  0100               	movlb	0	; () banked
  2796  001610  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2797  001612  2227               	addwfc	___lmul@product+1,f,c
  2798  001614  0100               	movlb	0	; () banked
  2799  001616  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2800  001618  2228               	addwfc	___lmul@product+2,f,c
  2801  00161A  0100               	movlb	0	; () banked
  2802  00161C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2803  00161E  2229               	addwfc	___lmul@product+3,f,c
  2804  001620                     l3372:
  2805                           
  2806                           ; BSR set to: 0
  2807  001620  0100               	movlb	0	; () banked
  2808  001622  90D8               	bcf	status,0,c
  2809  001624  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  2810  001626  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2811  001628  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2812  00162A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2813                           
  2814                           ; BSR set to: 0
  2815  00162C  0100               	movlb	0	; () banked
  2816  00162E  90D8               	bcf	status,0,c
  2817  001630  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2818  001632  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2819  001634  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2820  001636  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  2821  001638  0100               	movlb	0	; () banked
  2822  00163A  5160               	movf	___lmul@multiplier& (0+255),w,b
  2823  00163C  0100               	movlb	0	; () banked
  2824  00163E  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2825  001640  0100               	movlb	0	; () banked
  2826  001642  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2827  001644  0100               	movlb	0	; () banked
  2828  001646  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2829  001648  A4D8               	btfss	status,2,c
  2830  00164A  D7DB               	goto	l3368
  2831                           
  2832                           ; BSR set to: 0
  2833  00164C  C026  F060         	movff	___lmul@product,?___lmul
  2834  001650  C027  F061         	movff	___lmul@product+1,?___lmul+1
  2835  001654  C028  F062         	movff	___lmul@product+2,?___lmul+2
  2836  001658  C029  F063         	movff	___lmul@product+3,?___lmul+3
  2837                           
  2838                           ; BSR set to: 0
  2839  00165C  0012               	return		;funcret
  2840  00165E                     __end_of___lmul:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           postdec1	equ	0xFE5
  2852                           fsr1h	equ	0xFE2
  2853                           fsr1l	equ	0xFE1
  2854                           indf2	equ	0xFDF
  2855                           postinc2	equ	0xFDE
  2856                           postdec2	equ	0xFDD
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _strstr *****************
  2862 ;; Defined at:
  2863 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  s1              2    9[BANK0 ] PTR const unsigned char 
  2866 ;;		 -> NULL(0), line(128), 
  2867 ;;  s2              2   11[BANK0 ] PTR const unsigned char 
  2868 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    9[BANK0 ] PTR unsigned char 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;Total ram usage:        5 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    5
  2887 ;; This function calls:
  2888 ;;		_strchr
  2889 ;;		_strlen
  2890 ;;		_strncmp
  2891 ;; This function is called by:
  2892 ;;		_process_message
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text10
  2897  0012C6                     __ptext10:
  2898                           	opt stack 0
  2899  0012C6                     _strstr:
  2900                           	opt stack 24
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;incstack = 0
  2904  0012C6  D042               	goto	l3404
  2905  0012C8                     l3396:
  2906  0012C8  C069  F060         	movff	strstr@s1,strncmp@s1
  2907  0012CC  C06A  F061         	movff	strstr@s1+1,strncmp@s1+1
  2908  0012D0  C06B  F062         	movff	strstr@s2,strncmp@s2
  2909  0012D4  C06C  F063         	movff	strstr@s2+1,strncmp@s2+1
  2910  0012D8  C06B  F026         	movff	strstr@s2,strlen@s
  2911  0012DC  C06C  F027         	movff	strstr@s2+1,strlen@s+1
  2912  0012E0  ECBB  F00B         	call	_strlen	;wreg free
  2913  0012E4  C026  F064         	movff	?_strlen,strncmp@len
  2914  0012E8  C027  F065         	movff	?_strlen+1,strncmp@len+1
  2915  0012EC  ECFC  F008         	call	_strncmp	;wreg free
  2916  0012F0  0100               	movlb	0	; () banked
  2917  0012F2  5160               	movf	?_strncmp& (0+255),w,b
  2918  0012F4  0100               	movlb	0	; () banked
  2919  0012F6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2920  0012F8  A4D8               	btfss	status,2,c
  2921  0012FA  D005               	goto	l3402
  2922                           
  2923                           ; BSR set to: 0
  2924  0012FC  C069  F069         	movff	strstr@s1,?_strstr
  2925  001300  C06A  F06A         	movff	strstr@s1+1,?_strstr+1
  2926                           
  2927                           ; BSR set to: 0
  2928  001304  0012               	return	
  2929  001306                     l3402:
  2930                           
  2931                           ; BSR set to: 0
  2932  001306  0E01               	movlw	1
  2933  001308  0100               	movlb	0	; () banked
  2934  00130A  2569               	addwf	strstr@s1& (0+255),w,b
  2935  00130C  6E26               	movwf	strchr@ptr,c
  2936  00130E  0E00               	movlw	0
  2937  001310  0100               	movlb	0	; () banked
  2938  001312  216A               	addwfc	(strstr@s1+1)& (0+255),w,b
  2939  001314  6E27               	movwf	strchr@ptr+1,c
  2940  001316  C06B  FFF6         	movff	strstr@s2,tblptrl
  2941  00131A  C06C  FFF7         	movff	strstr@s2+1,tblptrh
  2942  00131E  0E00               	movlw	low (__mediumconst shr (0+16))
  2943  001320  6EF8               	movwf	tblptru,c
  2944  001322  0E0F               	movlw	(high __ramtop+-1)
  2945  001324  64F7               	cpfsgt	tblptrh,c
  2946  001326  D003               	bra	u3777
  2947  001328  0008               	tblrd		*
  2948  00132A  50F5               	movf	tablat,w,c
  2949  00132C  D005               	bra	u3770
  2950  00132E                     u3777:
  2951  00132E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2952  001332  CFF7 FFE2          	movff	tblptrh,fsr1h
  2953  001336  50E7               	movf	indf1,w,c
  2954  001338                     u3770:
  2955  001338  6E2C               	movwf	??_strstr& (0+255),c
  2956  00133A  502C               	movf	??_strstr,w,c
  2957  00133C  6E28               	movwf	strchr@chr,c
  2958  00133E  6A29               	clrf	strchr@chr+1,c
  2959  001340  ECA3  F00C         	call	_strchr	;wreg free
  2960  001344  C026  F069         	movff	?_strchr,strstr@s1
  2961  001348  C027  F06A         	movff	?_strchr+1,strstr@s1+1
  2962  00134C                     l3404:
  2963  00134C  0100               	movlb	0	; () banked
  2964  00134E  5169               	movf	strstr@s1& (0+255),w,b
  2965  001350  0100               	movlb	0	; () banked
  2966  001352  116A               	iorwf	(strstr@s1+1)& (0+255),w,b
  2967  001354  B4D8               	btfsc	status,2,c
  2968  001356  D007               	goto	l3408
  2969                           
  2970                           ; BSR set to: 0
  2971  001358  C069  FFD9         	movff	strstr@s1,fsr2l
  2972  00135C  C06A  FFDA         	movff	strstr@s1+1,fsr2h
  2973  001360  50DF               	movf	indf2,w,c
  2974  001362  A4D8               	btfss	status,2,c
  2975  001364  D7B1               	goto	l3396
  2976  001366                     l3408:
  2977                           
  2978                           ; BSR set to: 0
  2979  001366  0E00               	movlw	0
  2980  001368  0100               	movlb	0	; () banked
  2981  00136A  6F69               	movwf	?_strstr& (0+255),b
  2982  00136C  0E00               	movlw	0
  2983  00136E  0100               	movlb	0	; () banked
  2984  001370  6F6A               	movwf	(?_strstr+1)& (0+255),b
  2985  001372  0012               	return	
  2986  001374                     __end_of_strstr:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           indf1	equ	0xFE7
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _strncmp *****************
  3009 ;; Defined at:
  3010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  3013 ;;		 -> NULL(0), line(128), 
  3014 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  3015 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3016 ;;  len             2    4[BANK0 ] unsigned int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  2    0[BANK0 ] int 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        9 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    4
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_strstr
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text11
  3043  0011F8                     __ptext11:
  3044                           	opt stack 0
  3045  0011F8                     _strncmp:
  3046                           	opt stack 24
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;incstack = 0
  3050  0011F8  D055               	goto	l3388
  3051  0011FA                     l3378:
  3052  0011FA  C060  FFD9         	movff	strncmp@s1,fsr2l
  3053  0011FE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3054  001202  50DF               	movf	indf2,w,c
  3055  001204  B4D8               	btfsc	status,2,c
  3056  001206  D01C               	goto	l3382
  3057  001208  C060  FFD9         	movff	strncmp@s1,fsr2l
  3058  00120C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3059  001210  50DF               	movf	indf2,w,c
  3060  001212  0100               	movlb	0	; () banked
  3061  001214  6F66               	movwf	??_strncmp& (0+255),b
  3062  001216  C062  FFF6         	movff	strncmp@s2,tblptrl
  3063  00121A  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3064  00121E  0E00               	movlw	low (__mediumconst shr (0+16))
  3065  001220  6EF8               	movwf	tblptru,c
  3066  001222  0E0F               	movlw	(high __ramtop+-1)
  3067  001224  64F7               	cpfsgt	tblptrh,c
  3068  001226  D003               	bra	u3727
  3069  001228  0008               	tblrd		*
  3070  00122A  50F5               	movf	tablat,w,c
  3071  00122C  D005               	bra	u3720
  3072  00122E                     u3727:
  3073  00122E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3074  001232  CFF7 FFE2          	movff	tblptrh,fsr1h
  3075  001236  50E7               	movf	indf1,w,c
  3076  001238                     u3720:
  3077  001238  0100               	movlb	0	; () banked
  3078  00123A  1966               	xorwf	??_strncmp& (0+255),w,b
  3079  00123C  B4D8               	btfsc	status,2,c
  3080  00123E  D02C               	goto	l3386
  3081  001240                     l3382:
  3082  001240  C062  FFF6         	movff	strncmp@s2,tblptrl
  3083  001244  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3084  001248  0E00               	movlw	low (__mediumconst shr (0+16))
  3085  00124A  6EF8               	movwf	tblptru,c
  3086  00124C  0E0F               	movlw	(high __ramtop+-1)
  3087  00124E  64F7               	cpfsgt	tblptrh,c
  3088  001250  D003               	bra	u3747
  3089  001252  0008               	tblrd		*
  3090  001254  50F5               	movf	tablat,w,c
  3091  001256  D005               	bra	u3740
  3092  001258                     u3747:
  3093  001258  CFF6 FFE1          	movff	tblptrl,fsr1l
  3094  00125C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3095  001260  50E7               	movf	indf1,w,c
  3096  001262                     u3740:
  3097  001262  0100               	movlb	0	; () banked
  3098  001264  6F66               	movwf	??_strncmp& (0+255),b
  3099  001266  6B67               	clrf	(??_strncmp+1)& (0+255),b
  3100  001268  0100               	movlb	0	; () banked
  3101  00126A  1F66               	comf	??_strncmp& (0+255),f,b
  3102  00126C  1F67               	comf	(??_strncmp+1)& (0+255),f,b
  3103  00126E  4B66               	infsnz	??_strncmp& (0+255),f,b
  3104  001270  2B67               	incf	(??_strncmp+1)& (0+255),f,b
  3105  001272  C060  FFD9         	movff	strncmp@s1,fsr2l
  3106  001276  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3107  00127A  50DF               	movf	indf2,w,c
  3108  00127C  0100               	movlb	0	; () banked
  3109  00127E  6F68               	movwf	(??_strncmp+2)& (0+255),b
  3110  001280  0100               	movlb	0	; () banked
  3111  001282  5168               	movf	(??_strncmp+2)& (0+255),w,b
  3112  001284  0100               	movlb	0	; () banked
  3113  001286  2566               	addwf	??_strncmp& (0+255),w,b
  3114  001288  0100               	movlb	0	; () banked
  3115  00128A  6F60               	movwf	?_strncmp& (0+255),b
  3116  00128C  0E00               	movlw	0
  3117  00128E  0100               	movlb	0	; () banked
  3118  001290  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
  3119  001292  0100               	movlb	0	; () banked
  3120  001294  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3121                           
  3122                           ; BSR set to: 0
  3123  001296  0012               	return	
  3124  001298                     l3386:
  3125                           
  3126                           ; BSR set to: 0
  3127  001298  0100               	movlb	0	; () banked
  3128  00129A  4B60               	infsnz	strncmp@s1& (0+255),f,b
  3129  00129C  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  3130  00129E  0100               	movlb	0	; () banked
  3131  0012A0  4B62               	infsnz	strncmp@s2& (0+255),f,b
  3132  0012A2  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  3133  0012A4                     l3388:
  3134  0012A4  0100               	movlb	0	; () banked
  3135  0012A6  0764               	decf	strncmp@len& (0+255),f,b
  3136  0012A8  A0D8               	btfss	status,0,c
  3137  0012AA  0765               	decf	(strncmp@len+1)& (0+255),f,b
  3138  0012AC  0100               	movlb	0	; () banked
  3139  0012AE  2964               	incf	strncmp@len& (0+255),w,b
  3140  0012B0  E1A4               	bnz	l3378
  3141  0012B2  0100               	movlb	0	; () banked
  3142  0012B4  2965               	incf	(strncmp@len+1)& (0+255),w,b
  3143  0012B6  A4D8               	btfss	status,2,c
  3144  0012B8  D7A0               	goto	l3378
  3145                           
  3146                           ; BSR set to: 0
  3147                           
  3148                           ; BSR set to: 0
  3149  0012BA  0E00               	movlw	0
  3150  0012BC  0100               	movlb	0	; () banked
  3151  0012BE  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3152  0012C0  0E00               	movlw	0
  3153  0012C2  6F60               	movwf	?_strncmp& (0+255),b
  3154  0012C4  0012               	return	
  3155  0012C6                     __end_of_strncmp:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           intcon	equ	0xFF2
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           indf1	equ	0xFE7
  3167                           postdec1	equ	0xFE5
  3168                           fsr1h	equ	0xFE2
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           postdec2	equ	0xFDD
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _strlen *****************
  3178 ;; Defined at:
  3179 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  s               2   37[COMRAM] PTR const unsigned char 
  3182 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  cp              2   41[COMRAM] PTR const unsigned char 
  3185 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2   37[COMRAM] unsigned int 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:        6 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    4
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_process_message
  3206 ;;		_strstr
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text12
  3211  001776                     __ptext12:
  3212                           	opt stack 0
  3213  001776                     _strlen:
  3214                           	opt stack 24
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;incstack = 0
  3218  001776  C026  F02A         	movff	strlen@s,strlen@cp
  3219  00177A  C027  F02B         	movff	strlen@s+1,strlen@cp+1
  3220  00177E  D002               	goto	l2504
  3221  001780                     l2502:
  3222  001780  4A2A               	infsnz	strlen@cp,f,c
  3223  001782  2A2B               	incf	strlen@cp+1,f,c
  3224  001784                     l2504:
  3225  001784  C02A  FFF6         	movff	strlen@cp,tblptrl
  3226  001788  C02B  FFF7         	movff	strlen@cp+1,tblptrh
  3227  00178C  0E00               	movlw	low (__mediumconst shr (0+16))
  3228  00178E  6EF8               	movwf	tblptru,c
  3229  001790  0E0F               	movlw	(high __ramtop+-1)
  3230  001792  64F7               	cpfsgt	tblptrh,c
  3231  001794  D003               	bra	u2237
  3232  001796  0008               	tblrd		*
  3233  001798  50F5               	movf	tablat,w,c
  3234  00179A  D005               	bra	u2230
  3235  00179C                     u2237:
  3236  00179C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3237  0017A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3238  0017A4  50E7               	movf	indf1,w,c
  3239  0017A6                     u2230:
  3240  0017A6  0900               	iorlw	0
  3241  0017A8  A4D8               	btfss	status,2,c
  3242  0017AA  D7EA               	goto	l2502
  3243  0017AC  C026  F028         	movff	strlen@s,??_strlen
  3244  0017B0  C027  F029         	movff	strlen@s+1,??_strlen+1
  3245  0017B4  1E28               	comf	??_strlen,f,c
  3246  0017B6  1E29               	comf	??_strlen+1,f,c
  3247  0017B8  4A28               	infsnz	??_strlen,f,c
  3248  0017BA  2A29               	incf	??_strlen+1,f,c
  3249  0017BC  502A               	movf	strlen@cp,w,c
  3250  0017BE  2428               	addwf	??_strlen,w,c
  3251  0017C0  6E26               	movwf	?_strlen,c
  3252  0017C2  502B               	movf	strlen@cp+1,w,c
  3253  0017C4  2029               	addwfc	??_strlen+1,w,c
  3254  0017C6  6E27               	movwf	?_strlen+1,c
  3255  0017C8  0012               	return	
  3256  0017CA                     __end_of_strlen:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           postdec1	equ	0xFE5
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _strchr *****************
  3279 ;; Defined at:
  3280 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  ptr             2   37[COMRAM] PTR const unsigned char 
  3283 ;;		 -> NULL(0), line(128), 
  3284 ;;  chr             2   39[COMRAM] int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2   37[COMRAM] PTR unsigned char 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        5 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    4
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_strstr
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text13
  3311  001946                     __ptext13:
  3312                           	opt stack 0
  3313  001946                     _strchr:
  3314                           	opt stack 24
  3315  001946  C026  FFD9         	movff	strchr@ptr,fsr2l
  3316  00194A  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3317  00194E  5028               	movf	strchr@chr,w,c
  3318  001950  18DE               	xorwf	postinc2,w,c
  3319  001952  A4D8               	btfss	status,2,c
  3320  001954  D005               	goto	l2544
  3321  001956  C026  F026         	movff	strchr@ptr,?_strchr
  3322  00195A  C027  F027         	movff	strchr@ptr+1,?_strchr+1
  3323  00195E  0012               	return	
  3324  001960                     l2544:
  3325  001960  C026  FFD9         	movff	strchr@ptr,fsr2l
  3326  001964  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3327  001968  4A26               	infsnz	strchr@ptr,f,c
  3328  00196A  2A27               	incf	strchr@ptr+1,f,c
  3329  00196C  50DF               	movf	indf2,w,c
  3330  00196E  A4D8               	btfss	status,2,c
  3331  001970  D7EA               	goto	l2538
  3332  001972  0E00               	movlw	0
  3333  001974  6E26               	movwf	?_strchr,c
  3334  001976  0E00               	movlw	0
  3335  001978  6E27               	movwf	?_strchr+1,c
  3336  00197A  0012               	return	
  3337  00197C                     __end_of_strchr:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           wreg	equ	0xFE8
  3348                           indf1	equ	0xFE7
  3349                           postdec1	equ	0xFE5
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _sprintf *****************
  3360 ;; Defined at:
  3361 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprintf.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  wh              2   27[BANK0 ] PTR unsigned char 
  3364 ;;		 -> process_message@hexval(4), 
  3365 ;;  f               2   29[BANK0 ] PTR const unsigned char 
  3366 ;;		 -> STR_7(5), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  pb              4   37[BANK0 ] struct __prbuf
  3369 ;;  ap              2   35[BANK0 ] PTR void [1]
  3370 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2   27[BANK0 ] int 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3380 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;Total ram usage:       14 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    7
  3387 ;; This function calls:
  3388 ;;		__doprnt
  3389 ;; This function is called by:
  3390 ;;		_process_message
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text14
  3395  00181E                     __ptext14:
  3396                           	opt stack 0
  3397  00181E                     _sprintf:
  3398                           	opt stack 22
  3399                           
  3400                           ;incstack = 0
  3401  00181E  C07B  F085         	movff	sprintf@wh,sprintf@pb
  3402  001822  C07C  F086         	movff	sprintf@wh+1,sprintf@pb+1
  3403  001826  0E00               	movlw	0
  3404  001828  0100               	movlb	0	; () banked
  3405  00182A  6F87               	movwf	(sprintf@pb+2)& (0+255),b
  3406  00182C  0E00               	movlw	0
  3407  00182E  0100               	movlb	0	; () banked
  3408  001830  6F88               	movwf	(sprintf@pb+3)& (0+255),b
  3409  001832  0E7F               	movlw	low (?_sprintf+4)
  3410  001834  0100               	movlb	0	; () banked
  3411  001836  6F83               	movwf	sprintf@ap& (0+255),b
  3412  001838  0E00               	movlw	high (?_sprintf+4)
  3413  00183A  0100               	movlb	0	; () banked
  3414  00183C  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3415                           
  3416                           ; BSR set to: 0
  3417  00183E  0E85               	movlw	low sprintf@pb
  3418  001840  0100               	movlb	0	; () banked
  3419  001842  6F65               	movwf	__doprnt@pb& (0+255),b
  3420  001844  0E00               	movlw	high sprintf@pb
  3421  001846  0100               	movlb	0	; () banked
  3422  001848  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  3423  00184A  C07D  F067         	movff	sprintf@f,__doprnt@f
  3424  00184E  C07E  F068         	movff	sprintf@f+1,__doprnt@f+1
  3425  001852  0E83               	movlw	low sprintf@ap
  3426  001854  0100               	movlb	0	; () banked
  3427  001856  6F69               	movwf	__doprnt@ap& (0+255),b
  3428  001858  0E00               	movlw	high sprintf@ap
  3429  00185A  0100               	movlb	0	; () banked
  3430  00185C  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  3431  00185E  EC4C  F000         	call	__doprnt	;wreg free
  3432  001862  C085  FFD9         	movff	sprintf@pb,fsr2l
  3433  001866  C086  FFDA         	movff	sprintf@pb+1,fsr2h
  3434  00186A  0E00               	movlw	0
  3435  00186C  6EDF               	movwf	indf2,c
  3436  00186E  0012               	return	
  3437  001870                     __end_of_sprintf:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           prodh	equ	0xFF4
  3444                           prodl	equ	0xFF3
  3445                           intcon	equ	0xFF2
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           indf1	equ	0xFE7
  3449                           postdec1	equ	0xFE5
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           postinc2	equ	0xFDE
  3454                           postdec2	equ	0xFDD
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function ___awmod *****************
  3460 ;; Defined at:
  3461 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  dividend        2    8[BANK0 ] int 
  3464 ;;  divisor         2   10[BANK0 ] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  sign            1   13[BANK0 ] unsigned char 
  3467 ;;  counter         1   12[BANK0 ] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2    8[BANK0 ] int 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;Total ram usage:        6 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    4
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text15
  3492  001422                     __ptext15:
  3493                           	opt stack 0
  3494  001422                     ___awmod:
  3495                           	opt stack 26
  3496                           
  3497                           ;incstack = 0
  3498  001422  0E00               	movlw	0
  3499  001424  0100               	movlb	0	; () banked
  3500  001426  6F6D               	movwf	___awmod@sign& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503  001428  0100               	movlb	0	; () banked
  3504  00142A  AF69               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3505  00142C  D008               	goto	l3590
  3506                           
  3507                           ; BSR set to: 0
  3508  00142E  0100               	movlb	0	; () banked
  3509  001430  6D68               	negf	___awmod@dividend& (0+255),b
  3510  001432  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  3511  001434  B0D8               	btfsc	status,0,c
  3512  001436  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  3513                           
  3514                           ; BSR set to: 0
  3515  001438  0E01               	movlw	1
  3516  00143A  0100               	movlb	0	; () banked
  3517  00143C  6F6D               	movwf	___awmod@sign& (0+255),b
  3518  00143E                     l3590:
  3519                           
  3520                           ; BSR set to: 0
  3521  00143E  0100               	movlb	0	; () banked
  3522  001440  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3523  001442  D005               	goto	l3594
  3524                           
  3525                           ; BSR set to: 0
  3526  001444  0100               	movlb	0	; () banked
  3527  001446  6D6A               	negf	___awmod@divisor& (0+255),b
  3528  001448  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  3529  00144A  B0D8               	btfsc	status,0,c
  3530  00144C  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  3531  00144E                     l3594:
  3532                           
  3533                           ; BSR set to: 0
  3534  00144E  0100               	movlb	0	; () banked
  3535  001450  516A               	movf	___awmod@divisor& (0+255),w,b
  3536  001452  0100               	movlb	0	; () banked
  3537  001454  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3538  001456  B4D8               	btfsc	status,2,c
  3539  001458  D026               	goto	l3610
  3540                           
  3541                           ; BSR set to: 0
  3542  00145A  0E01               	movlw	1
  3543  00145C  0100               	movlb	0	; () banked
  3544  00145E  6F6C               	movwf	___awmod@counter& (0+255),b
  3545  001460  D006               	goto	l3600
  3546  001462                     l3598:
  3547                           
  3548                           ; BSR set to: 0
  3549  001462  0100               	movlb	0	; () banked
  3550  001464  90D8               	bcf	status,0,c
  3551  001466  376A               	rlcf	___awmod@divisor& (0+255),f,b
  3552  001468  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3553  00146A  0100               	movlb	0	; () banked
  3554  00146C  2B6C               	incf	___awmod@counter& (0+255),f,b
  3555  00146E                     l3600:
  3556                           
  3557                           ; BSR set to: 0
  3558  00146E  0100               	movlb	0	; () banked
  3559  001470  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3560  001472  D7F7               	goto	l3598
  3561  001474                     l3602:
  3562                           
  3563                           ; BSR set to: 0
  3564  001474  0100               	movlb	0	; () banked
  3565  001476  516A               	movf	___awmod@divisor& (0+255),w,b
  3566  001478  0100               	movlb	0	; () banked
  3567  00147A  5D68               	subwf	___awmod@dividend& (0+255),w,b
  3568  00147C  0100               	movlb	0	; () banked
  3569  00147E  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  3570  001480  0100               	movlb	0	; () banked
  3571  001482  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3572  001484  A0D8               	btfss	status,0,c
  3573  001486  D008               	goto	l3606
  3574                           
  3575                           ; BSR set to: 0
  3576  001488  0100               	movlb	0	; () banked
  3577  00148A  516A               	movf	___awmod@divisor& (0+255),w,b
  3578  00148C  0100               	movlb	0	; () banked
  3579  00148E  5F68               	subwf	___awmod@dividend& (0+255),f,b
  3580  001490  0100               	movlb	0	; () banked
  3581  001492  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  3582  001494  0100               	movlb	0	; () banked
  3583  001496  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3584  001498                     l3606:
  3585                           
  3586                           ; BSR set to: 0
  3587  001498  0100               	movlb	0	; () banked
  3588  00149A  90D8               	bcf	status,0,c
  3589  00149C  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3590  00149E  336A               	rrcf	___awmod@divisor& (0+255),f,b
  3591                           
  3592                           ; BSR set to: 0
  3593  0014A0  0100               	movlb	0	; () banked
  3594  0014A2  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  3595  0014A4  D7E7               	goto	l3602
  3596  0014A6                     l3610:
  3597                           
  3598                           ; BSR set to: 0
  3599  0014A6  0100               	movlb	0	; () banked
  3600  0014A8  516D               	movf	___awmod@sign& (0+255),w,b
  3601  0014AA  0100               	movlb	0	; () banked
  3602  0014AC  B4D8               	btfsc	status,2,c
  3603  0014AE  D005               	goto	l3614
  3604                           
  3605                           ; BSR set to: 0
  3606  0014B0  0100               	movlb	0	; () banked
  3607  0014B2  6D68               	negf	___awmod@dividend& (0+255),b
  3608  0014B4  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  3609  0014B6  B0D8               	btfsc	status,0,c
  3610  0014B8  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  3611  0014BA                     l3614:
  3612                           
  3613                           ; BSR set to: 0
  3614  0014BA  C068  F068         	movff	___awmod@dividend,?___awmod
  3615  0014BE  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  3616  0014C2  0012               	return	
  3617  0014C4                     __end_of___awmod:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           indf2	equ	0xFDF
  3633                           postinc2	equ	0xFDE
  3634                           postdec2	equ	0xFDD
  3635                           fsr2h	equ	0xFDA
  3636                           fsr2l	equ	0xFD9
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function _SYSTEM_Initialize *****************
  3640 ;; Defined at:
  3641 ;;		line 112 in file "mcc_generated_files/mcc.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    6
  3662 ;; This function calls:
  3663 ;;		_EPWM1_Initialize
  3664 ;;		_EUSART1_Initialize
  3665 ;;		_INTERRUPT_Initialize
  3666 ;;		_OSCILLATOR_Initialize
  3667 ;;		_PIN_MANAGER_Initialize
  3668 ;;		_TMR2_Initialize
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text16
  3675  001C08                     __ptext16:
  3676                           	opt stack 0
  3677  001C08                     _SYSTEM_Initialize:
  3678                           	opt stack 24
  3679                           
  3680                           ;mcc.c: 115: INTERRUPT_Initialize();
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;incstack = 0
  3684  001C08  EC38  F00E         	call	_INTERRUPT_Initialize	;wreg free
  3685                           
  3686                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  3687  001C0C  ECD9  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  3688                           
  3689                           ;mcc.c: 117: OSCILLATOR_Initialize();
  3690  001C10  EC2B  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  3691                           
  3692                           ;mcc.c: 118: EPWM1_Initialize();
  3693  001C14  ECD6  F00D         	call	_EPWM1_Initialize	;wreg free
  3694                           
  3695                           ;mcc.c: 119: TMR2_Initialize();
  3696  001C18  EC1B  F00E         	call	_TMR2_Initialize	;wreg free
  3697                           
  3698                           ;mcc.c: 120: EUSART1_Initialize();
  3699  001C1C  ECF3  F00C         	call	_EUSART1_Initialize	;wreg free
  3700  001C20  0012               	return		;funcret
  3701  001C22                     __end_of_SYSTEM_Initialize:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           indf1	equ	0xFE7
  3713                           postdec1	equ	0xFE5
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           indf2	equ	0xFDF
  3717                           postinc2	equ	0xFDE
  3718                           postdec2	equ	0xFDD
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _TMR2_Initialize *****************
  3724 ;; Defined at:
  3725 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;		None
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;Total ram usage:        0 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    5
  3746 ;; This function calls:
  3747 ;;		_TMR2_StartTimer
  3748 ;; This function is called by:
  3749 ;;		_SYSTEM_Initialize
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text17
  3754  001C36                     __ptext17:
  3755                           	opt stack 0
  3756  001C36                     _TMR2_Initialize:
  3757                           	opt stack 24
  3758                           
  3759                           ;tmr2.c: 63: T2CON = 0x7E;
  3760                           
  3761                           ;incstack = 0
  3762  001C36  0E7E               	movlw	126
  3763  001C38  6EBA               	movwf	4026,c	;volatile
  3764                           
  3765                           ;tmr2.c: 66: PR2 = 0xFF;
  3766  001C3A  68BB               	setf	4027,c	;volatile
  3767                           
  3768                           ;tmr2.c: 69: TMR2 = 0x00;
  3769  001C3C  0E00               	movlw	0
  3770  001C3E  6EBC               	movwf	4028,c	;volatile
  3771                           
  3772                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  3773  001C40  929E               	bcf	3998,1,c	;volatile
  3774                           
  3775                           ;tmr2.c: 75: TMR2_StartTimer();
  3776  001C42  EC44  F00E         	call	_TMR2_StartTimer	;wreg free
  3777  001C46  0012               	return		;funcret
  3778  001C48                     __end_of_TMR2_Initialize:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           intcon	equ	0xFF2
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           indf2	equ	0xFDF
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _TMR2_StartTimer *****************
  3801 ;; Defined at:
  3802 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		None
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    4
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_TMR2_Initialize
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text18
  3831  001C88                     __ptext18:
  3832                           	opt stack 0
  3833  001C88                     _TMR2_StartTimer:
  3834                           	opt stack 24
  3835                           
  3836                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  3837                           
  3838                           ;incstack = 0
  3839  001C88  84BA               	bsf	4026,2,c	;volatile
  3840  001C8A  0012               	return		;funcret
  3841  001C8C                     __end_of_TMR2_StartTimer:
  3842                           	opt stack 0
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           intcon	equ	0xFF2
  3850                           postinc0	equ	0xFEE
  3851                           wreg	equ	0xFE8
  3852                           indf1	equ	0xFE7
  3853                           postdec1	equ	0xFE5
  3854                           fsr1h	equ	0xFE2
  3855                           fsr1l	equ	0xFE1
  3856                           indf2	equ	0xFDF
  3857                           postinc2	equ	0xFDE
  3858                           postdec2	equ	0xFDD
  3859                           fsr2h	equ	0xFDA
  3860                           fsr2l	equ	0xFD9
  3861                           status	equ	0xFD8
  3862                           
  3863 ;; *************** function _PIN_MANAGER_Initialize *****************
  3864 ;; Defined at:
  3865 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    4
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_SYSTEM_Initialize
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text19
  3894  0019B2                     __ptext19:
  3895                           	opt stack 0
  3896  0019B2                     _PIN_MANAGER_Initialize:
  3897                           	opt stack 25
  3898                           
  3899                           ;pin_manager.c: 51: LATB = 0x0;
  3900                           
  3901                           ;incstack = 0
  3902  0019B2  0E00               	movlw	0
  3903  0019B4  6E8A               	movwf	3978,c	;volatile
  3904                           
  3905                           ;pin_manager.c: 52: LATA = 0x0;
  3906  0019B6  0E00               	movlw	0
  3907  0019B8  6E89               	movwf	3977,c	;volatile
  3908                           
  3909                           ;pin_manager.c: 53: LATC = 0x0;
  3910  0019BA  0E00               	movlw	0
  3911  0019BC  6E8B               	movwf	3979,c	;volatile
  3912                           
  3913                           ;pin_manager.c: 54: ANSELA = 0x2F;
  3914  0019BE  0E2F               	movlw	47
  3915  0019C0  010F               	movlb	15	; () banked
  3916  0019C2  6F38               	movwf	56,b	;volatile
  3917                           
  3918                           ;pin_manager.c: 55: ANSELB = 0x3E;
  3919  0019C4  0E3E               	movlw	62
  3920  0019C6  010F               	movlb	15	; () banked
  3921  0019C8  6F39               	movwf	57,b	;volatile
  3922                           
  3923                           ;pin_manager.c: 56: ANSELC = 0x38;
  3924  0019CA  0E38               	movlw	56
  3925  0019CC  010F               	movlb	15	; () banked
  3926  0019CE  6F3A               	movwf	58,b	;volatile
  3927                           
  3928                           ;pin_manager.c: 57: TRISB = 0xC8;
  3929  0019D0  0EC8               	movlw	200
  3930  0019D2  6E93               	movwf	3987,c	;volatile
  3931                           
  3932                           ;pin_manager.c: 58: TRISC = 0xF9;
  3933  0019D4  0EF9               	movlw	249
  3934  0019D6  6E94               	movwf	3988,c	;volatile
  3935                           
  3936                           ;pin_manager.c: 59: WPUB = 0xFE;
  3937  0019D8  0EFE               	movlw	254
  3938  0019DA  6E61               	movwf	3937,c	;volatile
  3939                           
  3940                           ;pin_manager.c: 60: TRISA = 0xEF;
  3941  0019DC  0EEF               	movlw	239
  3942  0019DE  6E92               	movwf	3986,c	;volatile
  3943                           
  3944                           ; BSR set to: 15
  3945                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  3946  0019E0  8EF1               	bsf	intcon2,7,c	;volatile
  3947                           
  3948                           ; BSR set to: 15
  3949                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  3950  0019E2  96F2               	bcf	intcon,3,c	;volatile
  3951                           
  3952                           ; BSR set to: 15
  3953  0019E4  0012               	return		;funcret
  3954  0019E6                     __end_of_PIN_MANAGER_Initialize:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           intcon2	equ	0xFF1
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           indf1	equ	0xFE7
  3967                           postdec1	equ	0xFE5
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           postinc2	equ	0xFDE
  3972                           postdec2	equ	0xFDD
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8
  3976                           
  3977 ;; *************** function _OSCILLATOR_Initialize *****************
  3978 ;; Defined at:
  3979 ;;		line 123 in file "mcc_generated_files/mcc.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    4
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_SYSTEM_Initialize
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text20
  4008  001C56                     __ptext20:
  4009                           	opt stack 0
  4010  001C56                     _OSCILLATOR_Initialize:
  4011                           	opt stack 25
  4012                           
  4013                           ;mcc.c: 126: OSCCON = 0x70;
  4014                           
  4015                           ; BSR set to: 15
  4016                           ;incstack = 0
  4017  001C56  0E70               	movlw	112
  4018  001C58  6ED3               	movwf	4051,c	;volatile
  4019                           
  4020                           ;mcc.c: 128: OSCCON2 = 0x04;
  4021  001C5A  0E04               	movlw	4
  4022  001C5C  6ED2               	movwf	4050,c	;volatile
  4023                           
  4024                           ;mcc.c: 130: OSCTUNE = 0x40;
  4025  001C5E  0E40               	movlw	64
  4026  001C60  6E9B               	movwf	3995,c	;volatile
  4027  001C62  0012               	return		;funcret
  4028  001C64                     __end_of_OSCILLATOR_Initialize:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           prodh	equ	0xFF4
  4035                           prodl	equ	0xFF3
  4036                           intcon	equ	0xFF2
  4037                           intcon2	equ	0xFF1
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           postdec1	equ	0xFE5
  4042                           fsr1h	equ	0xFE2
  4043                           fsr1l	equ	0xFE1
  4044                           indf2	equ	0xFDF
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function _INTERRUPT_Initialize *****************
  4052 ;; Defined at:
  4053 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		None
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    4
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_SYSTEM_Initialize
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text21
  4082  001C70                     __ptext21:
  4083                           	opt stack 0
  4084  001C70                     _INTERRUPT_Initialize:
  4085                           	opt stack 25
  4086                           
  4087                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4088                           
  4089                           ;incstack = 0
  4090  001C70  9ED0               	bcf	4048,7,c	;volatile
  4091                           
  4092                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  4093  001C72  94F1               	bcf	intcon2,2,c	;volatile
  4094                           
  4095                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  4096  001C74  989F               	bcf	3999,4,c	;volatile
  4097                           
  4098                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  4099  001C76  9A9F               	bcf	3999,5,c	;volatile
  4100  001C78  0012               	return		;funcret
  4101  001C7A                     __end_of_INTERRUPT_Initialize:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           intcon	equ	0xFF2
  4110                           intcon2	equ	0xFF1
  4111                           postinc0	equ	0xFEE
  4112                           wreg	equ	0xFE8
  4113                           indf1	equ	0xFE7
  4114                           postdec1	equ	0xFE5
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           postinc2	equ	0xFDE
  4119                           postdec2	equ	0xFDD
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8
  4123                           
  4124 ;; *************** function _EUSART1_Initialize *****************
  4125 ;; Defined at:
  4126 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    4
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_SYSTEM_Initialize
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text22
  4155  0019E6                     __ptext22:
  4156                           	opt stack 0
  4157  0019E6                     _EUSART1_Initialize:
  4158                           	opt stack 25
  4159                           
  4160                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  4161                           
  4162                           ;incstack = 0
  4163  0019E6  9A9D               	bcf	3997,5,c	;volatile
  4164                           
  4165                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  4166  0019E8  989D               	bcf	3997,4,c	;volatile
  4167                           
  4168                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  4169  0019EA  0E00               	movlw	0
  4170  0019EC  6EB8               	movwf	4024,c	;volatile
  4171                           
  4172                           ;eusart1.c: 96: RCSTA1 = 0x90;
  4173  0019EE  0E90               	movlw	144
  4174  0019F0  6EAB               	movwf	4011,c	;volatile
  4175                           
  4176                           ;eusart1.c: 99: TXSTA1 = 0x20;
  4177  0019F2  0E20               	movlw	32
  4178  0019F4  6EAC               	movwf	4012,c	;volatile
  4179                           
  4180                           ;eusart1.c: 102: SPBRG1 = 0x10;
  4181  0019F6  0E10               	movlw	16
  4182  0019F8  6EAF               	movwf	4015,c	;volatile
  4183                           
  4184                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  4185  0019FA  0E00               	movlw	0
  4186  0019FC  6EB0               	movwf	4016,c	;volatile
  4187                           
  4188                           ;eusart1.c: 109: eusart1TxHead = 0;
  4189  0019FE  0E00               	movlw	0
  4190  001A00  6E32               	movwf	_eusart1TxHead,c
  4191                           
  4192                           ;eusart1.c: 110: eusart1TxTail = 0;
  4193  001A02  0E00               	movlw	0
  4194  001A04  6E33               	movwf	_eusart1TxTail,c
  4195                           
  4196                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  4197  001A06  0E80               	movlw	128
  4198  001A08  6E39               	movwf	_eusart1TxBufferRemaining,c	;volatile
  4199                           
  4200                           ;eusart1.c: 113: eusart1RxHead = 0;
  4201  001A0A  0E00               	movlw	0
  4202  001A0C  6E30               	movwf	_eusart1RxHead,c
  4203                           
  4204                           ;eusart1.c: 114: eusart1RxTail = 0;
  4205  001A0E  0E00               	movlw	0
  4206  001A10  6E31               	movwf	_eusart1RxTail,c
  4207                           
  4208                           ;eusart1.c: 115: eusart1RxCount = 0;
  4209  001A12  0E00               	movlw	0
  4210  001A14  6E2F               	movwf	_eusart1RxCount,c	;volatile
  4211                           
  4212                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  4213  001A16  8A9D               	bsf	3997,5,c	;volatile
  4214  001A18  0012               	return		;funcret
  4215  001A1A                     __end_of_EUSART1_Initialize:
  4216                           	opt stack 0
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           prodh	equ	0xFF4
  4222                           prodl	equ	0xFF3
  4223                           intcon	equ	0xFF2
  4224                           intcon2	equ	0xFF1
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           indf1	equ	0xFE7
  4228                           postdec1	equ	0xFE5
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           indf2	equ	0xFDF
  4232                           postinc2	equ	0xFDE
  4233                           postdec2	equ	0xFDD
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8
  4237                           
  4238 ;; *************** function _EPWM1_Initialize *****************
  4239 ;; Defined at:
  4240 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    4
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_SYSTEM_Initialize
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text23
  4269  001BAC                     __ptext23:
  4270                           	opt stack 0
  4271  001BAC                     _EPWM1_Initialize:
  4272                           	opt stack 25
  4273                           
  4274                           ;epwm1.c: 69: CCP1CON = 0x0E;
  4275                           
  4276                           ;incstack = 0
  4277  001BAC  0E0E               	movlw	14
  4278  001BAE  6EBD               	movwf	4029,c	;volatile
  4279                           
  4280                           ;epwm1.c: 72: ECCP1AS = 0x00;
  4281  001BB0  0E00               	movlw	0
  4282  001BB2  6EB6               	movwf	4022,c	;volatile
  4283                           
  4284                           ;epwm1.c: 75: PWM1CON = 0x82;
  4285  001BB4  0E82               	movlw	130
  4286  001BB6  6EB7               	movwf	4023,c	;volatile
  4287                           
  4288                           ;epwm1.c: 78: PSTR1CON = 0x01;
  4289  001BB8  0E01               	movlw	1
  4290  001BBA  6EB9               	movwf	4025,c	;volatile
  4291                           
  4292                           ;epwm1.c: 81: CCPR1L = 0x00;
  4293  001BBC  0E00               	movlw	0
  4294  001BBE  6EBE               	movwf	4030,c	;volatile
  4295                           
  4296                           ;epwm1.c: 84: CCPR1H = 0x00;
  4297  001BC0  0E00               	movlw	0
  4298  001BC2  6EBF               	movwf	4031,c	;volatile
  4299                           
  4300                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  4301  001BC4  0EFC               	movlw	-4
  4302  001BC6  010F               	movlb	15	; () banked
  4303  001BC8  1749               	andwf	73,f,b	;volatile
  4304                           
  4305                           ; BSR set to: 15
  4306  001BCA  0012               	return		;funcret
  4307  001BCC                     __end_of_EPWM1_Initialize:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon	equ	0xFF2
  4316                           intcon2	equ	0xFF1
  4317                           postinc0	equ	0xFEE
  4318                           wreg	equ	0xFE8
  4319                           indf1	equ	0xFE7
  4320                           postdec1	equ	0xFE5
  4321                           fsr1h	equ	0xFE2
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _InitRadio *****************
  4331 ;; Defined at:
  4332 ;;		line 81 in file "main.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;Total ram usage:        0 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    9
  4353 ;; This function calls:
  4354 ;;		_getUUID
  4355 ;;		_printf
  4356 ;;		_read_line
  4357 ;;		_wait_5ms
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text24
  4364  000FCC                     __ptext24:
  4365                           	opt stack 0
  4366  000FCC                     _InitRadio:
  4367                           	opt stack 21
  4368                           
  4369                           ;main.c: 82: wait_5ms(5);
  4370                           
  4371                           ; BSR set to: 15
  4372                           ;incstack = 0
  4373  000FCC  0E00               	movlw	0
  4374  000FCE  6E27               	movwf	wait_5ms@j+1,c
  4375  000FD0  0E05               	movlw	5
  4376  000FD2  6E26               	movwf	wait_5ms@j,c
  4377  000FD4  EC0D  F00D         	call	_wait_5ms	;wreg free
  4378                           
  4379                           ;main.c: 83: printf("sys reset\r\n");
  4380  000FD8  0EC7               	movlw	low STR_8
  4381  000FDA  0100               	movlb	0	; () banked
  4382  000FDC  6F7B               	movwf	printf@f& (0+255),b
  4383  000FDE  0EFF               	movlw	high STR_8
  4384  000FE0  0100               	movlb	0	; () banked
  4385  000FE2  6F7C               	movwf	(printf@f+1)& (0+255),b
  4386  000FE4  EC61  F00C         	call	_printf	;wreg free
  4387                           
  4388                           ;main.c: 84: wait_5ms(5);
  4389  000FE8  0E00               	movlw	0
  4390  000FEA  6E27               	movwf	wait_5ms@j+1,c
  4391  000FEC  0E05               	movlw	5
  4392  000FEE  6E26               	movwf	wait_5ms@j,c
  4393  000FF0  EC0D  F00D         	call	_wait_5ms	;wreg free
  4394                           
  4395                           ;main.c: 85: printf("sys get ver\r\n");
  4396  000FF4  0EA0               	movlw	low STR_9
  4397  000FF6  0100               	movlb	0	; () banked
  4398  000FF8  6F7B               	movwf	printf@f& (0+255),b
  4399  000FFA  0EFF               	movlw	high STR_9
  4400  000FFC  0100               	movlb	0	; () banked
  4401  000FFE  6F7C               	movwf	(printf@f+1)& (0+255),b
  4402  001000  EC61  F00C         	call	_printf	;wreg free
  4403                           
  4404                           ;main.c: 86: read_line();
  4405  001004  EC32  F00E         	call	_read_line	;wreg free
  4406                           
  4407                           ;main.c: 87: printf("radio get sf\r\n");
  4408  001008  0E73               	movlw	low STR_10
  4409  00100A  0100               	movlb	0	; () banked
  4410  00100C  6F7B               	movwf	printf@f& (0+255),b
  4411  00100E  0EFF               	movlw	high STR_10
  4412  001010  0100               	movlb	0	; () banked
  4413  001012  6F7C               	movwf	(printf@f+1)& (0+255),b
  4414  001014  EC61  F00C         	call	_printf	;wreg free
  4415                           
  4416                           ;main.c: 88: read_line();
  4417  001018  EC32  F00E         	call	_read_line	;wreg free
  4418                           
  4419                           ;main.c: 89: printf("radio get bw\r\n");
  4420  00101C  0E91               	movlw	low STR_11
  4421  00101E  0100               	movlb	0	; () banked
  4422  001020  6F7B               	movwf	printf@f& (0+255),b
  4423  001022  0EFF               	movlw	high STR_11
  4424  001024  0100               	movlb	0	; () banked
  4425  001026  6F7C               	movwf	(printf@f+1)& (0+255),b
  4426  001028  EC61  F00C         	call	_printf	;wreg free
  4427                           
  4428                           ;main.c: 90: read_line();
  4429  00102C  EC32  F00E         	call	_read_line	;wreg free
  4430                           
  4431                           ;main.c: 91: printf("radio get cr\r\n");
  4432  001030  0E82               	movlw	low STR_12
  4433  001032  0100               	movlb	0	; () banked
  4434  001034  6F7B               	movwf	printf@f& (0+255),b
  4435  001036  0EFF               	movlw	high STR_12
  4436  001038  0100               	movlb	0	; () banked
  4437  00103A  6F7C               	movwf	(printf@f+1)& (0+255),b
  4438  00103C  EC61  F00C         	call	_printf	;wreg free
  4439                           
  4440                           ;main.c: 92: read_line();
  4441  001040  EC32  F00E         	call	_read_line	;wreg free
  4442                           
  4443                           ;main.c: 93: printf("radio get prlen\r\n");
  4444  001044  0E1F               	movlw	low STR_13
  4445  001046  0100               	movlb	0	; () banked
  4446  001048  6F7B               	movwf	printf@f& (0+255),b
  4447  00104A  0EFF               	movlw	high STR_13
  4448  00104C  0100               	movlb	0	; () banked
  4449  00104E  6F7C               	movwf	(printf@f+1)& (0+255),b
  4450  001050  EC61  F00C         	call	_printf	;wreg free
  4451                           
  4452                           ;main.c: 94: read_line();
  4453  001054  EC32  F00E         	call	_read_line	;wreg free
  4454                           
  4455                           ;main.c: 95: printf("radio get pwr\r\n");
  4456  001058  0E63               	movlw	low STR_14
  4457  00105A  0100               	movlb	0	; () banked
  4458  00105C  6F7B               	movwf	printf@f& (0+255),b
  4459  00105E  0EFF               	movlw	high STR_14
  4460  001060  0100               	movlb	0	; () banked
  4461  001062  6F7C               	movwf	(printf@f+1)& (0+255),b
  4462  001064  EC61  F00C         	call	_printf	;wreg free
  4463                           
  4464                           ;main.c: 96: read_line();
  4465  001068  EC32  F00E         	call	_read_line	;wreg free
  4466                           
  4467                           ;main.c: 97: printf("mac pause\r\n");
  4468  00106C  0EBB               	movlw	low STR_15
  4469  00106E  0100               	movlb	0	; () banked
  4470  001070  6F7B               	movwf	printf@f& (0+255),b
  4471  001072  0EFF               	movlw	high STR_15
  4472  001074  0100               	movlb	0	; () banked
  4473  001076  6F7C               	movwf	(printf@f+1)& (0+255),b
  4474  001078  EC61  F00C         	call	_printf	;wreg free
  4475                           
  4476                           ;main.c: 98: read_line();
  4477  00107C  EC32  F00E         	call	_read_line	;wreg free
  4478                           
  4479                           ;main.c: 100: printf("radio set pwr -2\r\n");
  4480  001080  0EC0               	movlw	low STR_16
  4481  001082  0100               	movlb	0	; () banked
  4482  001084  6F7B               	movwf	printf@f& (0+255),b
  4483  001086  0EFE               	movlw	high STR_16
  4484  001088  0100               	movlb	0	; () banked
  4485  00108A  6F7C               	movwf	(printf@f+1)& (0+255),b
  4486  00108C  EC61  F00C         	call	_printf	;wreg free
  4487                           
  4488                           ;main.c: 101: read_line();
  4489  001090  EC32  F00E         	call	_read_line	;wreg free
  4490                           
  4491                           ;main.c: 102: printf("radio set bw 500\r\n");
  4492  001094  0EAD               	movlw	low STR_17
  4493  001096  0100               	movlb	0	; () banked
  4494  001098  6F7B               	movwf	printf@f& (0+255),b
  4495  00109A  0EFE               	movlw	high STR_17
  4496  00109C  0100               	movlb	0	; () banked
  4497  00109E  6F7C               	movwf	(printf@f+1)& (0+255),b
  4498  0010A0  EC61  F00C         	call	_printf	;wreg free
  4499                           
  4500                           ;main.c: 103: read_line();
  4501  0010A4  EC32  F00E         	call	_read_line	;wreg free
  4502                           
  4503                           ;main.c: 104: printf("radio set sf sf7\r\n");
  4504  0010A8  0ED3               	movlw	low STR_18
  4505  0010AA  0100               	movlb	0	; () banked
  4506  0010AC  6F7B               	movwf	printf@f& (0+255),b
  4507  0010AE  0EFE               	movlw	high STR_18
  4508  0010B0  0100               	movlb	0	; () banked
  4509  0010B2  6F7C               	movwf	(printf@f+1)& (0+255),b
  4510  0010B4  EC61  F00C         	call	_printf	;wreg free
  4511                           
  4512                           ;main.c: 105: read_line();
  4513  0010B8  EC32  F00E         	call	_read_line	;wreg free
  4514                           
  4515                           ;main.c: 106: printf("radio set cr 4/8\r\n");
  4516  0010BC  0EE6               	movlw	low STR_19
  4517  0010BE  0100               	movlb	0	; () banked
  4518  0010C0  6F7B               	movwf	printf@f& (0+255),b
  4519  0010C2  0EFE               	movlw	high STR_19
  4520  0010C4  0100               	movlb	0	; () banked
  4521  0010C6  6F7C               	movwf	(printf@f+1)& (0+255),b
  4522  0010C8  EC61  F00C         	call	_printf	;wreg free
  4523                           
  4524                           ;main.c: 107: read_line();
  4525  0010CC  EC32  F00E         	call	_read_line	;wreg free
  4526                           
  4527                           ;main.c: 108: printf("radio set crc on\r\n");
  4528  0010D0  0E0C               	movlw	low STR_20
  4529  0010D2  0100               	movlb	0	; () banked
  4530  0010D4  6F7B               	movwf	printf@f& (0+255),b
  4531  0010D6  0EFF               	movlw	high STR_20
  4532  0010D8  0100               	movlb	0	; () banked
  4533  0010DA  6F7C               	movwf	(printf@f+1)& (0+255),b
  4534  0010DC  EC61  F00C         	call	_printf	;wreg free
  4535                           
  4536                           ;main.c: 109: read_line();
  4537  0010E0  EC32  F00E         	call	_read_line	;wreg free
  4538                           
  4539                           ;main.c: 111: getUUID();
  4540  0010E4  EC87  F00D         	call	_getUUID	;wreg free
  4541  0010E8  0012               	return		;funcret
  4542  0010EA                     __end_of_InitRadio:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           intcon	equ	0xFF2
  4551                           intcon2	equ	0xFF1
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           indf1	equ	0xFE7
  4555                           postdec1	equ	0xFE5
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _wait_5ms *****************
  4566 ;; Defined at:
  4567 ;;		line 40 in file "main.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  j               2   37[COMRAM] int 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  i               1   42[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:        6 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    4
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_InitRadio
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text25
  4596  001A1A                     __ptext25:
  4597                           	opt stack 0
  4598  001A1A                     _wait_5ms:
  4599                           	opt stack 25
  4600                           
  4601                           ;main.c: 41: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  4602                           
  4603                           ;incstack = 0
  4604  001A1A  0E00               	movlw	0
  4605  001A1C  6E2B               	movwf	wait_5ms@i,c
  4606  001A1E  D009               	goto	l280
  4607  001A20                     l2706:
  4608  001A20  0E68               	movlw	104
  4609  001A22  6E28               	movwf	??_wait_5ms& (0+255),c
  4610  001A24  0EE4               	movlw	228
  4611  001A26                     u4147:
  4612  001A26  2EE8               	decfsz	wreg,f,c
  4613  001A28  D7FE               	goto	u4147
  4614  001A2A  2E28               	decfsz	??_wait_5ms& (0+255),f,c
  4615  001A2C  D7FC               	goto	u4147
  4616  001A2E  D000               	nop2	
  4617  001A30  2A2B               	incf	wait_5ms@i,f,c
  4618  001A32                     l280:
  4619  001A32  502B               	movf	wait_5ms@i,w,c
  4620  001A34  6E28               	movwf	??_wait_5ms& (0+255),c
  4621  001A36  6A29               	clrf	(??_wait_5ms+1)& (0+255),c
  4622  001A38  5026               	movf	wait_5ms@j,w,c
  4623  001A3A  5C28               	subwf	??_wait_5ms,w,c
  4624  001A3C  5029               	movf	??_wait_5ms+1,w,c
  4625  001A3E  0A80               	xorlw	128
  4626  001A40  6E2A               	movwf	(??_wait_5ms+2)& (0+255),c
  4627  001A42  5027               	movf	wait_5ms@j+1,w,c
  4628  001A44  0A80               	xorlw	128
  4629  001A46  582A               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  4630  001A48  B0D8               	btfsc	status,0,c
  4631  001A4A  0012               	return	
  4632  001A4C  D7E9               	goto	l2706
  4633  001A4E                     __end_of_wait_5ms:
  4634                           	opt stack 0
  4635                           tblptru	equ	0xFF8
  4636                           tblptrh	equ	0xFF7
  4637                           tblptrl	equ	0xFF6
  4638                           tablat	equ	0xFF5
  4639                           prodh	equ	0xFF4
  4640                           prodl	equ	0xFF3
  4641                           intcon	equ	0xFF2
  4642                           intcon2	equ	0xFF1
  4643                           postinc0	equ	0xFEE
  4644                           wreg	equ	0xFE8
  4645                           indf1	equ	0xFE7
  4646                           postdec1	equ	0xFE5
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _getUUID *****************
  4657 ;; Defined at:
  4658 ;;		line 48 in file "main.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    8
  4679 ;; This function calls:
  4680 ;;		_printf
  4681 ;;		_read_line
  4682 ;;		_strcpy
  4683 ;; This function is called by:
  4684 ;;		_InitRadio
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text26
  4689  001B0E                     __ptext26:
  4690                           	opt stack 0
  4691  001B0E                     _getUUID:
  4692                           	opt stack 21
  4693                           
  4694                           ;main.c: 49: printf("sys get hweui\r\n");
  4695                           
  4696                           ;incstack = 0
  4697  001B0E  0E53               	movlw	low STR_5
  4698  001B10  0100               	movlb	0	; () banked
  4699  001B12  6F7B               	movwf	printf@f& (0+255),b
  4700  001B14  0EFF               	movlw	high STR_5
  4701  001B16  0100               	movlb	0	; () banked
  4702  001B18  6F7C               	movwf	(printf@f+1)& (0+255),b
  4703  001B1A  EC61  F00C         	call	_printf	;wreg free
  4704                           
  4705                           ;main.c: 50: read_line();
  4706  001B1E  EC32  F00E         	call	_read_line	;wreg free
  4707                           
  4708                           ;main.c: 51: strcpy(uuid,line);
  4709  001B22  0E9B               	movlw	low _uuid
  4710  001B24  6E26               	movwf	strcpy@to,c
  4711  001B26  0E00               	movlw	high _uuid
  4712  001B28  6E27               	movwf	strcpy@to+1,c
  4713  001B2A  0E80               	movlw	low _line
  4714  001B2C  6E28               	movwf	strcpy@from,c
  4715  001B2E  0E01               	movlw	high _line
  4716  001B30  6E29               	movwf	strcpy@from+1,c
  4717  001B32  EC59  F00D         	call	_strcpy	;wreg free
  4718  001B36  0012               	return		;funcret
  4719  001B38                     __end_of_getUUID:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           intcon2	equ	0xFF1
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf1	equ	0xFE7
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           postdec2	equ	0xFDD
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _strcpy *****************
  4743 ;; Defined at:
  4744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  to              2   37[COMRAM] PTR unsigned char 
  4747 ;;		 -> uuid(40), 
  4748 ;;  from            2   39[COMRAM] PTR const unsigned char 
  4749 ;;		 -> line(128), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  cp              2   41[COMRAM] PTR unsigned char 
  4752 ;;		 -> uuid(40), 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  2   37[COMRAM] PTR unsigned char 
  4755 ;; Registers used:
  4756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;Total ram usage:        6 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    4
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_getUUID
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text27
  4777  001AB2                     __ptext27:
  4778                           	opt stack 0
  4779  001AB2                     _strcpy:
  4780                           	opt stack 24
  4781                           
  4782                           ;incstack = 0
  4783  001AB2  C026  F02A         	movff	strcpy@to,strcpy@cp
  4784  001AB6  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  4785  001ABA  D004               	goto	l2498
  4786  001ABC                     l2496:
  4787  001ABC  4A2A               	infsnz	strcpy@cp,f,c
  4788  001ABE  2A2B               	incf	strcpy@cp+1,f,c
  4789  001AC0  4A28               	infsnz	strcpy@from,f,c
  4790  001AC2  2A29               	incf	strcpy@from+1,f,c
  4791  001AC4                     l2498:
  4792  001AC4  C028  FFD9         	movff	strcpy@from,fsr2l
  4793  001AC8  C029  FFDA         	movff	strcpy@from+1,fsr2h
  4794  001ACC  C02A  FFE1         	movff	strcpy@cp,fsr1l
  4795  001AD0  C02B  FFE2         	movff	strcpy@cp+1,fsr1h
  4796  001AD4  CFDF FFE7          	movff	indf2,indf1
  4797  001AD8  50E7               	movf	indf1,w,c
  4798  001ADA  B4D8               	btfsc	status,2,c
  4799  001ADC  0012               	return	
  4800  001ADE  D7EE               	goto	l2496
  4801  001AE0                     __end_of_strcpy:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           intcon2	equ	0xFF1
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           indf1	equ	0xFE7
  4814                           postdec1	equ	0xFE5
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _read_line *****************
  4825 ;; Defined at:
  4826 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  2  147[None  ] int 
  4833 ;; Registers used:
  4834 ;;		wreg, status,2, status,0
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;Total ram usage:        0 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    4
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_getUUID
  4851 ;;		_InitRadio
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text28
  4857  001C64                     __ptext28:
  4858                           	opt stack 0
  4859  001C64                     _read_line:
  4860                           	opt stack 26
  4861  001C64                     l2480:
  4862  001C64  0434               	decf	_ready,w,c	;volatile
  4863  001C66  A4D8               	btfss	status,2,c
  4864  001C68  D7FD               	goto	l2480
  4865                           
  4866                           ;eusart1.c: 252: }
  4867                           ;eusart1.c: 253: ready=0;
  4868  001C6A  0E00               	movlw	0
  4869  001C6C  6E34               	movwf	_ready,c	;volatile
  4870  001C6E  0012               	return	
  4871  001C70                     __end_of_read_line:
  4872                           	opt stack 0
  4873                           tblptru	equ	0xFF8
  4874                           tblptrh	equ	0xFF7
  4875                           tblptrl	equ	0xFF6
  4876                           tablat	equ	0xFF5
  4877                           prodh	equ	0xFF4
  4878                           prodl	equ	0xFF3
  4879                           intcon	equ	0xFF2
  4880                           intcon2	equ	0xFF1
  4881                           postinc0	equ	0xFEE
  4882                           wreg	equ	0xFE8
  4883                           indf1	equ	0xFE7
  4884                           postdec1	equ	0xFE5
  4885                           fsr1h	equ	0xFE2
  4886                           fsr1l	equ	0xFE1
  4887                           indf2	equ	0xFDF
  4888                           postinc2	equ	0xFDE
  4889                           postdec2	equ	0xFDD
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function _printf *****************
  4895 ;; Defined at:
  4896 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\printf.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  f               2   27[BANK0 ] PTR const unsigned char 
  4899 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  4900 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  4901 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4902 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4903 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4904 ;;		 -> STR_5(16), 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  pb              4   37[BANK0 ] struct __prbuf
  4907 ;;  ap              2   35[BANK0 ] PTR void [1]
  4908 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  2   27[BANK0 ] int 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:       14 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    7
  4925 ;; This function calls:
  4926 ;;		__doprnt
  4927 ;; This function is called by:
  4928 ;;		_getUUID
  4929 ;;		_InitRadio
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text29
  4935  0018C2                     __ptext29:
  4936                           	opt stack 0
  4937  0018C2                     _printf:
  4938                           	opt stack 23
  4939                           
  4940                           ;incstack = 0
  4941  0018C2  0E00               	movlw	0
  4942  0018C4  0100               	movlb	0	; () banked
  4943  0018C6  6F85               	movwf	printf@pb& (0+255),b
  4944  0018C8  0E00               	movlw	0
  4945  0018CA  0100               	movlb	0	; () banked
  4946  0018CC  6F86               	movwf	(printf@pb+1)& (0+255),b
  4947  0018CE  0E7A               	movlw	low _putch
  4948  0018D0  0100               	movlb	0	; () banked
  4949  0018D2  6F87               	movwf	(printf@pb+2)& (0+255),b
  4950  0018D4  0E1C               	movlw	high _putch
  4951  0018D6  0100               	movlb	0	; () banked
  4952  0018D8  6F88               	movwf	(printf@pb+3)& (0+255),b
  4953  0018DA  0E7D               	movlw	low (?_printf+2)
  4954  0018DC  0100               	movlb	0	; () banked
  4955  0018DE  6F83               	movwf	printf@ap& (0+255),b
  4956  0018E0  0E00               	movlw	high (?_printf+2)
  4957  0018E2  0100               	movlb	0	; () banked
  4958  0018E4  6F84               	movwf	(printf@ap+1)& (0+255),b
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;	Return value of _printf is never used
  4962  0018E6  0E85               	movlw	low printf@pb
  4963  0018E8  0100               	movlb	0	; () banked
  4964  0018EA  6F65               	movwf	__doprnt@pb& (0+255),b
  4965  0018EC  0E00               	movlw	high printf@pb
  4966  0018EE  0100               	movlb	0	; () banked
  4967  0018F0  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  4968  0018F2  C07B  F067         	movff	printf@f,__doprnt@f
  4969  0018F6  C07C  F068         	movff	printf@f+1,__doprnt@f+1
  4970  0018FA  0E83               	movlw	low printf@ap
  4971  0018FC  0100               	movlb	0	; () banked
  4972  0018FE  6F69               	movwf	__doprnt@ap& (0+255),b
  4973  001900  0E00               	movlw	high printf@ap
  4974  001902  0100               	movlb	0	; () banked
  4975  001904  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  4976  001906  EC4C  F000         	call	__doprnt	;wreg free
  4977  00190A  0012               	return	
  4978  00190C                     __end_of_printf:
  4979                           	opt stack 0
  4980                           tblptru	equ	0xFF8
  4981                           tblptrh	equ	0xFF7
  4982                           tblptrl	equ	0xFF6
  4983                           tablat	equ	0xFF5
  4984                           prodh	equ	0xFF4
  4985                           prodl	equ	0xFF3
  4986                           intcon	equ	0xFF2
  4987                           intcon2	equ	0xFF1
  4988                           postinc0	equ	0xFEE
  4989                           wreg	equ	0xFE8
  4990                           indf1	equ	0xFE7
  4991                           postdec1	equ	0xFE5
  4992                           fsr1h	equ	0xFE2
  4993                           fsr1l	equ	0xFE1
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function __doprnt *****************
  5002 ;; Defined at:
  5003 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  pb              2    5[BANK0 ] PTR struct __prbuf
  5006 ;;		 -> sprintf@pb(4), printf@pb(4), 
  5007 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  5008 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  5009 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  5010 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  5011 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  5012 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  5013 ;;		 -> STR_7(5), STR_5(16), 
  5014 ;;  ap              2    9[BANK0 ] PTR PTR void 
  5015 ;;		 -> sprintf@ap(2), printf@ap(2), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  idx             1   15[BANK0 ] unsigned char 
  5018 ;;  tmpval          4    0        struct .
  5019 ;;  width           2   24[BANK0 ] int 
  5020 ;;  val             2   21[BANK0 ] unsigned int 
  5021 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  5022 ;;		 -> ?_sprintf(2), ?_printf(2), STR_28(7), _doprnt@c(1), 
  5023 ;;		 -> process_message@hexval(4), uuid(40), NULL(0), 
  5024 ;;  len             2   17[BANK0 ] unsigned int 
  5025 ;;  c               1   26[BANK0 ] char 
  5026 ;;  flag            1   23[BANK0 ] unsigned char 
  5027 ;;  prec            1   16[BANK0 ] char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  2    5[BANK0 ] int 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:       22 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    6
  5044 ;; This function calls:
  5045 ;;		Absolute function
  5046 ;;		___lwdiv
  5047 ;;		___lwmod
  5048 ;;		___wmul
  5049 ;;		_isdigit
  5050 ;;		_putch
  5051 ;; This function is called by:
  5052 ;;		_printf
  5053 ;;		_sprintf
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text30
  5058  000098                     __ptext30:
  5059                           	opt stack 0
  5060  000098                     __doprnt:
  5061                           	opt stack 22
  5062                           
  5063                           ;doprnt.c: 499: signed char c;
  5064                           ;doprnt.c: 501: int width;
  5065                           ;doprnt.c: 506: signed char prec;
  5066                           ;doprnt.c: 508: unsigned char flag;
  5067                           ;doprnt.c: 523: union {
  5068                           ;doprnt.c: 524: unsigned long vd;
  5069                           ;doprnt.c: 525: double integ;
  5070                           ;doprnt.c: 526: } tmpval;
  5071                           ;doprnt.c: 528: unsigned int val;
  5072                           ;doprnt.c: 529: unsigned len;
  5073                           ;doprnt.c: 530: const char * cp;
  5074                           ;doprnt.c: 536: while(c = *f++) {
  5075                           
  5076                           ;incstack = 0
  5077  000098  EFAB  F004         	goto	l3354
  5078  00009C                     l3148:
  5079                           
  5080                           ;doprnt.c: 538: if(c != '%')
  5081  00009C  0E25               	movlw	37
  5082  00009E  0100               	movlb	0	; () banked
  5083  0000A0  197A               	xorwf	__doprnt@c& (0+255),w,b
  5084  0000A2  B4D8               	btfsc	status,2,c
  5085  0000A4  D03C               	goto	l3158
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;doprnt.c: 540: {
  5089                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5090  0000A6  0100               	movlb	0	; () banked
  5091  0000A8  EE20 F002          	lfsr	2,2
  5092  0000AC  5165               	movf	__doprnt@pb& (0+255),w,b
  5093  0000AE  26D9               	addwf	fsr2l,f,c
  5094  0000B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5095  0000B2  22DA               	addwfc	fsr2h,f,c
  5096  0000B4  50DE               	movf	postinc2,w,c
  5097  0000B6  10DE               	iorwf	postinc2,w,c
  5098  0000B8  B4D8               	btfsc	status,2,c
  5099  0000BA  D01A               	goto	l3154
  5100                           
  5101                           ; BSR set to: 0
  5102  0000BC  0100               	movlb	0	; () banked
  5103  0000BE  EE20 F002          	lfsr	2,2
  5104  0000C2  5165               	movf	__doprnt@pb& (0+255),w,b
  5105  0000C4  26D9               	addwf	fsr2l,f,c
  5106  0000C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5107  0000C8  22DA               	addwfc	fsr2h,f,c
  5108  0000CA  CFDE F06B          	movff	postinc2,??__doprnt
  5109  0000CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  5110  0000D2  D802               	call	u3248
  5111  0000D4  EFAB  F004         	goto	l3354
  5112  0000D8                     u3248:
  5113  0000D8  0005               	push	
  5114  0000DA  6EFA               	movwf	pclath,c
  5115  0000DC  0100               	movlb	0	; () banked
  5116  0000DE  516B               	movf	??__doprnt& (0+255),w,b
  5117  0000E0  6EFD               	movwf	tosl,c
  5118  0000E2  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5119  0000E4  6EFE               	movwf	tosh,c
  5120  0000E6  6AFF               	clrf	tosu,c
  5121  0000E8  50FA               	movf	pclath,w,c
  5122  0000EA  0100               	movlb	0	; () banked
  5123  0000EC  517A               	movf	__doprnt@c& (0+255),w,b
  5124  0000EE  0012               	return		;indir
  5125  0000F0                     l3154:
  5126  0000F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5127  0000F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5128  0000F8  CFDE F06B          	movff	postinc2,??__doprnt
  5129  0000FC  CFDD F06C          	movff	postdec2,??__doprnt+1
  5130  000100  C06B  FFD9         	movff	??__doprnt,fsr2l
  5131  000104  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5132  000108  C07A  FFDF         	movff	__doprnt@c,indf2
  5133  00010C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5134  000110  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5135  000114  2ADE               	incf	postinc2,f,c
  5136  000116  0E00               	movlw	0
  5137  000118  22DD               	addwfc	postdec2,f,c
  5138                           
  5139                           ;doprnt.c: 542: continue;
  5140  00011A  EFAB  F004         	goto	l3354
  5141  00011E                     l3158:
  5142                           
  5143                           ;doprnt.c: 543: }
  5144                           ;doprnt.c: 546: width = 0;
  5145  00011E  0E00               	movlw	0
  5146  000120  0100               	movlb	0	; () banked
  5147  000122  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5148  000124  0E00               	movlw	0
  5149  000126  6F78               	movwf	__doprnt@width& (0+255),b
  5150                           
  5151                           ;doprnt.c: 548: flag = 0;
  5152  000128  0E00               	movlw	0
  5153  00012A  0100               	movlb	0	; () banked
  5154  00012C  6F77               	movwf	__doprnt@flag& (0+255),b
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;doprnt.c: 551: switch(*f) {
  5158                           
  5159                           ;doprnt.c: 550: for(;;) {
  5160  00012E  D005               	goto	l3164
  5161  000130                     l3160:
  5162                           
  5163                           ;doprnt.c: 580: flag |= 0x04;
  5164  000130  0100               	movlb	0	; () banked
  5165  000132  8577               	bsf	__doprnt@flag& (0+255),2,b
  5166                           
  5167                           ;doprnt.c: 581: f++;
  5168  000134  0100               	movlb	0	; () banked
  5169  000136  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5170  000138  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5171  00013A                     l3164:
  5172  00013A  C067  FFF6         	movff	__doprnt@f,tblptrl
  5173  00013E  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5174  000142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5175  000142  6AF8               	clrf	tblptru,c
  5176  000144                     	endif
  5177  000144                     	if	0	;tblptru may be non-zero
  5178  000144                     	endif
  5179  000144  0008               	tblrd		*
  5180  000146  50F5               	movf	tablat,w,c
  5181                           
  5182                           ; Switch size 1, requested type "space"
  5183                           ; Number of cases is 1, Range of values is 48 to 48
  5184                           ; switch strategies available:
  5185                           ; Name         Instructions Cycles
  5186                           ; simple_byte            4     3 (average)
  5187                           ;	Chosen strategy is simple_byte
  5188  000148  0A30               	xorlw	48	; case 48
  5189  00014A  B4D8               	btfsc	status,2,c
  5190  00014C  D7F1               	goto	l3160
  5191                           
  5192                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5193                           
  5194                           ;doprnt.c: 586: }
  5195                           
  5196                           ;doprnt.c: 585: break;
  5197  00014E  C067  FFF6         	movff	__doprnt@f,tblptrl
  5198  000152  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5199  000156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5200  000156  6AF8               	clrf	tblptru,c
  5201  000158                     	endif
  5202  000158                     	if	0	;tblptru may be non-zero
  5203  000158                     	endif
  5204  000158  0008               	tblrd		*
  5205  00015A  50F5               	movf	tablat,w,c
  5206  00015C  ECF5  F00D         	call	_isdigit
  5207  000160  A0D8               	btfss	status,0,c
  5208  000162  D175               	goto	l3230
  5209                           
  5210                           ;doprnt.c: 598: width = 0;
  5211  000164  0E00               	movlw	0
  5212  000166  0100               	movlb	0	; () banked
  5213  000168  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5214  00016A  0E00               	movlw	0
  5215  00016C  6F78               	movwf	__doprnt@width& (0+255),b
  5216  00016E                     l3170:
  5217                           
  5218                           ;doprnt.c: 600: width *= 10;
  5219  00016E  C078  F026         	movff	__doprnt@width,___wmul@multiplier
  5220  000172  C079  F027         	movff	__doprnt@width+1,___wmul@multiplier+1
  5221  000176  0E00               	movlw	0
  5222  000178  6E29               	movwf	___wmul@multiplicand+1,c
  5223  00017A  0E0A               	movlw	10
  5224  00017C  6E28               	movwf	___wmul@multiplicand,c
  5225  00017E  ECC3  F00D         	call	___wmul	;wreg free
  5226  000182  C026  F078         	movff	?___wmul,__doprnt@width
  5227  000186  C027  F079         	movff	?___wmul+1,__doprnt@width+1
  5228                           
  5229                           ;doprnt.c: 601: width += *f++ - '0';
  5230  00018A  0ED0               	movlw	208
  5231  00018C  0100               	movlb	0	; () banked
  5232  00018E  6F6B               	movwf	??__doprnt& (0+255),b
  5233  000190  0EFF               	movlw	255
  5234  000192  0100               	movlb	0	; () banked
  5235  000194  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  5236  000196  C067  FFF6         	movff	__doprnt@f,tblptrl
  5237  00019A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5238  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5239  00019E  6AF8               	clrf	tblptru,c
  5240  0001A0                     	endif
  5241  0001A0                     	if	0	;tblptru may be non-zero
  5242  0001A0                     	endif
  5243  0001A0  0008               	tblrd		*
  5244  0001A2  50F5               	movf	tablat,w,c
  5245  0001A4  0100               	movlb	0	; () banked
  5246  0001A6  6F6D               	movwf	(??__doprnt+2)& (0+255),b
  5247  0001A8  6B6E               	clrf	(??__doprnt+3)& (0+255),b
  5248  0001AA  0100               	movlb	0	; () banked
  5249  0001AC  516B               	movf	??__doprnt& (0+255),w,b
  5250  0001AE  0100               	movlb	0	; () banked
  5251  0001B0  276D               	addwf	(??__doprnt+2)& (0+255),f,b
  5252  0001B2  0100               	movlb	0	; () banked
  5253  0001B4  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5254  0001B6  0100               	movlb	0	; () banked
  5255  0001B8  236E               	addwfc	(??__doprnt+3)& (0+255),f,b
  5256  0001BA  0100               	movlb	0	; () banked
  5257  0001BC  516D               	movf	(??__doprnt+2)& (0+255),w,b
  5258  0001BE  0100               	movlb	0	; () banked
  5259  0001C0  2778               	addwf	__doprnt@width& (0+255),f,b
  5260  0001C2  0100               	movlb	0	; () banked
  5261  0001C4  516E               	movf	(??__doprnt+3)& (0+255),w,b
  5262  0001C6  0100               	movlb	0	; () banked
  5263  0001C8  2379               	addwfc	(__doprnt@width+1)& (0+255),f,b
  5264                           
  5265                           ; BSR set to: 0
  5266  0001CA  0100               	movlb	0	; () banked
  5267  0001CC  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5268  0001CE  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5272  0001D0  C067  FFF6         	movff	__doprnt@f,tblptrl
  5273  0001D4  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5274  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5275  0001D8  6AF8               	clrf	tblptru,c
  5276  0001DA                     	endif
  5277  0001DA                     	if	0	;tblptru may be non-zero
  5278  0001DA                     	endif
  5279  0001DA  0008               	tblrd		*
  5280  0001DC  50F5               	movf	tablat,w,c
  5281  0001DE  ECF5  F00D         	call	_isdigit
  5282  0001E2  A0D8               	btfss	status,0,c
  5283  0001E4  D134               	goto	l3230
  5284  0001E6  D7C3               	goto	l3170
  5285  0001E8                     l3178:
  5286                           
  5287                           ;doprnt.c: 718: case 'x':
  5288                           ;doprnt.c: 721: flag |= 0x80;
  5289  0001E8  0100               	movlb	0	; () banked
  5290  0001EA  8F77               	bsf	__doprnt@flag& (0+255),7,b
  5291                           
  5292                           ;doprnt.c: 723: break;
  5293  0001EC  D153               	goto	l347
  5294  0001EE                     l3180:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5298  0001EE  C069  FFD9         	movff	__doprnt@ap,fsr2l
  5299  0001F2  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  5300  0001F6  CFDF F06B          	movff	indf2,??__doprnt
  5301  0001FA  0E02               	movlw	2
  5302  0001FC  26DE               	addwf	postinc2,f,c
  5303  0001FE  CFDF F06C          	movff	indf2,??__doprnt+1
  5304  000202  0E00               	movlw	0
  5305  000204  22DD               	addwfc	postdec2,f,c
  5306  000206  C06B  FFD9         	movff	??__doprnt,fsr2l
  5307  00020A  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5308  00020E  CFDE F073          	movff	postinc2,__doprnt@cp
  5309  000212  CFDD F074          	movff	postdec2,__doprnt@cp+1
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;doprnt.c: 740: if(!cp)
  5313  000216  0100               	movlb	0	; () banked
  5314  000218  5173               	movf	__doprnt@cp& (0+255),w,b
  5315  00021A  0100               	movlb	0	; () banked
  5316  00021C  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  5317  00021E  A4D8               	btfss	status,2,c
  5318  000220  D006               	goto	l3186
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;doprnt.c: 741: cp = "(null)";
  5322  000222  0EF2               	movlw	low STR_28
  5323  000224  0100               	movlb	0	; () banked
  5324  000226  6F73               	movwf	__doprnt@cp& (0+255),b
  5325  000228  0EFF               	movlw	high STR_28
  5326  00022A  0100               	movlb	0	; () banked
  5327  00022C  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  5328  00022E                     l3186:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;doprnt.c: 745: len = 0;
  5332  00022E  0E00               	movlw	0
  5333  000230  0100               	movlb	0	; () banked
  5334  000232  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  5335  000234  0E00               	movlw	0
  5336  000236  6F71               	movwf	__doprnt@len& (0+255),b
  5337                           
  5338                           ;doprnt.c: 746: while(cp[len])
  5339  000238  D003               	goto	l3190
  5340  00023A                     l3188:
  5341                           
  5342                           ;doprnt.c: 747: len++;
  5343  00023A  0100               	movlb	0	; () banked
  5344  00023C  4B71               	infsnz	__doprnt@len& (0+255),f,b
  5345  00023E  2B72               	incf	(__doprnt@len+1)& (0+255),f,b
  5346  000240                     l3190:
  5347                           
  5348                           ; BSR set to: 0
  5349  000240  0100               	movlb	0	; () banked
  5350  000242  5171               	movf	__doprnt@len& (0+255),w,b
  5351  000244  0100               	movlb	0	; () banked
  5352  000246  2573               	addwf	__doprnt@cp& (0+255),w,b
  5353  000248  0100               	movlb	0	; () banked
  5354  00024A  6F6B               	movwf	??__doprnt& (0+255),b
  5355  00024C  0100               	movlb	0	; () banked
  5356  00024E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  5357  000250  0100               	movlb	0	; () banked
  5358  000252  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  5359  000254  0100               	movlb	0	; () banked
  5360  000256  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  5361  000258  C06B  FFF6         	movff	??__doprnt,tblptrl
  5362  00025C  C06C  FFF7         	movff	??__doprnt+1,tblptrh
  5363  000260  0E00               	movlw	low (__mediumconst shr (0+16))
  5364  000262  6EF8               	movwf	tblptru,c
  5365  000264  0E0F               	movlw	(high __ramtop+-1)
  5366  000266  64F7               	cpfsgt	tblptrh,c
  5367  000268  D003               	bra	u3287
  5368  00026A  0008               	tblrd		*
  5369  00026C  50F5               	movf	tablat,w,c
  5370  00026E  D005               	bra	u3280
  5371  000270                     u3287:
  5372  000270  CFF6 FFE1          	movff	tblptrl,fsr1l
  5373  000274  CFF7 FFE2          	movff	tblptrh,fsr1h
  5374  000278  50E7               	movf	indf1,w,c
  5375  00027A                     u3280:
  5376  00027A  0900               	iorlw	0
  5377  00027C  A4D8               	btfss	status,2,c
  5378  00027E  D7DD               	goto	l3188
  5379  000280                     l3192:
  5380                           
  5381                           ;doprnt.c: 757: if(width > len)
  5382  000280  0100               	movlb	0	; () banked
  5383  000282  5178               	movf	__doprnt@width& (0+255),w,b
  5384  000284  0100               	movlb	0	; () banked
  5385  000286  5D71               	subwf	__doprnt@len& (0+255),w,b
  5386  000288  0100               	movlb	0	; () banked
  5387  00028A  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  5388  00028C  0100               	movlb	0	; () banked
  5389  00028E  5972               	subwfb	(__doprnt@len+1)& (0+255),w,b
  5390  000290  B0D8               	btfsc	status,0,c
  5391  000292  D009               	goto	l3196
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;doprnt.c: 758: width -= len;
  5395  000294  0100               	movlb	0	; () banked
  5396  000296  5171               	movf	__doprnt@len& (0+255),w,b
  5397  000298  0100               	movlb	0	; () banked
  5398  00029A  5F78               	subwf	__doprnt@width& (0+255),f,b
  5399  00029C  0100               	movlb	0	; () banked
  5400  00029E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  5401  0002A0  0100               	movlb	0	; () banked
  5402  0002A2  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  5403  0002A4  D03E               	goto	l3206
  5404  0002A6                     l3196:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;doprnt.c: 759: else
  5408                           ;doprnt.c: 760: width = 0;
  5409  0002A6  0E00               	movlw	0
  5410  0002A8  0100               	movlb	0	; () banked
  5411  0002AA  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5412  0002AC  0E00               	movlw	0
  5413  0002AE  6F78               	movwf	__doprnt@width& (0+255),b
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;doprnt.c: 764: while(width--)
  5417  0002B0  D038               	goto	l3206
  5418  0002B2                     l3198:
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  5422  0002B2  0100               	movlb	0	; () banked
  5423  0002B4  EE20 F002          	lfsr	2,2
  5424  0002B8  5165               	movf	__doprnt@pb& (0+255),w,b
  5425  0002BA  26D9               	addwf	fsr2l,f,c
  5426  0002BC  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5427  0002BE  22DA               	addwfc	fsr2h,f,c
  5428  0002C0  50DE               	movf	postinc2,w,c
  5429  0002C2  10DE               	iorwf	postinc2,w,c
  5430  0002C4  B4D8               	btfsc	status,2,c
  5431  0002C6  D018               	goto	l3202
  5432                           
  5433                           ; BSR set to: 0
  5434  0002C8  0100               	movlb	0	; () banked
  5435  0002CA  EE20 F002          	lfsr	2,2
  5436  0002CE  5165               	movf	__doprnt@pb& (0+255),w,b
  5437  0002D0  26D9               	addwf	fsr2l,f,c
  5438  0002D2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5439  0002D4  22DA               	addwfc	fsr2h,f,c
  5440  0002D6  CFDE F06B          	movff	postinc2,??__doprnt
  5441  0002DA  CFDD F06C          	movff	postdec2,??__doprnt+1
  5442  0002DE  D801               	call	u3328
  5443  0002E0  D020               	goto	l3206
  5444  0002E2                     u3328:
  5445  0002E2  0005               	push	
  5446  0002E4  6EFA               	movwf	pclath,c
  5447  0002E6  0100               	movlb	0	; () banked
  5448  0002E8  516B               	movf	??__doprnt& (0+255),w,b
  5449  0002EA  6EFD               	movwf	tosl,c
  5450  0002EC  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5451  0002EE  6EFE               	movwf	tosh,c
  5452  0002F0  6AFF               	clrf	tosu,c
  5453  0002F2  50FA               	movf	pclath,w,c
  5454  0002F4  0E20               	movlw	32
  5455  0002F6  0012               	return		;indir
  5456  0002F8                     l3202:
  5457  0002F8  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5458  0002FC  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5459  000300  CFDE F06B          	movff	postinc2,??__doprnt
  5460  000304  CFDD F06C          	movff	postdec2,??__doprnt+1
  5461  000308  C06B  FFD9         	movff	??__doprnt,fsr2l
  5462  00030C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5463  000310  0E20               	movlw	32
  5464  000312  6EDF               	movwf	indf2,c
  5465  000314  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5466  000318  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5467  00031C  2ADE               	incf	postinc2,f,c
  5468  00031E  0E00               	movlw	0
  5469  000320  22DD               	addwfc	postdec2,f,c
  5470  000322                     l3206:
  5471  000322  0100               	movlb	0	; () banked
  5472  000324  0778               	decf	__doprnt@width& (0+255),f,b
  5473  000326  A0D8               	btfss	status,0,c
  5474  000328  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5475  00032A  0100               	movlb	0	; () banked
  5476  00032C  2978               	incf	__doprnt@width& (0+255),w,b
  5477  00032E  E1C1               	bnz	l3198
  5478  000330  0100               	movlb	0	; () banked
  5479  000332  2979               	incf	(__doprnt@width+1)& (0+255),w,b
  5480  000334  B4D8               	btfsc	status,2,c
  5481  000336  D060               	goto	l3220
  5482  000338  D7BC               	goto	l3198
  5483  00033A                     l3208:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  5487  00033A  0100               	movlb	0	; () banked
  5488  00033C  EE20 F002          	lfsr	2,2
  5489  000340  5165               	movf	__doprnt@pb& (0+255),w,b
  5490  000342  26D9               	addwf	fsr2l,f,c
  5491  000344  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5492  000346  22DA               	addwfc	fsr2h,f,c
  5493  000348  50DE               	movf	postinc2,w,c
  5494  00034A  10DE               	iorwf	postinc2,w,c
  5495  00034C  B4D8               	btfsc	status,2,c
  5496  00034E  D02C               	goto	l3214
  5497                           
  5498                           ; BSR set to: 0
  5499  000350  0100               	movlb	0	; () banked
  5500  000352  EE20 F002          	lfsr	2,2
  5501  000356  5165               	movf	__doprnt@pb& (0+255),w,b
  5502  000358  26D9               	addwf	fsr2l,f,c
  5503  00035A  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5504  00035C  22DA               	addwfc	fsr2h,f,c
  5505  00035E  CFDE F06B          	movff	postinc2,??__doprnt
  5506  000362  CFDD F06C          	movff	postdec2,??__doprnt+1
  5507  000366  D801               	call	u3358
  5508  000368  D01B               	goto	l3212
  5509  00036A                     u3358:
  5510  00036A  0005               	push	
  5511  00036C  6EFA               	movwf	pclath,c
  5512  00036E  0100               	movlb	0	; () banked
  5513  000370  516B               	movf	??__doprnt& (0+255),w,b
  5514  000372  6EFD               	movwf	tosl,c
  5515  000374  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5516  000376  6EFE               	movwf	tosh,c
  5517  000378  6AFF               	clrf	tosu,c
  5518  00037A  50FA               	movf	pclath,w,c
  5519  00037C  C073  FFF6         	movff	__doprnt@cp,tblptrl
  5520  000380  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  5521  000384  0E00               	movlw	low (__mediumconst shr (0+16))
  5522  000386  6EF8               	movwf	tblptru,c
  5523  000388  0E0F               	movlw	(high __ramtop+-1)
  5524  00038A  64F7               	cpfsgt	tblptrh,c
  5525  00038C  D003               	bra	u3367
  5526  00038E  0008               	tblrd		*
  5527  000390  50F5               	movf	tablat,w,c
  5528  000392  D005               	bra	u3360
  5529  000394                     u3367:
  5530  000394  CFF6 FFE1          	movff	tblptrl,fsr1l
  5531  000398  CFF7 FFE2          	movff	tblptrh,fsr1h
  5532  00039C  50E7               	movf	indf1,w,c
  5533  00039E                     u3360:
  5534  00039E  0012               	return		;indir
  5535  0003A0                     l3212:
  5536  0003A0  0100               	movlb	0	; () banked
  5537  0003A2  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  5538  0003A4  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  5539  0003A6  D028               	goto	l3220
  5540  0003A8                     l3214:
  5541                           
  5542                           ; BSR set to: 0
  5543  0003A8  C073  FFF6         	movff	__doprnt@cp,tblptrl
  5544  0003AC  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  5545  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  5546  0003B2  6EF8               	movwf	tblptru,c
  5547  0003B4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5548  0003B8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5549  0003BC  CFDE F06B          	movff	postinc2,??__doprnt
  5550  0003C0  CFDD F06C          	movff	postdec2,??__doprnt+1
  5551  0003C4  C06B  FFD9         	movff	??__doprnt,fsr2l
  5552  0003C8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5553  0003CC  0E0F               	movlw	(high __ramtop+-1)
  5554  0003CE  64F7               	cpfsgt	tblptrh,c
  5555  0003D0  D003               	bra	u3377
  5556  0003D2  0008               	tblrd		*
  5557  0003D4  50F5               	movf	tablat,w,c
  5558  0003D6  D005               	bra	u3370
  5559  0003D8                     u3377:
  5560  0003D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5561  0003DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5562  0003E0  50E7               	movf	indf1,w,c
  5563  0003E2                     u3370:
  5564  0003E2  6EDF               	movwf	indf2,c
  5565  0003E4  0100               	movlb	0	; () banked
  5566  0003E6  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  5567  0003E8  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  5568                           
  5569                           ; BSR set to: 0
  5570  0003EA  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5571  0003EE  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5572  0003F2  2ADE               	incf	postinc2,f,c
  5573  0003F4  0E00               	movlw	0
  5574  0003F6  22DD               	addwfc	postdec2,f,c
  5575  0003F8                     l3220:
  5576                           
  5577                           ; BSR set to: 0
  5578  0003F8  0100               	movlb	0	; () banked
  5579  0003FA  0771               	decf	__doprnt@len& (0+255),f,b
  5580  0003FC  A0D8               	btfss	status,0,c
  5581  0003FE  0772               	decf	(__doprnt@len+1)& (0+255),f,b
  5582  000400  0100               	movlb	0	; () banked
  5583  000402  2971               	incf	__doprnt@len& (0+255),w,b
  5584  000404  E19A               	bnz	l3208
  5585  000406  0100               	movlb	0	; () banked
  5586  000408  2972               	incf	(__doprnt@len+1)& (0+255),w,b
  5587  00040A  B4D8               	btfsc	status,2,c
  5588  00040C  D2A4               	goto	l3354
  5589  00040E  D795               	goto	l3208
  5590  000410                     l3222:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5594  000410  C069  FFD9         	movff	__doprnt@ap,fsr2l
  5595  000414  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  5596  000418  CFDF F06B          	movff	indf2,??__doprnt
  5597  00041C  0E02               	movlw	2
  5598  00041E  26DE               	addwf	postinc2,f,c
  5599  000420  CFDF F06C          	movff	indf2,??__doprnt+1
  5600  000424  0E00               	movlw	0
  5601  000426  22DD               	addwfc	postdec2,f,c
  5602  000428  C06B  FFD9         	movff	??__doprnt,fsr2l
  5603  00042C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5604  000430  50DF               	movf	indf2,w,c
  5605  000432  0100               	movlb	0	; () banked
  5606  000434  6F7A               	movwf	__doprnt@c& (0+255),b
  5607  000436                     l3224:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;doprnt.c: 805: cp = (char *)&c;
  5611  000436  0E7A               	movlw	low __doprnt@c
  5612  000438  0100               	movlb	0	; () banked
  5613  00043A  6F73               	movwf	__doprnt@cp& (0+255),b
  5614  00043C  0E00               	movlw	high __doprnt@c
  5615  00043E  0100               	movlb	0	; () banked
  5616  000440  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;doprnt.c: 806: len = 1;
  5620  000442  0E00               	movlw	0
  5621  000444  0100               	movlb	0	; () banked
  5622  000446  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  5623  000448  0E01               	movlw	1
  5624  00044A  6F71               	movwf	__doprnt@len& (0+255),b
  5625                           
  5626                           ;doprnt.c: 807: goto dostring;
  5627  00044C  D719               	goto	l3192
  5628  00044E                     l3230:
  5629  00044E  C067  FFF6         	movff	__doprnt@f,tblptrl
  5630  000452  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5631  000456  0100               	movlb	0	; () banked
  5632  000458  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5633  00045A  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5634  00045C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5635  00045C  6AF8               	clrf	tblptru,c
  5636  00045E                     	endif
  5637  00045E                     	if	0	;tblptru may be non-zero
  5638  00045E                     	endif
  5639  00045E  0008               	tblrd		*
  5640  000460  CFF5 F07A          	movff	tablat,__doprnt@c
  5641  000464  0100               	movlb	0	; () banked
  5642  000466  517A               	movf	__doprnt@c& (0+255),w,b
  5643                           
  5644                           ; Switch size 1, requested type "space"
  5645                           ; Number of cases is 7, Range of values is 0 to 120
  5646                           ; switch strategies available:
  5647                           ; Name         Instructions Cycles
  5648                           ; simple_byte           22    12 (average)
  5649                           ;	Chosen strategy is simple_byte
  5650  000468  0A00               	xorlw	0	; case 0
  5651  00046A  B4D8               	btfsc	status,2,c
  5652  00046C  D284               	goto	l3356
  5653  00046E  0A58               	xorlw	88	; case 88
  5654  000470  B4D8               	btfsc	status,2,c
  5655  000472  D6BA               	goto	l3178
  5656  000474  0A3B               	xorlw	59	; case 99
  5657  000476  B4D8               	btfsc	status,2,c
  5658  000478  D7CB               	goto	l3222
  5659  00047A  0A07               	xorlw	7	; case 100
  5660  00047C  B4D8               	btfsc	status,2,c
  5661  00047E  D00A               	goto	l347
  5662  000480  0A0D               	xorlw	13	; case 105
  5663  000482  B4D8               	btfsc	status,2,c
  5664  000484  D007               	goto	l347
  5665  000486  0A1A               	xorlw	26	; case 115
  5666  000488  B4D8               	btfsc	status,2,c
  5667  00048A  D6B1               	goto	l3180
  5668  00048C  0A0B               	xorlw	11	; case 120
  5669  00048E  B4D8               	btfsc	status,2,c
  5670  000490  D6AB               	goto	l3178
  5671  000492  D7D1               	goto	l3224
  5672  000494                     l347:
  5673                           
  5674                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5675  000494  0100               	movlb	0	; () banked
  5676  000496  BF77               	btfsc	__doprnt@flag& (0+255),7,b
  5677  000498  D020               	goto	l3240
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;doprnt.c: 1253: {
  5681                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5682  00049A  C069  FFD9         	movff	__doprnt@ap,fsr2l
  5683  00049E  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  5684  0004A2  CFDF F06B          	movff	indf2,??__doprnt
  5685  0004A6  0E02               	movlw	2
  5686  0004A8  26DE               	addwf	postinc2,f,c
  5687  0004AA  CFDF F06C          	movff	indf2,??__doprnt+1
  5688  0004AE  0E00               	movlw	0
  5689  0004B0  22DD               	addwfc	postdec2,f,c
  5690  0004B2  C06B  FFD9         	movff	??__doprnt,fsr2l
  5691  0004B6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5692  0004BA  CFDE F075          	movff	postinc2,__doprnt@val
  5693  0004BE  CFDD F076          	movff	postdec2,__doprnt@val+1
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;doprnt.c: 1261: if((int)val < 0) {
  5697  0004C2  0100               	movlb	0	; () banked
  5698  0004C4  AF76               	btfss	(__doprnt@val+1)& (0+255),7,b
  5699  0004C6  D060               	goto	l3272
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;doprnt.c: 1262: flag |= 0x03;
  5703  0004C8  0E03               	movlw	3
  5704  0004CA  0100               	movlb	0	; () banked
  5705  0004CC  1377               	iorwf	__doprnt@flag& (0+255),f,b
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;doprnt.c: 1263: val = -val;
  5709  0004CE  0100               	movlb	0	; () banked
  5710  0004D0  6D75               	negf	__doprnt@val& (0+255),b
  5711  0004D2  1F76               	comf	(__doprnt@val+1)& (0+255),f,b
  5712  0004D4  B0D8               	btfsc	status,0,c
  5713  0004D6  2B76               	incf	(__doprnt@val+1)& (0+255),f,b
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;doprnt.c: 1264: }
  5717                           ;doprnt.c: 1266: }
  5718  0004D8  D057               	goto	l3272
  5719  0004DA                     l3240:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;doprnt.c: 1268: else
  5723                           ;doprnt.c: 1273: {
  5724                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5725  0004DA  C069  FFD9         	movff	__doprnt@ap,fsr2l
  5726  0004DE  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  5727  0004E2  CFDF F06B          	movff	indf2,??__doprnt
  5728  0004E6  0E02               	movlw	2
  5729  0004E8  26DE               	addwf	postinc2,f,c
  5730  0004EA  CFDF F06C          	movff	indf2,??__doprnt+1
  5731  0004EE  0E00               	movlw	0
  5732  0004F0  22DD               	addwfc	postdec2,f,c
  5733  0004F2  C06B  FFD9         	movff	??__doprnt,fsr2l
  5734  0004F6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5735  0004FA  CFDE F075          	movff	postinc2,__doprnt@val
  5736  0004FE  CFDD F076          	movff	postdec2,__doprnt@val+1
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;doprnt.c: 1287: }
  5740                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5741  000502  D042               	goto	l3272
  5742  000504                     l3242:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5746  000504  0E01               	movlw	1
  5747  000506  0100               	movlb	0	; () banked
  5748  000508  6F7A               	movwf	__doprnt@c& (0+255),b
  5749  00050A                     l3244:
  5750                           
  5751                           ; BSR set to: 0
  5752  00050A  0E05               	movlw	5
  5753  00050C  0100               	movlb	0	; () banked
  5754  00050E  197A               	xorwf	__doprnt@c& (0+255),w,b
  5755  000510  B4D8               	btfsc	status,2,c
  5756  000512  D043               	goto	l3274
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;doprnt.c: 1306: if(val < dpowers[c])
  5760                           
  5761                           ; BSR set to: 0
  5762                           
  5763                           ; BSR set to: 0
  5764  000514  0100               	movlb	0	; () banked
  5765  000516  517A               	movf	__doprnt@c& (0+255),w,b
  5766  000518  0D02               	mullw	2
  5767  00051A  0E5B               	movlw	low _dpowers
  5768  00051C  24F3               	addwf	prodl,w,c
  5769  00051E  6EF6               	movwf	tblptrl,c
  5770  000520  0EFE               	movlw	high _dpowers
  5771  000522  20F4               	addwfc	prodh,w,c
  5772  000524  6EF7               	movwf	tblptrh,c
  5773  000526                     	if	1	;There are 3 active tblptr bytes
  5774  000526  6AF8               	clrf	tblptru,c
  5775  000528  0E00               	movlw	low (__mediumconst shr (0+16))
  5776  00052A  22F8               	addwfc	tblptru,f,c
  5777  00052C                     	endif
  5778  00052C  0009               	tblrd		*+
  5779  00052E  50F5               	movf	tablat,w,c
  5780  000530  0100               	movlb	0	; () banked
  5781  000532  5D75               	subwf	__doprnt@val& (0+255),w,b
  5782  000534  0009               	tblrd		*+
  5783  000536  50F5               	movf	tablat,w,c
  5784  000538  0100               	movlb	0	; () banked
  5785  00053A  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  5786  00053C  A0D8               	btfss	status,0,c
  5787  00053E  D02D               	goto	l3274
  5788                           
  5789                           ; BSR set to: 0
  5790                           
  5791                           ; BSR set to: 0
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;doprnt.c: 1307: break;
  5795  000540  0100               	movlb	0	; () banked
  5796  000542  2B7A               	incf	__doprnt@c& (0+255),f,b
  5797  000544  D7E2               	goto	l3244
  5798  000546                     l3256:
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5802  000546  0E01               	movlw	1
  5803  000548  0100               	movlb	0	; () banked
  5804  00054A  6F7A               	movwf	__doprnt@c& (0+255),b
  5805  00054C                     l3258:
  5806                           
  5807                           ; BSR set to: 0
  5808  00054C  0E04               	movlw	4
  5809  00054E  0100               	movlb	0	; () banked
  5810  000550  197A               	xorwf	__doprnt@c& (0+255),w,b
  5811  000552  B4D8               	btfsc	status,2,c
  5812  000554  D022               	goto	l3274
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5816                           
  5817                           ; BSR set to: 0
  5818                           
  5819                           ; BSR set to: 0
  5820  000556  0100               	movlb	0	; () banked
  5821  000558  517A               	movf	__doprnt@c& (0+255),w,b
  5822  00055A  0D02               	mullw	2
  5823  00055C  0E65               	movlw	low _hexpowers
  5824  00055E  24F3               	addwf	prodl,w,c
  5825  000560  6EF6               	movwf	tblptrl,c
  5826  000562  0EFE               	movlw	high _hexpowers
  5827  000564  20F4               	addwfc	prodh,w,c
  5828  000566  6EF7               	movwf	tblptrh,c
  5829  000568                     	if	1	;There are 3 active tblptr bytes
  5830  000568  6AF8               	clrf	tblptru,c
  5831  00056A  0E00               	movlw	low (__mediumconst shr (0+16))
  5832  00056C  22F8               	addwfc	tblptru,f,c
  5833  00056E                     	endif
  5834  00056E  0009               	tblrd		*+
  5835  000570  50F5               	movf	tablat,w,c
  5836  000572  0100               	movlb	0	; () banked
  5837  000574  5D75               	subwf	__doprnt@val& (0+255),w,b
  5838  000576  0009               	tblrd		*+
  5839  000578  50F5               	movf	tablat,w,c
  5840  00057A  0100               	movlb	0	; () banked
  5841  00057C  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  5842  00057E  A0D8               	btfss	status,0,c
  5843  000580  D00C               	goto	l3274
  5844                           
  5845                           ; BSR set to: 0
  5846                           
  5847                           ; BSR set to: 0
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;doprnt.c: 1318: break;
  5851  000582  0100               	movlb	0	; () banked
  5852  000584  2B7A               	incf	__doprnt@c& (0+255),f,b
  5853  000586  D7E2               	goto	l3258
  5854  000588                     l3272:
  5855                           
  5856                           ; BSR set to: 0
  5857  000588  0100               	movlb	0	; () banked
  5858  00058A  5177               	movf	__doprnt@flag& (0+255),w,b
  5859  00058C  0B80               	andlw	128
  5860                           
  5861                           ; Switch size 1, requested type "space"
  5862                           ; Number of cases is 2, Range of values is 0 to 128
  5863                           ; switch strategies available:
  5864                           ; Name         Instructions Cycles
  5865                           ; simple_byte            7     4 (average)
  5866                           ;	Chosen strategy is simple_byte
  5867  00058E  0A00               	xorlw	0	; case 0
  5868  000590  B4D8               	btfsc	status,2,c
  5869  000592  D7B8               	goto	l3242
  5870  000594  0A80               	xorlw	128	; case 128
  5871  000596  B4D8               	btfsc	status,2,c
  5872  000598  D7D6               	goto	l3256
  5873  00059A                     l3274:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5877  00059A  0100               	movlb	0	; () banked
  5878  00059C  5178               	movf	__doprnt@width& (0+255),w,b
  5879  00059E  0100               	movlb	0	; () banked
  5880  0005A0  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5881  0005A2  B4D8               	btfsc	status,2,c
  5882  0005A4  D00B               	goto	l3280
  5883                           
  5884                           ; BSR set to: 0
  5885  0005A6  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5886  0005AA  0E03               	movlw	3
  5887  0005AC  0100               	movlb	0	; () banked
  5888  0005AE  176B               	andwf	??__doprnt& (0+255),f,b
  5889  0005B0  B4D8               	btfsc	status,2,c
  5890  0005B2  D004               	goto	l3280
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;doprnt.c: 1346: width--;
  5894  0005B4  0100               	movlb	0	; () banked
  5895  0005B6  0778               	decf	__doprnt@width& (0+255),f,b
  5896  0005B8  A0D8               	btfss	status,0,c
  5897  0005BA  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5898  0005BC                     l3280:
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;doprnt.c: 1381: if(width > c)
  5902  0005BC  0E80               	movlw	128
  5903  0005BE  0100               	movlb	0	; () banked
  5904  0005C0  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5905  0005C2  0E7F               	movlw	127
  5906  0005C4  0100               	movlb	0	; () banked
  5907  0005C6  6F6B               	movwf	??__doprnt& (0+255),b
  5908  0005C8  0100               	movlb	0	; () banked
  5909  0005CA  5178               	movf	__doprnt@width& (0+255),w,b
  5910  0005CC  0100               	movlb	0	; () banked
  5911  0005CE  5D7A               	subwf	__doprnt@c& (0+255),w,b
  5912  0005D0  0100               	movlb	0	; () banked
  5913  0005D2  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  5914  0005D4  0A80               	xorlw	128
  5915  0005D6  0100               	movlb	0	; () banked
  5916  0005D8  596B               	subwfb	??__doprnt& (0+255),w,b
  5917  0005DA  B0D8               	btfsc	status,0,c
  5918  0005DC  D00B               	goto	l3284
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;doprnt.c: 1382: width -= c;
  5922  0005DE  0100               	movlb	0	; () banked
  5923  0005E0  517A               	movf	__doprnt@c& (0+255),w,b
  5924  0005E2  0100               	movlb	0	; () banked
  5925  0005E4  5F78               	subwf	__doprnt@width& (0+255),f,b
  5926  0005E6  0E00               	movlw	0
  5927  0005E8  0100               	movlb	0	; () banked
  5928  0005EA  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5929  0005EC  0EFF               	movlw	255
  5930  0005EE  0100               	movlb	0	; () banked
  5931  0005F0  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  5932  0005F2  D005               	goto	l3286
  5933  0005F4                     l3284:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;doprnt.c: 1383: else
  5937                           ;doprnt.c: 1384: width = 0;
  5938  0005F4  0E00               	movlw	0
  5939  0005F6  0100               	movlb	0	; () banked
  5940  0005F8  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5941  0005FA  0E00               	movlw	0
  5942  0005FC  6F78               	movwf	__doprnt@width& (0+255),b
  5943  0005FE                     l3286:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;doprnt.c: 1387: if(flag & 0x04) {
  5947  0005FE  0100               	movlb	0	; () banked
  5948  000600  A577               	btfss	__doprnt@flag& (0+255),2,b
  5949  000602  D082               	goto	l3310
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;doprnt.c: 1392: if(flag & 0x03)
  5953  000604  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5954  000608  0E03               	movlw	3
  5955  00060A  0100               	movlb	0	; () banked
  5956  00060C  176B               	andwf	??__doprnt& (0+255),f,b
  5957  00060E  B4D8               	btfsc	status,2,c
  5958  000610  D038               	goto	l3298
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5962  000612  0100               	movlb	0	; () banked
  5963  000614  EE20 F002          	lfsr	2,2
  5964  000618  5165               	movf	__doprnt@pb& (0+255),w,b
  5965  00061A  26D9               	addwf	fsr2l,f,c
  5966  00061C  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5967  00061E  22DA               	addwfc	fsr2h,f,c
  5968  000620  50DE               	movf	postinc2,w,c
  5969  000622  10DE               	iorwf	postinc2,w,c
  5970  000624  B4D8               	btfsc	status,2,c
  5971  000626  D018               	goto	l3294
  5972                           
  5973                           ; BSR set to: 0
  5974  000628  0100               	movlb	0	; () banked
  5975  00062A  EE20 F002          	lfsr	2,2
  5976  00062E  5165               	movf	__doprnt@pb& (0+255),w,b
  5977  000630  26D9               	addwf	fsr2l,f,c
  5978  000632  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5979  000634  22DA               	addwfc	fsr2h,f,c
  5980  000636  CFDE F06B          	movff	postinc2,??__doprnt
  5981  00063A  CFDD F06C          	movff	postdec2,??__doprnt+1
  5982  00063E  D801               	call	u3538
  5983  000640  D020               	goto	l3298
  5984  000642                     u3538:
  5985  000642  0005               	push	
  5986  000644  6EFA               	movwf	pclath,c
  5987  000646  0100               	movlb	0	; () banked
  5988  000648  516B               	movf	??__doprnt& (0+255),w,b
  5989  00064A  6EFD               	movwf	tosl,c
  5990  00064C  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5991  00064E  6EFE               	movwf	tosh,c
  5992  000650  6AFF               	clrf	tosu,c
  5993  000652  50FA               	movf	pclath,w,c
  5994  000654  0E2D               	movlw	45
  5995  000656  0012               	return		;indir
  5996  000658                     l3294:
  5997  000658  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5998  00065C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5999  000660  CFDE F06B          	movff	postinc2,??__doprnt
  6000  000664  CFDD F06C          	movff	postdec2,??__doprnt+1
  6001  000668  C06B  FFD9         	movff	??__doprnt,fsr2l
  6002  00066C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  6003  000670  0E2D               	movlw	45
  6004  000672  6EDF               	movwf	indf2,c
  6005  000674  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6006  000678  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6007  00067C  2ADE               	incf	postinc2,f,c
  6008  00067E  0E00               	movlw	0
  6009  000680  22DD               	addwfc	postdec2,f,c
  6010  000682                     l3298:
  6011                           
  6012                           ;doprnt.c: 1415: if(width)
  6013  000682  0100               	movlb	0	; () banked
  6014  000684  5178               	movf	__doprnt@width& (0+255),w,b
  6015  000686  0100               	movlb	0	; () banked
  6016  000688  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  6017  00068A  B4D8               	btfsc	status,2,c
  6018  00068C  D0C4               	goto	l3332
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  6022                           
  6023                           ; BSR set to: 0
  6024                           
  6025                           ;doprnt.c: 1416: do
  6026  00068E  0100               	movlb	0	; () banked
  6027  000690  EE20 F002          	lfsr	2,2
  6028  000694  5165               	movf	__doprnt@pb& (0+255),w,b
  6029  000696  26D9               	addwf	fsr2l,f,c
  6030  000698  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6031  00069A  22DA               	addwfc	fsr2h,f,c
  6032  00069C  50DE               	movf	postinc2,w,c
  6033  00069E  10DE               	iorwf	postinc2,w,c
  6034  0006A0  B4D8               	btfsc	status,2,c
  6035  0006A2  D018               	goto	l3304
  6036                           
  6037                           ; BSR set to: 0
  6038  0006A4  0100               	movlb	0	; () banked
  6039  0006A6  EE20 F002          	lfsr	2,2
  6040  0006AA  5165               	movf	__doprnt@pb& (0+255),w,b
  6041  0006AC  26D9               	addwf	fsr2l,f,c
  6042  0006AE  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6043  0006B0  22DA               	addwfc	fsr2h,f,c
  6044  0006B2  CFDE F06B          	movff	postinc2,??__doprnt
  6045  0006B6  CFDD F06C          	movff	postdec2,??__doprnt+1
  6046  0006BA  D801               	call	u3568
  6047  0006BC  D020               	goto	l3308
  6048  0006BE                     u3568:
  6049  0006BE  0005               	push	
  6050  0006C0  6EFA               	movwf	pclath,c
  6051  0006C2  0100               	movlb	0	; () banked
  6052  0006C4  516B               	movf	??__doprnt& (0+255),w,b
  6053  0006C6  6EFD               	movwf	tosl,c
  6054  0006C8  516C               	movf	(??__doprnt+1)& (0+255),w,b
  6055  0006CA  6EFE               	movwf	tosh,c
  6056  0006CC  6AFF               	clrf	tosu,c
  6057  0006CE  50FA               	movf	pclath,w,c
  6058  0006D0  0E30               	movlw	48
  6059  0006D2  0012               	return		;indir
  6060  0006D4                     l3304:
  6061  0006D4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6062  0006D8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6063  0006DC  CFDE F06B          	movff	postinc2,??__doprnt
  6064  0006E0  CFDD F06C          	movff	postdec2,??__doprnt+1
  6065  0006E4  C06B  FFD9         	movff	??__doprnt,fsr2l
  6066  0006E8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  6067  0006EC  0E30               	movlw	48
  6068  0006EE  6EDF               	movwf	indf2,c
  6069  0006F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6070  0006F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6071  0006F8  2ADE               	incf	postinc2,f,c
  6072  0006FA  0E00               	movlw	0
  6073  0006FC  22DD               	addwfc	postdec2,f,c
  6074  0006FE                     l3308:
  6075                           
  6076                           ;doprnt.c: 1418: while(--width);
  6077  0006FE  0100               	movlb	0	; () banked
  6078  000700  0778               	decf	__doprnt@width& (0+255),f,b
  6079  000702  A0D8               	btfss	status,0,c
  6080  000704  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  6081  000706  D7BD               	goto	l3298
  6082  000708                     l3310:
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;doprnt.c: 1422: {
  6086                           ;doprnt.c: 1424: if(width
  6087                           ;doprnt.c: 1428: )
  6088  000708  0100               	movlb	0	; () banked
  6089  00070A  5178               	movf	__doprnt@width& (0+255),w,b
  6090  00070C  0100               	movlb	0	; () banked
  6091  00070E  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  6092  000710  B4D8               	btfsc	status,2,c
  6093  000712  D042               	goto	l3322
  6094  000714                     l3312:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  6098  000714  0100               	movlb	0	; () banked
  6099  000716  EE20 F002          	lfsr	2,2
  6100  00071A  5165               	movf	__doprnt@pb& (0+255),w,b
  6101  00071C  26D9               	addwf	fsr2l,f,c
  6102  00071E  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6103  000720  22DA               	addwfc	fsr2h,f,c
  6104  000722  50DE               	movf	postinc2,w,c
  6105  000724  10DE               	iorwf	postinc2,w,c
  6106  000726  B4D8               	btfsc	status,2,c
  6107  000728  D018               	goto	l3316
  6108                           
  6109                           ; BSR set to: 0
  6110  00072A  0100               	movlb	0	; () banked
  6111  00072C  EE20 F002          	lfsr	2,2
  6112  000730  5165               	movf	__doprnt@pb& (0+255),w,b
  6113  000732  26D9               	addwf	fsr2l,f,c
  6114  000734  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6115  000736  22DA               	addwfc	fsr2h,f,c
  6116  000738  CFDE F06B          	movff	postinc2,??__doprnt
  6117  00073C  CFDD F06C          	movff	postdec2,??__doprnt+1
  6118  000740  D801               	call	u3608
  6119  000742  D020               	goto	l3320
  6120  000744                     u3608:
  6121  000744  0005               	push	
  6122  000746  6EFA               	movwf	pclath,c
  6123  000748  0100               	movlb	0	; () banked
  6124  00074A  516B               	movf	??__doprnt& (0+255),w,b
  6125  00074C  6EFD               	movwf	tosl,c
  6126  00074E  516C               	movf	(??__doprnt+1)& (0+255),w,b
  6127  000750  6EFE               	movwf	tosh,c
  6128  000752  6AFF               	clrf	tosu,c
  6129  000754  50FA               	movf	pclath,w,c
  6130  000756  0E20               	movlw	32
  6131  000758  0012               	return		;indir
  6132  00075A                     l3316:
  6133  00075A  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6134  00075E  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6135  000762  CFDE F06B          	movff	postinc2,??__doprnt
  6136  000766  CFDD F06C          	movff	postdec2,??__doprnt+1
  6137  00076A  C06B  FFD9         	movff	??__doprnt,fsr2l
  6138  00076E  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  6139  000772  0E20               	movlw	32
  6140  000774  6EDF               	movwf	indf2,c
  6141  000776  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6142  00077A  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6143  00077E  2ADE               	incf	postinc2,f,c
  6144  000780  0E00               	movlw	0
  6145  000782  22DD               	addwfc	postdec2,f,c
  6146  000784                     l3320:
  6147                           
  6148                           ;doprnt.c: 1431: while(--width);
  6149  000784  0100               	movlb	0	; () banked
  6150  000786  0778               	decf	__doprnt@width& (0+255),f,b
  6151  000788  A0D8               	btfss	status,0,c
  6152  00078A  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  6153  00078C  0100               	movlb	0	; () banked
  6154  00078E  5178               	movf	__doprnt@width& (0+255),w,b
  6155  000790  0100               	movlb	0	; () banked
  6156  000792  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  6157  000794  A4D8               	btfss	status,2,c
  6158  000796  D7BE               	goto	l3312
  6159  000798                     l3322:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;doprnt.c: 1438: if(flag & 0x03)
  6163  000798  C077  F06B         	movff	__doprnt@flag,??__doprnt
  6164  00079C  0E03               	movlw	3
  6165  00079E  0100               	movlb	0	; () banked
  6166  0007A0  176B               	andwf	??__doprnt& (0+255),f,b
  6167  0007A2  B4D8               	btfsc	status,2,c
  6168  0007A4  D038               	goto	l3332
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  6172  0007A6  0100               	movlb	0	; () banked
  6173  0007A8  EE20 F002          	lfsr	2,2
  6174  0007AC  5165               	movf	__doprnt@pb& (0+255),w,b
  6175  0007AE  26D9               	addwf	fsr2l,f,c
  6176  0007B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6177  0007B2  22DA               	addwfc	fsr2h,f,c
  6178  0007B4  50DE               	movf	postinc2,w,c
  6179  0007B6  10DE               	iorwf	postinc2,w,c
  6180  0007B8  B4D8               	btfsc	status,2,c
  6181  0007BA  D018               	goto	l3328
  6182                           
  6183                           ; BSR set to: 0
  6184  0007BC  0100               	movlb	0	; () banked
  6185  0007BE  EE20 F002          	lfsr	2,2
  6186  0007C2  5165               	movf	__doprnt@pb& (0+255),w,b
  6187  0007C4  26D9               	addwf	fsr2l,f,c
  6188  0007C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6189  0007C8  22DA               	addwfc	fsr2h,f,c
  6190  0007CA  CFDE F06B          	movff	postinc2,??__doprnt
  6191  0007CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  6192  0007D2  D801               	call	u3648
  6193  0007D4  D020               	goto	l3332
  6194  0007D6                     u3648:
  6195  0007D6  0005               	push	
  6196  0007D8  6EFA               	movwf	pclath,c
  6197  0007DA  0100               	movlb	0	; () banked
  6198  0007DC  516B               	movf	??__doprnt& (0+255),w,b
  6199  0007DE  6EFD               	movwf	tosl,c
  6200  0007E0  516C               	movf	(??__doprnt+1)& (0+255),w,b
  6201  0007E2  6EFE               	movwf	tosh,c
  6202  0007E4  6AFF               	clrf	tosu,c
  6203  0007E6  50FA               	movf	pclath,w,c
  6204  0007E8  0E2D               	movlw	45
  6205  0007EA  0012               	return		;indir
  6206  0007EC                     l3328:
  6207  0007EC  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6208  0007F0  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6209  0007F4  CFDE F06B          	movff	postinc2,??__doprnt
  6210  0007F8  CFDD F06C          	movff	postdec2,??__doprnt+1
  6211  0007FC  C06B  FFD9         	movff	??__doprnt,fsr2l
  6212  000800  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  6213  000804  0E2D               	movlw	45
  6214  000806  6EDF               	movwf	indf2,c
  6215  000808  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6216  00080C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6217  000810  2ADE               	incf	postinc2,f,c
  6218  000812  0E00               	movlw	0
  6219  000814  22DD               	addwfc	postdec2,f,c
  6220  000816                     l3332:
  6221                           
  6222                           ;doprnt.c: 1469: }
  6223                           ;doprnt.c: 1472: prec = c;
  6224  000816  C07A  F070         	movff	__doprnt@c,__doprnt@prec
  6225                           
  6226                           ;doprnt.c: 1474: while(prec--) {
  6227  00081A  D097               	goto	l3352
  6228  00081C                     l3334:
  6229                           
  6230                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6231  00081C  0100               	movlb	0	; () banked
  6232  00081E  5170               	movf	__doprnt@prec& (0+255),w,b
  6233  000820  0D02               	mullw	2
  6234  000822  0E5B               	movlw	low _dpowers
  6235  000824  24F3               	addwf	prodl,w,c
  6236  000826  6EF6               	movwf	tblptrl,c
  6237  000828  0EFE               	movlw	high _dpowers
  6238  00082A  20F4               	addwfc	prodh,w,c
  6239  00082C  6EF7               	movwf	tblptrh,c
  6240  00082E                     	if	1	;There are 3 active tblptr bytes
  6241  00082E  6AF8               	clrf	tblptru,c
  6242  000830  0E00               	movlw	low (__mediumconst shr (0+16))
  6243  000832  22F8               	addwfc	tblptru,f,c
  6244  000834                     	endif
  6245  000834  0009               	tblrd		*+
  6246  000836  CFF5 F028          	movff	tablat,___lwdiv@divisor
  6247  00083A  000A               	tblrd		*-
  6248  00083C  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  6249  000840  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  6250  000844  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  6251  000848  EC38  F00C         	call	___lwdiv
  6252  00084C  C026  F060         	movff	?___lwdiv,___lwmod@dividend
  6253  000850  C027  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
  6254  000854  0E00               	movlw	0
  6255  000856  0100               	movlb	0	; () banked
  6256  000858  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  6257  00085A  0E0A               	movlw	10
  6258  00085C  6F62               	movwf	___lwmod@divisor& (0+255),b
  6259  00085E  EC60  F00B         	call	___lwmod	;wreg free
  6260  000862  0100               	movlb	0	; () banked
  6261  000864  5160               	movf	?___lwmod& (0+255),w,b
  6262  000866  0F30               	addlw	48
  6263  000868  0100               	movlb	0	; () banked
  6264  00086A  6F7A               	movwf	__doprnt@c& (0+255),b
  6265                           
  6266                           ;doprnt.c: 1491: break;
  6267  00086C  D035               	goto	l3344
  6268  00086E                     l3336:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;doprnt.c: 1499: {
  6272                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6273  00086E  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  6274  000872  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  6275  000876  0100               	movlb	0	; () banked
  6276  000878  5170               	movf	__doprnt@prec& (0+255),w,b
  6277  00087A  0D02               	mullw	2
  6278  00087C  0E65               	movlw	low _hexpowers
  6279  00087E  24F3               	addwf	prodl,w,c
  6280  000880  6EF6               	movwf	tblptrl,c
  6281  000882  0EFE               	movlw	high _hexpowers
  6282  000884  20F4               	addwfc	prodh,w,c
  6283  000886  6EF7               	movwf	tblptrh,c
  6284  000888                     	if	1	;There are 3 active tblptr bytes
  6285  000888  6AF8               	clrf	tblptru,c
  6286  00088A  0E00               	movlw	low (__mediumconst shr (0+16))
  6287  00088C  22F8               	addwfc	tblptru,f,c
  6288  00088E                     	endif
  6289  00088E  0009               	tblrd		*+
  6290  000890  CFF5 F028          	movff	tablat,___lwdiv@divisor
  6291  000894  000A               	tblrd		*-
  6292  000896  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  6293  00089A  EC38  F00C         	call	___lwdiv	;wreg free
  6294  00089E  5026               	movf	?___lwdiv,w,c
  6295  0008A0  0B0F               	andlw	15
  6296  0008A2  0100               	movlb	0	; () banked
  6297  0008A4  6F6F               	movwf	__doprnt@idx& (0+255),b
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  6301  0008A6  0100               	movlb	0	; () banked
  6302  0008A8  516F               	movf	__doprnt@idx& (0+255),w,b
  6303  0008AA  0D01               	mullw	1
  6304  0008AC  0E31               	movlw	low STR_29
  6305  0008AE  24F3               	addwf	prodl,w,c
  6306  0008B0  6EF6               	movwf	tblptrl,c
  6307  0008B2  0EFF               	movlw	high STR_29
  6308  0008B4  20F4               	addwfc	prodh,w,c
  6309  0008B6  6EF7               	movwf	tblptrh,c
  6310  0008B8                     	if	1	;There are 3 active tblptr bytes
  6311  0008B8  6AF8               	clrf	tblptru,c
  6312  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  6313  0008BC  22F8               	addwfc	tblptru,f,c
  6314  0008BE                     	endif
  6315  0008BE  0008               	tblrd		*
  6316  0008C0  CFF5 F07A          	movff	tablat,__doprnt@c
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;doprnt.c: 1523: }
  6320                           
  6321                           ;doprnt.c: 1508: }
  6322                           ;doprnt.c: 1510: break;
  6323  0008C4  D009               	goto	l3344
  6324  0008C6                     l3342:
  6325  0008C6  0100               	movlb	0	; () banked
  6326  0008C8  5177               	movf	__doprnt@flag& (0+255),w,b
  6327  0008CA  0B80               	andlw	128
  6328                           
  6329                           ; Switch size 1, requested type "space"
  6330                           ; Number of cases is 2, Range of values is 0 to 128
  6331                           ; switch strategies available:
  6332                           ; Name         Instructions Cycles
  6333                           ; simple_byte            7     4 (average)
  6334                           ;	Chosen strategy is simple_byte
  6335  0008CC  0A00               	xorlw	0	; case 0
  6336  0008CE  B4D8               	btfsc	status,2,c
  6337  0008D0  D7A5               	goto	l3334
  6338  0008D2  0A80               	xorlw	128	; case 128
  6339  0008D4  B4D8               	btfsc	status,2,c
  6340  0008D6  D7CB               	goto	l3336
  6341  0008D8                     l3344:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  6345  0008D8  0100               	movlb	0	; () banked
  6346  0008DA  EE20 F002          	lfsr	2,2
  6347  0008DE  5165               	movf	__doprnt@pb& (0+255),w,b
  6348  0008E0  26D9               	addwf	fsr2l,f,c
  6349  0008E2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6350  0008E4  22DA               	addwfc	fsr2h,f,c
  6351  0008E6  50DE               	movf	postinc2,w,c
  6352  0008E8  10DE               	iorwf	postinc2,w,c
  6353  0008EA  B4D8               	btfsc	status,2,c
  6354  0008EC  D019               	goto	l3348
  6355                           
  6356                           ; BSR set to: 0
  6357  0008EE  0100               	movlb	0	; () banked
  6358  0008F0  EE20 F002          	lfsr	2,2
  6359  0008F4  5165               	movf	__doprnt@pb& (0+255),w,b
  6360  0008F6  26D9               	addwf	fsr2l,f,c
  6361  0008F8  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  6362  0008FA  22DA               	addwfc	fsr2h,f,c
  6363  0008FC  CFDE F06B          	movff	postinc2,??__doprnt
  6364  000900  CFDD F06C          	movff	postdec2,??__doprnt+1
  6365  000904  D801               	call	u3668
  6366  000906  D021               	goto	l3352
  6367  000908                     u3668:
  6368  000908  0005               	push	
  6369  00090A  6EFA               	movwf	pclath,c
  6370  00090C  0100               	movlb	0	; () banked
  6371  00090E  516B               	movf	??__doprnt& (0+255),w,b
  6372  000910  6EFD               	movwf	tosl,c
  6373  000912  516C               	movf	(??__doprnt+1)& (0+255),w,b
  6374  000914  6EFE               	movwf	tosh,c
  6375  000916  6AFF               	clrf	tosu,c
  6376  000918  50FA               	movf	pclath,w,c
  6377  00091A  0100               	movlb	0	; () banked
  6378  00091C  517A               	movf	__doprnt@c& (0+255),w,b
  6379  00091E  0012               	return		;indir
  6380  000920                     l3348:
  6381  000920  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6382  000924  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6383  000928  CFDE F06B          	movff	postinc2,??__doprnt
  6384  00092C  CFDD F06C          	movff	postdec2,??__doprnt+1
  6385  000930  C06B  FFD9         	movff	??__doprnt,fsr2l
  6386  000934  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  6387  000938  C07A  FFDF         	movff	__doprnt@c,indf2
  6388  00093C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  6389  000940  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  6390  000944  2ADE               	incf	postinc2,f,c
  6391  000946  0E00               	movlw	0
  6392  000948  22DD               	addwfc	postdec2,f,c
  6393  00094A                     l3352:
  6394  00094A  0100               	movlb	0	; () banked
  6395  00094C  0770               	decf	__doprnt@prec& (0+255),f,b
  6396  00094E  0100               	movlb	0	; () banked
  6397  000950  2970               	incf	__doprnt@prec& (0+255),w,b
  6398  000952  A4D8               	btfss	status,2,c
  6399  000954  D7B8               	goto	l3342
  6400  000956                     l3354:
  6401  000956  C067  FFF6         	movff	__doprnt@f,tblptrl
  6402  00095A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  6403  00095E  0100               	movlb	0	; () banked
  6404  000960  4B67               	infsnz	__doprnt@f& (0+255),f,b
  6405  000962  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  6406  000964                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6407  000964  6AF8               	clrf	tblptru,c
  6408  000966                     	endif
  6409  000966                     	if	0	;tblptru may be non-zero
  6410  000966                     	endif
  6411  000966  0008               	tblrd		*
  6412  000968  CFF5 F07A          	movff	tablat,__doprnt@c
  6413  00096C  0100               	movlb	0	; () banked
  6414  00096E  517A               	movf	__doprnt@c& (0+255),w,b
  6415  000970  A4D8               	btfss	status,2,c
  6416  000972  EF4E  F000         	goto	l3148
  6417  000976                     l3356:
  6418                           
  6419                           ;doprnt.c: 1540: return 0;
  6420  000976  0E00               	movlw	0
  6421  000978  0100               	movlb	0	; () banked
  6422  00097A  6F66               	movwf	(?__doprnt+1)& (0+255),b
  6423  00097C  0E00               	movlw	0
  6424  00097E  6F65               	movwf	?__doprnt& (0+255),b
  6425  000980  0012               	return	
  6426  000982                     __end_of__doprnt:
  6427                           	opt stack 0
  6428                           tosu	equ	0xFFF
  6429                           tosh	equ	0xFFE
  6430                           tosl	equ	0xFFD
  6431                           pclath	equ	0xFFA
  6432                           tblptru	equ	0xFF8
  6433                           tblptrh	equ	0xFF7
  6434                           tblptrl	equ	0xFF6
  6435                           tablat	equ	0xFF5
  6436                           prodh	equ	0xFF4
  6437                           prodl	equ	0xFF3
  6438                           intcon	equ	0xFF2
  6439                           intcon2	equ	0xFF1
  6440                           postinc0	equ	0xFEE
  6441                           wreg	equ	0xFE8
  6442                           indf1	equ	0xFE7
  6443                           postdec1	equ	0xFE5
  6444                           fsr1h	equ	0xFE2
  6445                           fsr1l	equ	0xFE1
  6446                           indf2	equ	0xFDF
  6447                           postinc2	equ	0xFDE
  6448                           postdec2	equ	0xFDD
  6449                           fsr2h	equ	0xFDA
  6450                           fsr2l	equ	0xFD9
  6451                           status	equ	0xFD8
  6452                           
  6453 ;; *************** function _putch *****************
  6454 ;; Defined at:
  6455 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  txData          1    wreg     unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  txData          1   38[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;Total ram usage:        1 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    5
  6476 ;; This function calls:
  6477 ;;		_EUSART1_Write
  6478 ;; This function is called by:
  6479 ;;		_printf
  6480 ;;		__doprnt
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text31
  6485  001C7A                     __ptext31:
  6486                           	opt stack 0
  6487  001C7A                     _putch:
  6488                           	opt stack 22
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;incstack = 0
  6492                           ;putch@txData stored from wreg
  6493  001C7A  6E27               	movwf	putch@txData,c
  6494                           
  6495                           ;eusart1.c: 172: EUSART1_Write(txData);
  6496  001C7C  5027               	movf	putch@txData,w,c
  6497  001C7E  EC86  F00C         	call	_EUSART1_Write
  6498  001C82  0012               	return		;funcret
  6499  001C84                     __end_of_putch:
  6500                           	opt stack 0
  6501                           tosu	equ	0xFFF
  6502                           tosh	equ	0xFFE
  6503                           tosl	equ	0xFFD
  6504                           pclath	equ	0xFFA
  6505                           tblptru	equ	0xFF8
  6506                           tblptrh	equ	0xFF7
  6507                           tblptrl	equ	0xFF6
  6508                           tablat	equ	0xFF5
  6509                           prodh	equ	0xFF4
  6510                           prodl	equ	0xFF3
  6511                           intcon	equ	0xFF2
  6512                           intcon2	equ	0xFF1
  6513                           postinc0	equ	0xFEE
  6514                           wreg	equ	0xFE8
  6515                           indf1	equ	0xFE7
  6516                           postdec1	equ	0xFE5
  6517                           fsr1h	equ	0xFE2
  6518                           fsr1l	equ	0xFE1
  6519                           indf2	equ	0xFDF
  6520                           postinc2	equ	0xFDE
  6521                           postdec2	equ	0xFDD
  6522                           fsr2h	equ	0xFDA
  6523                           fsr2l	equ	0xFD9
  6524                           status	equ	0xFD8
  6525                           
  6526 ;; *************** function _EUSART1_Write *****************
  6527 ;; Defined at:
  6528 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  txData          1    wreg     unsigned char 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  txData          1   37[COMRAM] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;Total ram usage:        1 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    4
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_putch
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text32
  6557  00190C                     __ptext32:
  6558                           	opt stack 0
  6559  00190C                     _EUSART1_Write:
  6560                           	opt stack 22
  6561                           
  6562                           ;incstack = 0
  6563                           ;EUSART1_Write@txData stored from wreg
  6564  00190C  6E26               	movwf	EUSART1_Write@txData,c
  6565  00190E                     l2178:
  6566  00190E  5039               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  6567  001910  B4D8               	btfsc	status,2,c
  6568  001912  D7FD               	goto	l2178
  6569                           
  6570                           ;eusart1.c: 146: }
  6571                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  6572  001914  B89D               	btfsc	3997,4,c	;volatile
  6573  001916  D003               	goto	l110
  6574                           
  6575                           ;eusart1.c: 149: {
  6576                           ;eusart1.c: 150: TXREG1 = txData;
  6577  001918  C026  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6578                           
  6579                           ;eusart1.c: 151: }
  6580  00191C  D012               	goto	l2192
  6581  00191E                     l110:
  6582                           
  6583                           ;eusart1.c: 152: else
  6584                           ;eusart1.c: 153: {
  6585                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  6586  00191E  989D               	bcf	3997,4,c	;volatile
  6587                           
  6588                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  6589  001920  5032               	movf	_eusart1TxHead,w,c
  6590  001922  0D01               	mullw	1
  6591  001924  0E00               	movlw	low _eusart1TxBuffer
  6592  001926  24F3               	addwf	prodl,w,c
  6593  001928  6ED9               	movwf	fsr2l,c
  6594  00192A  0E01               	movlw	high _eusart1TxBuffer
  6595  00192C  20F4               	addwfc	prodh,w,c
  6596  00192E  6EDA               	movwf	fsr2h,c
  6597  001930  C026  FFDF         	movff	EUSART1_Write@txData,indf2
  6598  001934  2A32               	incf	_eusart1TxHead,f,c
  6599                           
  6600                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  6601  001936  0E7F               	movlw	127
  6602  001938  6432               	cpfsgt	_eusart1TxHead,c
  6603  00193A  D002               	goto	l2190
  6604                           
  6605                           ;eusart1.c: 157: {
  6606                           ;eusart1.c: 158: eusart1TxHead = 0;
  6607  00193C  0E00               	movlw	0
  6608  00193E  6E32               	movwf	_eusart1TxHead,c
  6609  001940                     l2190:
  6610                           
  6611                           ;eusart1.c: 159: }
  6612                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  6613  001940  0639               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  6614  001942                     l2192:
  6615                           
  6616                           ;eusart1.c: 161: }
  6617                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  6618  001942  889D               	bsf	3997,4,c	;volatile
  6619  001944  0012               	return		;funcret
  6620  001946                     __end_of_EUSART1_Write:
  6621                           	opt stack 0
  6622                           tosu	equ	0xFFF
  6623                           tosh	equ	0xFFE
  6624                           tosl	equ	0xFFD
  6625                           pclath	equ	0xFFA
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           intcon2	equ	0xFF1
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           indf1	equ	0xFE7
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _isdigit *****************
  6648 ;; Defined at:
  6649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  c               1    wreg     unsigned char 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  c               1   39[COMRAM] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        3 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    4
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		__doprnt
  6674 ;;		_strtol
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text33
  6679  001BEA                     __ptext33:
  6680                           	opt stack 0
  6681  001BEA                     _isdigit:
  6682                           	opt stack 25
  6683                           
  6684                           ;incstack = 0
  6685                           ;isdigit@c stored from wreg
  6686  001BEA  6E28               	movwf	isdigit@c,c
  6687  001BEC  0E00               	movlw	0
  6688  001BEE  6E27               	movwf	_isdigit$1033,c
  6689  001BF0  0E3A               	movlw	58
  6690  001BF2  6028               	cpfslt	isdigit@c,c
  6691  001BF4  D005               	goto	l2204
  6692  001BF6  0E2F               	movlw	47
  6693  001BF8  6428               	cpfsgt	isdigit@c,c
  6694  001BFA  D002               	goto	l2204
  6695  001BFC  0E01               	movlw	1
  6696  001BFE  6E27               	movwf	_isdigit$1033,c
  6697  001C00                     l2204:
  6698  001C00  C027  F026         	movff	_isdigit$1033,??_isdigit
  6699  001C04  3026               	rrcf	??_isdigit,w,c
  6700  001C06  0012               	return	
  6701  001C08                     __end_of_isdigit:
  6702                           	opt stack 0
  6703                           tosu	equ	0xFFF
  6704                           tosh	equ	0xFFE
  6705                           tosl	equ	0xFFD
  6706                           pclath	equ	0xFFA
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           prodh	equ	0xFF4
  6712                           prodl	equ	0xFF3
  6713                           intcon	equ	0xFF2
  6714                           intcon2	equ	0xFF1
  6715                           postinc0	equ	0xFEE
  6716                           wreg	equ	0xFE8
  6717                           indf1	equ	0xFE7
  6718                           postdec1	equ	0xFE5
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           indf2	equ	0xFDF
  6722                           postinc2	equ	0xFDE
  6723                           postdec2	equ	0xFDD
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728 ;; *************** function ___wmul *****************
  6729 ;; Defined at:
  6730 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  multiplier      2   37[COMRAM] unsigned int 
  6733 ;;  multiplicand    2   39[COMRAM] unsigned int 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  product         2   41[COMRAM] unsigned int 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2   37[COMRAM] unsigned int 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0, prodl, prodh
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;Total ram usage:        6 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    4
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		__doprnt
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text34
  6760  001B86                     __ptext34:
  6761                           	opt stack 0
  6762  001B86                     ___wmul:
  6763                           	opt stack 23
  6764                           
  6765                           ;incstack = 0
  6766  001B86  5026               	movf	___wmul@multiplier,w,c
  6767  001B88  0228               	mulwf	___wmul@multiplicand,c
  6768  001B8A  CFF3 F02A          	movff	prodl,___wmul@product
  6769  001B8E  CFF4 F02B          	movff	prodh,___wmul@product+1
  6770  001B92  5026               	movf	___wmul@multiplier,w,c
  6771  001B94  0229               	mulwf	___wmul@multiplicand+1,c
  6772  001B96  50F3               	movf	prodl,w,c
  6773  001B98  262B               	addwf	___wmul@product+1,f,c
  6774  001B9A  5027               	movf	___wmul@multiplier+1,w,c
  6775  001B9C  0228               	mulwf	___wmul@multiplicand,c
  6776  001B9E  50F3               	movf	prodl,w,c
  6777  001BA0  262B               	addwf	___wmul@product+1,f,c
  6778  001BA2  C02A  F026         	movff	___wmul@product,?___wmul
  6779  001BA6  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  6780  001BAA  0012               	return	
  6781  001BAC                     __end_of___wmul:
  6782                           	opt stack 0
  6783                           tosu	equ	0xFFF
  6784                           tosh	equ	0xFFE
  6785                           tosl	equ	0xFFD
  6786                           pclath	equ	0xFFA
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           intcon2	equ	0xFF1
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           indf1	equ	0xFE7
  6798                           postdec1	equ	0xFE5
  6799                           fsr1h	equ	0xFE2
  6800                           fsr1l	equ	0xFE1
  6801                           indf2	equ	0xFDF
  6802                           postinc2	equ	0xFDE
  6803                           postdec2	equ	0xFDD
  6804                           fsr2h	equ	0xFDA
  6805                           fsr2l	equ	0xFD9
  6806                           status	equ	0xFD8
  6807                           
  6808 ;; *************** function ___lwmod *****************
  6809 ;; Defined at:
  6810 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  dividend        2    0[BANK0 ] unsigned int 
  6813 ;;  divisor         2    2[BANK0 ] unsigned int 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  counter         1    4[BANK0 ] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2    0[BANK0 ] unsigned int 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;Total ram usage:        5 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    4
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		__doprnt
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text35
  6840  0016C0                     __ptext35:
  6841                           	opt stack 0
  6842  0016C0                     ___lwmod:
  6843                           	opt stack 23
  6844                           
  6845                           ;incstack = 0
  6846  0016C0  0100               	movlb	0	; () banked
  6847  0016C2  5162               	movf	___lwmod@divisor& (0+255),w,b
  6848  0016C4  0100               	movlb	0	; () banked
  6849  0016C6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6850  0016C8  B4D8               	btfsc	status,2,c
  6851  0016CA  D026               	goto	l832
  6852                           
  6853                           ; BSR set to: 0
  6854  0016CC  0E01               	movlw	1
  6855  0016CE  0100               	movlb	0	; () banked
  6856  0016D0  6F64               	movwf	___lwmod@counter& (0+255),b
  6857  0016D2  D006               	goto	l3136
  6858  0016D4                     l3134:
  6859                           
  6860                           ; BSR set to: 0
  6861  0016D4  0100               	movlb	0	; () banked
  6862  0016D6  90D8               	bcf	status,0,c
  6863  0016D8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  6864  0016DA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6865  0016DC  0100               	movlb	0	; () banked
  6866  0016DE  2B64               	incf	___lwmod@counter& (0+255),f,b
  6867  0016E0                     l3136:
  6868                           
  6869                           ; BSR set to: 0
  6870  0016E0  0100               	movlb	0	; () banked
  6871  0016E2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6872  0016E4  D7F7               	goto	l3134
  6873  0016E6                     l3138:
  6874                           
  6875                           ; BSR set to: 0
  6876  0016E6  0100               	movlb	0	; () banked
  6877  0016E8  5162               	movf	___lwmod@divisor& (0+255),w,b
  6878  0016EA  0100               	movlb	0	; () banked
  6879  0016EC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  6880  0016EE  0100               	movlb	0	; () banked
  6881  0016F0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6882  0016F2  0100               	movlb	0	; () banked
  6883  0016F4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6884  0016F6  A0D8               	btfss	status,0,c
  6885  0016F8  D008               	goto	l3142
  6886                           
  6887                           ; BSR set to: 0
  6888  0016FA  0100               	movlb	0	; () banked
  6889  0016FC  5162               	movf	___lwmod@divisor& (0+255),w,b
  6890  0016FE  0100               	movlb	0	; () banked
  6891  001700  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  6892  001702  0100               	movlb	0	; () banked
  6893  001704  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6894  001706  0100               	movlb	0	; () banked
  6895  001708  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6896  00170A                     l3142:
  6897                           
  6898                           ; BSR set to: 0
  6899  00170A  0100               	movlb	0	; () banked
  6900  00170C  90D8               	bcf	status,0,c
  6901  00170E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6902  001710  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  6903                           
  6904                           ; BSR set to: 0
  6905  001712  0100               	movlb	0	; () banked
  6906  001714  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  6907  001716  D7E7               	goto	l3138
  6908  001718                     l832:
  6909                           
  6910                           ; BSR set to: 0
  6911  001718  C060  F060         	movff	___lwmod@dividend,?___lwmod
  6912  00171C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  6913                           
  6914                           ; BSR set to: 0
  6915  001720  0012               	return		;funcret
  6916  001722                     __end_of___lwmod:
  6917                           	opt stack 0
  6918                           tosu	equ	0xFFF
  6919                           tosh	equ	0xFFE
  6920                           tosl	equ	0xFFD
  6921                           pclath	equ	0xFFA
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           intcon	equ	0xFF2
  6929                           intcon2	equ	0xFF1
  6930                           postinc0	equ	0xFEE
  6931                           wreg	equ	0xFE8
  6932                           indf1	equ	0xFE7
  6933                           postdec1	equ	0xFE5
  6934                           fsr1h	equ	0xFE2
  6935                           fsr1l	equ	0xFE1
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function ___lwdiv *****************
  6944 ;; Defined at:
  6945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  dividend        2   37[COMRAM] unsigned int 
  6948 ;;  divisor         2   39[COMRAM] unsigned int 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  quotient        2   41[COMRAM] unsigned int 
  6951 ;;  counter         1   43[COMRAM] unsigned char 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  2   37[COMRAM] unsigned int 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;Total ram usage:        7 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    4
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		__doprnt
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text36
  6976  001870                     __ptext36:
  6977                           	opt stack 0
  6978  001870                     ___lwdiv:
  6979                           	opt stack 23
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;incstack = 0
  6983  001870  0E00               	movlw	0
  6984  001872  6E2B               	movwf	___lwdiv@quotient+1,c
  6985  001874  0E00               	movlw	0
  6986  001876  6E2A               	movwf	___lwdiv@quotient,c
  6987  001878  5028               	movf	___lwdiv@divisor,w,c
  6988  00187A  1029               	iorwf	___lwdiv@divisor+1,w,c
  6989  00187C  B4D8               	btfsc	status,2,c
  6990  00187E  D01C               	goto	l822
  6991  001880  0E01               	movlw	1
  6992  001882  6E2C               	movwf	___lwdiv@counter,c
  6993  001884  D004               	goto	l2222
  6994  001886                     l2220:
  6995  001886  90D8               	bcf	status,0,c
  6996  001888  3628               	rlcf	___lwdiv@divisor,f,c
  6997  00188A  3629               	rlcf	___lwdiv@divisor+1,f,c
  6998  00188C  2A2C               	incf	___lwdiv@counter,f,c
  6999  00188E                     l2222:
  7000  00188E  AE29               	btfss	___lwdiv@divisor+1,7,c
  7001  001890  D7FA               	goto	l2220
  7002  001892                     l2224:
  7003  001892  90D8               	bcf	status,0,c
  7004  001894  362A               	rlcf	___lwdiv@quotient,f,c
  7005  001896  362B               	rlcf	___lwdiv@quotient+1,f,c
  7006  001898  5028               	movf	___lwdiv@divisor,w,c
  7007  00189A  5C26               	subwf	___lwdiv@dividend,w,c
  7008  00189C  5029               	movf	___lwdiv@divisor+1,w,c
  7009  00189E  5827               	subwfb	___lwdiv@dividend+1,w,c
  7010  0018A0  A0D8               	btfss	status,0,c
  7011  0018A2  D005               	goto	l2232
  7012  0018A4  5028               	movf	___lwdiv@divisor,w,c
  7013  0018A6  5E26               	subwf	___lwdiv@dividend,f,c
  7014  0018A8  5029               	movf	___lwdiv@divisor+1,w,c
  7015  0018AA  5A27               	subwfb	___lwdiv@dividend+1,f,c
  7016  0018AC  802A               	bsf	___lwdiv@quotient,0,c
  7017  0018AE                     l2232:
  7018  0018AE  90D8               	bcf	status,0,c
  7019  0018B0  3229               	rrcf	___lwdiv@divisor+1,f,c
  7020  0018B2  3228               	rrcf	___lwdiv@divisor,f,c
  7021  0018B4  2E2C               	decfsz	___lwdiv@counter,f,c
  7022  0018B6  D7ED               	goto	l2224
  7023  0018B8                     l822:
  7024  0018B8  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  7025  0018BC  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7026  0018C0  0012               	return		;funcret
  7027  0018C2                     __end_of___lwdiv:
  7028                           	opt stack 0
  7029                           tosu	equ	0xFFF
  7030                           tosh	equ	0xFFE
  7031                           tosl	equ	0xFFD
  7032                           pclath	equ	0xFFA
  7033                           tblptru	equ	0xFF8
  7034                           tblptrh	equ	0xFF7
  7035                           tblptrl	equ	0xFF6
  7036                           tablat	equ	0xFF5
  7037                           prodh	equ	0xFF4
  7038                           prodl	equ	0xFF3
  7039                           intcon	equ	0xFF2
  7040                           intcon2	equ	0xFF1
  7041                           postinc0	equ	0xFEE
  7042                           wreg	equ	0xFE8
  7043                           indf1	equ	0xFE7
  7044                           postdec1	equ	0xFE5
  7045                           fsr1h	equ	0xFE2
  7046                           fsr1l	equ	0xFE1
  7047                           indf2	equ	0xFDF
  7048                           postinc2	equ	0xFDE
  7049                           postdec2	equ	0xFDD
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054 ;; *************** function _EPWM1_LoadDutyValue *****************
  7055 ;; Defined at:
  7056 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  dutyValue       2   37[COMRAM] unsigned int 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;Total ram usage:        4 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    4
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_main
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text37
  7085  001A82                     __ptext37:
  7086                           	opt stack 0
  7087  001A82                     _EPWM1_LoadDutyValue:
  7088                           	opt stack 26
  7089                           
  7090                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  7091                           
  7092                           ;incstack = 0
  7093  001A82  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7094  001A86  C027  F029         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7095  001A8A  90D8               	bcf	status,0,c
  7096  001A8C  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7097  001A8E  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7098  001A90  90D8               	bcf	status,0,c
  7099  001A92  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7100  001A94  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7101  001A96  5028               	movf	??_EPWM1_LoadDutyValue,w,c
  7102  001A98  6EBE               	movwf	4030,c	;volatile
  7103                           
  7104                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  7105  001A9A  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7106  001A9E  0E03               	movlw	3
  7107  001AA0  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7108  001AA2  3A28               	swapf	??_EPWM1_LoadDutyValue,f,c
  7109  001AA4  0EF0               	movlw	240
  7110  001AA6  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7111  001AA8  50BD               	movf	4029,w,c	;volatile
  7112  001AAA  0BCF               	andlw	207
  7113  001AAC  1028               	iorwf	??_EPWM1_LoadDutyValue,w,c
  7114  001AAE  6EBD               	movwf	4029,c	;volatile
  7115  001AB0  0012               	return		;funcret
  7116  001AB2                     __end_of_EPWM1_LoadDutyValue:
  7117                           	opt stack 0
  7118                           tosu	equ	0xFFF
  7119                           tosh	equ	0xFFE
  7120                           tosl	equ	0xFFD
  7121                           pclath	equ	0xFFA
  7122                           tblptru	equ	0xFF8
  7123                           tblptrh	equ	0xFF7
  7124                           tblptrl	equ	0xFF6
  7125                           tablat	equ	0xFF5
  7126                           prodh	equ	0xFF4
  7127                           prodl	equ	0xFF3
  7128                           intcon	equ	0xFF2
  7129                           intcon2	equ	0xFF1
  7130                           postinc0	equ	0xFEE
  7131                           wreg	equ	0xFE8
  7132                           indf1	equ	0xFE7
  7133                           postdec1	equ	0xFE5
  7134                           fsr1h	equ	0xFE2
  7135                           fsr1l	equ	0xFE1
  7136                           indf2	equ	0xFDF
  7137                           postinc2	equ	0xFDE
  7138                           postdec2	equ	0xFDD
  7139                           fsr2h	equ	0xFDA
  7140                           fsr2l	equ	0xFD9
  7141                           status	equ	0xFD8
  7142                           
  7143 ;; *************** function _INTERRUPT_InterruptManager *****************
  7144 ;; Defined at:
  7145 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      void 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;Total ram usage:       14 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    3
  7166 ;; This function calls:
  7167 ;;		_EUSART1_Receive_ISR
  7168 ;;		_EUSART1_Transmit_ISR
  7169 ;; This function is called by:
  7170 ;;		Interrupt level 2
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	intcode
  7175  000008                     __pintcode:
  7176                           	opt stack 0
  7177  000008                     _INTERRUPT_InterruptManager:
  7178                           	opt stack 21
  7179                           
  7180                           ;incstack = 0
  7181  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7182  00000A  CFFA F018          	movff	pclath,??_INTERRUPT_InterruptManager
  7183  00000E  CFFB F019          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7184  000012  CFE9 F01A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7185  000016  CFEA F01B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7186  00001A  CFE1 F01C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7187  00001E  CFE2 F01D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7188  000022  CFD9 F01E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7189  000026  CFDA F01F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7190  00002A  CFF3 F020          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7191  00002E  CFF4 F021          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7192  000032  CFF6 F022          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7193  000036  CFF7 F023          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7194  00003A  CFF8 F024          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7195  00003E  CFF5 F025          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7196                           
  7197                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7198  000042  B89D               	btfsc	3997,4,c	;volatile
  7199  000044  A89E               	btfss	3998,4,c	;volatile
  7200  000046  D003               	goto	i2l20
  7201                           
  7202                           ;interrupt_manager.c: 78: {
  7203                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  7204  000048  EC70  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7205                           
  7206                           ;interrupt_manager.c: 80: }
  7207  00004C  D005               	goto	i2l24
  7208  00004E                     i2l20:
  7209                           
  7210                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7211  00004E  BA9D               	btfsc	3997,5,c	;volatile
  7212  000050  AA9E               	btfss	3998,5,c	;volatile
  7213  000052  D002               	goto	i2l24
  7214                           
  7215                           ;interrupt_manager.c: 82: {
  7216                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  7217  000054  EC43  F007         	call	_EUSART1_Receive_ISR	;wreg free
  7218  000058                     i2l24:
  7219  000058  C025  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7220  00005C  C024  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7221  000060  C023  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7222  000064  C022  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7223  000068  C021  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7224  00006C  C020  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7225  000070  C01F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7226  000074  C01E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7227  000078  C01D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7228  00007C  C01C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7229  000080  C01B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7230  000084  C01A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7231  000088  C019  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7232  00008C  C018  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7233  000090  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7234  000092  0011               	retfie		f
  7235  000094                     __end_of_INTERRUPT_InterruptManager:
  7236                           	opt stack 0
  7237                           tosu	equ	0xFFF
  7238                           tosh	equ	0xFFE
  7239                           tosl	equ	0xFFD
  7240                           pclatu	equ	0xFFB
  7241                           pclath	equ	0xFFA
  7242                           tblptru	equ	0xFF8
  7243                           tblptrh	equ	0xFF7
  7244                           tblptrl	equ	0xFF6
  7245                           tablat	equ	0xFF5
  7246                           prodh	equ	0xFF4
  7247                           prodl	equ	0xFF3
  7248                           intcon	equ	0xFF2
  7249                           intcon2	equ	0xFF1
  7250                           postinc0	equ	0xFEE
  7251                           fsr0h	equ	0xFEA
  7252                           fsr0l	equ	0xFE9
  7253                           wreg	equ	0xFE8
  7254                           indf1	equ	0xFE7
  7255                           postdec1	equ	0xFE5
  7256                           fsr1h	equ	0xFE2
  7257                           fsr1l	equ	0xFE1
  7258                           indf2	equ	0xFDF
  7259                           postinc2	equ	0xFDE
  7260                           postdec2	equ	0xFDD
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8
  7264                           
  7265 ;; *************** function _EUSART1_Transmit_ISR *****************
  7266 ;; Defined at:
  7267 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;Total ram usage:        0 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_INTERRUPT_InterruptManager
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text39
  7295  001AE0                     __ptext39:
  7296                           	opt stack 0
  7297  001AE0                     _EUSART1_Transmit_ISR:
  7298                           	opt stack 23
  7299                           
  7300                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7301                           
  7302                           ;incstack = 0
  7303  001AE0  0E80               	movlw	128
  7304  001AE2  6039               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7305  001AE4  D012               	goto	i2l122
  7306                           
  7307                           ;eusart1.c: 180: {
  7308                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7309  001AE6  5033               	movf	_eusart1TxTail,w,c
  7310  001AE8  0D01               	mullw	1
  7311  001AEA  0E00               	movlw	low _eusart1TxBuffer
  7312  001AEC  24F3               	addwf	prodl,w,c
  7313  001AEE  6ED9               	movwf	fsr2l,c
  7314  001AF0  0E01               	movlw	high _eusart1TxBuffer
  7315  001AF2  20F4               	addwfc	prodh,w,c
  7316  001AF4  6EDA               	movwf	fsr2h,c
  7317  001AF6  50DF               	movf	indf2,w,c
  7318  001AF8  6EAD               	movwf	4013,c	;volatile
  7319  001AFA  2A33               	incf	_eusart1TxTail,f,c
  7320                           
  7321                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7322  001AFC  0E7F               	movlw	127
  7323  001AFE  6433               	cpfsgt	_eusart1TxTail,c
  7324  001B00  D002               	goto	i2l2830
  7325                           
  7326                           ;eusart1.c: 183: {
  7327                           ;eusart1.c: 184: eusart1TxTail = 0;
  7328  001B02  0E00               	movlw	0
  7329  001B04  6E33               	movwf	_eusart1TxTail,c
  7330  001B06                     i2l2830:
  7331                           
  7332                           ;eusart1.c: 185: }
  7333                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  7334  001B06  2A39               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7335                           
  7336                           ;eusart1.c: 187: }
  7337  001B08  0012               	return	
  7338  001B0A                     i2l122:
  7339                           
  7340                           ;eusart1.c: 188: else
  7341                           ;eusart1.c: 189: {
  7342                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  7343  001B0A  989D               	bcf	3997,4,c	;volatile
  7344  001B0C  0012               	return	
  7345  001B0E                     __end_of_EUSART1_Transmit_ISR:
  7346                           	opt stack 0
  7347                           tosu	equ	0xFFF
  7348                           tosh	equ	0xFFE
  7349                           tosl	equ	0xFFD
  7350                           pclatu	equ	0xFFB
  7351                           pclath	equ	0xFFA
  7352                           tblptru	equ	0xFF8
  7353                           tblptrh	equ	0xFF7
  7354                           tblptrl	equ	0xFF6
  7355                           tablat	equ	0xFF5
  7356                           prodh	equ	0xFF4
  7357                           prodl	equ	0xFF3
  7358                           intcon	equ	0xFF2
  7359                           intcon2	equ	0xFF1
  7360                           postinc0	equ	0xFEE
  7361                           fsr0h	equ	0xFEA
  7362                           fsr0l	equ	0xFE9
  7363                           wreg	equ	0xFE8
  7364                           indf1	equ	0xFE7
  7365                           postdec1	equ	0xFE5
  7366                           fsr1h	equ	0xFE2
  7367                           fsr1l	equ	0xFE1
  7368                           indf2	equ	0xFDF
  7369                           postinc2	equ	0xFDE
  7370                           postdec2	equ	0xFDD
  7371                           fsr2h	equ	0xFDA
  7372                           fsr2l	equ	0xFD9
  7373                           status	equ	0xFD8
  7374                           
  7375 ;; *************** function _EUSART1_Receive_ISR *****************
  7376 ;; Defined at:
  7377 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  state           2   21[COMRAM] int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;Total ram usage:        3 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    2
  7398 ;; This function calls:
  7399 ;;		_EUSART1_Read
  7400 ;;		_strcmp
  7401 ;;		i2_strstr
  7402 ;; This function is called by:
  7403 ;;		_INTERRUPT_InterruptManager
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text40
  7408  000E86                     __ptext40:
  7409                           	opt stack 0
  7410  000E86                     _EUSART1_Receive_ISR:
  7411                           	opt stack 21
  7412                           
  7413                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  7414                           
  7415                           ;incstack = 0
  7416  000E86  A2AB               	btfss	4011,1,c	;volatile
  7417  000E88  D002               	goto	i2l2836
  7418                           
  7419                           ;eusart1.c: 197: {
  7420                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  7421  000E8A  98AB               	bcf	4011,4,c	;volatile
  7422                           
  7423                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  7424  000E8C  88AB               	bsf	4011,4,c	;volatile
  7425  000E8E                     i2l2836:
  7426                           
  7427                           ;eusart1.c: 202: }
  7428                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7429  000E8E  5030               	movf	_eusart1RxHead,w,c
  7430  000E90  0D01               	mullw	1
  7431  000E92  0E00               	movlw	low _eusart1RxBuffer
  7432  000E94  24F3               	addwf	prodl,w,c
  7433  000E96  6ED9               	movwf	fsr2l,c
  7434  000E98  0E02               	movlw	high _eusart1RxBuffer
  7435  000E9A  20F4               	addwfc	prodh,w,c
  7436  000E9C  6EDA               	movwf	fsr2h,c
  7437  000E9E  CFAE FFDF          	movff	4014,indf2	;volatile
  7438  000EA2  2A30               	incf	_eusart1RxHead,f,c
  7439                           
  7440                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7441  000EA4  0E7F               	movlw	127
  7442  000EA6  6430               	cpfsgt	_eusart1RxHead,c
  7443  000EA8  D002               	goto	i2l2844
  7444                           
  7445                           ;eusart1.c: 209: {
  7446                           ;eusart1.c: 210: eusart1RxHead = 0;
  7447  000EAA  0E00               	movlw	0
  7448  000EAC  6E30               	movwf	_eusart1RxHead,c
  7449  000EAE                     i2l2844:
  7450                           
  7451                           ;eusart1.c: 211: }
  7452                           ;eusart1.c: 212: eusart1RxCount++;
  7453  000EAE  2A2F               	incf	_eusart1RxCount,f,c	;volatile
  7454                           
  7455                           ;eusart1.c: 214: int state = 0;
  7456  000EB0  0E00               	movlw	0
  7457  000EB2  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7458  000EB4  0E00               	movlw	0
  7459  000EB6  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7460                           
  7461                           ;eusart1.c: 216: if(ready)return;
  7462  000EB8  5034               	movf	_ready,w,c	;volatile
  7463  000EBA  A4D8               	btfss	status,2,c
  7464  000EBC  0012               	return	
  7465  000EBE  D01C               	goto	i2l2860
  7466  000EC0                     i2l2852:
  7467                           
  7468                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7469  000EC0  EC27  F00D         	call	_EUSART1_Read	;wreg free
  7470  000EC4  6E15               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7471  000EC6  0E80               	movlw	low _line
  7472  000EC8  242D               	addwf	_index,w,c
  7473  000ECA  6ED9               	movwf	fsr2l,c
  7474  000ECC  0E01               	movlw	high _line
  7475  000ECE  202E               	addwfc	_index+1,w,c
  7476  000ED0  6EDA               	movwf	fsr2h,c
  7477  000ED2  C015  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7478                           
  7479                           ;eusart1.c: 220: if (line[index] == '\n'){
  7480  000ED6  0E80               	movlw	low _line
  7481  000ED8  242D               	addwf	_index,w,c
  7482  000EDA  6ED9               	movwf	fsr2l,c
  7483  000EDC  0E01               	movlw	high _line
  7484  000EDE  202E               	addwfc	_index+1,w,c
  7485  000EE0  6EDA               	movwf	fsr2h,c
  7486  000EE2  0E0A               	movlw	10
  7487  000EE4  18DE               	xorwf	postinc2,w,c
  7488  000EE6  A4D8               	btfss	status,2,c
  7489  000EE8  D005               	goto	i2l2858
  7490                           
  7491                           ;eusart1.c: 221: state=1;
  7492  000EEA  0E00               	movlw	0
  7493  000EEC  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7494  000EEE  0E01               	movlw	1
  7495  000EF0  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7496                           
  7497                           ;eusart1.c: 222: break;
  7498  000EF2  D005               	goto	i2l2862
  7499  000EF4                     i2l2858:
  7500                           
  7501                           ;eusart1.c: 223: }
  7502                           ;eusart1.c: 224: index++;
  7503  000EF4  4A2D               	infsnz	_index,f,c
  7504  000EF6  2A2E               	incf	_index+1,f,c
  7505  000EF8                     i2l2860:
  7506  000EF8  502F               	movf	_eusart1RxCount,w,c	;volatile
  7507  000EFA  A4D8               	btfss	status,2,c
  7508  000EFC  D7E1               	goto	i2l2852
  7509  000EFE                     i2l2862:
  7510                           
  7511                           ;eusart1.c: 225: }
  7512                           ;eusart1.c: 227: if(state==1){
  7513  000EFE  0416               	decf	EUSART1_Receive_ISR@state,w,c
  7514  000F00  1017               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7515  000F02  A4D8               	btfss	status,2,c
  7516  000F04  0012               	return	
  7517                           
  7518                           ;eusart1.c: 228: line[--index] = '\0';
  7519  000F06  062D               	decf	_index,f,c
  7520  000F08  A0D8               	btfss	status,0,c
  7521  000F0A  062E               	decf	_index+1,f,c
  7522  000F0C  0E80               	movlw	low _line
  7523  000F0E  242D               	addwf	_index,w,c
  7524  000F10  6ED9               	movwf	fsr2l,c
  7525  000F12  0E01               	movlw	high _line
  7526  000F14  202E               	addwfc	_index+1,w,c
  7527  000F16  6EDA               	movwf	fsr2h,c
  7528  000F18  0E00               	movlw	0
  7529  000F1A  6EDF               	movwf	indf2,c
  7530                           
  7531                           ;eusart1.c: 229: uartState=0;
  7532  000F1C  0E00               	movlw	0
  7533  000F1E  0100               	movlb	0	; () banked
  7534  000F20  6F99               	movwf	_uartState& (0+255),b	;volatile
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7538  000F22  0EDF               	movlw	low STR_1
  7539  000F24  6E01               	movwf	strcmp@s1,c
  7540  000F26  0EFF               	movlw	high STR_1
  7541  000F28  6E02               	movwf	strcmp@s1+1,c
  7542  000F2A  0E80               	movlw	low _line
  7543  000F2C  6E03               	movwf	strcmp@s2,c
  7544  000F2E  0E01               	movlw	high _line
  7545  000F30  6E04               	movwf	strcmp@s2+1,c
  7546  000F32  ECB1  F00A         	call	_strcmp	;wreg free
  7547  000F36  5001               	movf	?_strcmp,w,c
  7548  000F38  1002               	iorwf	?_strcmp+1,w,c
  7549  000F3A  A4D8               	btfss	status,2,c
  7550  000F3C  D002               	goto	i2l2872
  7551                           
  7552                           ;eusart1.c: 231: uartState=5;
  7553  000F3E  0E05               	movlw	5
  7554  000F40  D02B               	goto	L3
  7555  000F42                     i2l2872:
  7556  000F42  0E80               	movlw	low _line
  7557  000F44  6E10               	movwf	i2strstr@s1,c
  7558  000F46  0E01               	movlw	high _line
  7559  000F48  6E11               	movwf	i2strstr@s1+1,c
  7560  000F4A  0EE9               	movlw	low STR_2
  7561  000F4C  6E12               	movwf	i2strstr@s2,c
  7562  000F4E  0EFF               	movlw	high STR_2
  7563  000F50  6E13               	movwf	i2strstr@s2+1,c
  7564  000F52  EC62  F00A         	call	i2_strstr	;wreg free
  7565  000F56  5010               	movf	?i2_strstr,w,c
  7566  000F58  1011               	iorwf	?i2_strstr+1,w,c
  7567  000F5A  B4D8               	btfsc	status,2,c
  7568  000F5C  D00E               	goto	i2l2882
  7569                           
  7570                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7571  000F5E  0E34               	movlw	52
  7572  000F60  0101               	movlb	1	; () banked
  7573  000F62  198A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7574  000F64  A4D8               	btfss	status,2,c
  7575  000F66  D007               	goto	i2l2880
  7576                           
  7577                           ; BSR set to: 1
  7578  000F68  0E33               	movlw	51
  7579  000F6A  0101               	movlb	1	; () banked
  7580  000F6C  198B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7581  000F6E  A4D8               	btfss	status,2,c
  7582  000F70  D002               	goto	i2l2880
  7583                           
  7584                           ; BSR set to: 1
  7585                           ;eusart1.c: 234: uartState=4;
  7586  000F72  0E04               	movlw	4
  7587  000F74  D011               	goto	L3
  7588  000F76                     i2l2880:
  7589                           
  7590                           ;eusart1.c: 236: uartState=3;
  7591  000F76  0E03               	movlw	3
  7592  000F78  D00F               	goto	L3
  7593  000F7A                     i2l2882:
  7594  000F7A  0E80               	movlw	low _line
  7595  000F7C  6E01               	movwf	strcmp@s1,c
  7596  000F7E  0E01               	movlw	high _line
  7597  000F80  6E02               	movwf	strcmp@s1+1,c
  7598  000F82  0ED3               	movlw	low STR_3
  7599  000F84  6E03               	movwf	strcmp@s2,c
  7600  000F86  0EFF               	movlw	high STR_3
  7601  000F88  6E04               	movwf	strcmp@s2+1,c
  7602  000F8A  ECB1  F00A         	call	_strcmp	;wreg free
  7603  000F8E  5001               	movf	?_strcmp,w,c
  7604  000F90  1002               	iorwf	?_strcmp+1,w,c
  7605  000F92  A4D8               	btfss	status,2,c
  7606  000F94  D004               	goto	i2l2886
  7607  000F96  D011               	goto	i2l2888
  7608  000F98                     L3:
  7609  000F98  0100               	movlb	0	; () banked
  7610  000F9A  6F99               	movwf	_uartState& (0+255),b	;volatile
  7611                           
  7612                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7613  000F9C  D010               	goto	i2l138
  7614  000F9E                     i2l2886:
  7615  000F9E  0E80               	movlw	low _line
  7616  000FA0  6E01               	movwf	strcmp@s1,c
  7617  000FA2  0E01               	movlw	high _line
  7618  000FA4  6E02               	movwf	strcmp@s1+1,c
  7619  000FA6  0EDC               	movlw	low (STR_3+9)
  7620  000FA8  6E03               	movwf	strcmp@s2,c
  7621  000FAA  0EFF               	movlw	high (STR_3+9)
  7622  000FAC  6E04               	movwf	strcmp@s2+1,c
  7623  000FAE  ECB1  F00A         	call	_strcmp	;wreg free
  7624  000FB2  5001               	movf	?_strcmp,w,c
  7625  000FB4  1002               	iorwf	?_strcmp+1,w,c
  7626  000FB6  A4D8               	btfss	status,2,c
  7627  000FB8  D002               	goto	i2l138
  7628  000FBA                     i2l2888:
  7629                           
  7630                           ;eusart1.c: 241: uartState=1;
  7631  000FBA  0E01               	movlw	1
  7632  000FBC  D7ED               	goto	L3
  7633  000FBE                     i2l138:
  7634                           
  7635                           ;eusart1.c: 242: }
  7636                           ;eusart1.c: 243: index=0;
  7637  000FBE  0E00               	movlw	0
  7638  000FC0  6E2E               	movwf	_index+1,c
  7639  000FC2  0E00               	movlw	0
  7640  000FC4  6E2D               	movwf	_index,c
  7641                           
  7642                           ;eusart1.c: 244: ready=1;
  7643  000FC6  0E01               	movlw	1
  7644  000FC8  6E34               	movwf	_ready,c	;volatile
  7645  000FCA  0012               	return	
  7646  000FCC                     __end_of_EUSART1_Receive_ISR:
  7647                           	opt stack 0
  7648                           tosu	equ	0xFFF
  7649                           tosh	equ	0xFFE
  7650                           tosl	equ	0xFFD
  7651                           pclatu	equ	0xFFB
  7652                           pclath	equ	0xFFA
  7653                           tblptru	equ	0xFF8
  7654                           tblptrh	equ	0xFF7
  7655                           tblptrl	equ	0xFF6
  7656                           tablat	equ	0xFF5
  7657                           prodh	equ	0xFF4
  7658                           prodl	equ	0xFF3
  7659                           intcon	equ	0xFF2
  7660                           intcon2	equ	0xFF1
  7661                           postinc0	equ	0xFEE
  7662                           fsr0h	equ	0xFEA
  7663                           fsr0l	equ	0xFE9
  7664                           wreg	equ	0xFE8
  7665                           indf1	equ	0xFE7
  7666                           postdec1	equ	0xFE5
  7667                           fsr1h	equ	0xFE2
  7668                           fsr1l	equ	0xFE1
  7669                           indf2	equ	0xFDF
  7670                           postinc2	equ	0xFDE
  7671                           postdec2	equ	0xFDD
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function i2_strstr *****************
  7677 ;; Defined at:
  7678 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7681 ;;		 -> NULL(0), line(128), 
  7682 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7683 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  2   15[COMRAM] PTR unsigned char 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;Total ram usage:        5 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    1
  7702 ;; This function calls:
  7703 ;;		i2_strchr
  7704 ;;		i2_strlen
  7705 ;;		i2_strncmp
  7706 ;; This function is called by:
  7707 ;;		_EUSART1_Receive_ISR
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text41
  7712  0014C4                     __ptext41:
  7713                           	opt stack 0
  7714  0014C4                     i2_strstr:
  7715                           	opt stack 21
  7716                           
  7717                           ;incstack = 0
  7718  0014C4  D03E               	goto	i2l2812
  7719  0014C6                     i2l2804:
  7720  0014C6  C010  F007         	movff	i2strstr@s1,i2strncmp@s1
  7721  0014CA  C011  F008         	movff	i2strstr@s1+1,i2strncmp@s1+1
  7722  0014CE  C012  F009         	movff	i2strstr@s2,i2strncmp@s2
  7723  0014D2  C013  F00A         	movff	i2strstr@s2+1,i2strncmp@s2+1
  7724  0014D6  C012  F001         	movff	i2strstr@s2,i2strlen@s
  7725  0014DA  C013  F002         	movff	i2strstr@s2+1,i2strlen@s+1
  7726  0014DE  ECE5  F00B         	call	i2_strlen	;wreg free
  7727  0014E2  C001  F00B         	movff	?i2_strlen,i2strncmp@len
  7728  0014E6  C002  F00C         	movff	?i2_strlen+1,i2strncmp@len+1
  7729  0014EA  ECBA  F009         	call	i2_strncmp	;wreg free
  7730  0014EE  5007               	movf	?i2_strncmp,w,c
  7731  0014F0  1008               	iorwf	?i2_strncmp+1,w,c
  7732  0014F2  A4D8               	btfss	status,2,c
  7733  0014F4  D005               	goto	i2l2810
  7734  0014F6  C010  F010         	movff	i2strstr@s1,?i2_strstr
  7735  0014FA  C011  F011         	movff	i2strstr@s1+1,?i2_strstr+1
  7736  0014FE  0012               	return	
  7737  001500                     i2l2810:
  7738  001500  0E01               	movlw	1
  7739  001502  2410               	addwf	i2strstr@s1,w,c
  7740  001504  6E01               	movwf	i2strchr@ptr,c
  7741  001506  0E00               	movlw	0
  7742  001508  2011               	addwfc	i2strstr@s1+1,w,c
  7743  00150A  6E02               	movwf	i2strchr@ptr+1,c
  7744  00150C  C012  FFF6         	movff	i2strstr@s2,tblptrl
  7745  001510  C013  FFF7         	movff	i2strstr@s2+1,tblptrh
  7746  001514  0E00               	movlw	low (__mediumconst shr (0+16))
  7747  001516  6EF8               	movwf	tblptru,c
  7748  001518  0E0F               	movlw	(high __ramtop+-1)
  7749  00151A  64F7               	cpfsgt	tblptrh,c
  7750  00151C  D003               	bra	i2u279_47
  7751  00151E  0008               	tblrd		*
  7752  001520  50F5               	movf	tablat,w,c
  7753  001522  D005               	bra	i2u279_40
  7754  001524                     i2u279_47:
  7755  001524  CFF6 FFE1          	movff	tblptrl,fsr1l
  7756  001528  CFF7 FFE2          	movff	tblptrh,fsr1h
  7757  00152C  50E7               	movf	indf1,w,c
  7758  00152E                     i2u279_40:
  7759  00152E  6E14               	movwf	??i2_strstr& (0+255),c
  7760  001530  5014               	movf	??i2_strstr,w,c
  7761  001532  6E03               	movwf	i2strchr@chr,c
  7762  001534  6A04               	clrf	i2strchr@chr+1,c
  7763  001536  ECBE  F00C         	call	i2_strchr	;wreg free
  7764  00153A  C001  F010         	movff	?i2_strchr,i2strstr@s1
  7765  00153E  C002  F011         	movff	?i2_strchr+1,i2strstr@s1+1
  7766  001542                     i2l2812:
  7767  001542  5010               	movf	i2strstr@s1,w,c
  7768  001544  1011               	iorwf	i2strstr@s1+1,w,c
  7769  001546  B4D8               	btfsc	status,2,c
  7770  001548  D007               	goto	i2l2816
  7771  00154A  C010  FFD9         	movff	i2strstr@s1,fsr2l
  7772  00154E  C011  FFDA         	movff	i2strstr@s1+1,fsr2h
  7773  001552  50DF               	movf	indf2,w,c
  7774  001554  A4D8               	btfss	status,2,c
  7775  001556  D7B7               	goto	i2l2804
  7776  001558                     i2l2816:
  7777  001558  0E00               	movlw	0
  7778  00155A  6E10               	movwf	?i2_strstr,c
  7779  00155C  0E00               	movlw	0
  7780  00155E  6E11               	movwf	?i2_strstr+1,c
  7781  001560  0012               	return	
  7782  001562                     __end_ofi2_strstr:
  7783                           	opt stack 0
  7784                           tosu	equ	0xFFF
  7785                           tosh	equ	0xFFE
  7786                           tosl	equ	0xFFD
  7787                           pclatu	equ	0xFFB
  7788                           pclath	equ	0xFFA
  7789                           tblptru	equ	0xFF8
  7790                           tblptrh	equ	0xFF7
  7791                           tblptrl	equ	0xFF6
  7792                           tablat	equ	0xFF5
  7793                           prodh	equ	0xFF4
  7794                           prodl	equ	0xFF3
  7795                           intcon	equ	0xFF2
  7796                           intcon2	equ	0xFF1
  7797                           postinc0	equ	0xFEE
  7798                           fsr0h	equ	0xFEA
  7799                           fsr0l	equ	0xFE9
  7800                           wreg	equ	0xFE8
  7801                           indf1	equ	0xFE7
  7802                           postdec1	equ	0xFE5
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           indf2	equ	0xFDF
  7806                           postinc2	equ	0xFDE
  7807                           postdec2	equ	0xFDD
  7808                           fsr2h	equ	0xFDA
  7809                           fsr2l	equ	0xFD9
  7810                           status	equ	0xFD8
  7811                           
  7812 ;; *************** function i2_strncmp *****************
  7813 ;; Defined at:
  7814 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7817 ;;		 -> NULL(0), line(128), 
  7818 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7819 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7820 ;;  len             2   10[COMRAM] unsigned int 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2    6[COMRAM] int 
  7825 ;; Registers used:
  7826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;Total ram usage:        9 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		i2_strstr
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text42
  7846  001374                     __ptext42:
  7847                           	opt stack 0
  7848  001374                     i2_strncmp:
  7849                           	opt stack 21
  7850                           
  7851                           ;incstack = 0
  7852  001374  D049               	goto	i2l2622
  7853  001376                     i2l2612:
  7854  001376  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7855  00137A  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7856  00137E  50DF               	movf	indf2,w,c
  7857  001380  B4D8               	btfsc	status,2,c
  7858  001382  D01A               	goto	i2l2616
  7859  001384  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7860  001388  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7861  00138C  50DF               	movf	indf2,w,c
  7862  00138E  6E0D               	movwf	??i2_strncmp& (0+255),c
  7863  001390  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7864  001394  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7865  001398  0E00               	movlw	low (__mediumconst shr (0+16))
  7866  00139A  6EF8               	movwf	tblptru,c
  7867  00139C  0E0F               	movlw	(high __ramtop+-1)
  7868  00139E  64F7               	cpfsgt	tblptrh,c
  7869  0013A0  D003               	bra	i2u247_47
  7870  0013A2  0008               	tblrd		*
  7871  0013A4  50F5               	movf	tablat,w,c
  7872  0013A6  D005               	bra	i2u247_40
  7873  0013A8                     i2u247_47:
  7874  0013A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7875  0013AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7876  0013B0  50E7               	movf	indf1,w,c
  7877  0013B2                     i2u247_40:
  7878  0013B2  180D               	xorwf	??i2_strncmp,w,c
  7879  0013B4  B4D8               	btfsc	status,2,c
  7880  0013B6  D024               	goto	i2l2620
  7881  0013B8                     i2l2616:
  7882  0013B8  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7883  0013BC  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7884  0013C0  0E00               	movlw	low (__mediumconst shr (0+16))
  7885  0013C2  6EF8               	movwf	tblptru,c
  7886  0013C4  0E0F               	movlw	(high __ramtop+-1)
  7887  0013C6  64F7               	cpfsgt	tblptrh,c
  7888  0013C8  D003               	bra	i2u249_47
  7889  0013CA  0008               	tblrd		*
  7890  0013CC  50F5               	movf	tablat,w,c
  7891  0013CE  D005               	bra	i2u249_40
  7892  0013D0                     i2u249_47:
  7893  0013D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7894  0013D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7895  0013D8  50E7               	movf	indf1,w,c
  7896  0013DA                     i2u249_40:
  7897  0013DA  6E0D               	movwf	??i2_strncmp& (0+255),c
  7898  0013DC  6A0E               	clrf	(??i2_strncmp+1)& (0+255),c
  7899  0013DE  1E0D               	comf	??i2_strncmp,f,c
  7900  0013E0  1E0E               	comf	??i2_strncmp+1,f,c
  7901  0013E2  4A0D               	infsnz	??i2_strncmp,f,c
  7902  0013E4  2A0E               	incf	??i2_strncmp+1,f,c
  7903  0013E6  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7904  0013EA  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7905  0013EE  50DF               	movf	indf2,w,c
  7906  0013F0  6E0F               	movwf	(??i2_strncmp+2)& (0+255),c
  7907  0013F2  500F               	movf	??i2_strncmp+2,w,c
  7908  0013F4  240D               	addwf	??i2_strncmp,w,c
  7909  0013F6  6E07               	movwf	?i2_strncmp,c
  7910  0013F8  0E00               	movlw	0
  7911  0013FA  200E               	addwfc	??i2_strncmp+1,w,c
  7912  0013FC  6E08               	movwf	?i2_strncmp+1,c
  7913  0013FE  0012               	return	
  7914  001400                     i2l2620:
  7915  001400  4A07               	infsnz	i2strncmp@s1,f,c
  7916  001402  2A08               	incf	i2strncmp@s1+1,f,c
  7917  001404  4A09               	infsnz	i2strncmp@s2,f,c
  7918  001406  2A0A               	incf	i2strncmp@s2+1,f,c
  7919  001408                     i2l2622:
  7920  001408  060B               	decf	i2strncmp@len,f,c
  7921  00140A  A0D8               	btfss	status,0,c
  7922  00140C  060C               	decf	i2strncmp@len+1,f,c
  7923  00140E  280B               	incf	i2strncmp@len,w,c
  7924  001410  E1B2               	bnz	i2l2612
  7925  001412  280C               	incf	i2strncmp@len+1,w,c
  7926  001414  A4D8               	btfss	status,2,c
  7927  001416  D7AF               	goto	i2l2612
  7928  001418  0E00               	movlw	0
  7929  00141A  6E08               	movwf	?i2_strncmp+1,c
  7930  00141C  0E00               	movlw	0
  7931  00141E  6E07               	movwf	?i2_strncmp,c
  7932  001420  0012               	return	
  7933  001422                     __end_ofi2_strncmp:
  7934                           	opt stack 0
  7935                           tosu	equ	0xFFF
  7936                           tosh	equ	0xFFE
  7937                           tosl	equ	0xFFD
  7938                           pclatu	equ	0xFFB
  7939                           pclath	equ	0xFFA
  7940                           tblptru	equ	0xFF8
  7941                           tblptrh	equ	0xFF7
  7942                           tblptrl	equ	0xFF6
  7943                           tablat	equ	0xFF5
  7944                           prodh	equ	0xFF4
  7945                           prodl	equ	0xFF3
  7946                           intcon	equ	0xFF2
  7947                           intcon2	equ	0xFF1
  7948                           postinc0	equ	0xFEE
  7949                           fsr0h	equ	0xFEA
  7950                           fsr0l	equ	0xFE9
  7951                           wreg	equ	0xFE8
  7952                           indf1	equ	0xFE7
  7953                           postdec1	equ	0xFE5
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function i2_strlen *****************
  7964 ;; Defined at:
  7965 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7968 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  7971 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  2    0[COMRAM] unsigned int 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7985 ;;Total ram usage:        6 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		i2_strstr
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text43
  7995  0017CA                     __ptext43:
  7996                           	opt stack 0
  7997  0017CA                     i2_strlen:
  7998                           	opt stack 21
  7999                           
  8000                           ;incstack = 0
  8001  0017CA  C001  F005         	movff	i2strlen@s,i2strlen@cp
  8002  0017CE  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
  8003  0017D2  D002               	goto	i2l2592
  8004  0017D4                     i2l2590:
  8005  0017D4  4A05               	infsnz	i2strlen@cp,f,c
  8006  0017D6  2A06               	incf	i2strlen@cp+1,f,c
  8007  0017D8                     i2l2592:
  8008  0017D8  C005  FFF6         	movff	i2strlen@cp,tblptrl
  8009  0017DC  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
  8010  0017E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8011  0017E2  6EF8               	movwf	tblptru,c
  8012  0017E4  0E0F               	movlw	(high __ramtop+-1)
  8013  0017E6  64F7               	cpfsgt	tblptrh,c
  8014  0017E8  D003               	bra	i2u242_47
  8015  0017EA  0008               	tblrd		*
  8016  0017EC  50F5               	movf	tablat,w,c
  8017  0017EE  D005               	bra	i2u242_40
  8018  0017F0                     i2u242_47:
  8019  0017F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8020  0017F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8021  0017F8  50E7               	movf	indf1,w,c
  8022  0017FA                     i2u242_40:
  8023  0017FA  0900               	iorlw	0
  8024  0017FC  A4D8               	btfss	status,2,c
  8025  0017FE  D7EA               	goto	i2l2590
  8026  001800  C001  F003         	movff	i2strlen@s,??i2_strlen
  8027  001804  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
  8028  001808  1E03               	comf	??i2_strlen,f,c
  8029  00180A  1E04               	comf	??i2_strlen+1,f,c
  8030  00180C  4A03               	infsnz	??i2_strlen,f,c
  8031  00180E  2A04               	incf	??i2_strlen+1,f,c
  8032  001810  5005               	movf	i2strlen@cp,w,c
  8033  001812  2403               	addwf	??i2_strlen,w,c
  8034  001814  6E01               	movwf	?i2_strlen,c
  8035  001816  5006               	movf	i2strlen@cp+1,w,c
  8036  001818  2004               	addwfc	??i2_strlen+1,w,c
  8037  00181A  6E02               	movwf	?i2_strlen+1,c
  8038  00181C  0012               	return	
  8039  00181E                     __end_ofi2_strlen:
  8040                           	opt stack 0
  8041                           tosu	equ	0xFFF
  8042                           tosh	equ	0xFFE
  8043                           tosl	equ	0xFFD
  8044                           pclatu	equ	0xFFB
  8045                           pclath	equ	0xFFA
  8046                           tblptru	equ	0xFF8
  8047                           tblptrh	equ	0xFF7
  8048                           tblptrl	equ	0xFF6
  8049                           tablat	equ	0xFF5
  8050                           prodh	equ	0xFF4
  8051                           prodl	equ	0xFF3
  8052                           intcon	equ	0xFF2
  8053                           intcon2	equ	0xFF1
  8054                           postinc0	equ	0xFEE
  8055                           fsr0h	equ	0xFEA
  8056                           fsr0l	equ	0xFE9
  8057                           wreg	equ	0xFE8
  8058                           indf1	equ	0xFE7
  8059                           postdec1	equ	0xFE5
  8060                           fsr1h	equ	0xFE2
  8061                           fsr1l	equ	0xFE1
  8062                           indf2	equ	0xFDF
  8063                           postinc2	equ	0xFDE
  8064                           postdec2	equ	0xFDD
  8065                           fsr2h	equ	0xFDA
  8066                           fsr2l	equ	0xFD9
  8067                           status	equ	0xFD8
  8068                           
  8069 ;; *************** function i2_strchr *****************
  8070 ;; Defined at:
  8071 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  8074 ;;		 -> NULL(0), line(128), 
  8075 ;;  chr             2    2[COMRAM] int 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2    0[COMRAM] PTR unsigned char 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;Total ram usage:        5 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		i2_strstr
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text44
  8101  00197C                     __ptext44:
  8102                           	opt stack 0
  8103  00197C                     i2_strchr:
  8104                           	opt stack 21
  8105  00197C  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8106  001980  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8107  001984  5003               	movf	i2strchr@chr,w,c
  8108  001986  18DE               	xorwf	postinc2,w,c
  8109  001988  A4D8               	btfss	status,2,c
  8110  00198A  D005               	goto	i2l2604
  8111  00198C  C001  F001         	movff	i2strchr@ptr,?i2_strchr
  8112  001990  C002  F002         	movff	i2strchr@ptr+1,?i2_strchr+1
  8113  001994  0012               	return	
  8114  001996                     i2l2604:
  8115  001996  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8116  00199A  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8117  00199E  4A01               	infsnz	i2strchr@ptr,f,c
  8118  0019A0  2A02               	incf	i2strchr@ptr+1,f,c
  8119  0019A2  50DF               	movf	indf2,w,c
  8120  0019A4  A4D8               	btfss	status,2,c
  8121  0019A6  D7EA               	goto	i2l2598
  8122  0019A8  0E00               	movlw	0
  8123  0019AA  6E01               	movwf	?i2_strchr,c
  8124  0019AC  0E00               	movlw	0
  8125  0019AE  6E02               	movwf	?i2_strchr+1,c
  8126  0019B0  0012               	return	
  8127  0019B2                     __end_ofi2_strchr:
  8128                           	opt stack 0
  8129                           tosu	equ	0xFFF
  8130                           tosh	equ	0xFFE
  8131                           tosl	equ	0xFFD
  8132                           pclatu	equ	0xFFB
  8133                           pclath	equ	0xFFA
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           intcon2	equ	0xFF1
  8142                           postinc0	equ	0xFEE
  8143                           fsr0h	equ	0xFEA
  8144                           fsr0l	equ	0xFE9
  8145                           wreg	equ	0xFE8
  8146                           indf1	equ	0xFE7
  8147                           postdec1	equ	0xFE5
  8148                           fsr1h	equ	0xFE2
  8149                           fsr1l	equ	0xFE1
  8150                           indf2	equ	0xFDF
  8151                           postinc2	equ	0xFDE
  8152                           postdec2	equ	0xFDD
  8153                           fsr2h	equ	0xFDA
  8154                           fsr2l	equ	0xFD9
  8155                           status	equ	0xFD8
  8156                           
  8157 ;; *************** function _strcmp *****************
  8158 ;; Defined at:
  8159 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8162 ;;		 -> STR_1(10), line(128), 
  8163 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8164 ;;		 -> STR_4(3), STR_3(12), line(128), 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  r               1    5[COMRAM] char 
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  2    0[COMRAM] int 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;Total ram usage:        6 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_EUSART1_Receive_ISR
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text45
  8190  001562                     __ptext45:
  8191                           	opt stack 0
  8192  001562                     _strcmp:
  8193                           	opt stack 22
  8194                           
  8195                           ;incstack = 0
  8196  001562  D004               	goto	i2l2678
  8197  001564                     i2l2676:
  8198  001564  4A01               	infsnz	strcmp@s1,f,c
  8199  001566  2A02               	incf	strcmp@s1+1,f,c
  8200  001568  4A03               	infsnz	strcmp@s2,f,c
  8201  00156A  2A04               	incf	strcmp@s2+1,f,c
  8202  00156C                     i2l2678:
  8203  00156C  C001  FFF6         	movff	strcmp@s1,tblptrl
  8204  001570  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8205  001574  0E00               	movlw	low (__mediumconst shr (0+16))
  8206  001576  6EF8               	movwf	tblptru,c
  8207  001578  0E0F               	movlw	(high __ramtop+-1)
  8208  00157A  64F7               	cpfsgt	tblptrh,c
  8209  00157C  D003               	bra	i2u253_47
  8210  00157E  0008               	tblrd		*
  8211  001580  50F5               	movf	tablat,w,c
  8212  001582  D005               	bra	i2u253_40
  8213  001584                     i2u253_47:
  8214  001584  CFF6 FFE1          	movff	tblptrl,fsr1l
  8215  001588  CFF7 FFE2          	movff	tblptrh,fsr1h
  8216  00158C  50E7               	movf	indf1,w,c
  8217  00158E                     i2u253_40:
  8218  00158E  6E05               	movwf	??_strcmp& (0+255),c
  8219  001590  C003  FFF6         	movff	strcmp@s2,tblptrl
  8220  001594  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8221  001598  0E00               	movlw	low (__mediumconst shr (0+16))
  8222  00159A  6EF8               	movwf	tblptru,c
  8223  00159C  0E0F               	movlw	(high __ramtop+-1)
  8224  00159E  64F7               	cpfsgt	tblptrh,c
  8225  0015A0  D003               	bra	i2u254_47
  8226  0015A2  0008               	tblrd		*
  8227  0015A4  50F5               	movf	tablat,w,c
  8228  0015A6  D005               	bra	i2u254_40
  8229  0015A8                     i2u254_47:
  8230  0015A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8231  0015AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8232  0015B0  50E7               	movf	indf1,w,c
  8233  0015B2                     i2u254_40:
  8234  0015B2  0800               	sublw	0
  8235  0015B4  2405               	addwf	??_strcmp,w,c
  8236  0015B6  6E06               	movwf	strcmp@r,c
  8237  0015B8  5006               	movf	strcmp@r,w,c
  8238  0015BA  A4D8               	btfss	status,2,c
  8239  0015BC  D014               	goto	i2l2682
  8240  0015BE  C001  FFF6         	movff	strcmp@s1,tblptrl
  8241  0015C2  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8242  0015C6  0E00               	movlw	low (__mediumconst shr (0+16))
  8243  0015C8  6EF8               	movwf	tblptru,c
  8244  0015CA  0E0F               	movlw	(high __ramtop+-1)
  8245  0015CC  64F7               	cpfsgt	tblptrh,c
  8246  0015CE  D003               	bra	i2u256_47
  8247  0015D0  0008               	tblrd		*
  8248  0015D2  50F5               	movf	tablat,w,c
  8249  0015D4  D005               	bra	i2u256_40
  8250  0015D6                     i2u256_47:
  8251  0015D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8252  0015DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8253  0015DE  50E7               	movf	indf1,w,c
  8254  0015E0                     i2u256_40:
  8255  0015E0  0900               	iorlw	0
  8256  0015E2  A4D8               	btfss	status,2,c
  8257  0015E4  D7BF               	goto	i2l2676
  8258  0015E6                     i2l2682:
  8259  0015E6  5006               	movf	strcmp@r,w,c
  8260  0015E8  6E01               	movwf	?_strcmp,c
  8261  0015EA  6A02               	clrf	?_strcmp+1,c
  8262  0015EC  BE01               	btfsc	?_strcmp,7,c
  8263  0015EE  0602               	decf	?_strcmp+1,f,c
  8264  0015F0  0012               	return	
  8265  0015F2                     __end_of_strcmp:
  8266                           	opt stack 0
  8267                           tosu	equ	0xFFF
  8268                           tosh	equ	0xFFE
  8269                           tosl	equ	0xFFD
  8270                           pclatu	equ	0xFFB
  8271                           pclath	equ	0xFFA
  8272                           tblptru	equ	0xFF8
  8273                           tblptrh	equ	0xFF7
  8274                           tblptrl	equ	0xFF6
  8275                           tablat	equ	0xFF5
  8276                           prodh	equ	0xFF4
  8277                           prodl	equ	0xFF3
  8278                           intcon	equ	0xFF2
  8279                           intcon2	equ	0xFF1
  8280                           postinc0	equ	0xFEE
  8281                           fsr0h	equ	0xFEA
  8282                           fsr0l	equ	0xFE9
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           postdec1	equ	0xFE5
  8286                           fsr1h	equ	0xFE2
  8287                           fsr1l	equ	0xFE1
  8288                           indf2	equ	0xFDF
  8289                           postinc2	equ	0xFDE
  8290                           postdec2	equ	0xFDD
  8291                           fsr2h	equ	0xFDA
  8292                           fsr2l	equ	0xFD9
  8293                           status	equ	0xFD8
  8294                           
  8295 ;; *************** function _EUSART1_Read *****************
  8296 ;; Defined at:
  8297 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  readValue       1    0[COMRAM] unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      unsigned char 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8315 ;;Total ram usage:        1 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_EUSART1_Receive_ISR
  8321 ;;		_getch
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text46
  8326  001A4E                     __ptext46:
  8327                           	opt stack 0
  8328  001A4E                     _EUSART1_Read:
  8329                           	opt stack 22
  8330                           
  8331                           ;eusart1.c: 123: uint8_t readValue = 0;
  8332                           
  8333                           ;incstack = 0
  8334  001A4E  0E00               	movlw	0
  8335  001A50  6E01               	movwf	EUSART1_Read@readValue,c
  8336  001A52                     i2l2656:
  8337  001A52  502F               	movf	_eusart1RxCount,w,c	;volatile
  8338  001A54  B4D8               	btfsc	status,2,c
  8339  001A56  D7FD               	goto	i2l2656
  8340                           
  8341                           ;eusart1.c: 127: }
  8342                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  8343  001A58  9A9D               	bcf	3997,5,c	;volatile
  8344                           
  8345                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  8346  001A5A  5031               	movf	_eusart1RxTail,w,c
  8347  001A5C  0D01               	mullw	1
  8348  001A5E  0E00               	movlw	low _eusart1RxBuffer
  8349  001A60  24F3               	addwf	prodl,w,c
  8350  001A62  6ED9               	movwf	fsr2l,c
  8351  001A64  0E02               	movlw	high _eusart1RxBuffer
  8352  001A66  20F4               	addwfc	prodh,w,c
  8353  001A68  6EDA               	movwf	fsr2h,c
  8354  001A6A  50DF               	movf	indf2,w,c
  8355  001A6C  6E01               	movwf	EUSART1_Read@readValue,c
  8356  001A6E  2A31               	incf	_eusart1RxTail,f,c
  8357                           
  8358                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8359  001A70  0E7F               	movlw	127
  8360  001A72  6431               	cpfsgt	_eusart1RxTail,c
  8361  001A74  D002               	goto	i2l2666
  8362                           
  8363                           ;eusart1.c: 133: {
  8364                           ;eusart1.c: 134: eusart1RxTail = 0;
  8365  001A76  0E00               	movlw	0
  8366  001A78  6E31               	movwf	_eusart1RxTail,c
  8367  001A7A                     i2l2666:
  8368                           
  8369                           ;eusart1.c: 135: }
  8370                           ;eusart1.c: 136: eusart1RxCount--;
  8371  001A7A  062F               	decf	_eusart1RxCount,f,c	;volatile
  8372                           
  8373                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  8374  001A7C  8A9D               	bsf	3997,5,c	;volatile
  8375                           
  8376                           ;eusart1.c: 139: return readValue;
  8377  001A7E  5001               	movf	EUSART1_Read@readValue,w,c
  8378  001A80  0012               	return	
  8379  001A82                     __end_of_EUSART1_Read:
  8380                           	opt stack 0
  8381                           tosu	equ	0xFFF
  8382                           tosh	equ	0xFFE
  8383                           tosl	equ	0xFFD
  8384                           pclatu	equ	0xFFB
  8385                           pclath	equ	0xFFA
  8386                           tblptru	equ	0xFF8
  8387                           tblptrh	equ	0xFF7
  8388                           tblptrl	equ	0xFF6
  8389                           tablat	equ	0xFF5
  8390                           prodh	equ	0xFF4
  8391                           prodl	equ	0xFF3
  8392                           intcon	equ	0xFF2
  8393                           intcon2	equ	0xFF1
  8394                           postinc0	equ	0xFEE
  8395                           fsr0h	equ	0xFEA
  8396                           fsr0l	equ	0xFE9
  8397                           wreg	equ	0xFE8
  8398                           indf1	equ	0xFE7
  8399                           postdec1	equ	0xFE5
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           indf2	equ	0xFDF
  8403                           postinc2	equ	0xFDE
  8404                           postdec2	equ	0xFDD
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           tosu	equ	0xFFF
  8409                           tosh	equ	0xFFE
  8410                           tosl	equ	0xFFD
  8411                           pclatu	equ	0xFFB
  8412                           pclath	equ	0xFFA
  8413                           tblptru	equ	0xFF8
  8414                           tblptrh	equ	0xFF7
  8415                           tblptrl	equ	0xFF6
  8416                           tablat	equ	0xFF5
  8417                           prodh	equ	0xFF4
  8418                           prodl	equ	0xFF3
  8419                           intcon	equ	0xFF2
  8420                           intcon2	equ	0xFF1
  8421                           postinc0	equ	0xFEE
  8422                           fsr0h	equ	0xFEA
  8423                           fsr0l	equ	0xFE9
  8424                           wreg	equ	0xFE8
  8425                           indf1	equ	0xFE7
  8426                           postdec1	equ	0xFE5
  8427                           fsr1h	equ	0xFE2
  8428                           fsr1l	equ	0xFE1
  8429                           indf2	equ	0xFDF
  8430                           postinc2	equ	0xFDE
  8431                           postdec2	equ	0xFDD
  8432                           fsr2h	equ	0xFDA
  8433                           fsr2l	equ	0xFD9
  8434                           status	equ	0xFD8
  8435                           
  8436                           	psect	text47
  8437  000000                     __ptext47:
  8438                           	opt stack 0
  8439                           tosu	equ	0xFFF
  8440                           tosh	equ	0xFFE
  8441                           tosl	equ	0xFFD
  8442                           pclatu	equ	0xFFB
  8443                           pclath	equ	0xFFA
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           intcon	equ	0xFF2
  8451                           intcon2	equ	0xFF1
  8452                           postinc0	equ	0xFEE
  8453                           fsr0h	equ	0xFEA
  8454                           fsr0l	equ	0xFE9
  8455                           wreg	equ	0xFE8
  8456                           indf1	equ	0xFE7
  8457                           postdec1	equ	0xFE5
  8458                           fsr1h	equ	0xFE2
  8459                           fsr1l	equ	0xFE1
  8460                           indf2	equ	0xFDF
  8461                           postinc2	equ	0xFDE
  8462                           postdec2	equ	0xFDD
  8463                           fsr2h	equ	0xFDA
  8464                           fsr2l	equ	0xFD9
  8465                           status	equ	0xFD8
  8466                           
  8467                           	psect	rparam
  8468  0000                     tosu	equ	0xFFF
  8469                           tosh	equ	0xFFE
  8470                           tosl	equ	0xFFD
  8471                           pclatu	equ	0xFFB
  8472                           pclath	equ	0xFFA
  8473                           tblptru	equ	0xFF8
  8474                           tblptrh	equ	0xFF7
  8475                           tblptrl	equ	0xFF6
  8476                           tablat	equ	0xFF5
  8477                           prodh	equ	0xFF4
  8478                           prodl	equ	0xFF3
  8479                           intcon	equ	0xFF2
  8480                           intcon2	equ	0xFF1
  8481                           postinc0	equ	0xFEE
  8482                           fsr0h	equ	0xFEA
  8483                           fsr0l	equ	0xFE9
  8484                           wreg	equ	0xFE8
  8485                           indf1	equ	0xFE7
  8486                           postdec1	equ	0xFE5
  8487                           fsr1h	equ	0xFE2
  8488                           fsr1l	equ	0xFE1
  8489                           indf2	equ	0xFDF
  8490                           postinc2	equ	0xFDE
  8491                           postdec2	equ	0xFDD
  8492                           fsr2h	equ	0xFDA
  8493                           fsr2l	equ	0xFD9
  8494                           status	equ	0xFD8
  8495                           
  8496                           	psect	temp
  8497  00003A                     btemp:
  8498                           	opt stack 0
  8499  00003A                     	ds	1
  8500  0000                     int$flags	set	btemp
  8501                           tosu	equ	0xFFF
  8502                           tosh	equ	0xFFE
  8503                           tosl	equ	0xFFD
  8504                           pclatu	equ	0xFFB
  8505                           pclath	equ	0xFFA
  8506                           tblptru	equ	0xFF8
  8507                           tblptrh	equ	0xFF7
  8508                           tblptrl	equ	0xFF6
  8509                           tablat	equ	0xFF5
  8510                           prodh	equ	0xFF4
  8511                           prodl	equ	0xFF3
  8512                           intcon	equ	0xFF2
  8513                           intcon2	equ	0xFF1
  8514                           postinc0	equ	0xFEE
  8515                           fsr0h	equ	0xFEA
  8516                           fsr0l	equ	0xFE9
  8517                           wreg	equ	0xFE8
  8518                           indf1	equ	0xFE7
  8519                           postdec1	equ	0xFE5
  8520                           fsr1h	equ	0xFE2
  8521                           fsr1l	equ	0xFE1
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8


Data Sizes:
    Strings     401
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     56      99
    BANK1           256      0     256
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK1[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK1[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_28(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[5]), STR_5(CODE[16]), 

    S773__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S773__prbuf$ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 


Critical Paths under _main in COMRAM

    _rand->___lmul
    _process_message->_strstr
    _strtol->_isalpha
    _isalpha->_isupper
    _strstr->_strlen
    _strncmp->_strlen
    ___awmod->_rand
    __doprnt->___lwdiv
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->i2_strstr
    i2_strstr->i2_strncmp
    i2_strncmp->i2_strlen

Critical Paths under _main in BANK0

    _main->_process_message
    _srand->_strtol
    _rand->___lmul
    _process_message->_sprintf
    _strtol->___lmul
    _strstr->_strncmp
    _sprintf->__doprnt
    _InitRadio->_printf
    _getUUID->_printf
    _printf->__doprnt
    __doprnt->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   33752
                                             49 BANK0      7     7      0
                _EPWM1_LoadDutyValue
                          _InitRadio
                  _SYSTEM_Initialize
                            ___awmod
                             _printf
                    _process_message
                               _rand
                          _read_line
                              _srand
                             _strtol
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     108
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             41 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _process_message                                      8     6      2    9435
                                             41 BANK0      8     6      2
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2396
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             40 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             37 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     1      4    1500
                                             43 COMRAM     1     1      0
                                              9 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     423
                                              0 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     218
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     216
                                             37 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     6      8    5138
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     895
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRadio                                            0     0      0   13427
                            _getUUID
                             _printf
                          _read_line
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (2) _wait_5ms                                             6     4      2     174
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _getUUID                                              0     0      0    6728
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     203
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     6      8    6525
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             26    20      6    4628
                                              5 BANK0     22    16      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             38 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     108
                                             37 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1220
                                             23 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  3     3      0    1220
                                             20 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                           i2_strstr
 ---------------------------------------------------------------------------------
 (9) i2_strstr                                             5     1      4     697
                                             15 COMRAM     5     1      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (10) i2_strncmp                                           9     3      6     212
                                              6 COMRAM     9     3      6
                           i2_strlen (ARG)
 ---------------------------------------------------------------------------------
 (10) i2_strlen                                            6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (10) i2_strchr                                            5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _InitRadio
     _getUUID
       _printf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
             _EUSART1_Write
       _read_line
       _strcpy
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _read_line
     _wait_5ms
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
         _EUSART1_Write
   _process_message
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     i2_strstr
       i2_strchr
       i2_strlen
       i2_strncmp
         i2_strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      12        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Apr 11 14:33:56 2016

           _eusart1TxBufferRemaining 0039                  ___wmul@multiplicand 0028  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 191E                                  l280 1A32  
                                l347 0494                                  l822 18B8  
                                l832 1718                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0098                                  _val 009A  
                       ___awmod@sign 006D                      _TMR2_Initialize 1C36  
                                prod 000FF3                                  tosl 000FFD  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1056 0E74                                 l2220 1886  
                               l2204 1C00                                 l2222 188E  
                               l2232 18AE                                 l2224 1892  
                               l3202 02F8                                 l3212 03A0  
                               l3220 03F8                                 l3142 170A  
                               l3134 16D4                                 l2190 1940  
                               l3310 0708                                 l3222 0410  
                               l3214 03A8                                 l3206 0322  
                               l3230 044E                                 l2502 1780  
                               l3136 16E0                                 l2192 1942  
                               l3320 0784                                 l3312 0714  
                               l3304 06D4                                 l3240 04DA  
                               l3224 0436                                 l3208 033A  
                               l3160 0130                                 l2504 1784  
                               l3138 16E6                                 l2178 190E  
                               l3322 0798                                 l3242 0504  
                               l3170 016E                                 l3154 00F0  
                               l3402 1306                                 l3316 075A  
                               l3308 06FE                                 l3332 0816  
                               l3244 050A                                 l3180 01EE  
                               l3164 013A                                 l3148 009C  
                               l3404 134C                                 l3334 081C  
                               l3342 08C6                                 l3190 0240  
                               l3158 011E                                 l3510 110C  
                               l3336 086E                                 l3344 08D8  
                               l3352 094A                                 l3328 07EC  
                               l3280 05BC                                 l3256 0546  
                               l3272 0588                                 l3192 0280  
                               l2480 1C64                                 l3600 146E  
                               l2544 1960                                 l3408 1366  
                               l2560 1B7E                                 l3440 0C8A  
                               l3520 1172                                 l3258 054C  
                               l3274 059A                                 l3186 022E  
                               l3178 01E8                                 l3354 0956  
                               l2706 1A20                                 l3602 1474  
                               l3610 14A6                                 l2538 1946  
                               l2474 1BE2                                 l2570 1B4A  
                               l3442 0C92                                 l3426 0C40  
                               l3530 11EC                                 l3348 0920  
                               l3284 05F4                                 l3196 02A6  
                               l3188 023A                                 l3356 0976  
                               l3372 1620                                 l3444 0C9C  
                               l3516 1144                                 l3294 0658  
                               l3286 05FE                                 l3198 02B2  
                               l3614 14BA                                 l3606 1498  
                               l3382 1240                                 l2574 1B58  
                               l2558 1B7A                                 l3462 0CF8  
                               l3702 0C24                                 l2496 1ABC  
                               l3368 1602                                 l2584 1C32  
                               l3480 0D60                                 l3472 0D2E  
                               l3448 0CAC                                 l3640 0A28  
                               l3298 0682                                 l2498 1AC4  
                               l3386 1298                                 l3378 11FA  
                               l3458 0CE4                                 l3388 12A4  
                               l3396 12C8                                 l3484 0D72  
                               l3476 0D44                                 l3468 0D18  
                               l3590 143E                                 l3494 0E04  
                               l3680 0B68                                 l3594 144E  
                               l3498 0E34                                 l3658 0AAE  
                               l3684 0B8E                                 l3598 1462  
                               STR_1 FFDF                                 STR_2 FFE9  
                               STR_3 FFD3                                 STR_4 FFDC  
                               STR_5 FF53                                 STR_6 FF42  
                               STR_7 FFF9                                 STR_8 FFC7  
                               STR_9 FFA0                                 _LATA 000F89  
                               u2230 17A6                                 _LATB 000F8A  
                               _LATC 000F8B                                 u2237 179C  
                               u3360 039E                                 u3328 02E2  
                               u3280 027A                                 u3248 00D8  
                               u4137 0A30                                 u3370 03E2  
                               u4147 1A26                                 u3358 036A  
                               u3367 0394                                 u3287 0270  
                               u3608 0744                                 u3720 1238  
                               u3377 03D8                                 u3538 0642  
                               u3740 1262                                 u3727 122E  
                               u3648 07D6                                 u3568 06BE  
                               u3770 1338                                 u3747 1258  
                               i2l20 004E                                 u3668 0908  
                               i2l24 0058                                 u3777 132E  
                               u3980 1186                                 _TMR2 000FBC  
                               _WPUB 000F61                        _EUSART1_Write 190C  
                               _main 0982                                 _line 0180  
                               _rand 1722                        ?_EUSART1_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 003A                                 _uuid 009B  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
              ??_EPWM1_LoadDutyValue 0028                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1C64  
                              ?_main 0001                                ?_rand 002A  
                              STR_10 FF73                                STR_11 FF91  
                              STR_12 FF82                                STR_20 FF0C  
                              STR_13 FF1F                                STR_21 FEF9  
                              STR_22 FFAE                                STR_14 FF63  
                              STR_15 FFBB                                STR_23 FE8D  
                              STR_24 FEF9                                STR_16 FEC0  
                              STR_17 FEAD                                STR_25 FE6D  
                              STR_26 FEF9                                STR_18 FED3  
                              STR_27 FFAE                                STR_19 FEE6  
                              STR_28 FFF2                      __end_of___awmod 14C4  
                              STR_29 FF31                                _T2CON 000FBA  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 18C2  
                    __end_of___lwmod 1722                                i2l122 1B0A  
                              i2l138 0FBE                      __end_of__doprnt 0982  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                      __end_of_getUUID 1B38  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                  ___lmul@multiplicand 0064  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1AE0  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FE65  
                              _index 002D                      __end_of_isalpha 1B60  
                              _ready 0034                      __end_of_isdigit 1C08  
                              _randx 0035                   __CFG_MCLRE$EXTMCLR 000000  
                              _srand 1C48                                _putch 1C7A  
                              main@q 0094                      __end_of_isspace 1B86  
                     ?_EUSART1_Write 0001                      __end_of_isupper 1BEA  
                              pclath 000FFA                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                    __end_of_sprintf 1870                       __CFG_HFOFST$ON 000000  
                    _TMR2_StartTimer 1C88                      __end_of_strncmp 12C6  
                    __end_of_toupper 1C36                       __CFG_PBADEN$ON 000000  
                   __end_ofi2_strchr 19B2                     __end_ofi2_strlen 181E  
                   __end_ofi2_strstr 1562                      __initialization 165E  
         __end_of_EUSART1_Initialize 1A1A                         __end_of_main 0C40  
                       __end_of_rand 1776              __end_of_TMR2_Initialize 1C48  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0091  
                             ??_rand 002C                        __activetblptr 000003  
                 __size_ofi2_strncmp 00AE                ?_EUSART1_Transmit_ISR 0001  
                         i2strlen@cp 0005                           i2strstr@s1 0010  
                         i2strstr@s2 0012                               _CCPR1H 000FBF  
                             _CCPR1L 000FBE                               ?_srand 0078  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             i2l2604 1996                               i2l2620 1400  
                             i2l2612 1376                               i2l2622 1408  
                     __CFG_WDTEN$OFF 000000                               i2l2616 13B8  
                             i2l2810 1500                               i2l2804 14C6  
                             i2l2812 1542                               i2l2590 17D4  
                             i2l2830 1B06                               i2l2656 1A52  
                             i2l2592 17D8                               i2l2816 1558  
                             i2l2666 1A7A                               i2l2682 15E6  
                             i2l2676 1564                               i2l2852 0EC0  
                             i2l2860 0EF8                               i2l2844 0EAE  
                             i2l2836 0E8E                               i2l2678 156C  
                             i2l2598 197C                               i2l2862 0EFE  
                             i2l2880 0F76                               i2l2872 0F42  
                             i2l2882 0F7A                               i2l2858 0EF4  
                             i2l2886 0F9E                               i2l2888 0FBA  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                 __size_of_InitRadio 011E                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                               ___lmul 15F2  
                             ___wmul 1B86                       __CFG_STVREN$ON 000000  
                          ??___awmod 002C                            ??___lwdiv 002A  
                          ??___lwmod 002D                            ??__doprnt 006B  
                             clear_0 1664                               clear_1 1672  
                             clear_2 1684                               clear_3 1690  
                    ___awmod@divisor 006A                            ??_getUUID 002D  
                       __doprnt@flag 0077                      ___awmod@counter 006C  
                             _printf 18C2                         __doprnt@prec 0070  
                             _strchr 1946                               _strcmp 1562  
                             _strcpy 1AB2                               _strlen 1776  
                             _strtol 0C40                               _strstr 12C6  
                   __end_of_wait_5ms 1A4E                         __pdataCOMRAM 0035  
                          ??_isalpha 0029                            ??_isdigit 0026  
                       __mediumconst FE5A                            ??_isspace 0026  
                             tblptrh 000FF7                            ??_isupper 0026  
                             tblptrl 000FF6                               tblptru 000FF8  
                             srand@x 0078                      ??_EUSART1_Write 0026  
            __end_of_TMR2_StartTimer 1C8C                            ??_sprintf 002D  
                    _eusart1RxBuffer 0200                            ??_strncmp 0066  
                          ??_toupper 0026        __size_of_INTERRUPT_Initialize 000A  
                    _eusart1TxBuffer 0100                    _SYSTEM_Initialize 1C08  
                         __accesstop 0060              __end_of__initialization 16B6  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                  __end_ofi2_strncmp 1422                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0026  
                 ??_EPWM1_Initialize 0026                        __end_of_srand 1C56  
                      __end_of_putch 1C84                     ?_TMR2_Initialize 0001  
                  __end_of_InitRadio 10EA                 __end_of_EUSART1_Read 1A82  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 0FCC  
           __size_of_process_message 010E                            ?i2_strchr 0001  
                          ?i2_strlen 0001                           __doprnt@ap 0069  
                         __doprnt@cp 0073                           __doprnt@pb 0065  
                          ?i2_strstr 0010            __end_of_SYSTEM_Initialize 1C22  
                            ??_srand 002C                              ??_putch 0027  
                      _eusart1RxHead 0030                        _eusart1TxHead 0032  
                      _eusart1RxTail 0031                           __pbssBANK0 0098  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0033                      __CFG_PLLCFG$OFF 000000  
                        i2strchr@chr 0003                          i2strchr@ptr 0001  
                         __pnvCOMRAM 0039                   __size_of_read_line 000C  
                        i2strncmp@s1 0007                          i2strncmp@s2 0009  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 0060  
                            ?___wmul 0026                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                     ___lmul@product 0026                              ?_printf 007B  
                            ?_strchr 0026                              ?_strcmp 0001  
                            ?_strcpy 0026                              ?_strlen 0026  
                            ?_strtol 0068                              ?_strstr 0069  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7                              _SPBRGH1 000FB0  
                         ??i2_strchr 0005                           ??i2_strlen 0003  
                         ??i2_strstr 0014                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 1AB2                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          ?_wait_5ms 0026                      __size_of___lmul 006C  
                            ___awmod 1422                      __size_of___wmul 0026  
                            ___lwdiv 1870                              ___lwmod 16C0  
                            __doprnt 0098                              __pcinit 165E  
                            _getUUID 1B0E                              __ramtop 1000  
              process_message@hexval 008D                              __ptext0 0982  
                            __ptext1 1C48                              __ptext2 1722  
                            __ptext3 10EA                              __ptext4 0C40  
                            __ptext5 1C22                              __ptext6 1B60  
                            __ptext7 1B38                              __ptext8 1BCC  
                            __ptext9 15F2                      __size_of_printf 004A  
                    __size_of_strchr 0036                      __size_of_strcmp 0090  
                    __size_of_strcpy 002E                      __size_of_strlen 0054  
                  __end_of_hexpowers FE6D                      __size_of_strtol 0246  
                    __size_of_strstr 00AE                              _dpowers FE5B  
              _OSCILLATOR_Initialize 1C56                            _T2CONbits 000FBA  
                            _isalpha 1B38                              _isdigit 1BEA  
                   ___awmod@dividend 0068                    __end_of_read_line 1C70  
                 _EUSART1_Initialize 19E6             ??_PIN_MANAGER_Initialize 0026  
                            _isspace 1B60                              _isupper 1BCC  
         __size_of_SYSTEM_Initialize 001A                              _sprintf 181E  
                      __doprnt@width 0078                              _strncmp 11F8  
                            _toupper 1C22                 end_of_initialization 16B6  
                ?_EUSART1_Initialize 0001                    ??_process_message 002D  
                         ??_wait_5ms 0028                              printf@f 007B  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0026  
                            strcmp@r 0006                              strlen@s 0026  
                            strtol@a 0073                              strtol@c 0077  
                            strtol@s 0068                         strtol@endptr 006A  
                EUSART1_Write@txData 0026                         _EUSART1_Read 1A4E  
       __end_of_INTERRUPT_Initialize 1C7A                            i2_strncmp 1374  
                     __end_of___lmul 165E                       __end_of___wmul 1BAC  
                      __pidataCOMRAM 1C84               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 190C                       __end_of_strchr 197C  
                     __end_of_strcmp 15F2                       __end_of_strcpy 1AE0  
                     __end_of_strlen 17CA                       __end_of_strtol 0E86  
                     __end_of_strstr 1374                  start_initialization 165E  
          __size_of_EPWM1_Initialize 0020                            _InitRadio 0FCC  
    __size_of_PIN_MANAGER_Initialize 0034                          putch@txData 0027  
       EPWM1_LoadDutyValue@dutyValue 0026                __end_of_EUSART1_Write 1946  
                  __size_ofi2_strchr 0036                    __size_ofi2_strlen 0054  
                          i2strlen@s 0001                    __size_ofi2_strstr 009E  
                           ??___lmul 0026                             ??___wmul 002A  
                         ?i2_strncmp 0007                          __doprnt@idx 006F  
                        __doprnt@len 0071                          __doprnt@val 0075  
                           ??_printf 002D                             ??_strchr 002A  
                           ??_strcmp 0005                             ??_strcpy 002A  
                           ??_strlen 0028                             ??_strtol 006E  
                     _eusart1RxCount 002F                             ??_strstr 002C  
                        __pbssCOMRAM 002D        __size_of_EUSART1_Transmit_ISR 002E  
                      __pcstackBANK0 0060                           ?_InitRadio 0001  
                       _isalpha$1313 002A             __size_of_TMR2_Initialize 0012  
                       _isdigit$1033 0027         __size_of_EUSART1_Receive_ISR 0146  
                          __doprnt@c 007A                            __doprnt@f 0067  
                       i2strncmp@len 000B                     ___lwdiv@dividend 0026  
             _PIN_MANAGER_Initialize 19B2                            __pintcode 0008  
                      __pmediumconst FE5A                             ?___awmod 0068  
                  __size_of_wait_5ms 0034                             ?___lwdiv 0026  
                           ?___lwmod 0060                             ?__doprnt 0065  
                           ?_getUUID 0001         ??_INTERRUPT_InterruptManager 0018  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
                           ?_isalpha 0001                             ?_isdigit 0001  
                    _process_message 10EA                             ?_isspace 0001  
                           ?_isupper 0001             EUSART1_Receive_ISR@state 0016  
                          _hexpowers FE65                     ___lwdiv@quotient 002A  
                           ?_sprintf 007B                             ?_strncmp 0060  
                          _read_line 1C64                             ?_toupper 0001  
                     __size_of_srand 000E                       __size_of_putch 000A  
               _INTERRUPT_Initialize 1C70                       ___wmul@product 002A  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
           __size_of_TMR2_StartTimer 0004  __size_of_INTERRUPT_InterruptManager 008C  
                           i2u242_40 17FA                             i2u242_47 17F0  
                           i2u253_40 158E                             i2u253_47 1584  
                           i2u254_40 15B2                             i2u254_47 15A8  
                           i2u247_40 13B2                             i2u247_47 13A8  
                           i2u256_40 15E0                             i2u256_47 15D6  
                           i2u249_40 13DA                             _PIR1bits 000F9E  
                           i2u249_47 13D0                             i2u279_40 152E  
                           i2u279_47 1524         __size_of_EPWM1_LoadDutyValue 0030  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                          _uartState 0099                             _PSTR1CON 000FB9  
                        ??i2_strncmp 000D                    ___wmul@multiplier 0026  
                          main@delay 0096                     _EPWM1_Initialize 1BAC  
                        ??_InitRadio 002D                         _isspace$1316 0027  
                           i2_strchr 197C                             i2_strlen 17CA  
                           i2_strstr 14C4                    ___lmul@multiplier 0060  
                        _INTCON2bits 000FF1                           ?_read_line 0001  
                          copy_data0 16AA                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0026                EUSART1_Read@readValue 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                   process_message@res 008B  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0026  
                   __size_of___awmod 00A2          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 0052              __end_of_process_message 11F8  
                   __size_of___lwmod 0062                     __size_of__doprnt 08EA  
                   __size_of_getUUID 002A                         _isupper$1319 0027  
                   __size_of_isalpha 0028                     __size_of_isdigit 001E  
                    ___lwdiv@divisor 0028                     __size_of_isspace 0026  
                    ___lwdiv@counter 002C                             __ptext10 12C6  
                           __ptext11 11F8                             __ptext20 1C56  
                           __ptext12 1776                             __ptext21 1C70  
                           __ptext13 1946                             __ptext30 0098  
                           __ptext22 19E6                             __ptext14 181E  
                           __ptext31 1C7A                             __ptext23 1BAC  
                           __ptext15 1422                             __ptext40 0E86  
                           __ptext32 190C                             __ptext24 0FCC  
                           __ptext16 1C08                             __ptext41 14C4  
                           __ptext33 1BEA                             __ptext25 1A1A  
                           __ptext17 1C36                             __ptext42 1374  
                           __ptext34 1B86                             __ptext26 1B0E  
                           __ptext18 1C88                             __ptext43 17CA  
                           __ptext35 16C0                             __ptext27 1AB2  
                           __ptext19 19B2                             __ptext44 197C  
                           __ptext36 1870                             __ptext28 1C64  
                           __ptext45 1562                             __ptext37 1A82  
                           __ptext29 18C2                             __ptext46 1A4E  
                           __ptext47 0000                             __ptext39 1AE0  
                   __size_of_isupper 001E                     __size_of_sprintf 0052  
                   __size_of_strncmp 00CE                     __size_of_toupper 0014  
                         strcpy@from 0028                        __size_of_main 02BE  
                      __size_of_rand 0054                            wait_5ms@i 002B  
                          wait_5ms@j 0026                           strncmp@len 0064  
                           _wait_5ms 1A1A                             int$flags 003A  
                         strtol@base 006C                           strtol@sign 0072  
                  ??_TMR2_StartTimer 0026   __end_of_INTERRUPT_InterruptManager 0094  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0E86  
                         _INTCONbits 000FF2                             isalpha@c 002B  
                           isdigit@c 0028               ??_INTERRUPT_Initialize 0026  
                        ??_read_line 0026                             intlevel2 0000  
                          sprintf@ap 0083                            sprintf@pb 0085  
                          sprintf@wh 007B                 ?_EUSART1_Receive_ISR 0001  
                          strchr@chr 0028                     ___lwmod@dividend 0060  
                          strchr@ptr 0026                             isspace@c 0028  
            ?_PIN_MANAGER_Initialize 0001                           _RCSTA1bits 000FAB  
                           isupper@c 0028         __end_of_EUSART1_Transmit_ISR 1B0E  
                          strncmp@s1 0060                            strncmp@s2 0062  
                           printf@ap 0083                             printf@pb 0085  
                   ?_process_message 0089               __size_of_EUSART1_Write 003A  
                           sprintf@f 007D                             strcmp@s1 0001  
                           strcmp@s2 0003                      ___lwmod@divisor 0062  
                           strcpy@cp 002A                             strlen@cp 002A  
                           strcpy@to 0026                      ___lwmod@counter 0064  
                           toupper@c 0026                    __CFG_T3CMX$PORTC0 000000  
                _EPWM1_LoadDutyValue 1A82                             strstr@s1 0069  
                           strstr@s2 006B                ??_EUSART1_Receive_ISR 0015  
     __end_of_PIN_MANAGER_Initialize 19E6                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 1BCC                 ?_EPWM1_LoadDutyValue 0026  
