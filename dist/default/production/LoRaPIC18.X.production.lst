

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Mar 21 00:20:15 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataCOMRAM
    69  001CF4                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _randx
    73  001CF4  0001               	dw	1
    74  001CF6  0000               	dw	0
    75                           
    76                           	psect	mediumconst
    77  00FE5A                     __pmediumconst:
    78                           	opt stack 0
    79  00FE5A  00                 	db	0
    80  00FE5B                     _dpowers:
    81                           	opt stack 0
    82  00FE5B  0001               	dw	1
    83  00FE5D  000A               	dw	10
    84  00FE5F  0064               	dw	100
    85  00FE61  03E8               	dw	1000
    86  00FE63  2710               	dw	10000
    87  00FE65                     __end_of_dpowers:
    88                           	opt stack 0
    89  00FE65                     _hexpowers:
    90                           	opt stack 0
    91  00FE65  0001               	dw	1
    92  00FE67  0010               	dw	16
    93  00FE69  0100               	dw	256
    94  00FE6B  1000               	dw	4096
    95  00FE6D                     __end_of_hexpowers:
    96                           	opt stack 0
    97  00FE6D                     STR_25:
    98  00FE6D  72                 	db	114	;'r'
    99  00FE6E  61                 	db	97	;'a'
   100  00FE6F  64                 	db	100	;'d'
   101  00FE70  69                 	db	105	;'i'
   102  00FE71  6F                 	db	111	;'o'
   103  00FE72  20                 	db	32
   104  00FE73  74                 	db	116	;'t'
   105  00FE74  78                 	db	120	;'x'
   106  00FE75  20                 	db	32
   107  00FE76  34                 	db	52	;'4'
   108  00FE77  32                 	db	50	;'2'
   109  00FE78  25                 	db	37
   110  00FE79  73                 	db	115	;'s'
   111  00FE7A  25                 	db	37
   112  00FE7B  30                 	db	48	;'0'
   113  00FE7C  32                 	db	50	;'2'
   114  00FE7D  58                 	db	88	;'X'
   115  00FE7E  25                 	db	37
   116  00FE7F  30                 	db	48	;'0'
   117  00FE80  32                 	db	50	;'2'
   118  00FE81  58                 	db	88	;'X'
   119  00FE82  30                 	db	48	;'0'
   120  00FE83  30                 	db	48	;'0'
   121  00FE84  30                 	db	48	;'0'
   122  00FE85  30                 	db	48	;'0'
   123  00FE86  30                 	db	48	;'0'
   124  00FE87  30                 	db	48	;'0'
   125  00FE88  30                 	db	48	;'0'
   126  00FE89  30                 	db	48	;'0'
   127  00FE8A  0D                 	db	13
   128  00FE8B  0A                 	db	10
   129  00FE8C  00                 	db	0
   130  00FE8D                     STR_23:
   131  00FE8D  72                 	db	114	;'r'
   132  00FE8E  61                 	db	97	;'a'
   133  00FE8F  64                 	db	100	;'d'
   134  00FE90  69                 	db	105	;'i'
   135  00FE91  6F                 	db	111	;'o'
   136  00FE92  20                 	db	32
   137  00FE93  74                 	db	116	;'t'
   138  00FE94  78                 	db	120	;'x'
   139  00FE95  20                 	db	32
   140  00FE96  34                 	db	52	;'4'
   141  00FE97  32                 	db	50	;'2'
   142  00FE98  25                 	db	37
   143  00FE99  73                 	db	115	;'s'
   144  00FE9A  25                 	db	37
   145  00FE9B  30                 	db	48	;'0'
   146  00FE9C  32                 	db	50	;'2'
   147  00FE9D  58                 	db	88	;'X'
   148  00FE9E  25                 	db	37
   149  00FE9F  30                 	db	48	;'0'
   150  00FEA0  32                 	db	50	;'2'
   151  00FEA1  58                 	db	88	;'X'
   152  00FEA2  30                 	db	48	;'0'
   153  00FEA3  30                 	db	48	;'0'
   154  00FEA4  30                 	db	48	;'0'
   155  00FEA5  30                 	db	48	;'0'
   156  00FEA6  30                 	db	48	;'0'
   157  00FEA7  30                 	db	48	;'0'
   158  00FEA8  30                 	db	48	;'0'
   159  00FEA9  31                 	db	49	;'1'
   160  00FEAA  0D                 	db	13
   161  00FEAB  0A                 	db	10
   162  00FEAC  00                 	db	0
   163  00FEAD                     STR_17:
   164  00FEAD  72                 	db	114	;'r'
   165  00FEAE  61                 	db	97	;'a'
   166  00FEAF  64                 	db	100	;'d'
   167  00FEB0  69                 	db	105	;'i'
   168  00FEB1  6F                 	db	111	;'o'
   169  00FEB2  20                 	db	32
   170  00FEB3  73                 	db	115	;'s'
   171  00FEB4  65                 	db	101	;'e'
   172  00FEB5  74                 	db	116	;'t'
   173  00FEB6  20                 	db	32
   174  00FEB7  62                 	db	98	;'b'
   175  00FEB8  77                 	db	119	;'w'
   176  00FEB9  20                 	db	32
   177  00FEBA  35                 	db	53	;'5'
   178  00FEBB  30                 	db	48	;'0'
   179  00FEBC  30                 	db	48	;'0'
   180  00FEBD  0D                 	db	13
   181  00FEBE  0A                 	db	10
   182  00FEBF  00                 	db	0
   183  00FEC0                     STR_16:
   184  00FEC0  72                 	db	114	;'r'
   185  00FEC1  61                 	db	97	;'a'
   186  00FEC2  64                 	db	100	;'d'
   187  00FEC3  69                 	db	105	;'i'
   188  00FEC4  6F                 	db	111	;'o'
   189  00FEC5  20                 	db	32
   190  00FEC6  73                 	db	115	;'s'
   191  00FEC7  65                 	db	101	;'e'
   192  00FEC8  74                 	db	116	;'t'
   193  00FEC9  20                 	db	32
   194  00FECA  70                 	db	112	;'p'
   195  00FECB  77                 	db	119	;'w'
   196  00FECC  72                 	db	114	;'r'
   197  00FECD  20                 	db	32
   198  00FECE  2D                 	db	45
   199  00FECF  32                 	db	50	;'2'
   200  00FED0  0D                 	db	13
   201  00FED1  0A                 	db	10
   202  00FED2  00                 	db	0
   203  00FED3                     STR_18:
   204  00FED3  72                 	db	114	;'r'
   205  00FED4  61                 	db	97	;'a'
   206  00FED5  64                 	db	100	;'d'
   207  00FED6  69                 	db	105	;'i'
   208  00FED7  6F                 	db	111	;'o'
   209  00FED8  20                 	db	32
   210  00FED9  73                 	db	115	;'s'
   211  00FEDA  65                 	db	101	;'e'
   212  00FEDB  74                 	db	116	;'t'
   213  00FEDC  20                 	db	32
   214  00FEDD  73                 	db	115	;'s'
   215  00FEDE  66                 	db	102	;'f'
   216  00FEDF  20                 	db	32
   217  00FEE0  73                 	db	115	;'s'
   218  00FEE1  66                 	db	102	;'f'
   219  00FEE2  37                 	db	55	;'7'
   220  00FEE3  0D                 	db	13
   221  00FEE4  0A                 	db	10
   222  00FEE5  00                 	db	0
   223  00FEE6                     STR_19:
   224  00FEE6  72                 	db	114	;'r'
   225  00FEE7  61                 	db	97	;'a'
   226  00FEE8  64                 	db	100	;'d'
   227  00FEE9  69                 	db	105	;'i'
   228  00FEEA  6F                 	db	111	;'o'
   229  00FEEB  20                 	db	32
   230  00FEEC  73                 	db	115	;'s'
   231  00FEED  65                 	db	101	;'e'
   232  00FEEE  74                 	db	116	;'t'
   233  00FEEF  20                 	db	32
   234  00FEF0  63                 	db	99	;'c'
   235  00FEF1  72                 	db	114	;'r'
   236  00FEF2  20                 	db	32
   237  00FEF3  34                 	db	52	;'4'
   238  00FEF4  2F                 	db	47
   239  00FEF5  38                 	db	56	;'8'
   240  00FEF6  0D                 	db	13
   241  00FEF7  0A                 	db	10
   242  00FEF8  00                 	db	0
   243  00FEF9                     STR_21:
   244  00FEF9  72                 	db	114	;'r'
   245  00FEFA  61                 	db	97	;'a'
   246  00FEFB  64                 	db	100	;'d'
   247  00FEFC  69                 	db	105	;'i'
   248  00FEFD  6F                 	db	111	;'o'
   249  00FEFE  20                 	db	32
   250  00FEFF  73                 	db	115	;'s'
   251  00FF00  65                 	db	101	;'e'
   252  00FF01  74                 	db	116	;'t'
   253  00FF02  20                 	db	32
   254  00FF03  77                 	db	119	;'w'
   255  00FF04  64                 	db	100	;'d'
   256  00FF05  74                 	db	116	;'t'
   257  00FF06  20                 	db	32
   258  00FF07  25                 	db	37
   259  00FF08  64                 	db	100	;'d'
   260  00FF09  0D                 	db	13
   261  00FF0A  0A                 	db	10
   262  00FF0B  00                 	db	0
   263  00FF0C                     STR_20:
   264  00FF0C  72                 	db	114	;'r'
   265  00FF0D  61                 	db	97	;'a'
   266  00FF0E  64                 	db	100	;'d'
   267  00FF0F  69                 	db	105	;'i'
   268  00FF10  6F                 	db	111	;'o'
   269  00FF11  20                 	db	32
   270  00FF12  73                 	db	115	;'s'
   271  00FF13  65                 	db	101	;'e'
   272  00FF14  74                 	db	116	;'t'
   273  00FF15  20                 	db	32
   274  00FF16  63                 	db	99	;'c'
   275  00FF17  72                 	db	114	;'r'
   276  00FF18  63                 	db	99	;'c'
   277  00FF19  20                 	db	32
   278  00FF1A  6F                 	db	111	;'o'
   279  00FF1B  6E                 	db	110	;'n'
   280  00FF1C  0D                 	db	13
   281  00FF1D  0A                 	db	10
   282  00FF1E  00                 	db	0
   283  00FF1F                     STR_13:
   284  00FF1F  72                 	db	114	;'r'
   285  00FF20  61                 	db	97	;'a'
   286  00FF21  64                 	db	100	;'d'
   287  00FF22  69                 	db	105	;'i'
   288  00FF23  6F                 	db	111	;'o'
   289  00FF24  20                 	db	32
   290  00FF25  67                 	db	103	;'g'
   291  00FF26  65                 	db	101	;'e'
   292  00FF27  74                 	db	116	;'t'
   293  00FF28  20                 	db	32
   294  00FF29  70                 	db	112	;'p'
   295  00FF2A  72                 	db	114	;'r'
   296  00FF2B  6C                 	db	108	;'l'
   297  00FF2C  65                 	db	101	;'e'
   298  00FF2D  6E                 	db	110	;'n'
   299  00FF2E  0D                 	db	13
   300  00FF2F  0A                 	db	10
   301  00FF30  00                 	db	0
   302  00FF31                     STR_29:
   303  00FF31  30                 	db	48	;'0'
   304  00FF32  31                 	db	49	;'1'
   305  00FF33  32                 	db	50	;'2'
   306  00FF34  33                 	db	51	;'3'
   307  00FF35  34                 	db	52	;'4'
   308  00FF36  35                 	db	53	;'5'
   309  00FF37  36                 	db	54	;'6'
   310  00FF38  37                 	db	55	;'7'
   311  00FF39  38                 	db	56	;'8'
   312  00FF3A  39                 	db	57	;'9'
   313  00FF3B  41                 	db	65	;'A'
   314  00FF3C  42                 	db	66	;'B'
   315  00FF3D  43                 	db	67	;'C'
   316  00FF3E  44                 	db	68	;'D'
   317  00FF3F  45                 	db	69	;'E'
   318  00FF40  46                 	db	70	;'F'
   319  00FF41  00                 	db	0
   320  00FF42                     STR_6:
   321  00FF42  46                 	db	70	;'F'
   322  00FF43  46                 	db	70	;'F'
   323  00FF44  46                 	db	70	;'F'
   324  00FF45  46                 	db	70	;'F'
   325  00FF46  46                 	db	70	;'F'
   326  00FF47  46                 	db	70	;'F'
   327  00FF48  46                 	db	70	;'F'
   328  00FF49  46                 	db	70	;'F'
   329  00FF4A  46                 	db	70	;'F'
   330  00FF4B  46                 	db	70	;'F'
   331  00FF4C  46                 	db	70	;'F'
   332  00FF4D  46                 	db	70	;'F'
   333  00FF4E  46                 	db	70	;'F'
   334  00FF4F  46                 	db	70	;'F'
   335  00FF50  46                 	db	70	;'F'
   336  00FF51  46                 	db	70	;'F'
   337  00FF52  00                 	db	0
   338  00FF53                     STR_5:
   339  00FF53  73                 	db	115	;'s'
   340  00FF54  79                 	db	121	;'y'
   341  00FF55  73                 	db	115	;'s'
   342  00FF56  20                 	db	32
   343  00FF57  67                 	db	103	;'g'
   344  00FF58  65                 	db	101	;'e'
   345  00FF59  74                 	db	116	;'t'
   346  00FF5A  20                 	db	32
   347  00FF5B  68                 	db	104	;'h'
   348  00FF5C  77                 	db	119	;'w'
   349  00FF5D  65                 	db	101	;'e'
   350  00FF5E  75                 	db	117	;'u'
   351  00FF5F  69                 	db	105	;'i'
   352  00FF60  0D                 	db	13
   353  00FF61  0A                 	db	10
   354  00FF62  00                 	db	0
   355  00FF63                     STR_14:
   356  00FF63  72                 	db	114	;'r'
   357  00FF64  61                 	db	97	;'a'
   358  00FF65  64                 	db	100	;'d'
   359  00FF66  69                 	db	105	;'i'
   360  00FF67  6F                 	db	111	;'o'
   361  00FF68  20                 	db	32
   362  00FF69  67                 	db	103	;'g'
   363  00FF6A  65                 	db	101	;'e'
   364  00FF6B  74                 	db	116	;'t'
   365  00FF6C  20                 	db	32
   366  00FF6D  70                 	db	112	;'p'
   367  00FF6E  77                 	db	119	;'w'
   368  00FF6F  72                 	db	114	;'r'
   369  00FF70  0D                 	db	13
   370  00FF71  0A                 	db	10
   371  00FF72  00                 	db	0
   372  00FF73                     STR_10:
   373  00FF73  72                 	db	114	;'r'
   374  00FF74  61                 	db	97	;'a'
   375  00FF75  64                 	db	100	;'d'
   376  00FF76  69                 	db	105	;'i'
   377  00FF77  6F                 	db	111	;'o'
   378  00FF78  20                 	db	32
   379  00FF79  67                 	db	103	;'g'
   380  00FF7A  65                 	db	101	;'e'
   381  00FF7B  74                 	db	116	;'t'
   382  00FF7C  20                 	db	32
   383  00FF7D  73                 	db	115	;'s'
   384  00FF7E  66                 	db	102	;'f'
   385  00FF7F  0D                 	db	13
   386  00FF80  0A                 	db	10
   387  00FF81  00                 	db	0
   388  00FF82                     STR_12:
   389  00FF82  72                 	db	114	;'r'
   390  00FF83  61                 	db	97	;'a'
   391  00FF84  64                 	db	100	;'d'
   392  00FF85  69                 	db	105	;'i'
   393  00FF86  6F                 	db	111	;'o'
   394  00FF87  20                 	db	32
   395  00FF88  67                 	db	103	;'g'
   396  00FF89  65                 	db	101	;'e'
   397  00FF8A  74                 	db	116	;'t'
   398  00FF8B  20                 	db	32
   399  00FF8C  63                 	db	99	;'c'
   400  00FF8D  72                 	db	114	;'r'
   401  00FF8E  0D                 	db	13
   402  00FF8F  0A                 	db	10
   403  00FF90  00                 	db	0
   404  00FF91                     STR_11:
   405  00FF91  72                 	db	114	;'r'
   406  00FF92  61                 	db	97	;'a'
   407  00FF93  64                 	db	100	;'d'
   408  00FF94  69                 	db	105	;'i'
   409  00FF95  6F                 	db	111	;'o'
   410  00FF96  20                 	db	32
   411  00FF97  67                 	db	103	;'g'
   412  00FF98  65                 	db	101	;'e'
   413  00FF99  74                 	db	116	;'t'
   414  00FF9A  20                 	db	32
   415  00FF9B  62                 	db	98	;'b'
   416  00FF9C  77                 	db	119	;'w'
   417  00FF9D  0D                 	db	13
   418  00FF9E  0A                 	db	10
   419  00FF9F  00                 	db	0
   420  00FFA0                     STR_9:
   421  00FFA0  73                 	db	115	;'s'
   422  00FFA1  79                 	db	121	;'y'
   423  00FFA2  73                 	db	115	;'s'
   424  00FFA3  20                 	db	32
   425  00FFA4  67                 	db	103	;'g'
   426  00FFA5  65                 	db	101	;'e'
   427  00FFA6  74                 	db	116	;'t'
   428  00FFA7  20                 	db	32
   429  00FFA8  76                 	db	118	;'v'
   430  00FFA9  65                 	db	101	;'e'
   431  00FFAA  72                 	db	114	;'r'
   432  00FFAB  0D                 	db	13
   433  00FFAC  0A                 	db	10
   434  00FFAD  00                 	db	0
   435  00FFAE                     STR_22:
   436  00FFAE  72                 	db	114	;'r'
   437  00FFAF  61                 	db	97	;'a'
   438  00FFB0  64                 	db	100	;'d'
   439  00FFB1  69                 	db	105	;'i'
   440  00FFB2  6F                 	db	111	;'o'
   441  00FFB3  20                 	db	32
   442  00FFB4  72                 	db	114	;'r'
   443  00FFB5  78                 	db	120	;'x'
   444  00FFB6  20                 	db	32
   445  00FFB7  30                 	db	48	;'0'
   446  00FFB8  0D                 	db	13
   447  00FFB9  0A                 	db	10
   448  00FFBA  00                 	db	0
   449  00FFBB                     STR_15:
   450  00FFBB  6D                 	db	109	;'m'
   451  00FFBC  61                 	db	97	;'a'
   452  00FFBD  63                 	db	99	;'c'
   453  00FFBE  20                 	db	32
   454  00FFBF  70                 	db	112	;'p'
   455  00FFC0  61                 	db	97	;'a'
   456  00FFC1  75                 	db	117	;'u'
   457  00FFC2  73                 	db	115	;'s'
   458  00FFC3  65                 	db	101	;'e'
   459  00FFC4  0D                 	db	13
   460  00FFC5  0A                 	db	10
   461  00FFC6  00                 	db	0
   462  00FFC7                     STR_8:
   463  00FFC7  73                 	db	115	;'s'
   464  00FFC8  79                 	db	121	;'y'
   465  00FFC9  73                 	db	115	;'s'
   466  00FFCA  20                 	db	32
   467  00FFCB  72                 	db	114	;'r'
   468  00FFCC  65                 	db	101	;'e'
   469  00FFCD  73                 	db	115	;'s'
   470  00FFCE  65                 	db	101	;'e'
   471  00FFCF  74                 	db	116	;'t'
   472  00FFD0  0D                 	db	13
   473  00FFD1  0A                 	db	10
   474  00FFD2  00                 	db	0
   475  00FFD3                     STR_3:
   476  00FFD3  72                 	db	114	;'r'
   477  00FFD4  61                 	db	97	;'a'
   478  00FFD5  64                 	db	100	;'d'
   479  00FFD6  69                 	db	105	;'i'
   480  00FFD7  6F                 	db	111	;'o'
   481  00FFD8  5F                 	db	95	;'_'
   482  00FFD9  74                 	db	116	;'t'
   483  00FFDA  78                 	db	120	;'x'
   484  00FFDB  5F                 	db	95	;'_'
   485  00FFDC  6F                 	db	111	;'o'
   486  00FFDD  6B                 	db	107	;'k'
   487  00FFDE  00                 	db	0
   488  00FFDF                     STR_1:
   489  00FFDF  72                 	db	114	;'r'
   490  00FFE0  61                 	db	97	;'a'
   491  00FFE1  64                 	db	100	;'d'
   492  00FFE2  69                 	db	105	;'i'
   493  00FFE3  6F                 	db	111	;'o'
   494  00FFE4  5F                 	db	95	;'_'
   495  00FFE5  65                 	db	101	;'e'
   496  00FFE6  72                 	db	114	;'r'
   497  00FFE7  72                 	db	114	;'r'
   498  00FFE8  00                 	db	0
   499  00FFE9                     STR_2:
   500  00FFE9  72                 	db	114	;'r'
   501  00FFEA  61                 	db	97	;'a'
   502  00FFEB  64                 	db	100	;'d'
   503  00FFEC  69                 	db	105	;'i'
   504  00FFED  6F                 	db	111	;'o'
   505  00FFEE  5F                 	db	95	;'_'
   506  00FFEF  72                 	db	114	;'r'
   507  00FFF0  78                 	db	120	;'x'
   508  00FFF1  00                 	db	0
   509  00FFF2                     STR_28:
   510  00FFF2  28                 	db	40
   511  00FFF3  6E                 	db	110	;'n'
   512  00FFF4  75                 	db	117	;'u'
   513  00FFF5  6C                 	db	108	;'l'
   514  00FFF6  6C                 	db	108	;'l'
   515  00FFF7  29                 	db	41
   516  00FFF8  00                 	db	0
   517  00FFF9                     STR_7:
   518  00FFF9  25                 	db	37
   519  00FFFA  63                 	db	99	;'c'
   520  00FFFB  25                 	db	37
   521  00FFFC  63                 	db	99	;'c'
   522  00FFFD  00                 	db	0
   523  0000                     
   524                           ; #config settings
   525  00FFFE  00                 	db	0	; dummy byte at the end
   526  0000                     
   527                           	psect	nvCOMRAM
   528  000039                     __pnvCOMRAM:
   529                           	opt stack 0
   530  000039                     _eusart1TxBufferRemaining:
   531                           	opt stack 0
   532  000039                     	ds	1
   533  0000                     _ANSELA	set	3896
   534  0000                     _ANSELB	set	3897
   535  0000                     _ANSELC	set	3898
   536  0000                     _CCPTMRS0bits	set	3913
   537  0000                     _BAUDCON1	set	4024
   538  0000                     _CCP1CON	set	4029
   539  0000                     _CCPR1H	set	4031
   540  0000                     _CCPR1L	set	4030
   541  0000                     _ECCP1AS	set	4022
   542  0000                     _INTCON2bits	set	4081
   543  0000                     _INTCONbits	set	4082
   544  0000                     _IPR1bits	set	3999
   545  0000                     _LATA	set	3977
   546  0000                     _LATB	set	3978
   547  0000                     _LATC	set	3979
   548  0000                     _OSCCON	set	4051
   549  0000                     _OSCCON2	set	4050
   550  0000                     _OSCTUNE	set	3995
   551  0000                     _PIE1bits	set	3997
   552  0000                     _PIR1bits	set	3998
   553  0000                     _PR2	set	4027
   554  0000                     _PSTR1CON	set	4025
   555  0000                     _PWM1CON	set	4023
   556  0000                     _RCONbits	set	4048
   557  0000                     _RCREG1	set	4014
   558  0000                     _RCSTA1	set	4011
   559  0000                     _RCSTA1bits	set	4011
   560  0000                     _SPBRG1	set	4015
   561  0000                     _SPBRGH1	set	4016
   562  0000                     _T2CON	set	4026
   563  0000                     _T2CONbits	set	4026
   564  0000                     _TMR2	set	4028
   565  0000                     _TRISA	set	3986
   566  0000                     _TRISB	set	3987
   567  0000                     _TRISC	set	3988
   568  0000                     _TXREG1	set	4013
   569  0000                     _TXSTA1	set	4012
   570  0000                     _WPUB	set	3937
   571                           
   572                           	psect	cinit
   573  00168A                     __pcinit:
   574                           	opt stack 0
   575  00168A                     start_initialization:
   576                           	opt stack 0
   577  00168A                     __initialization:
   578                           	opt stack 0
   579                           
   580                           ; Clear objects allocated to BANK2 (128 bytes)
   581  00168A  EE02  F000         	lfsr	0,__pbssBANK2
   582  00168E  0E80               	movlw	128
   583  001690                     clear_0:
   584  001690  6AEE               	clrf	postinc0,c
   585  001692  06E8               	decf	wreg,f,c
   586  001694  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to BANK1 (256 bytes)
   589  001696  EE01  F000         	lfsr	0,__pbssBANK1
   590  00169A  EE11 F000          	lfsr	1,256
   591  00169E                     clear_1:
   592  00169E  6AEE               	clrf	postinc0,c
   593  0016A0  50E5               	movf	postdec1,w,c
   594  0016A2  50E1               	movf	fsr1l,w,c
   595  0016A4  E1FC               	bnz	clear_1
   596  0016A6  50E2               	movf	fsr1h,w,c
   597  0016A8  E1FA               	bnz	clear_1
   598                           
   599                           ; Clear objects allocated to BANK0 (43 bytes)
   600  0016AA  EE00  F098         	lfsr	0,__pbssBANK0
   601  0016AE  0E2B               	movlw	43
   602  0016B0                     clear_2:
   603  0016B0  6AEE               	clrf	postinc0,c
   604  0016B2  06E8               	decf	wreg,f,c
   605  0016B4  E1FD               	bnz	clear_2
   606                           
   607                           ; Clear objects allocated to COMRAM (8 bytes)
   608  0016B6  EE00  F02D         	lfsr	0,__pbssCOMRAM
   609  0016BA  0E08               	movlw	8
   610  0016BC                     clear_3:
   611  0016BC  6AEE               	clrf	postinc0,c
   612  0016BE  06E8               	decf	wreg,f,c
   613  0016C0  E1FD               	bnz	clear_3
   614                           
   615                           ; Initialize objects allocated to COMRAM (4 bytes)
   616                           ; load TBLPTR registers with __pidataCOMRAM
   617  0016C2  0EF4               	movlw	low __pidataCOMRAM
   618  0016C4  6EF6               	movwf	tblptrl,c
   619  0016C6  0E1C               	movlw	high __pidataCOMRAM
   620  0016C8  6EF7               	movwf	tblptrh,c
   621  0016CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   622  0016CC  6EF8               	movwf	tblptru,c
   623  0016CE  EE00  F035         	lfsr	0,__pdataCOMRAM
   624  0016D2  EE10 F004          	lfsr	1,4
   625  0016D6                     copy_data0:
   626  0016D6  0009               	tblrd		*+
   627  0016D8  CFF5 FFEE          	movff	tablat,postinc0
   628  0016DC  50E5               	movf	postdec1,w,c
   629  0016DE  50E1               	movf	fsr1l,w,c
   630  0016E0  E1FA               	bnz	copy_data0
   631  0016E2                     end_of_initialization:
   632                           	opt stack 0
   633  0016E2                     __end_of__initialization:
   634                           	opt stack 0
   635  0016E2  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   636  0016E4  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   637  0016E6  0100               	movlb	0
   638  0016E8  EFC1  F004         	goto	_main	;jump to C main() function
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1h	equ	0xFE2
   647                           fsr1l	equ	0xFE1
   648                           
   649                           	psect	bssCOMRAM
   650  00002D                     __pbssCOMRAM:
   651                           	opt stack 0
   652  00002D                     _index:
   653                           	opt stack 0
   654  00002D                     	ds	2
   655  00002F                     _eusart1RxCount:
   656                           	opt stack 0
   657  00002F                     	ds	1
   658  000030                     _eusart1RxHead:
   659                           	opt stack 0
   660  000030                     	ds	1
   661  000031                     _eusart1RxTail:
   662                           	opt stack 0
   663  000031                     	ds	1
   664  000032                     _eusart1TxHead:
   665                           	opt stack 0
   666  000032                     	ds	1
   667  000033                     _eusart1TxTail:
   668                           	opt stack 0
   669  000033                     	ds	1
   670  000034                     _ready:
   671                           	opt stack 0
   672  000034                     	ds	1
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1h	equ	0xFE2
   681                           fsr1l	equ	0xFE1
   682                           
   683                           	psect	dataCOMRAM
   684  000035                     __pdataCOMRAM:
   685                           	opt stack 0
   686  000035                     _randx:
   687                           	opt stack 0
   688  000035                     	ds	4
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1h	equ	0xFE2
   697                           fsr1l	equ	0xFE1
   698                           
   699                           	psect	bssBANK0
   700  000098                     __pbssBANK0:
   701                           	opt stack 0
   702  000098                     _inc:
   703                           	opt stack 0
   704  000098                     	ds	1
   705  000099                     _uartState:
   706                           	opt stack 0
   707  000099                     	ds	1
   708  00009A                     _val:
   709                           	opt stack 0
   710  00009A                     	ds	1
   711  00009B                     _uuid:
   712                           	opt stack 0
   713  00009B                     	ds	40
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           postdec1	equ	0xFE5
   721                           fsr1h	equ	0xFE2
   722                           fsr1l	equ	0xFE1
   723                           
   724                           	psect	bssBANK1
   725  000100                     __pbssBANK1:
   726                           	opt stack 0
   727  000100                     _eusart1TxBuffer:
   728                           	opt stack 0
   729  000100                     	ds	128
   730  000180                     _line:
   731                           	opt stack 0
   732  000180                     	ds	128
   733                           tblptru	equ	0xFF8
   734                           tblptrh	equ	0xFF7
   735                           tblptrl	equ	0xFF6
   736                           tablat	equ	0xFF5
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           postdec1	equ	0xFE5
   740                           fsr1h	equ	0xFE2
   741                           fsr1l	equ	0xFE1
   742                           
   743                           	psect	bssBANK2
   744  000200                     __pbssBANK2:
   745                           	opt stack 0
   746  000200                     _eusart1RxBuffer:
   747                           	opt stack 0
   748  000200                     	ds	128
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           postdec1	equ	0xFE5
   756                           fsr1h	equ	0xFE2
   757                           fsr1l	equ	0xFE1
   758                           
   759                           	psect	cstackBANK0
   760  000060                     __pcstackBANK0:
   761                           	opt stack 0
   762  000060                     ?_strncmp:
   763                           	opt stack 0
   764  000060                     ?___lwmod:
   765                           	opt stack 0
   766  000060                     ?___lmul:
   767                           	opt stack 0
   768  000060                     ___lwmod@dividend:
   769                           	opt stack 0
   770  000060                     strncmp@s1:
   771                           	opt stack 0
   772  000060                     ___lmul@multiplier:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x0
   776  000060                     	ds	2
   777  000062                     ___lwmod@divisor:
   778                           	opt stack 0
   779  000062                     strncmp@s2:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783  000062                     	ds	2
   784  000064                     ___lwmod@counter:
   785                           	opt stack 0
   786  000064                     strncmp@len:
   787                           	opt stack 0
   788  000064                     ___lmul@multiplicand:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000064                     	ds	1
   793  000065                     ?__doprnt:
   794                           	opt stack 0
   795  000065                     __doprnt@pb:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x5
   799  000065                     	ds	1
   800  000066                     ??_strncmp:
   801                           
   802                           ; 1 bytes @ 0x6
   803  000066                     	ds	1
   804  000067                     __doprnt@f:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x7
   808  000067                     	ds	1
   809  000068                     ?___awmod:
   810                           	opt stack 0
   811  000068                     ?_strtol:
   812                           	opt stack 0
   813  000068                     ___awmod@dividend:
   814                           	opt stack 0
   815  000068                     strtol@s:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x8
   819  000068                     	ds	1
   820  000069                     ?_strstr:
   821                           	opt stack 0
   822  000069                     __doprnt@ap:
   823                           	opt stack 0
   824  000069                     strstr@s1:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x9
   828  000069                     	ds	1
   829  00006A                     ___awmod@divisor:
   830                           	opt stack 0
   831  00006A                     strtol@endptr:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0xA
   835  00006A                     	ds	1
   836  00006B                     ??__doprnt:
   837  00006B                     strstr@s2:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00006B                     	ds	1
   842  00006C                     ___awmod@counter:
   843                           	opt stack 0
   844  00006C                     strtol@base:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0xC
   848  00006C                     	ds	1
   849  00006D                     ___awmod@sign:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0xD
   853  00006D                     	ds	1
   854  00006E                     ??_strtol:
   855  00006E                     wait_1ms@j:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0xE
   859  00006E                     	ds	1
   860  00006F                     __doprnt@idx:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0xF
   864  00006F                     	ds	1
   865  000070                     ??_wait_1ms:
   866  000070                     __doprnt@prec:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x10
   870  000070                     	ds	1
   871  000071                     __doprnt@len:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x11
   875  000071                     	ds	1
   876  000072                     strtol@sign:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x12
   880  000072                     	ds	1
   881  000073                     __doprnt@cp:
   882                           	opt stack 0
   883  000073                     strtol@a:
   884                           	opt stack 0
   885                           
   886                           ; 4 bytes @ 0x13
   887  000073                     	ds	2
   888  000075                     __doprnt@val:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x15
   892  000075                     	ds	2
   893  000077                     __doprnt@flag:
   894                           	opt stack 0
   895  000077                     strtol@c:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x17
   899  000077                     	ds	1
   900  000078                     __doprnt@width:
   901                           	opt stack 0
   902  000078                     srand@x:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x18
   906  000078                     	ds	2
   907  00007A                     __doprnt@c:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x1A
   911  00007A                     	ds	1
   912  00007B                     ?_printf:
   913                           	opt stack 0
   914  00007B                     ?_sprintf:
   915                           	opt stack 0
   916  00007B                     printf@f:
   917                           	opt stack 0
   918  00007B                     sprintf@wh:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x1B
   922  00007B                     	ds	2
   923  00007D                     sprintf@f:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x1D
   927  00007D                     	ds	6
   928  000083                     printf@ap:
   929                           	opt stack 0
   930  000083                     sprintf@ap:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x23
   934  000083                     	ds	2
   935  000085                     printf@pb:
   936                           	opt stack 0
   937  000085                     sprintf@pb:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x25
   941  000085                     	ds	4
   942  000089                     ?_process_message:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x29
   946  000089                     	ds	2
   947  00008B                     process_message@res:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x2B
   951  00008B                     	ds	2
   952  00008D                     process_message@hexval:
   953                           	opt stack 0
   954                           
   955                           ; 4 bytes @ 0x2D
   956  00008D                     	ds	4
   957  000091                     ??_main:
   958                           
   959                           ; 1 bytes @ 0x31
   960  000091                     	ds	3
   961  000094                     main@q:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x34
   965  000094                     	ds	2
   966  000096                     main@delay:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x36
   970  000096                     	ds	2
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1h	equ	0xFE2
   979                           fsr1l	equ	0xFE1
   980                           
   981                           	psect	cstackCOMRAM
   982  000001                     __pcstackCOMRAM:
   983                           	opt stack 0
   984  000001                     ?_strcmp:
   985                           	opt stack 0
   986  000001                     ?i2_strlen:
   987                           	opt stack 0
   988  000001                     ?i2_strchr:
   989                           	opt stack 0
   990  000001                     EUSART1_Read@readValue:
   991                           	opt stack 0
   992  000001                     strcmp@s1:
   993                           	opt stack 0
   994  000001                     i2strlen@s:
   995                           	opt stack 0
   996  000001                     i2strchr@ptr:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x0
  1000  000001                     	ds	2
  1001  000003                     ??i2_strlen:
  1002  000003                     strcmp@s2:
  1003                           	opt stack 0
  1004  000003                     i2strchr@chr:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  000003                     	ds	2
  1009  000005                     ??_strcmp:
  1010  000005                     i2strlen@cp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014  000005                     	ds	1
  1015  000006                     strcmp@r:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  000006                     	ds	1
  1020  000007                     ?i2_strncmp:
  1021                           	opt stack 0
  1022  000007                     i2strncmp@s1:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x6
  1026  000007                     	ds	2
  1027  000009                     i2strncmp@s2:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x8
  1031  000009                     	ds	2
  1032  00000B                     i2strncmp@len:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0xA
  1036  00000B                     	ds	2
  1037  00000D                     ??i2_strncmp:
  1038                           
  1039                           ; 1 bytes @ 0xC
  1040  00000D                     	ds	3
  1041  000010                     ?i2_strstr:
  1042                           	opt stack 0
  1043  000010                     i2strstr@s1:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0xF
  1047  000010                     	ds	2
  1048  000012                     i2strstr@s2:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x11
  1052  000012                     	ds	2
  1053  000014                     ??i2_strstr:
  1054                           
  1055                           ; 1 bytes @ 0x13
  1056  000014                     	ds	1
  1057  000015                     ??_EUSART1_Receive_ISR:
  1058                           
  1059                           ; 1 bytes @ 0x14
  1060  000015                     	ds	1
  1061  000016                     EUSART1_Receive_ISR@state:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x15
  1065  000016                     	ds	2
  1066  000018                     ??_INTERRUPT_InterruptManager:
  1067                           
  1068                           ; 1 bytes @ 0x17
  1069  000018                     	ds	14
  1070  000026                     ??_isdigit:
  1071  000026                     ??_isspace:
  1072  000026                     ??_isupper:
  1073  000026                     ?_strlen:
  1074                           	opt stack 0
  1075  000026                     ?_strchr:
  1076                           	opt stack 0
  1077  000026                     ?___wmul:
  1078                           	opt stack 0
  1079  000026                     ?___lwdiv:
  1080                           	opt stack 0
  1081  000026                     EUSART1_Write@txData:
  1082                           	opt stack 0
  1083  000026                     toupper@c:
  1084                           	opt stack 0
  1085  000026                     EPWM1_LoadDutyValue@dutyValue:
  1086                           	opt stack 0
  1087  000026                     wait_5ms@j:
  1088                           	opt stack 0
  1089  000026                     ___wmul@multiplier:
  1090                           	opt stack 0
  1091  000026                     ___lwdiv@dividend:
  1092                           	opt stack 0
  1093  000026                     strcpy@to:
  1094                           	opt stack 0
  1095  000026                     strlen@s:
  1096                           	opt stack 0
  1097  000026                     strchr@ptr:
  1098                           	opt stack 0
  1099  000026                     ___lmul@product:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x25
  1103  000026                     	ds	1
  1104  000027                     putch@txData:
  1105                           	opt stack 0
  1106  000027                     _isdigit$1032:
  1107                           	opt stack 0
  1108  000027                     _isspace$1315:
  1109                           	opt stack 0
  1110  000027                     _isupper$1318:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x26
  1114  000027                     	ds	1
  1115  000028                     ??_strlen:
  1116  000028                     ??_EPWM1_LoadDutyValue:
  1117  000028                     ??_wait_5ms:
  1118  000028                     isdigit@c:
  1119                           	opt stack 0
  1120  000028                     isspace@c:
  1121                           	opt stack 0
  1122  000028                     isupper@c:
  1123                           	opt stack 0
  1124  000028                     ___wmul@multiplicand:
  1125                           	opt stack 0
  1126  000028                     ___lwdiv@divisor:
  1127                           	opt stack 0
  1128  000028                     strcpy@from:
  1129                           	opt stack 0
  1130  000028                     strchr@chr:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x27
  1134  000028                     	ds	1
  1135  000029                     ??_isalpha:
  1136                           
  1137                           ; 1 bytes @ 0x28
  1138  000029                     	ds	1
  1139  00002A                     ?_rand:
  1140                           	opt stack 0
  1141  00002A                     _isalpha$1312:
  1142                           	opt stack 0
  1143  00002A                     ___wmul@product:
  1144                           	opt stack 0
  1145  00002A                     ___lwdiv@quotient:
  1146                           	opt stack 0
  1147  00002A                     strcpy@cp:
  1148                           	opt stack 0
  1149  00002A                     strlen@cp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x29
  1153  00002A                     	ds	1
  1154  00002B                     wait_5ms@i:
  1155                           	opt stack 0
  1156  00002B                     isalpha@c:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0x2A
  1160  00002B                     	ds	1
  1161  00002C                     ??_strstr:
  1162  00002C                     wait_1ms@i:
  1163                           	opt stack 0
  1164  00002C                     ___lwdiv@counter:
  1165                           	opt stack 0
  1166                           
  1167                           ; 1 bytes @ 0x2B
  1168  00002C                     	ds	1
  1169  00002D                     tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           postdec1	equ	0xFE5
  1176                           fsr1h	equ	0xFE2
  1177                           fsr1l	equ	0xFE1
  1178                           
  1179                           ; 1 bytes @ 0x2C
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 78 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  delay           2   54[BANK0 ] int 
  1190 ;;  q               2   52[BANK0 ] int 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        7 bytes
  1205 ;; Hardware stack levels required when called:    9
  1206 ;; This function calls:
  1207 ;;		_EPWM1_LoadDutyValue
  1208 ;;		_SYSTEM_Initialize
  1209 ;;		___awmod
  1210 ;;		_getUUID
  1211 ;;		_printf
  1212 ;;		_process_message
  1213 ;;		_rand
  1214 ;;		_read_line
  1215 ;;		_srand
  1216 ;;		_strtol
  1217 ;;		_wait_1ms
  1218 ;;		_wait_5ms
  1219 ;; This function is called by:
  1220 ;;		Startup code after reset
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text0
  1225  000982                     __ptext0:
  1226                           	opt stack 0
  1227  000982                     _main:
  1228                           	opt stack 22
  1229                           
  1230                           ;main.c: 79: SYSTEM_Initialize();
  1231                           
  1232                           ;incstack = 0
  1233  000982  EC3C  F00E         	call	_SYSTEM_Initialize	;wreg free
  1234                           
  1235                           ;main.c: 80: (INTCONbits.GIE = 1);
  1236  000986  8EF2               	bsf	intcon,7,c	;volatile
  1237                           
  1238                           ;main.c: 81: (INTCONbits.PEIE = 1);
  1239  000988  8CF2               	bsf	intcon,6,c	;volatile
  1240                           
  1241                           ;main.c: 84: wait_5ms(5);
  1242  00098A  0E00               	movlw	0
  1243  00098C  6E27               	movwf	wait_5ms@j+1,c
  1244  00098E  0E05               	movlw	5
  1245  000990  6E26               	movwf	wait_5ms@j,c
  1246  000992  EC11  F00D         	call	_wait_5ms	;wreg free
  1247                           
  1248                           ;main.c: 85: printf("sys reset\r\n");
  1249  000996  0EC7               	movlw	low STR_8
  1250  000998  0100               	movlb	0	; () banked
  1251  00099A  6F7B               	movwf	printf@f& (0+255),b
  1252  00099C  0EFF               	movlw	high STR_8
  1253  00099E  0100               	movlb	0	; () banked
  1254  0009A0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1255  0009A2  EC77  F00C         	call	_printf	;wreg free
  1256                           
  1257                           ;main.c: 86: wait_5ms(5);
  1258  0009A6  0E00               	movlw	0
  1259  0009A8  6E27               	movwf	wait_5ms@j+1,c
  1260  0009AA  0E05               	movlw	5
  1261  0009AC  6E26               	movwf	wait_5ms@j,c
  1262  0009AE  EC11  F00D         	call	_wait_5ms	;wreg free
  1263                           
  1264                           ;main.c: 87: printf("sys get ver\r\n");
  1265  0009B2  0EA0               	movlw	low STR_9
  1266  0009B4  0100               	movlb	0	; () banked
  1267  0009B6  6F7B               	movwf	printf@f& (0+255),b
  1268  0009B8  0EFF               	movlw	high STR_9
  1269  0009BA  0100               	movlb	0	; () banked
  1270  0009BC  6F7C               	movwf	(printf@f+1)& (0+255),b
  1271  0009BE  EC77  F00C         	call	_printf	;wreg free
  1272                           
  1273                           ;main.c: 88: read_line();
  1274  0009C2  EC6A  F00E         	call	_read_line	;wreg free
  1275                           
  1276                           ;main.c: 89: printf("radio get sf\r\n");
  1277  0009C6  0E73               	movlw	low STR_10
  1278  0009C8  0100               	movlb	0	; () banked
  1279  0009CA  6F7B               	movwf	printf@f& (0+255),b
  1280  0009CC  0EFF               	movlw	high STR_10
  1281  0009CE  0100               	movlb	0	; () banked
  1282  0009D0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1283  0009D2  EC77  F00C         	call	_printf	;wreg free
  1284                           
  1285                           ;main.c: 90: read_line();
  1286  0009D6  EC6A  F00E         	call	_read_line	;wreg free
  1287                           
  1288                           ;main.c: 91: printf("radio get bw\r\n");
  1289  0009DA  0E91               	movlw	low STR_11
  1290  0009DC  0100               	movlb	0	; () banked
  1291  0009DE  6F7B               	movwf	printf@f& (0+255),b
  1292  0009E0  0EFF               	movlw	high STR_11
  1293  0009E2  0100               	movlb	0	; () banked
  1294  0009E4  6F7C               	movwf	(printf@f+1)& (0+255),b
  1295  0009E6  EC77  F00C         	call	_printf	;wreg free
  1296                           
  1297                           ;main.c: 92: read_line();
  1298  0009EA  EC6A  F00E         	call	_read_line	;wreg free
  1299                           
  1300                           ;main.c: 93: printf("radio get cr\r\n");
  1301  0009EE  0E82               	movlw	low STR_12
  1302  0009F0  0100               	movlb	0	; () banked
  1303  0009F2  6F7B               	movwf	printf@f& (0+255),b
  1304  0009F4  0EFF               	movlw	high STR_12
  1305  0009F6  0100               	movlb	0	; () banked
  1306  0009F8  6F7C               	movwf	(printf@f+1)& (0+255),b
  1307  0009FA  EC77  F00C         	call	_printf	;wreg free
  1308                           
  1309                           ;main.c: 94: read_line();
  1310  0009FE  EC6A  F00E         	call	_read_line	;wreg free
  1311                           
  1312                           ;main.c: 95: printf("radio get prlen\r\n");
  1313  000A02  0E1F               	movlw	low STR_13
  1314  000A04  0100               	movlb	0	; () banked
  1315  000A06  6F7B               	movwf	printf@f& (0+255),b
  1316  000A08  0EFF               	movlw	high STR_13
  1317  000A0A  0100               	movlb	0	; () banked
  1318  000A0C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1319  000A0E  EC77  F00C         	call	_printf	;wreg free
  1320                           
  1321                           ;main.c: 96: read_line();
  1322  000A12  EC6A  F00E         	call	_read_line	;wreg free
  1323                           
  1324                           ;main.c: 97: printf("radio get pwr\r\n");
  1325  000A16  0E63               	movlw	low STR_14
  1326  000A18  0100               	movlb	0	; () banked
  1327  000A1A  6F7B               	movwf	printf@f& (0+255),b
  1328  000A1C  0EFF               	movlw	high STR_14
  1329  000A1E  0100               	movlb	0	; () banked
  1330  000A20  6F7C               	movwf	(printf@f+1)& (0+255),b
  1331  000A22  EC77  F00C         	call	_printf	;wreg free
  1332                           
  1333                           ;main.c: 98: read_line();
  1334  000A26  EC6A  F00E         	call	_read_line	;wreg free
  1335                           
  1336                           ;main.c: 99: printf("mac pause\r\n");
  1337  000A2A  0EBB               	movlw	low STR_15
  1338  000A2C  0100               	movlb	0	; () banked
  1339  000A2E  6F7B               	movwf	printf@f& (0+255),b
  1340  000A30  0EFF               	movlw	high STR_15
  1341  000A32  0100               	movlb	0	; () banked
  1342  000A34  6F7C               	movwf	(printf@f+1)& (0+255),b
  1343  000A36  EC77  F00C         	call	_printf	;wreg free
  1344                           
  1345                           ;main.c: 100: read_line();
  1346  000A3A  EC6A  F00E         	call	_read_line	;wreg free
  1347                           
  1348                           ;main.c: 102: printf("radio set pwr -2\r\n");
  1349  000A3E  0EC0               	movlw	low STR_16
  1350  000A40  0100               	movlb	0	; () banked
  1351  000A42  6F7B               	movwf	printf@f& (0+255),b
  1352  000A44  0EFE               	movlw	high STR_16
  1353  000A46  0100               	movlb	0	; () banked
  1354  000A48  6F7C               	movwf	(printf@f+1)& (0+255),b
  1355  000A4A  EC77  F00C         	call	_printf	;wreg free
  1356                           
  1357                           ;main.c: 103: read_line();
  1358  000A4E  EC6A  F00E         	call	_read_line	;wreg free
  1359                           
  1360                           ;main.c: 104: printf("radio set bw 500\r\n");
  1361  000A52  0EAD               	movlw	low STR_17
  1362  000A54  0100               	movlb	0	; () banked
  1363  000A56  6F7B               	movwf	printf@f& (0+255),b
  1364  000A58  0EFE               	movlw	high STR_17
  1365  000A5A  0100               	movlb	0	; () banked
  1366  000A5C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1367  000A5E  EC77  F00C         	call	_printf	;wreg free
  1368                           
  1369                           ;main.c: 105: read_line();
  1370  000A62  EC6A  F00E         	call	_read_line	;wreg free
  1371                           
  1372                           ;main.c: 106: printf("radio set sf sf7\r\n");
  1373  000A66  0ED3               	movlw	low STR_18
  1374  000A68  0100               	movlb	0	; () banked
  1375  000A6A  6F7B               	movwf	printf@f& (0+255),b
  1376  000A6C  0EFE               	movlw	high STR_18
  1377  000A6E  0100               	movlb	0	; () banked
  1378  000A70  6F7C               	movwf	(printf@f+1)& (0+255),b
  1379  000A72  EC77  F00C         	call	_printf	;wreg free
  1380                           
  1381                           ;main.c: 107: read_line();
  1382  000A76  EC6A  F00E         	call	_read_line	;wreg free
  1383                           
  1384                           ;main.c: 108: printf("radio set cr 4/8\r\n");
  1385  000A7A  0EE6               	movlw	low STR_19
  1386  000A7C  0100               	movlb	0	; () banked
  1387  000A7E  6F7B               	movwf	printf@f& (0+255),b
  1388  000A80  0EFE               	movlw	high STR_19
  1389  000A82  0100               	movlb	0	; () banked
  1390  000A84  6F7C               	movwf	(printf@f+1)& (0+255),b
  1391  000A86  EC77  F00C         	call	_printf	;wreg free
  1392                           
  1393                           ;main.c: 109: read_line();
  1394  000A8A  EC6A  F00E         	call	_read_line	;wreg free
  1395                           
  1396                           ;main.c: 110: printf("radio set crc on\r\n");
  1397  000A8E  0E0C               	movlw	low STR_20
  1398  000A90  0100               	movlb	0	; () banked
  1399  000A92  6F7B               	movwf	printf@f& (0+255),b
  1400  000A94  0EFF               	movlw	high STR_20
  1401  000A96  0100               	movlb	0	; () banked
  1402  000A98  6F7C               	movwf	(printf@f+1)& (0+255),b
  1403  000A9A  EC77  F00C         	call	_printf	;wreg free
  1404                           
  1405                           ;main.c: 111: read_line();
  1406  000A9E  EC6A  F00E         	call	_read_line	;wreg free
  1407                           
  1408                           ;main.c: 113: getUUID();
  1409  000AA2  ECBF  F00D         	call	_getUUID	;wreg free
  1410                           
  1411                           ;main.c: 115: srand((int)strtol(uuid, (0), 0));
  1412  000AA6  0E9B               	movlw	low _uuid
  1413  000AA8  0100               	movlb	0	; () banked
  1414  000AAA  6F68               	movwf	strtol@s& (0+255),b
  1415  000AAC  0E00               	movlw	high _uuid
  1416  000AAE  0100               	movlb	0	; () banked
  1417  000AB0  6F69               	movwf	(strtol@s+1)& (0+255),b
  1418  000AB2  0E00               	movlw	0
  1419  000AB4  0100               	movlb	0	; () banked
  1420  000AB6  6F6A               	movwf	strtol@endptr& (0+255),b
  1421  000AB8  0E00               	movlw	0
  1422  000ABA  0100               	movlb	0	; () banked
  1423  000ABC  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  1424  000ABE  0E00               	movlw	0
  1425  000AC0  0100               	movlb	0	; () banked
  1426  000AC2  6F6D               	movwf	(strtol@base+1)& (0+255),b
  1427  000AC4  0E00               	movlw	0
  1428  000AC6  6F6C               	movwf	strtol@base& (0+255),b
  1429  000AC8  ECC5  F006         	call	_strtol	;wreg free
  1430  000ACC  C068  F078         	movff	?_strtol,srand@x
  1431  000AD0  C069  F079         	movff	?_strtol+1,srand@x+1
  1432  000AD4  EC5C  F00E         	call	_srand	;wreg free
  1433                           
  1434                           ;main.c: 116: int delay = 2000+(rand()%1000);
  1435  000AD8  ECA7  F00B         	call	_rand	;wreg free
  1436  000ADC  C02A  F068         	movff	?_rand,___awmod@dividend
  1437  000AE0  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1438  000AE4  0E03               	movlw	3
  1439  000AE6  0100               	movlb	0	; () banked
  1440  000AE8  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1441  000AEA  0EE8               	movlw	232
  1442  000AEC  6F6A               	movwf	___awmod@divisor& (0+255),b
  1443  000AEE  EC27  F00A         	call	___awmod	;wreg free
  1444  000AF2  0ED0               	movlw	208
  1445  000AF4  0100               	movlb	0	; () banked
  1446  000AF6  2568               	addwf	?___awmod& (0+255),w,b
  1447  000AF8  0100               	movlb	0	; () banked
  1448  000AFA  6F96               	movwf	main@delay& (0+255),b
  1449  000AFC  0E07               	movlw	7
  1450  000AFE  0100               	movlb	0	; () banked
  1451  000B00  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1452  000B02  0100               	movlb	0	; () banked
  1453  000B04  6F97               	movwf	(main@delay+1)& (0+255),b
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;main.c: 117: printf("radio set wdt %d\r\n",delay);
  1457  000B06  0EF9               	movlw	low STR_21
  1458  000B08  0100               	movlb	0	; () banked
  1459  000B0A  6F7B               	movwf	printf@f& (0+255),b
  1460  000B0C  0EFE               	movlw	high STR_21
  1461  000B0E  0100               	movlb	0	; () banked
  1462  000B10  6F7C               	movwf	(printf@f+1)& (0+255),b
  1463  000B12  C096  F07D         	movff	main@delay,?_printf+2
  1464  000B16  C097  F07E         	movff	main@delay+1,?_printf+3
  1465  000B1A  EC77  F00C         	call	_printf	;wreg free
  1466                           
  1467                           ;main.c: 118: read_line();
  1468  000B1E  EC6A  F00E         	call	_read_line	;wreg free
  1469                           
  1470                           ;main.c: 132: printf("radio rx 0\r\n");
  1471  000B22  0EAE               	movlw	low STR_22
  1472  000B24  0100               	movlb	0	; () banked
  1473  000B26  6F7B               	movwf	printf@f& (0+255),b
  1474  000B28  0EFF               	movlw	high STR_22
  1475  000B2A  0100               	movlb	0	; () banked
  1476  000B2C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1477  000B2E  EC77  F00C         	call	_printf	;wreg free
  1478                           
  1479                           ;main.c: 133: read_line();
  1480  000B32  EC6A  F00E         	call	_read_line	;wreg free
  1481                           
  1482                           ;main.c: 136: int q=0;
  1483  000B36  0E00               	movlw	0
  1484  000B38  0100               	movlb	0	; () banked
  1485  000B3A  6F95               	movwf	(main@q+1)& (0+255),b
  1486  000B3C  0E00               	movlw	0
  1487  000B3E  6F94               	movwf	main@q& (0+255),b
  1488  000B40                     l3697:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main.c: 139: _delay((unsigned long)((1)*(64000000/4000.0)));
  1492  000B40  0E15               	movlw	21
  1493  000B42  0100               	movlb	0	; () banked
  1494  000B44  6F91               	movwf	??_main& (0+255),b
  1495  000B46  0EC6               	movlw	198
  1496  000B48                     u4157:
  1497  000B48  2EE8               	decfsz	wreg,f,c
  1498  000B4A  D7FE               	goto	u4157
  1499  000B4C  2F91               	decfsz	??_main& (0+255),f,b
  1500  000B4E  D7FC               	goto	u4157
  1501  000B50  D000               	nop2	
  1502                           
  1503                           ;main.c: 140: q++;
  1504  000B52  0100               	movlb	0	; () banked
  1505  000B54  4B94               	infsnz	main@q& (0+255),f,b
  1506  000B56  2B95               	incf	(main@q+1)& (0+255),f,b
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;main.c: 146: if(q>(2*delay)){
  1510  000B58  C096  F091         	movff	main@delay,??_main
  1511  000B5C  C097  F092         	movff	main@delay+1,??_main+1
  1512  000B60  90D8               	bcf	status,0,c
  1513  000B62  0100               	movlb	0	; () banked
  1514  000B64  3791               	rlcf	??_main& (0+255),f,b
  1515  000B66  3792               	rlcf	(??_main+1)& (0+255),f,b
  1516  000B68  0100               	movlb	0	; () banked
  1517  000B6A  5194               	movf	main@q& (0+255),w,b
  1518  000B6C  0100               	movlb	0	; () banked
  1519  000B6E  5D91               	subwf	??_main& (0+255),w,b
  1520  000B70  0100               	movlb	0	; () banked
  1521  000B72  5192               	movf	(??_main+1)& (0+255),w,b
  1522  000B74  0A80               	xorlw	128
  1523  000B76  0100               	movlb	0	; () banked
  1524  000B78  6F93               	movwf	(??_main+2)& (0+255),b
  1525  000B7A  0100               	movlb	0	; () banked
  1526  000B7C  5195               	movf	(main@q+1)& (0+255),w,b
  1527  000B7E  0A80               	xorlw	128
  1528  000B80  0100               	movlb	0	; () banked
  1529  000B82  5993               	subwfb	(??_main+2)& (0+255),w,b
  1530  000B84  A0D8               	btfss	status,0,c
  1531  000B86  EF4A  F000         	goto	start
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;main.c: 148: }
  1535                           ;main.c: 153: if(uartState>2){
  1536                           
  1537                           ; BSR set to: 0
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;main.c: 147: break;
  1541  000B8A  0E02               	movlw	2
  1542  000B8C  0100               	movlb	0	; () banked
  1543  000B8E  6599               	cpfsgt	_uartState& (0+255),b	;volatile
  1544  000B90  D7D7               	goto	l3697
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 154: read_line();
  1548  000B92  EC6A  F00E         	call	_read_line	;wreg free
  1549                           
  1550                           ;main.c: 157: if(uartState==3){
  1551  000B96  0E03               	movlw	3
  1552  000B98  0100               	movlb	0	; () banked
  1553  000B9A  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1554  000B9C  A4D8               	btfss	status,2,c
  1555  000B9E  D013               	goto	l3715
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;main.c: 158: if(q>delay){
  1559  000BA0  0100               	movlb	0	; () banked
  1560  000BA2  5194               	movf	main@q& (0+255),w,b
  1561  000BA4  0100               	movlb	0	; () banked
  1562  000BA6  5D96               	subwf	main@delay& (0+255),w,b
  1563  000BA8  0100               	movlb	0	; () banked
  1564  000BAA  5197               	movf	(main@delay+1)& (0+255),w,b
  1565  000BAC  0A80               	xorlw	128
  1566  000BAE  0100               	movlb	0	; () banked
  1567  000BB0  6F91               	movwf	??_main& (0+255),b
  1568  000BB2  0100               	movlb	0	; () banked
  1569  000BB4  5195               	movf	(main@q+1)& (0+255),w,b
  1570  000BB6  0A80               	xorlw	128
  1571  000BB8  0100               	movlb	0	; () banked
  1572  000BBA  5991               	subwfb	??_main& (0+255),w,b
  1573  000BBC  B0D8               	btfsc	status,0,c
  1574  000BBE  D003               	goto	l3715
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 159: uartState=5;
  1578  000BC0  0E05               	movlw	5
  1579  000BC2  0100               	movlb	0	; () banked
  1580  000BC4  6F99               	movwf	_uartState& (0+255),b	;volatile
  1581  000BC6                     l3715:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;main.c: 160: }
  1585                           ;main.c: 161: }
  1586                           ;main.c: 165: if(uartState==4){
  1587  000BC6  0E04               	movlw	4
  1588  000BC8  0100               	movlb	0	; () banked
  1589  000BCA  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1590  000BCC  A4D8               	btfss	status,2,c
  1591  000BCE  D084               	goto	l3741
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 167: if(process_message()){
  1595  000BD0  EC8B  F008         	call	_process_message	;wreg free
  1596  000BD4  0100               	movlb	0	; () banked
  1597  000BD6  5189               	movf	?_process_message& (0+255),w,b
  1598  000BD8  0100               	movlb	0	; () banked
  1599  000BDA  118A               	iorwf	(?_process_message+1)& (0+255),w,b
  1600  000BDC  B4D8               	btfsc	status,2,c
  1601  000BDE  D069               	goto	l3737
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 168: delay = 2000+(rand()%1000);
  1605  000BE0  ECA7  F00B         	call	_rand	;wreg free
  1606  000BE4  C02A  F068         	movff	?_rand,___awmod@dividend
  1607  000BE8  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1608  000BEC  0E03               	movlw	3
  1609  000BEE  0100               	movlb	0	; () banked
  1610  000BF0  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1611  000BF2  0EE8               	movlw	232
  1612  000BF4  6F6A               	movwf	___awmod@divisor& (0+255),b
  1613  000BF6  EC27  F00A         	call	___awmod	;wreg free
  1614  000BFA  0ED0               	movlw	208
  1615  000BFC  0100               	movlb	0	; () banked
  1616  000BFE  2568               	addwf	?___awmod& (0+255),w,b
  1617  000C00  0100               	movlb	0	; () banked
  1618  000C02  6F96               	movwf	main@delay& (0+255),b
  1619  000C04  0E07               	movlw	7
  1620  000C06  0100               	movlb	0	; () banked
  1621  000C08  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1622  000C0A  0100               	movlb	0	; () banked
  1623  000C0C  6F97               	movwf	(main@delay+1)& (0+255),b
  1624                           
  1625                           ;main.c: 169: wait_1ms((rand()%40)+25);
  1626  000C0E  ECA7  F00B         	call	_rand	;wreg free
  1627  000C12  C02A  F068         	movff	?_rand,___awmod@dividend
  1628  000C16  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1629  000C1A  0E00               	movlw	0
  1630  000C1C  0100               	movlb	0	; () banked
  1631  000C1E  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1632  000C20  0E28               	movlw	40
  1633  000C22  6F6A               	movwf	___awmod@divisor& (0+255),b
  1634  000C24  EC27  F00A         	call	___awmod	;wreg free
  1635  000C28  0E19               	movlw	25
  1636  000C2A  0100               	movlb	0	; () banked
  1637  000C2C  2568               	addwf	?___awmod& (0+255),w,b
  1638  000C2E  0100               	movlb	0	; () banked
  1639  000C30  6F6E               	movwf	wait_1ms@j& (0+255),b
  1640  000C32  0E00               	movlw	0
  1641  000C34  0100               	movlb	0	; () banked
  1642  000C36  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1643  000C38  0100               	movlb	0	; () banked
  1644  000C3A  6F6F               	movwf	(wait_1ms@j+1)& (0+255),b
  1645  000C3C  EC9C  F00C         	call	_wait_1ms	;wreg free
  1646                           
  1647                           ;main.c: 170: printf("radio tx 42%s%02X%02X00000001\r\n",uuid,inc++,val);
  1648  000C40  0E8D               	movlw	low STR_23
  1649  000C42  0100               	movlb	0	; () banked
  1650  000C44  6F7B               	movwf	printf@f& (0+255),b
  1651  000C46  0EFE               	movlw	high STR_23
  1652  000C48  0100               	movlb	0	; () banked
  1653  000C4A  6F7C               	movwf	(printf@f+1)& (0+255),b
  1654  000C4C  0E9B               	movlw	low _uuid
  1655  000C4E  0100               	movlb	0	; () banked
  1656  000C50  6F7D               	movwf	(?_printf+2)& (0+255),b
  1657  000C52  0E00               	movlw	high _uuid
  1658  000C54  0100               	movlb	0	; () banked
  1659  000C56  6F7E               	movwf	(?_printf+3)& (0+255),b
  1660  000C58  C098  F07F         	movff	_inc,?_printf+4
  1661  000C5C  0100               	movlb	0	; () banked
  1662  000C5E  6B80               	clrf	(?_printf+5)& (0+255),b
  1663  000C60  C09A  F081         	movff	_val,?_printf+6
  1664  000C64  0100               	movlb	0	; () banked
  1665  000C66  6B82               	clrf	(?_printf+7)& (0+255),b
  1666  000C68  EC77  F00C         	call	_printf	;wreg free
  1667  000C6C  0100               	movlb	0	; () banked
  1668  000C6E  2B98               	incf	_inc& (0+255),f,b
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 171: read_line();
  1672  000C70  EC6A  F00E         	call	_read_line	;wreg free
  1673                           
  1674                           ;main.c: 172: read_line();
  1675  000C74  EC6A  F00E         	call	_read_line	;wreg free
  1676                           
  1677                           ;main.c: 173: printf("radio set wdt %d\r\n",delay);
  1678  000C78  0EF9               	movlw	low STR_21
  1679  000C7A  0100               	movlb	0	; () banked
  1680  000C7C  6F7B               	movwf	printf@f& (0+255),b
  1681  000C7E  0EFE               	movlw	high STR_21
  1682  000C80  0100               	movlb	0	; () banked
  1683  000C82  6F7C               	movwf	(printf@f+1)& (0+255),b
  1684  000C84  C096  F07D         	movff	main@delay,?_printf+2
  1685  000C88  C097  F07E         	movff	main@delay+1,?_printf+3
  1686  000C8C  EC77  F00C         	call	_printf	;wreg free
  1687                           
  1688                           ;main.c: 174: read_line();
  1689  000C90  EC6A  F00E         	call	_read_line	;wreg free
  1690                           
  1691                           ;main.c: 176: EPWM1_LoadDutyValue((uint16_t) val*4);
  1692  000C94  0100               	movlb	0	; () banked
  1693  000C96  519A               	movf	_val& (0+255),w,b
  1694  000C98  0D04               	mullw	4
  1695  000C9A  CFF3 F026          	movff	prodl,EPWM1_LoadDutyValue@dutyValue
  1696  000C9E  CFF4 F027          	movff	prodh,EPWM1_LoadDutyValue@dutyValue+1
  1697  000CA2  EC79  F00D         	call	_EPWM1_LoadDutyValue	;wreg free
  1698                           
  1699                           ;main.c: 177: q=0;
  1700  000CA6  0E00               	movlw	0
  1701  000CA8  0100               	movlb	0	; () banked
  1702  000CAA  6F95               	movwf	(main@q+1)& (0+255),b
  1703  000CAC  0E00               	movlw	0
  1704  000CAE  6F94               	movwf	main@q& (0+255),b
  1705                           
  1706                           ;main.c: 178: } else {
  1707  000CB0  D013               	goto	l3741
  1708  000CB2                     l3737:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;main.c: 179: if(q>delay){
  1712  000CB2  0100               	movlb	0	; () banked
  1713  000CB4  5194               	movf	main@q& (0+255),w,b
  1714  000CB6  0100               	movlb	0	; () banked
  1715  000CB8  5D96               	subwf	main@delay& (0+255),w,b
  1716  000CBA  0100               	movlb	0	; () banked
  1717  000CBC  5197               	movf	(main@delay+1)& (0+255),w,b
  1718  000CBE  0A80               	xorlw	128
  1719  000CC0  0100               	movlb	0	; () banked
  1720  000CC2  6F91               	movwf	??_main& (0+255),b
  1721  000CC4  0100               	movlb	0	; () banked
  1722  000CC6  5195               	movf	(main@q+1)& (0+255),w,b
  1723  000CC8  0A80               	xorlw	128
  1724  000CCA  0100               	movlb	0	; () banked
  1725  000CCC  5991               	subwfb	??_main& (0+255),w,b
  1726  000CCE  B0D8               	btfsc	status,0,c
  1727  000CD0  D003               	goto	l3741
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;main.c: 180: uartState=5;
  1731  000CD2  0E05               	movlw	5
  1732  000CD4  0100               	movlb	0	; () banked
  1733  000CD6  6F99               	movwf	_uartState& (0+255),b	;volatile
  1734  000CD8                     l3741:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;main.c: 181: }
  1738                           ;main.c: 182: }
  1739                           ;main.c: 183: }
  1740                           ;main.c: 185: if(uartState==5){
  1741  000CD8  0E05               	movlw	5
  1742  000CDA  0100               	movlb	0	; () banked
  1743  000CDC  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1744  000CDE  A4D8               	btfss	status,2,c
  1745  000CE0  D046               	goto	l3759
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;main.c: 186: delay = 2000+(rand()%1000);
  1749  000CE2  ECA7  F00B         	call	_rand	;wreg free
  1750  000CE6  C02A  F068         	movff	?_rand,___awmod@dividend
  1751  000CEA  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1752  000CEE  0E03               	movlw	3
  1753  000CF0  0100               	movlb	0	; () banked
  1754  000CF2  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1755  000CF4  0EE8               	movlw	232
  1756  000CF6  6F6A               	movwf	___awmod@divisor& (0+255),b
  1757  000CF8  EC27  F00A         	call	___awmod	;wreg free
  1758  000CFC  0ED0               	movlw	208
  1759  000CFE  0100               	movlb	0	; () banked
  1760  000D00  2568               	addwf	?___awmod& (0+255),w,b
  1761  000D02  0100               	movlb	0	; () banked
  1762  000D04  6F96               	movwf	main@delay& (0+255),b
  1763  000D06  0E07               	movlw	7
  1764  000D08  0100               	movlb	0	; () banked
  1765  000D0A  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1766  000D0C  0100               	movlb	0	; () banked
  1767  000D0E  6F97               	movwf	(main@delay+1)& (0+255),b
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 187: printf("radio tx 42%s%02X%02X00000000\r\n",uuid,inc++,val);
  1771  000D10  0E6D               	movlw	low STR_25
  1772  000D12  0100               	movlb	0	; () banked
  1773  000D14  6F7B               	movwf	printf@f& (0+255),b
  1774  000D16  0EFE               	movlw	high STR_25
  1775  000D18  0100               	movlb	0	; () banked
  1776  000D1A  6F7C               	movwf	(printf@f+1)& (0+255),b
  1777  000D1C  0E9B               	movlw	low _uuid
  1778  000D1E  0100               	movlb	0	; () banked
  1779  000D20  6F7D               	movwf	(?_printf+2)& (0+255),b
  1780  000D22  0E00               	movlw	high _uuid
  1781  000D24  0100               	movlb	0	; () banked
  1782  000D26  6F7E               	movwf	(?_printf+3)& (0+255),b
  1783  000D28  C098  F07F         	movff	_inc,?_printf+4
  1784  000D2C  0100               	movlb	0	; () banked
  1785  000D2E  6B80               	clrf	(?_printf+5)& (0+255),b
  1786  000D30  C09A  F081         	movff	_val,?_printf+6
  1787  000D34  0100               	movlb	0	; () banked
  1788  000D36  6B82               	clrf	(?_printf+7)& (0+255),b
  1789  000D38  EC77  F00C         	call	_printf	;wreg free
  1790  000D3C  0100               	movlb	0	; () banked
  1791  000D3E  2B98               	incf	_inc& (0+255),f,b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;main.c: 188: read_line();
  1795  000D40  EC6A  F00E         	call	_read_line	;wreg free
  1796                           
  1797                           ;main.c: 189: read_line();
  1798  000D44  EC6A  F00E         	call	_read_line	;wreg free
  1799                           
  1800                           ;main.c: 190: printf("radio set wdt %d\r\n",delay);
  1801  000D48  0EF9               	movlw	low STR_21
  1802  000D4A  0100               	movlb	0	; () banked
  1803  000D4C  6F7B               	movwf	printf@f& (0+255),b
  1804  000D4E  0EFE               	movlw	high STR_21
  1805  000D50  0100               	movlb	0	; () banked
  1806  000D52  6F7C               	movwf	(printf@f+1)& (0+255),b
  1807  000D54  C096  F07D         	movff	main@delay,?_printf+2
  1808  000D58  C097  F07E         	movff	main@delay+1,?_printf+3
  1809  000D5C  EC77  F00C         	call	_printf	;wreg free
  1810                           
  1811                           ;main.c: 191: read_line();
  1812  000D60  EC6A  F00E         	call	_read_line	;wreg free
  1813                           
  1814                           ;main.c: 192: q=0;
  1815  000D64  0E00               	movlw	0
  1816  000D66  0100               	movlb	0	; () banked
  1817  000D68  6F95               	movwf	(main@q+1)& (0+255),b
  1818  000D6A  0E00               	movlw	0
  1819  000D6C  6F94               	movwf	main@q& (0+255),b
  1820  000D6E                     l3759:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;main.c: 193: }
  1824                           ;main.c: 195: printf("radio rx 0\r\n");
  1825  000D6E  0EAE               	movlw	low STR_22
  1826  000D70  0100               	movlb	0	; () banked
  1827  000D72  6F7B               	movwf	printf@f& (0+255),b
  1828  000D74  0EFF               	movlw	high STR_22
  1829  000D76  0100               	movlb	0	; () banked
  1830  000D78  6F7C               	movwf	(printf@f+1)& (0+255),b
  1831  000D7A  EC77  F00C         	call	_printf	;wreg free
  1832                           
  1833                           ;main.c: 196: read_line();
  1834  000D7E  EC6A  F00E         	call	_read_line	;wreg free
  1835                           
  1836                           ;main.c: 197: uartState=0;
  1837  000D82  0E00               	movlw	0
  1838  000D84  0100               	movlb	0	; () banked
  1839  000D86  6F99               	movwf	_uartState& (0+255),b	;volatile
  1840                           
  1841                           ; BSR set to: 0
  1842                           
  1843                           ; BSR set to: 0
  1844  000D88  D6DB               	goto	l3697
  1845  000D8A                     __end_of_main:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           prodh	equ	0xFF4
  1852                           prodl	equ	0xFF3
  1853                           intcon	equ	0xFF2
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _wait_5ms *****************
  1862 ;; Defined at:
  1863 ;;		line 40 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  j               2   37[COMRAM] int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  i               1   42[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:        6 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    4
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text1
  1892  001A22                     __ptext1:
  1893                           	opt stack 0
  1894  001A22                     _wait_5ms:
  1895                           	opt stack 26
  1896                           
  1897                           ;main.c: 41: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;incstack = 0
  1901  001A22  0E00               	movlw	0
  1902  001A24  6E2B               	movwf	wait_5ms@i,c
  1903  001A26  D009               	goto	l280
  1904  001A28                     l2907:
  1905  001A28  0E68               	movlw	104
  1906  001A2A  6E28               	movwf	??_wait_5ms& (0+255),c
  1907  001A2C  0EE4               	movlw	228
  1908  001A2E                     u4167:
  1909  001A2E  2EE8               	decfsz	wreg,f,c
  1910  001A30  D7FE               	goto	u4167
  1911  001A32  2E28               	decfsz	??_wait_5ms& (0+255),f,c
  1912  001A34  D7FC               	goto	u4167
  1913  001A36  D000               	nop2	
  1914  001A38  2A2B               	incf	wait_5ms@i,f,c
  1915  001A3A                     l280:
  1916  001A3A  502B               	movf	wait_5ms@i,w,c
  1917  001A3C  6E28               	movwf	??_wait_5ms& (0+255),c
  1918  001A3E  6A29               	clrf	(??_wait_5ms+1)& (0+255),c
  1919  001A40  5026               	movf	wait_5ms@j,w,c
  1920  001A42  5C28               	subwf	??_wait_5ms,w,c
  1921  001A44  5029               	movf	??_wait_5ms+1,w,c
  1922  001A46  0A80               	xorlw	128
  1923  001A48  6E2A               	movwf	(??_wait_5ms+2)& (0+255),c
  1924  001A4A  5027               	movf	wait_5ms@j+1,w,c
  1925  001A4C  0A80               	xorlw	128
  1926  001A4E  582A               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  1927  001A50  B0D8               	btfsc	status,0,c
  1928  001A52  0012               	return	
  1929  001A54  D7E9               	goto	l2907
  1930  001A56                     __end_of_wait_5ms:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           intcon	equ	0xFF2
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1h	equ	0xFE2
  1943                           fsr1l	equ	0xFE1
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _wait_1ms *****************
  1947 ;; Defined at:
  1948 ;;		line 44 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  j               2   14[BANK0 ] int 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  i               1   43[COMRAM] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;Total ram usage:        6 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    4
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text2
  1977  001938                     __ptext2:
  1978                           	opt stack 0
  1979  001938                     _wait_1ms:
  1980                           	opt stack 26
  1981                           
  1982                           ;main.c: 45: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((1)*(64000000/4000.0))); 
      +                          }
  1983                           
  1984                           ;incstack = 0
  1985  001938  0E00               	movlw	0
  1986  00193A  6E2C               	movwf	wait_1ms@i,c
  1987  00193C  D00A               	goto	l286
  1988  00193E                     l3535:
  1989  00193E  0E15               	movlw	21
  1990  001940  0100               	movlb	0	; () banked
  1991  001942  6F70               	movwf	??_wait_1ms& (0+255),b
  1992  001944  0EC6               	movlw	198
  1993  001946                     u4177:
  1994  001946  2EE8               	decfsz	wreg,f,c
  1995  001948  D7FE               	goto	u4177
  1996  00194A  2F70               	decfsz	??_wait_1ms& (0+255),f,b
  1997  00194C  D7FC               	goto	u4177
  1998  00194E  D000               	nop2	
  1999  001950  2A2C               	incf	wait_1ms@i,f,c
  2000  001952                     l286:
  2001  001952  502C               	movf	wait_1ms@i,w,c
  2002  001954  0100               	movlb	0	; () banked
  2003  001956  6F70               	movwf	??_wait_1ms& (0+255),b
  2004  001958  6B71               	clrf	(??_wait_1ms+1)& (0+255),b
  2005  00195A  0100               	movlb	0	; () banked
  2006  00195C  516E               	movf	wait_1ms@j& (0+255),w,b
  2007  00195E  0100               	movlb	0	; () banked
  2008  001960  5D70               	subwf	??_wait_1ms& (0+255),w,b
  2009  001962  0100               	movlb	0	; () banked
  2010  001964  5171               	movf	(??_wait_1ms+1)& (0+255),w,b
  2011  001966  0A80               	xorlw	128
  2012  001968  0100               	movlb	0	; () banked
  2013  00196A  6F72               	movwf	(??_wait_1ms+2)& (0+255),b
  2014  00196C  0100               	movlb	0	; () banked
  2015  00196E  516F               	movf	(wait_1ms@j+1)& (0+255),w,b
  2016  001970  0A80               	xorlw	128
  2017  001972  0100               	movlb	0	; () banked
  2018  001974  5972               	subwfb	(??_wait_1ms+2)& (0+255),w,b
  2019  001976  B0D8               	btfsc	status,0,c
  2020  001978  0012               	return	
  2021  00197A  D7E1               	goto	l3535
  2022  00197C                     __end_of_wait_1ms:
  2023                           	opt stack 0
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           prodh	equ	0xFF4
  2029                           prodl	equ	0xFF3
  2030                           intcon	equ	0xFF2
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _srand *****************
  2039 ;; Defined at:
  2040 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  x               2   24[BANK0 ] unsigned int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        2 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text3
  2069  001CB8                     __ptext3:
  2070                           	opt stack 0
  2071  001CB8                     _srand:
  2072                           	opt stack 26
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;incstack = 0
  2076  001CB8  C078  F035         	movff	srand@x,_randx
  2077  001CBC  C079  F036         	movff	srand@x+1,_randx+1
  2078  001CC0  6A37               	clrf	_randx+2,c
  2079  001CC2  6A38               	clrf	_randx+3,c
  2080  001CC4  0012               	return		;funcret
  2081  001CC6                     __end_of_srand:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1h	equ	0xFE2
  2094                           fsr1l	equ	0xFE1
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _rand *****************
  2098 ;; Defined at:
  2099 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   41[COMRAM] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    5
  2120 ;; This function calls:
  2121 ;;		___lmul
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text4
  2128  00174E                     __ptext4:
  2129                           	opt stack 0
  2130  00174E                     _rand:
  2131                           	opt stack 25
  2132                           
  2133                           ;incstack = 0
  2134  00174E  C035  F060         	movff	_randx,___lmul@multiplier
  2135  001752  C036  F061         	movff	_randx+1,___lmul@multiplier+1
  2136  001756  C037  F062         	movff	_randx+2,___lmul@multiplier+2
  2137  00175A  C038  F063         	movff	_randx+3,___lmul@multiplier+3
  2138  00175E  0E6D               	movlw	109
  2139  001760  0100               	movlb	0	; () banked
  2140  001762  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2141  001764  0E4E               	movlw	78
  2142  001766  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2143  001768  0EC6               	movlw	198
  2144  00176A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2145  00176C  0E41               	movlw	65
  2146  00176E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2147  001770  EC0F  F00B         	call	___lmul	;wreg free
  2148  001774  C060  F035         	movff	?___lmul,_randx
  2149  001778  C061  F036         	movff	?___lmul+1,_randx+1
  2150  00177C  C062  F037         	movff	?___lmul+2,_randx+2
  2151  001780  C063  F038         	movff	?___lmul+3,_randx+3
  2152  001784  0E39               	movlw	57
  2153  001786  2635               	addwf	_randx,f,c
  2154  001788  0E30               	movlw	48
  2155  00178A  2236               	addwfc	_randx+1,f,c
  2156  00178C  0E00               	movlw	0
  2157  00178E  2237               	addwfc	_randx+2,f,c
  2158  001790  0E00               	movlw	0
  2159  001792  2238               	addwfc	_randx+3,f,c
  2160  001794  0EFF               	movlw	255
  2161  001796  1437               	andwf	_randx+2,w,c
  2162  001798  6E2A               	movwf	?_rand,c
  2163  00179A  0E7F               	movlw	127
  2164  00179C  1438               	andwf	_randx+3,w,c
  2165  00179E  6E2B               	movwf	?_rand+1,c
  2166  0017A0  0012               	return	
  2167  0017A2                     __end_of_rand:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _process_message *****************
  2184 ;; Defined at:
  2185 ;;		line 54 in file "main.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  hexval          4   45[BANK0 ] unsigned char [4]
  2190 ;;  res             2   43[BANK0 ] int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   41[BANK0 ] int 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        8 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    8
  2207 ;; This function calls:
  2208 ;;		_sprintf
  2209 ;;		_strlen
  2210 ;;		_strstr
  2211 ;;		_strtol
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text5
  2218  001116                     __ptext5:
  2219                           	opt stack 0
  2220  001116                     _process_message:
  2221                           	opt stack 22
  2222                           
  2223                           ;main.c: 56: if(strlen(line)!=32)return 0;
  2224                           
  2225                           ;incstack = 0
  2226  001116  0E80               	movlw	low _line
  2227  001118  6E26               	movwf	strlen@s,c
  2228  00111A  0E01               	movlw	high _line
  2229  00111C  6E27               	movwf	strlen@s+1,c
  2230  00111E  ECD1  F00B         	call	_strlen	;wreg free
  2231  001122  0E20               	movlw	32
  2232  001124  1826               	xorwf	?_strlen,w,c
  2233  001126  1027               	iorwf	?_strlen+1,w,c
  2234  001128  B4D8               	btfsc	status,2,c
  2235  00112A  D006               	goto	l3551
  2236  00112C  0E00               	movlw	0
  2237  00112E  0100               	movlb	0	; () banked
  2238  001130  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2239  001132  0E00               	movlw	0
  2240  001134  6F89               	movwf	?_process_message& (0+255),b
  2241                           
  2242                           ; BSR set to: 0
  2243  001136  0012               	return	
  2244  001138                     l3551:
  2245                           
  2246                           ;main.c: 58: int res = 0;
  2247  001138  0E00               	movlw	0
  2248  00113A  0100               	movlb	0	; () banked
  2249  00113C  6F8C               	movwf	(process_message@res+1)& (0+255),b
  2250  00113E  0E00               	movlw	0
  2251  001140  6F8B               	movwf	process_message@res& (0+255),b
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;main.c: 60: if(strstr(line,uuid)!=0)res++;
  2255  001142  0E80               	movlw	low _line
  2256  001144  0100               	movlb	0	; () banked
  2257  001146  6F69               	movwf	strstr@s1& (0+255),b
  2258  001148  0E01               	movlw	high _line
  2259  00114A  0100               	movlb	0	; () banked
  2260  00114C  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2261  00114E  0E9B               	movlw	low _uuid
  2262  001150  0100               	movlb	0	; () banked
  2263  001152  6F6B               	movwf	strstr@s2& (0+255),b
  2264  001154  0E00               	movlw	high _uuid
  2265  001156  0100               	movlb	0	; () banked
  2266  001158  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2267  00115A  EC79  F009         	call	_strstr	;wreg free
  2268  00115E  0100               	movlb	0	; () banked
  2269  001160  5169               	movf	?_strstr& (0+255),w,b
  2270  001162  0100               	movlb	0	; () banked
  2271  001164  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2272  001166  B4D8               	btfsc	status,2,c
  2273  001168  D003               	goto	l3557
  2274                           
  2275                           ; BSR set to: 0
  2276  00116A  0100               	movlb	0	; () banked
  2277  00116C  4B8B               	infsnz	process_message@res& (0+255),f,b
  2278  00116E  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2279  001170                     l3557:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 62: if(strstr(line,"FFFFFFFFFFFFFFFF")!=0)res++;
  2283  001170  0E80               	movlw	low _line
  2284  001172  0100               	movlb	0	; () banked
  2285  001174  6F69               	movwf	strstr@s1& (0+255),b
  2286  001176  0E01               	movlw	high _line
  2287  001178  0100               	movlb	0	; () banked
  2288  00117A  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2289  00117C  0E42               	movlw	low STR_6
  2290  00117E  0100               	movlb	0	; () banked
  2291  001180  6F6B               	movwf	strstr@s2& (0+255),b
  2292  001182  0EFF               	movlw	high STR_6
  2293  001184  0100               	movlb	0	; () banked
  2294  001186  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2295  001188  EC79  F009         	call	_strstr	;wreg free
  2296  00118C  0100               	movlb	0	; () banked
  2297  00118E  5169               	movf	?_strstr& (0+255),w,b
  2298  001190  0100               	movlb	0	; () banked
  2299  001192  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2300  001194  B4D8               	btfsc	status,2,c
  2301  001196  D003               	goto	l3561
  2302                           
  2303                           ; BSR set to: 0
  2304  001198  0100               	movlb	0	; () banked
  2305  00119A  4B8B               	infsnz	process_message@res& (0+255),f,b
  2306  00119C  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2307  00119E                     l3561:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 64: if(res>0){
  2311  00119E  0100               	movlb	0	; () banked
  2312  0011A0  BF8C               	btfsc	(process_message@res+1)& (0+255),7,b
  2313  0011A2  D03A               	goto	l3571
  2314  0011A4  0100               	movlb	0	; () banked
  2315  0011A6  518C               	movf	(process_message@res+1)& (0+255),w,b
  2316  0011A8  E104               	bnz	u4000
  2317  0011AA  0100               	movlb	0	; () banked
  2318  0011AC  058B               	decf	process_message@res& (0+255),w,b
  2319  0011AE  A0D8               	btfss	status,0,c
  2320  0011B0  D033               	goto	l3571
  2321  0011B2                     u4000:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;main.c: 66: char hexval[4];
  2325                           ;main.c: 67: sprintf(hexval,"%c%c",line[28],line[29]);
  2326  0011B2  0E8D               	movlw	low process_message@hexval
  2327  0011B4  0100               	movlb	0	; () banked
  2328  0011B6  6F7B               	movwf	sprintf@wh& (0+255),b
  2329  0011B8  0E00               	movlw	high process_message@hexval
  2330  0011BA  0100               	movlb	0	; () banked
  2331  0011BC  6F7C               	movwf	(sprintf@wh+1)& (0+255),b
  2332  0011BE  0EF9               	movlw	low STR_7
  2333  0011C0  0100               	movlb	0	; () banked
  2334  0011C2  6F7D               	movwf	sprintf@f& (0+255),b
  2335  0011C4  0EFF               	movlw	high STR_7
  2336  0011C6  0100               	movlb	0	; () banked
  2337  0011C8  6F7E               	movwf	(sprintf@f+1)& (0+255),b
  2338  0011CA  C19C  F07F         	movff	_line+28,?_sprintf+4	;volatile
  2339  0011CE  0100               	movlb	0	; () banked
  2340  0011D0  6B80               	clrf	(?_sprintf+5)& (0+255),b
  2341  0011D2  C19D  F081         	movff	_line+29,?_sprintf+6	;volatile
  2342  0011D6  0100               	movlb	0	; () banked
  2343  0011D8  6B82               	clrf	(?_sprintf+7)& (0+255),b
  2344  0011DA  EC25  F00C         	call	_sprintf	;wreg free
  2345                           
  2346                           ;main.c: 68: val = (int)strtol(hexval, (0), 16);
  2347  0011DE  0E8D               	movlw	low process_message@hexval
  2348  0011E0  0100               	movlb	0	; () banked
  2349  0011E2  6F68               	movwf	strtol@s& (0+255),b
  2350  0011E4  0E00               	movlw	high process_message@hexval
  2351  0011E6  0100               	movlb	0	; () banked
  2352  0011E8  6F69               	movwf	(strtol@s+1)& (0+255),b
  2353  0011EA  0E00               	movlw	0
  2354  0011EC  0100               	movlb	0	; () banked
  2355  0011EE  6F6A               	movwf	strtol@endptr& (0+255),b
  2356  0011F0  0E00               	movlw	0
  2357  0011F2  0100               	movlb	0	; () banked
  2358  0011F4  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  2359  0011F6  0E00               	movlw	0
  2360  0011F8  0100               	movlb	0	; () banked
  2361  0011FA  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2362  0011FC  0E10               	movlw	16
  2363  0011FE  6F6C               	movwf	strtol@base& (0+255),b
  2364  001200  ECC5  F006         	call	_strtol	;wreg free
  2365  001204  0100               	movlb	0	; () banked
  2366  001206  5168               	movf	?_strtol& (0+255),w,b
  2367  001208  0100               	movlb	0	; () banked
  2368  00120A  6F9A               	movwf	_val& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 70: return 1;
  2372  00120C  0E00               	movlw	0
  2373  00120E  0100               	movlb	0	; () banked
  2374  001210  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2375  001212  0E01               	movlw	1
  2376  001214  6F89               	movwf	?_process_message& (0+255),b
  2377                           
  2378                           ; BSR set to: 0
  2379  001216  0012               	return	
  2380  001218                     l3571:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;main.c: 71: }
  2384                           ;main.c: 73: return 0;
  2385  001218  0E00               	movlw	0
  2386  00121A  0100               	movlb	0	; () banked
  2387  00121C  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2388  00121E  0E00               	movlw	0
  2389  001220  6F89               	movwf	?_process_message& (0+255),b
  2390  001222  0012               	return	
  2391  001224                     __end_of_process_message:
  2392                           	opt stack 0
  2393                           tblptru	equ	0xFF8
  2394                           tblptrh	equ	0xFF7
  2395                           tblptrl	equ	0xFF6
  2396                           tablat	equ	0xFF5
  2397                           prodh	equ	0xFF4
  2398                           prodl	equ	0xFF3
  2399                           intcon	equ	0xFF2
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1h	equ	0xFE2
  2404                           fsr1l	equ	0xFE1
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _strtol *****************
  2408 ;; Defined at:
  2409 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2412 ;;		 -> process_message@hexval(4), uuid(40), 
  2413 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2414 ;;		 -> NULL(0), 
  2415 ;;  base            2   12[BANK0 ] int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  a               4   19[BANK0 ] long 
  2418 ;;  c               1   23[BANK0 ] unsigned char 
  2419 ;;  sign            1   18[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  4    8[BANK0 ] long 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:       16 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    6
  2436 ;; This function calls:
  2437 ;;		___lmul
  2438 ;;		_isalpha
  2439 ;;		_isdigit
  2440 ;;		_isspace
  2441 ;;		_toupper
  2442 ;; This function is called by:
  2443 ;;		_process_message
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text6
  2449  000D8A                     __ptext6:
  2450                           	opt stack 0
  2451  000D8A                     _strtol:
  2452                           	opt stack 24
  2453  000D8A  C068  FFD9         	movff	strtol@s,fsr2l
  2454  000D8E  C069  FFDA         	movff	strtol@s+1,fsr2h
  2455  000D92  50DF               	movf	indf2,w,c
  2456  000D94  0100               	movlb	0	; () banked
  2457  000D96  6F77               	movwf	strtol@c& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460  000D98  0100               	movlb	0	; () banked
  2461  000D9A  4B68               	infsnz	strtol@s& (0+255),f,b
  2462  000D9C  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2463                           
  2464                           ; BSR set to: 0
  2465  000D9E  0100               	movlb	0	; () banked
  2466  000DA0  5177               	movf	strtol@c& (0+255),w,b
  2467  000DA2  ECE8  F00D         	call	_isspace
  2468  000DA6  B0D8               	btfsc	status,0,c
  2469  000DA8  D7F0               	goto	l3455
  2470  000DAA  0E00               	movlw	0
  2471  000DAC  0100               	movlb	0	; () banked
  2472  000DAE  6F73               	movwf	strtol@a& (0+255),b
  2473  000DB0  0E00               	movlw	0
  2474  000DB2  6F74               	movwf	(strtol@a+1)& (0+255),b
  2475  000DB4  0E00               	movlw	0
  2476  000DB6  6F75               	movwf	(strtol@a+2)& (0+255),b
  2477  000DB8  0E00               	movlw	0
  2478  000DBA  6F76               	movwf	(strtol@a+3)& (0+255),b
  2479  000DBC  0E00               	movlw	0
  2480  000DBE  0100               	movlb	0	; () banked
  2481  000DC0  6F72               	movwf	strtol@sign& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484  000DC2  0E2D               	movlw	45
  2485  000DC4  0100               	movlb	0	; () banked
  2486  000DC6  1977               	xorwf	strtol@c& (0+255),w,b
  2487  000DC8  A4D8               	btfss	status,2,c
  2488  000DCA  D008               	goto	l3471
  2489                           
  2490                           ; BSR set to: 0
  2491  000DCC  0E01               	movlw	1
  2492  000DCE  0100               	movlb	0	; () banked
  2493  000DD0  6F72               	movwf	strtol@sign& (0+255),b
  2494  000DD2  D009               	goto	l3473
  2495  000DD4                     l3469:
  2496                           
  2497                           ; BSR set to: 0
  2498  000DD4  0100               	movlb	0	; () banked
  2499  000DD6  4B68               	infsnz	strtol@s& (0+255),f,b
  2500  000DD8  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2501  000DDA  D00D               	goto	l3477
  2502  000DDC                     l3471:
  2503                           
  2504                           ; BSR set to: 0
  2505  000DDC  0E2B               	movlw	43
  2506  000DDE  0100               	movlb	0	; () banked
  2507  000DE0  1977               	xorwf	strtol@c& (0+255),w,b
  2508  000DE2  A4D8               	btfss	status,2,c
  2509  000DE4  D008               	goto	l3477
  2510  000DE6                     l3473:
  2511                           
  2512                           ; BSR set to: 0
  2513  000DE6  C068  FFD9         	movff	strtol@s,fsr2l
  2514  000DEA  C069  FFDA         	movff	strtol@s+1,fsr2h
  2515  000DEE  50DF               	movf	indf2,w,c
  2516  000DF0  0100               	movlb	0	; () banked
  2517  000DF2  6F77               	movwf	strtol@c& (0+255),b
  2518  000DF4  D7EF               	goto	l3469
  2519  000DF6                     l3477:
  2520                           
  2521                           ; BSR set to: 0
  2522  000DF6  0E30               	movlw	48
  2523  000DF8  0100               	movlb	0	; () banked
  2524  000DFA  1977               	xorwf	strtol@c& (0+255),w,b
  2525  000DFC  A4D8               	btfss	status,2,c
  2526  000DFE  D03C               	goto	l3501
  2527                           
  2528                           ; BSR set to: 0
  2529  000E00  C068  FFD9         	movff	strtol@s,fsr2l
  2530  000E04  C069  FFDA         	movff	strtol@s+1,fsr2h
  2531  000E08  50DF               	movf	indf2,w,c
  2532  000E0A  0100               	movlb	0	; () banked
  2533  000E0C  6F77               	movwf	strtol@c& (0+255),b
  2534                           
  2535                           ; BSR set to: 0
  2536  000E0E  0100               	movlb	0	; () banked
  2537  000E10  4B68               	infsnz	strtol@s& (0+255),f,b
  2538  000E12  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2539                           
  2540                           ; BSR set to: 0
  2541  000E14  0100               	movlb	0	; () banked
  2542  000E16  516C               	movf	strtol@base& (0+255),w,b
  2543  000E18  0100               	movlb	0	; () banked
  2544  000E1A  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2545  000E1C  B4D8               	btfsc	status,2,c
  2546  000E1E  D007               	goto	l3487
  2547                           
  2548                           ; BSR set to: 0
  2549  000E20  0E10               	movlw	16
  2550  000E22  0100               	movlb	0	; () banked
  2551  000E24  196C               	xorwf	strtol@base& (0+255),w,b
  2552  000E26  0100               	movlb	0	; () banked
  2553  000E28  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2554  000E2A  A4D8               	btfss	status,2,c
  2555  000E2C  D01A               	goto	l3497
  2556  000E2E                     l3487:
  2557                           
  2558                           ; BSR set to: 0
  2559  000E2E  0E78               	movlw	120
  2560  000E30  0100               	movlb	0	; () banked
  2561  000E32  1977               	xorwf	strtol@c& (0+255),w,b
  2562  000E34  B4D8               	btfsc	status,2,c
  2563  000E36  D005               	goto	l3491
  2564                           
  2565                           ; BSR set to: 0
  2566  000E38  0E58               	movlw	88
  2567  000E3A  0100               	movlb	0	; () banked
  2568  000E3C  1977               	xorwf	strtol@c& (0+255),w,b
  2569  000E3E  A4D8               	btfss	status,2,c
  2570  000E40  D010               	goto	l3497
  2571  000E42                     l3491:
  2572                           
  2573                           ; BSR set to: 0
  2574  000E42  0E00               	movlw	0
  2575  000E44  0100               	movlb	0	; () banked
  2576  000E46  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2577  000E48  0E10               	movlw	16
  2578  000E4A  6F6C               	movwf	strtol@base& (0+255),b
  2579                           
  2580                           ; BSR set to: 0
  2581  000E4C  C068  FFD9         	movff	strtol@s,fsr2l
  2582  000E50  C069  FFDA         	movff	strtol@s+1,fsr2h
  2583  000E54  50DF               	movf	indf2,w,c
  2584  000E56  0100               	movlb	0	; () banked
  2585  000E58  6F77               	movwf	strtol@c& (0+255),b
  2586                           
  2587                           ; BSR set to: 0
  2588  000E5A  0100               	movlb	0	; () banked
  2589  000E5C  4B68               	infsnz	strtol@s& (0+255),f,b
  2590  000E5E  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2591  000E60  D00B               	goto	l3501
  2592  000E62                     l3497:
  2593                           
  2594                           ; BSR set to: 0
  2595  000E62  0100               	movlb	0	; () banked
  2596  000E64  516C               	movf	strtol@base& (0+255),w,b
  2597  000E66  0100               	movlb	0	; () banked
  2598  000E68  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2599  000E6A  A4D8               	btfss	status,2,c
  2600  000E6C  D005               	goto	l3501
  2601                           
  2602                           ; BSR set to: 0
  2603  000E6E  0E00               	movlw	0
  2604  000E70  0100               	movlb	0	; () banked
  2605  000E72  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2606  000E74  0E08               	movlw	8
  2607  000E76  6F6C               	movwf	strtol@base& (0+255),b
  2608  000E78                     l3501:
  2609                           
  2610                           ; BSR set to: 0
  2611  000E78  0100               	movlb	0	; () banked
  2612  000E7A  516C               	movf	strtol@base& (0+255),w,b
  2613  000E7C  0100               	movlb	0	; () banked
  2614  000E7E  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2615  000E80  A4D8               	btfss	status,2,c
  2616  000E82  D005               	goto	l3505
  2617                           
  2618                           ; BSR set to: 0
  2619  000E84  0E00               	movlw	0
  2620  000E86  0100               	movlb	0	; () banked
  2621  000E88  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2622  000E8A  0E0A               	movlw	10
  2623  000E8C  6F6C               	movwf	strtol@base& (0+255),b
  2624  000E8E                     l3505:
  2625                           
  2626                           ; BSR set to: 0
  2627  000E8E  0100               	movlb	0	; () banked
  2628  000E90  5177               	movf	strtol@c& (0+255),w,b
  2629  000E92  ECD4  F00D         	call	_isalpha
  2630  000E96  A0D8               	btfss	status,0,c
  2631  000E98  D008               	goto	l3509
  2632  000E9A  0100               	movlb	0	; () banked
  2633  000E9C  5177               	movf	strtol@c& (0+255),w,b
  2634  000E9E  EC49  F00E         	call	_toupper
  2635  000EA2  0FC9               	addlw	201
  2636  000EA4  0100               	movlb	0	; () banked
  2637  000EA6  6F77               	movwf	strtol@c& (0+255),b
  2638  000EA8  D009               	goto	l3513
  2639  000EAA                     l3509:
  2640  000EAA  0100               	movlb	0	; () banked
  2641  000EAC  5177               	movf	strtol@c& (0+255),w,b
  2642  000EAE  EC2D  F00E         	call	_isdigit
  2643  000EB2  A0D8               	btfss	status,0,c
  2644  000EB4  D04C               	goto	l3523
  2645  000EB6  0E30               	movlw	48
  2646  000EB8  0100               	movlb	0	; () banked
  2647  000EBA  5F77               	subwf	strtol@c& (0+255),f,b
  2648  000EBC                     l3513:
  2649                           
  2650                           ; BSR set to: 0
  2651  000EBC  0100               	movlb	0	; () banked
  2652  000EBE  5177               	movf	strtol@c& (0+255),w,b
  2653  000EC0  0100               	movlb	0	; () banked
  2654  000EC2  6F6E               	movwf	??_strtol& (0+255),b
  2655  000EC4  6B6F               	clrf	(??_strtol+1)& (0+255),b
  2656  000EC6  0100               	movlb	0	; () banked
  2657  000EC8  516C               	movf	strtol@base& (0+255),w,b
  2658  000ECA  0100               	movlb	0	; () banked
  2659  000ECC  5D6E               	subwf	??_strtol& (0+255),w,b
  2660  000ECE  0100               	movlb	0	; () banked
  2661  000ED0  516F               	movf	(??_strtol+1)& (0+255),w,b
  2662  000ED2  0A80               	xorlw	128
  2663  000ED4  0100               	movlb	0	; () banked
  2664  000ED6  6F70               	movwf	(??_strtol+2)& (0+255),b
  2665  000ED8  0100               	movlb	0	; () banked
  2666  000EDA  516D               	movf	(strtol@base+1)& (0+255),w,b
  2667  000EDC  0A80               	xorlw	128
  2668  000EDE  0100               	movlb	0	; () banked
  2669  000EE0  5970               	subwfb	(??_strtol+2)& (0+255),w,b
  2670  000EE2  B0D8               	btfsc	status,0,c
  2671  000EE4  D034               	goto	l3523
  2672                           
  2673                           ; BSR set to: 0
  2674                           
  2675                           ; BSR set to: 0
  2676                           
  2677                           ; BSR set to: 0
  2678  000EE6  C06C  F060         	movff	strtol@base,___lmul@multiplier
  2679  000EEA  C06D  F061         	movff	strtol@base+1,___lmul@multiplier+1
  2680  000EEE  0100               	movlb	0	; () banked
  2681  000EF0  0E00               	movlw	0
  2682  000EF2  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2683  000EF4  0EFF               	movlw	-1
  2684  000EF6  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
  2685  000EF8  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
  2686  000EFA  C073  F064         	movff	strtol@a,___lmul@multiplicand
  2687  000EFE  C074  F065         	movff	strtol@a+1,___lmul@multiplicand+1
  2688  000F02  C075  F066         	movff	strtol@a+2,___lmul@multiplicand+2
  2689  000F06  C076  F067         	movff	strtol@a+3,___lmul@multiplicand+3
  2690  000F0A  EC0F  F00B         	call	___lmul	;wreg free
  2691  000F0E  0100               	movlb	0	; () banked
  2692  000F10  5177               	movf	strtol@c& (0+255),w,b
  2693  000F12  0100               	movlb	0	; () banked
  2694  000F14  2560               	addwf	?___lmul& (0+255),w,b
  2695  000F16  0100               	movlb	0	; () banked
  2696  000F18  6F73               	movwf	strtol@a& (0+255),b
  2697  000F1A  0E00               	movlw	0
  2698  000F1C  0100               	movlb	0	; () banked
  2699  000F1E  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  2700  000F20  0100               	movlb	0	; () banked
  2701  000F22  6F74               	movwf	(strtol@a+1)& (0+255),b
  2702  000F24  0E00               	movlw	0
  2703  000F26  0100               	movlb	0	; () banked
  2704  000F28  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  2705  000F2A  0100               	movlb	0	; () banked
  2706  000F2C  6F75               	movwf	(strtol@a+2)& (0+255),b
  2707  000F2E  0E00               	movlw	0
  2708  000F30  0100               	movlb	0	; () banked
  2709  000F32  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  2710  000F34  0100               	movlb	0	; () banked
  2711  000F36  6F76               	movwf	(strtol@a+3)& (0+255),b
  2712                           
  2713                           ; BSR set to: 0
  2714  000F38  C068  FFD9         	movff	strtol@s,fsr2l
  2715  000F3C  C069  FFDA         	movff	strtol@s+1,fsr2h
  2716  000F40  50DF               	movf	indf2,w,c
  2717  000F42  0100               	movlb	0	; () banked
  2718  000F44  6F77               	movwf	strtol@c& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721  000F46  0100               	movlb	0	; () banked
  2722  000F48  4B68               	infsnz	strtol@s& (0+255),f,b
  2723  000F4A  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2724  000F4C  D7A0               	goto	l3505
  2725  000F4E                     l3523:
  2726  000F4E  0100               	movlb	0	; () banked
  2727  000F50  516A               	movf	strtol@endptr& (0+255),w,b
  2728  000F52  0100               	movlb	0	; () banked
  2729  000F54  116B               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2730  000F56  B4D8               	btfsc	status,2,c
  2731  000F58  D012               	goto	l3527
  2732                           
  2733                           ; BSR set to: 0
  2734  000F5A  0EFF               	movlw	255
  2735  000F5C  0100               	movlb	0	; () banked
  2736  000F5E  2568               	addwf	strtol@s& (0+255),w,b
  2737  000F60  0100               	movlb	0	; () banked
  2738  000F62  6F6E               	movwf	??_strtol& (0+255),b
  2739  000F64  0EFF               	movlw	255
  2740  000F66  0100               	movlb	0	; () banked
  2741  000F68  2169               	addwfc	(strtol@s+1)& (0+255),w,b
  2742  000F6A  0100               	movlb	0	; () banked
  2743  000F6C  6F6F               	movwf	(??_strtol+1)& (0+255),b
  2744  000F6E  C06A  FFD9         	movff	strtol@endptr,fsr2l
  2745  000F72  C06B  FFDA         	movff	strtol@endptr+1,fsr2h
  2746  000F76  C06E  FFDE         	movff	??_strtol,postinc2
  2747  000F7A  C06F  FFDD         	movff	??_strtol+1,postdec2
  2748  000F7E                     l3527:
  2749                           
  2750                           ; BSR set to: 0
  2751  000F7E  0100               	movlb	0	; () banked
  2752  000F80  5172               	movf	strtol@sign& (0+255),w,b
  2753  000F82  0100               	movlb	0	; () banked
  2754  000F84  B4D8               	btfsc	status,2,c
  2755  000F86  D01B               	goto	l1053
  2756                           
  2757                           ; BSR set to: 0
  2758  000F88  C073  F06E         	movff	strtol@a,??_strtol
  2759  000F8C  C074  F06F         	movff	strtol@a+1,??_strtol+1
  2760  000F90  C075  F070         	movff	strtol@a+2,??_strtol+2
  2761  000F94  C076  F071         	movff	strtol@a+3,??_strtol+3
  2762  000F98  0100               	movlb	0	; () banked
  2763  000F9A  1F6E               	comf	??_strtol& (0+255),f,b
  2764  000F9C  1F6F               	comf	(??_strtol+1)& (0+255),f,b
  2765  000F9E  1F70               	comf	(??_strtol+2)& (0+255),f,b
  2766  000FA0  1F71               	comf	(??_strtol+3)& (0+255),f,b
  2767  000FA2  2B6E               	incf	??_strtol& (0+255),f,b
  2768  000FA4  0E00               	movlw	0
  2769  000FA6  236F               	addwfc	(??_strtol+1)& (0+255),f,b
  2770  000FA8  2370               	addwfc	(??_strtol+2)& (0+255),f,b
  2771  000FAA  2371               	addwfc	(??_strtol+3)& (0+255),f,b
  2772  000FAC  C06E  F068         	movff	??_strtol,?_strtol
  2773  000FB0  C06F  F069         	movff	??_strtol+1,?_strtol+1
  2774  000FB4  C070  F06A         	movff	??_strtol+2,?_strtol+2
  2775  000FB8  C071  F06B         	movff	??_strtol+3,?_strtol+3
  2776                           
  2777                           ; BSR set to: 0
  2778  000FBC  0012               	return	
  2779  000FBE                     l1053:
  2780                           
  2781                           ; BSR set to: 0
  2782  000FBE  C073  F068         	movff	strtol@a,?_strtol
  2783  000FC2  C074  F069         	movff	strtol@a+1,?_strtol+1
  2784  000FC6  C075  F06A         	movff	strtol@a+2,?_strtol+2
  2785  000FCA  C076  F06B         	movff	strtol@a+3,?_strtol+3
  2786                           
  2787                           ; BSR set to: 0
  2788  000FCE  0012               	return		;funcret
  2789  000FD0                     __end_of_strtol:
  2790                           	opt stack 0
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           prodh	equ	0xFF4
  2796                           prodl	equ	0xFF3
  2797                           intcon	equ	0xFF2
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           postdec1	equ	0xFE5
  2801                           fsr1h	equ	0xFE2
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _toupper *****************
  2811 ;; Defined at:
  2812 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  c               1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  c               1   37[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;Total ram usage:        1 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    4
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_strtol
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text7
  2841  001C92                     __ptext7:
  2842                           	opt stack 0
  2843  001C92                     _toupper:
  2844                           	opt stack 25
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;incstack = 0
  2848                           ;toupper@c stored from wreg
  2849  001C92  6E26               	movwf	toupper@c,c
  2850  001C94  0E7B               	movlw	123
  2851  001C96  6026               	cpfslt	toupper@c,c
  2852  001C98  D004               	goto	l2577
  2853  001C9A  0E60               	movlw	96
  2854  001C9C  6426               	cpfsgt	toupper@c,c
  2855  001C9E  D001               	goto	l2577
  2856  001CA0  9A26               	bcf	toupper@c,5,c
  2857  001CA2                     l2577:
  2858  001CA2  5026               	movf	toupper@c,w,c
  2859  001CA4  0012               	return	
  2860  001CA6                     __end_of_toupper:
  2861                           	opt stack 0
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           intcon	equ	0xFF2
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1h	equ	0xFE2
  2873                           fsr1l	equ	0xFE1
  2874                           indf2	equ	0xFDF
  2875                           postinc2	equ	0xFDE
  2876                           postdec2	equ	0xFDD
  2877                           fsr2h	equ	0xFDA
  2878                           fsr2l	equ	0xFD9
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _isspace *****************
  2882 ;; Defined at:
  2883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  c               1    wreg     unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  c               1   39[COMRAM] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        3 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    4
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_strtol
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text8
  2912  001BD0                     __ptext8:
  2913                           	opt stack 0
  2914  001BD0                     _isspace:
  2915                           	opt stack 25
  2916                           
  2917                           ;incstack = 0
  2918                           ;isspace@c stored from wreg
  2919  001BD0  6E28               	movwf	isspace@c,c
  2920  001BD2  0E01               	movlw	1
  2921  001BD4  6E27               	movwf	_isspace$1315,c
  2922  001BD6  0E20               	movlw	32
  2923  001BD8  1828               	xorwf	isspace@c,w,c
  2924  001BDA  B4D8               	btfsc	status,2,c
  2925  001BDC  D008               	goto	l2553
  2926  001BDE  0E0E               	movlw	14
  2927  001BE0  6028               	cpfslt	isspace@c,c
  2928  001BE2  D003               	goto	l2551
  2929  001BE4  0E09               	movlw	9
  2930  001BE6  6028               	cpfslt	isspace@c,c
  2931  001BE8  D002               	goto	l2553
  2932  001BEA                     l2551:
  2933  001BEA  0E00               	movlw	0
  2934  001BEC  6E27               	movwf	_isspace$1315,c
  2935  001BEE                     l2553:
  2936  001BEE  C027  F026         	movff	_isspace$1315,??_isspace
  2937  001BF2  3026               	rrcf	??_isspace,w,c
  2938  001BF4  0012               	return	
  2939  001BF6                     __end_of_isspace:
  2940                           	opt stack 0
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           intcon	equ	0xFF2
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           postdec1	equ	0xFE5
  2951                           fsr1h	equ	0xFE2
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           postinc2	equ	0xFDE
  2955                           postdec2	equ	0xFDD
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _isalpha *****************
  2961 ;; Defined at:
  2962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  c               1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  c               1   42[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;		None               void
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        3 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    5
  2983 ;; This function calls:
  2984 ;;		_isupper
  2985 ;; This function is called by:
  2986 ;;		_strtol
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text9
  2991  001BA8                     __ptext9:
  2992                           	opt stack 0
  2993  001BA8                     _isalpha:
  2994                           	opt stack 24
  2995                           
  2996                           ;incstack = 0
  2997                           ;isalpha@c stored from wreg
  2998  001BA8  6E2B               	movwf	isalpha@c,c
  2999  001BAA  0E01               	movlw	1
  3000  001BAC  6E2A               	movwf	_isalpha$1312,c
  3001  001BAE  0E7B               	movlw	123
  3002  001BB0  602B               	cpfslt	isalpha@c,c
  3003  001BB2  D003               	goto	l2563
  3004  001BB4  0E61               	movlw	97
  3005  001BB6  602B               	cpfslt	isalpha@c,c
  3006  001BB8  D007               	goto	l2567
  3007  001BBA                     l2563:
  3008  001BBA  502B               	movf	isalpha@c,w,c
  3009  001BBC  EC1E  F00E         	call	_isupper
  3010  001BC0  B0D8               	btfsc	status,0,c
  3011  001BC2  D002               	goto	l2567
  3012  001BC4  0E00               	movlw	0
  3013  001BC6  6E2A               	movwf	_isalpha$1312,c
  3014  001BC8                     l2567:
  3015  001BC8  C02A  F029         	movff	_isalpha$1312,??_isalpha
  3016  001BCC  3029               	rrcf	??_isalpha,w,c
  3017  001BCE  0012               	return	
  3018  001BD0                     __end_of_isalpha:
  3019                           	opt stack 0
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           postdec1	equ	0xFE5
  3030                           fsr1h	equ	0xFE2
  3031                           fsr1l	equ	0xFE1
  3032                           indf2	equ	0xFDF
  3033                           postinc2	equ	0xFDE
  3034                           postdec2	equ	0xFDD
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _isupper *****************
  3040 ;; Defined at:
  3041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  c               1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  c               1   39[COMRAM] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:        3 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    4
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_isalpha
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text10
  3070  001C3C                     __ptext10:
  3071                           	opt stack 0
  3072  001C3C                     _isupper:
  3073                           	opt stack 24
  3074                           
  3075                           ;incstack = 0
  3076                           ;isupper@c stored from wreg
  3077  001C3C  6E28               	movwf	isupper@c,c
  3078  001C3E  0E00               	movlw	0
  3079  001C40  6E27               	movwf	_isupper$1318,c
  3080  001C42  0E5B               	movlw	91
  3081  001C44  6028               	cpfslt	isupper@c,c
  3082  001C46  D005               	goto	l2273
  3083  001C48  0E40               	movlw	64
  3084  001C4A  6428               	cpfsgt	isupper@c,c
  3085  001C4C  D002               	goto	l2273
  3086  001C4E  0E01               	movlw	1
  3087  001C50  6E27               	movwf	_isupper$1318,c
  3088  001C52                     l2273:
  3089  001C52  C027  F026         	movff	_isupper$1318,??_isupper
  3090  001C56  3026               	rrcf	??_isupper,w,c
  3091  001C58  0012               	return	
  3092  001C5A                     __end_of_isupper:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           intcon	equ	0xFF2
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function ___lmul *****************
  3114 ;; Defined at:
  3115 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3118 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  product         4   37[COMRAM] unsigned long 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  4    0[BANK0 ] unsigned long 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:       12 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    4
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_rand
  3141 ;;		_strtol
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text11
  3146  00161E                     __ptext11:
  3147                           	opt stack 0
  3148  00161E                     ___lmul:
  3149                           	opt stack 25
  3150                           
  3151                           ;incstack = 0
  3152  00161E  0E00               	movlw	0
  3153  001620  6E26               	movwf	___lmul@product,c
  3154  001622  0E00               	movlw	0
  3155  001624  6E27               	movwf	___lmul@product+1,c
  3156  001626  0E00               	movlw	0
  3157  001628  6E28               	movwf	___lmul@product+2,c
  3158  00162A  0E00               	movlw	0
  3159  00162C  6E29               	movwf	___lmul@product+3,c
  3160  00162E                     l3397:
  3161  00162E  0100               	movlb	0	; () banked
  3162  001630  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3163  001632  D00C               	goto	l3401
  3164                           
  3165                           ; BSR set to: 0
  3166  001634  0100               	movlb	0	; () banked
  3167  001636  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3168  001638  2626               	addwf	___lmul@product,f,c
  3169  00163A  0100               	movlb	0	; () banked
  3170  00163C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3171  00163E  2227               	addwfc	___lmul@product+1,f,c
  3172  001640  0100               	movlb	0	; () banked
  3173  001642  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3174  001644  2228               	addwfc	___lmul@product+2,f,c
  3175  001646  0100               	movlb	0	; () banked
  3176  001648  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3177  00164A  2229               	addwfc	___lmul@product+3,f,c
  3178  00164C                     l3401:
  3179                           
  3180                           ; BSR set to: 0
  3181  00164C  0100               	movlb	0	; () banked
  3182  00164E  90D8               	bcf	status,0,c
  3183  001650  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3184  001652  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3185  001654  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3186  001656  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3187                           
  3188                           ; BSR set to: 0
  3189  001658  0100               	movlb	0	; () banked
  3190  00165A  90D8               	bcf	status,0,c
  3191  00165C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3192  00165E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3193  001660  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3194  001662  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3195  001664  0100               	movlb	0	; () banked
  3196  001666  5160               	movf	___lmul@multiplier& (0+255),w,b
  3197  001668  0100               	movlb	0	; () banked
  3198  00166A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3199  00166C  0100               	movlb	0	; () banked
  3200  00166E  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3201  001670  0100               	movlb	0	; () banked
  3202  001672  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3203  001674  A4D8               	btfss	status,2,c
  3204  001676  D7DB               	goto	l3397
  3205                           
  3206                           ; BSR set to: 0
  3207  001678  C026  F060         	movff	___lmul@product,?___lmul
  3208  00167C  C027  F061         	movff	___lmul@product+1,?___lmul+1
  3209  001680  C028  F062         	movff	___lmul@product+2,?___lmul+2
  3210  001684  C029  F063         	movff	___lmul@product+3,?___lmul+3
  3211                           
  3212                           ; BSR set to: 0
  3213  001688  0012               	return		;funcret
  3214  00168A                     __end_of___lmul:
  3215                           	opt stack 0
  3216                           tblptru	equ	0xFF8
  3217                           tblptrh	equ	0xFF7
  3218                           tblptrl	equ	0xFF6
  3219                           tablat	equ	0xFF5
  3220                           prodh	equ	0xFF4
  3221                           prodl	equ	0xFF3
  3222                           intcon	equ	0xFF2
  3223                           postinc0	equ	0xFEE
  3224                           wreg	equ	0xFE8
  3225                           postdec1	equ	0xFE5
  3226                           fsr1h	equ	0xFE2
  3227                           fsr1l	equ	0xFE1
  3228                           indf2	equ	0xFDF
  3229                           postinc2	equ	0xFDE
  3230                           postdec2	equ	0xFDD
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _strstr *****************
  3236 ;; Defined at:
  3237 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  s1              2    9[BANK0 ] PTR const unsigned char 
  3240 ;;		 -> NULL(0), line(128), 
  3241 ;;  s2              2   11[BANK0 ] PTR const unsigned char 
  3242 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2    9[BANK0 ] PTR unsigned char 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:        5 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    5
  3261 ;; This function calls:
  3262 ;;		_strchr
  3263 ;;		_strlen
  3264 ;;		_strncmp
  3265 ;; This function is called by:
  3266 ;;		_process_message
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text12
  3271  0012F2                     __ptext12:
  3272                           	opt stack 0
  3273  0012F2                     _strstr:
  3274                           	opt stack 24
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;incstack = 0
  3278  0012F2  D042               	goto	l3433
  3279  0012F4                     l3425:
  3280  0012F4  C069  F060         	movff	strstr@s1,strncmp@s1
  3281  0012F8  C06A  F061         	movff	strstr@s1+1,strncmp@s1+1
  3282  0012FC  C06B  F062         	movff	strstr@s2,strncmp@s2
  3283  001300  C06C  F063         	movff	strstr@s2+1,strncmp@s2+1
  3284  001304  C06B  F026         	movff	strstr@s2,strlen@s
  3285  001308  C06C  F027         	movff	strstr@s2+1,strlen@s+1
  3286  00130C  ECD1  F00B         	call	_strlen	;wreg free
  3287  001310  C026  F064         	movff	?_strlen,strncmp@len
  3288  001314  C027  F065         	movff	?_strlen+1,strncmp@len+1
  3289  001318  EC12  F009         	call	_strncmp	;wreg free
  3290  00131C  0100               	movlb	0	; () banked
  3291  00131E  5160               	movf	?_strncmp& (0+255),w,b
  3292  001320  0100               	movlb	0	; () banked
  3293  001322  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  3294  001324  A4D8               	btfss	status,2,c
  3295  001326  D005               	goto	l3431
  3296                           
  3297                           ; BSR set to: 0
  3298  001328  C069  F069         	movff	strstr@s1,?_strstr
  3299  00132C  C06A  F06A         	movff	strstr@s1+1,?_strstr+1
  3300                           
  3301                           ; BSR set to: 0
  3302  001330  0012               	return	
  3303  001332                     l3431:
  3304                           
  3305                           ; BSR set to: 0
  3306  001332  0E01               	movlw	1
  3307  001334  0100               	movlb	0	; () banked
  3308  001336  2569               	addwf	strstr@s1& (0+255),w,b
  3309  001338  6E26               	movwf	strchr@ptr,c
  3310  00133A  0E00               	movlw	0
  3311  00133C  0100               	movlb	0	; () banked
  3312  00133E  216A               	addwfc	(strstr@s1+1)& (0+255),w,b
  3313  001340  6E27               	movwf	strchr@ptr+1,c
  3314  001342  C06B  FFF6         	movff	strstr@s2,tblptrl
  3315  001346  C06C  FFF7         	movff	strstr@s2+1,tblptrh
  3316  00134A  0E00               	movlw	low (__mediumconst shr (0+16))
  3317  00134C  6EF8               	movwf	tblptru,c
  3318  00134E  0E0F               	movlw	(high __ramtop+-1)
  3319  001350  64F7               	cpfsgt	tblptrh,c
  3320  001352  D003               	bra	u3787
  3321  001354  0008               	tblrd		*
  3322  001356  50F5               	movf	tablat,w,c
  3323  001358  D005               	bra	u3780
  3324  00135A                     u3787:
  3325  00135A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3326  00135E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3327  001362  50E7               	movf	indf1,w,c
  3328  001364                     u3780:
  3329  001364  6E2C               	movwf	??_strstr& (0+255),c
  3330  001366  502C               	movf	??_strstr,w,c
  3331  001368  6E28               	movwf	strchr@chr,c
  3332  00136A  6A29               	clrf	strchr@chr+1,c
  3333  00136C  ECDB  F00C         	call	_strchr	;wreg free
  3334  001370  C026  F069         	movff	?_strchr,strstr@s1
  3335  001374  C027  F06A         	movff	?_strchr+1,strstr@s1+1
  3336  001378                     l3433:
  3337  001378  0100               	movlb	0	; () banked
  3338  00137A  5169               	movf	strstr@s1& (0+255),w,b
  3339  00137C  0100               	movlb	0	; () banked
  3340  00137E  116A               	iorwf	(strstr@s1+1)& (0+255),w,b
  3341  001380  B4D8               	btfsc	status,2,c
  3342  001382  D007               	goto	l3437
  3343                           
  3344                           ; BSR set to: 0
  3345  001384  C069  FFD9         	movff	strstr@s1,fsr2l
  3346  001388  C06A  FFDA         	movff	strstr@s1+1,fsr2h
  3347  00138C  50DF               	movf	indf2,w,c
  3348  00138E  A4D8               	btfss	status,2,c
  3349  001390  D7B1               	goto	l3425
  3350  001392                     l3437:
  3351                           
  3352                           ; BSR set to: 0
  3353  001392  0E00               	movlw	0
  3354  001394  0100               	movlb	0	; () banked
  3355  001396  6F69               	movwf	?_strstr& (0+255),b
  3356  001398  0E00               	movlw	0
  3357  00139A  0100               	movlb	0	; () banked
  3358  00139C  6F6A               	movwf	(?_strstr+1)& (0+255),b
  3359  00139E  0012               	return	
  3360  0013A0                     __end_of_strstr:
  3361                           	opt stack 0
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           postinc0	equ	0xFEE
  3370                           wreg	equ	0xFE8
  3371                           indf1	equ	0xFE7
  3372                           postdec1	equ	0xFE5
  3373                           fsr1h	equ	0xFE2
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           postinc2	equ	0xFDE
  3377                           postdec2	equ	0xFDD
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _strncmp *****************
  3383 ;; Defined at:
  3384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  3387 ;;		 -> NULL(0), line(128), 
  3388 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  3389 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3390 ;;  len             2    4[BANK0 ] unsigned int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    0[BANK0 ] int 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:        9 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    4
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_strstr
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text13
  3417  001224                     __ptext13:
  3418                           	opt stack 0
  3419  001224                     _strncmp:
  3420                           	opt stack 24
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;incstack = 0
  3424  001224  D055               	goto	l3417
  3425  001226                     l3407:
  3426  001226  C060  FFD9         	movff	strncmp@s1,fsr2l
  3427  00122A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3428  00122E  50DF               	movf	indf2,w,c
  3429  001230  B4D8               	btfsc	status,2,c
  3430  001232  D01C               	goto	l3411
  3431  001234  C060  FFD9         	movff	strncmp@s1,fsr2l
  3432  001238  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3433  00123C  50DF               	movf	indf2,w,c
  3434  00123E  0100               	movlb	0	; () banked
  3435  001240  6F66               	movwf	??_strncmp& (0+255),b
  3436  001242  C062  FFF6         	movff	strncmp@s2,tblptrl
  3437  001246  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3438  00124A  0E00               	movlw	low (__mediumconst shr (0+16))
  3439  00124C  6EF8               	movwf	tblptru,c
  3440  00124E  0E0F               	movlw	(high __ramtop+-1)
  3441  001250  64F7               	cpfsgt	tblptrh,c
  3442  001252  D003               	bra	u3737
  3443  001254  0008               	tblrd		*
  3444  001256  50F5               	movf	tablat,w,c
  3445  001258  D005               	bra	u3730
  3446  00125A                     u3737:
  3447  00125A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3448  00125E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3449  001262  50E7               	movf	indf1,w,c
  3450  001264                     u3730:
  3451  001264  0100               	movlb	0	; () banked
  3452  001266  1966               	xorwf	??_strncmp& (0+255),w,b
  3453  001268  B4D8               	btfsc	status,2,c
  3454  00126A  D02C               	goto	l3415
  3455  00126C                     l3411:
  3456  00126C  C062  FFF6         	movff	strncmp@s2,tblptrl
  3457  001270  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3458  001274  0E00               	movlw	low (__mediumconst shr (0+16))
  3459  001276  6EF8               	movwf	tblptru,c
  3460  001278  0E0F               	movlw	(high __ramtop+-1)
  3461  00127A  64F7               	cpfsgt	tblptrh,c
  3462  00127C  D003               	bra	u3757
  3463  00127E  0008               	tblrd		*
  3464  001280  50F5               	movf	tablat,w,c
  3465  001282  D005               	bra	u3750
  3466  001284                     u3757:
  3467  001284  CFF6 FFE1          	movff	tblptrl,fsr1l
  3468  001288  CFF7 FFE2          	movff	tblptrh,fsr1h
  3469  00128C  50E7               	movf	indf1,w,c
  3470  00128E                     u3750:
  3471  00128E  0100               	movlb	0	; () banked
  3472  001290  6F66               	movwf	??_strncmp& (0+255),b
  3473  001292  6B67               	clrf	(??_strncmp+1)& (0+255),b
  3474  001294  0100               	movlb	0	; () banked
  3475  001296  1F66               	comf	??_strncmp& (0+255),f,b
  3476  001298  1F67               	comf	(??_strncmp+1)& (0+255),f,b
  3477  00129A  4B66               	infsnz	??_strncmp& (0+255),f,b
  3478  00129C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
  3479  00129E  C060  FFD9         	movff	strncmp@s1,fsr2l
  3480  0012A2  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3481  0012A6  50DF               	movf	indf2,w,c
  3482  0012A8  0100               	movlb	0	; () banked
  3483  0012AA  6F68               	movwf	(??_strncmp+2)& (0+255),b
  3484  0012AC  0100               	movlb	0	; () banked
  3485  0012AE  5168               	movf	(??_strncmp+2)& (0+255),w,b
  3486  0012B0  0100               	movlb	0	; () banked
  3487  0012B2  2566               	addwf	??_strncmp& (0+255),w,b
  3488  0012B4  0100               	movlb	0	; () banked
  3489  0012B6  6F60               	movwf	?_strncmp& (0+255),b
  3490  0012B8  0E00               	movlw	0
  3491  0012BA  0100               	movlb	0	; () banked
  3492  0012BC  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
  3493  0012BE  0100               	movlb	0	; () banked
  3494  0012C0  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3495                           
  3496                           ; BSR set to: 0
  3497  0012C2  0012               	return	
  3498  0012C4                     l3415:
  3499                           
  3500                           ; BSR set to: 0
  3501  0012C4  0100               	movlb	0	; () banked
  3502  0012C6  4B60               	infsnz	strncmp@s1& (0+255),f,b
  3503  0012C8  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  3504  0012CA  0100               	movlb	0	; () banked
  3505  0012CC  4B62               	infsnz	strncmp@s2& (0+255),f,b
  3506  0012CE  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  3507  0012D0                     l3417:
  3508  0012D0  0100               	movlb	0	; () banked
  3509  0012D2  0764               	decf	strncmp@len& (0+255),f,b
  3510  0012D4  A0D8               	btfss	status,0,c
  3511  0012D6  0765               	decf	(strncmp@len+1)& (0+255),f,b
  3512  0012D8  0100               	movlb	0	; () banked
  3513  0012DA  2964               	incf	strncmp@len& (0+255),w,b
  3514  0012DC  E1A4               	bnz	l3407
  3515  0012DE  0100               	movlb	0	; () banked
  3516  0012E0  2965               	incf	(strncmp@len+1)& (0+255),w,b
  3517  0012E2  A4D8               	btfss	status,2,c
  3518  0012E4  D7A0               	goto	l3407
  3519                           
  3520                           ; BSR set to: 0
  3521                           
  3522                           ; BSR set to: 0
  3523  0012E6  0E00               	movlw	0
  3524  0012E8  0100               	movlb	0	; () banked
  3525  0012EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3526  0012EC  0E00               	movlw	0
  3527  0012EE  6F60               	movwf	?_strncmp& (0+255),b
  3528  0012F0  0012               	return	
  3529  0012F2                     __end_of_strncmp:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           indf1	equ	0xFE7
  3541                           postdec1	equ	0xFE5
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           indf2	equ	0xFDF
  3545                           postinc2	equ	0xFDE
  3546                           postdec2	equ	0xFDD
  3547                           fsr2h	equ	0xFDA
  3548                           fsr2l	equ	0xFD9
  3549                           status	equ	0xFD8
  3550                           
  3551 ;; *************** function _strlen *****************
  3552 ;; Defined at:
  3553 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  s               2   37[COMRAM] PTR const unsigned char 
  3556 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  cp              2   41[COMRAM] PTR const unsigned char 
  3559 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2   37[COMRAM] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;Total ram usage:        6 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    4
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_process_message
  3580 ;;		_strstr
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text14
  3585  0017A2                     __ptext14:
  3586                           	opt stack 0
  3587  0017A2                     _strlen:
  3588                           	opt stack 24
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;incstack = 0
  3592  0017A2  C026  F02A         	movff	strlen@s,strlen@cp
  3593  0017A6  C027  F02B         	movff	strlen@s+1,strlen@cp+1
  3594  0017AA  D002               	goto	l2283
  3595  0017AC                     l2281:
  3596  0017AC  4A2A               	infsnz	strlen@cp,f,c
  3597  0017AE  2A2B               	incf	strlen@cp+1,f,c
  3598  0017B0                     l2283:
  3599  0017B0  C02A  FFF6         	movff	strlen@cp,tblptrl
  3600  0017B4  C02B  FFF7         	movff	strlen@cp+1,tblptrh
  3601  0017B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3602  0017BA  6EF8               	movwf	tblptru,c
  3603  0017BC  0E0F               	movlw	(high __ramtop+-1)
  3604  0017BE  64F7               	cpfsgt	tblptrh,c
  3605  0017C0  D003               	bra	u1747
  3606  0017C2  0008               	tblrd		*
  3607  0017C4  50F5               	movf	tablat,w,c
  3608  0017C6  D005               	bra	u1740
  3609  0017C8                     u1747:
  3610  0017C8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3611  0017CC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3612  0017D0  50E7               	movf	indf1,w,c
  3613  0017D2                     u1740:
  3614  0017D2  0900               	iorlw	0
  3615  0017D4  A4D8               	btfss	status,2,c
  3616  0017D6  D7EA               	goto	l2281
  3617  0017D8  C026  F028         	movff	strlen@s,??_strlen
  3618  0017DC  C027  F029         	movff	strlen@s+1,??_strlen+1
  3619  0017E0  1E28               	comf	??_strlen,f,c
  3620  0017E2  1E29               	comf	??_strlen+1,f,c
  3621  0017E4  4A28               	infsnz	??_strlen,f,c
  3622  0017E6  2A29               	incf	??_strlen+1,f,c
  3623  0017E8  502A               	movf	strlen@cp,w,c
  3624  0017EA  2428               	addwf	??_strlen,w,c
  3625  0017EC  6E26               	movwf	?_strlen,c
  3626  0017EE  502B               	movf	strlen@cp+1,w,c
  3627  0017F0  2029               	addwfc	??_strlen+1,w,c
  3628  0017F2  6E27               	movwf	?_strlen+1,c
  3629  0017F4  0012               	return	
  3630  0017F6                     __end_of_strlen:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           intcon	equ	0xFF2
  3639                           postinc0	equ	0xFEE
  3640                           wreg	equ	0xFE8
  3641                           indf1	equ	0xFE7
  3642                           postdec1	equ	0xFE5
  3643                           fsr1h	equ	0xFE2
  3644                           fsr1l	equ	0xFE1
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _strchr *****************
  3653 ;; Defined at:
  3654 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  ptr             2   37[COMRAM] PTR const unsigned char 
  3657 ;;		 -> NULL(0), line(128), 
  3658 ;;  chr             2   39[COMRAM] int 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2   37[COMRAM] PTR unsigned char 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        5 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    4
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_strstr
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text15
  3685  0019B6                     __ptext15:
  3686                           	opt stack 0
  3687  0019B6                     _strchr:
  3688                           	opt stack 24
  3689  0019B6  C026  FFD9         	movff	strchr@ptr,fsr2l
  3690  0019BA  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3691  0019BE  5028               	movf	strchr@chr,w,c
  3692  0019C0  18DE               	xorwf	postinc2,w,c
  3693  0019C2  A4D8               	btfss	status,2,c
  3694  0019C4  D005               	goto	l2537
  3695  0019C6  C026  F026         	movff	strchr@ptr,?_strchr
  3696  0019CA  C027  F027         	movff	strchr@ptr+1,?_strchr+1
  3697  0019CE  0012               	return	
  3698  0019D0                     l2537:
  3699  0019D0  C026  FFD9         	movff	strchr@ptr,fsr2l
  3700  0019D4  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3701  0019D8  4A26               	infsnz	strchr@ptr,f,c
  3702  0019DA  2A27               	incf	strchr@ptr+1,f,c
  3703  0019DC  50DF               	movf	indf2,w,c
  3704  0019DE  A4D8               	btfss	status,2,c
  3705  0019E0  D7EA               	goto	l2531
  3706  0019E2  0E00               	movlw	0
  3707  0019E4  6E26               	movwf	?_strchr,c
  3708  0019E6  0E00               	movlw	0
  3709  0019E8  6E27               	movwf	?_strchr+1,c
  3710  0019EA  0012               	return	
  3711  0019EC                     __end_of_strchr:
  3712                           	opt stack 0
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           prodh	equ	0xFF4
  3718                           prodl	equ	0xFF3
  3719                           intcon	equ	0xFF2
  3720                           postinc0	equ	0xFEE
  3721                           wreg	equ	0xFE8
  3722                           indf1	equ	0xFE7
  3723                           postdec1	equ	0xFE5
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _sprintf *****************
  3734 ;; Defined at:
  3735 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprintf.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  wh              2   27[BANK0 ] PTR unsigned char 
  3738 ;;		 -> process_message@hexval(4), 
  3739 ;;  f               2   29[BANK0 ] PTR const unsigned char 
  3740 ;;		 -> STR_7(5), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  pb              4   37[BANK0 ] struct __prbuf
  3743 ;;  ap              2   35[BANK0 ] PTR void [1]
  3744 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  2   27[BANK0 ] int 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3754 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3755 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;Total ram usage:       14 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    7
  3761 ;; This function calls:
  3762 ;;		__doprnt
  3763 ;; This function is called by:
  3764 ;;		_process_message
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text16
  3769  00184A                     __ptext16:
  3770                           	opt stack 0
  3771  00184A                     _sprintf:
  3772                           	opt stack 22
  3773                           
  3774                           ;incstack = 0
  3775  00184A  C07B  F085         	movff	sprintf@wh,sprintf@pb
  3776  00184E  C07C  F086         	movff	sprintf@wh+1,sprintf@pb+1
  3777  001852  0E00               	movlw	0
  3778  001854  0100               	movlb	0	; () banked
  3779  001856  6F87               	movwf	(sprintf@pb+2)& (0+255),b
  3780  001858  0E00               	movlw	0
  3781  00185A  0100               	movlb	0	; () banked
  3782  00185C  6F88               	movwf	(sprintf@pb+3)& (0+255),b
  3783  00185E  0E7F               	movlw	low (?_sprintf+4)
  3784  001860  0100               	movlb	0	; () banked
  3785  001862  6F83               	movwf	sprintf@ap& (0+255),b
  3786  001864  0E00               	movlw	high (?_sprintf+4)
  3787  001866  0100               	movlb	0	; () banked
  3788  001868  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791  00186A  0E85               	movlw	low sprintf@pb
  3792  00186C  0100               	movlb	0	; () banked
  3793  00186E  6F65               	movwf	__doprnt@pb& (0+255),b
  3794  001870  0E00               	movlw	high sprintf@pb
  3795  001872  0100               	movlb	0	; () banked
  3796  001874  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  3797  001876  C07D  F067         	movff	sprintf@f,__doprnt@f
  3798  00187A  C07E  F068         	movff	sprintf@f+1,__doprnt@f+1
  3799  00187E  0E83               	movlw	low sprintf@ap
  3800  001880  0100               	movlb	0	; () banked
  3801  001882  6F69               	movwf	__doprnt@ap& (0+255),b
  3802  001884  0E00               	movlw	high sprintf@ap
  3803  001886  0100               	movlb	0	; () banked
  3804  001888  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  3805  00188A  EC4C  F000         	call	__doprnt	;wreg free
  3806  00188E  C085  FFD9         	movff	sprintf@pb,fsr2l
  3807  001892  C086  FFDA         	movff	sprintf@pb+1,fsr2h
  3808  001896  0E00               	movlw	0
  3809  001898  6EDF               	movwf	indf2,c
  3810  00189A  0012               	return	
  3811  00189C                     __end_of_sprintf:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postdec1	equ	0xFE5
  3824                           fsr1h	equ	0xFE2
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           postinc2	equ	0xFDE
  3828                           postdec2	equ	0xFDD
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function _getUUID *****************
  3834 ;; Defined at:
  3835 ;;		line 48 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        0 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    8
  3856 ;; This function calls:
  3857 ;;		_printf
  3858 ;;		_read_line
  3859 ;;		_strcpy
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text17
  3866  001B7E                     __ptext17:
  3867                           	opt stack 0
  3868  001B7E                     _getUUID:
  3869                           	opt stack 22
  3870                           
  3871                           ;main.c: 49: printf("sys get hweui\r\n");
  3872                           
  3873                           ;incstack = 0
  3874  001B7E  0E53               	movlw	low STR_5
  3875  001B80  0100               	movlb	0	; () banked
  3876  001B82  6F7B               	movwf	printf@f& (0+255),b
  3877  001B84  0EFF               	movlw	high STR_5
  3878  001B86  0100               	movlb	0	; () banked
  3879  001B88  6F7C               	movwf	(printf@f+1)& (0+255),b
  3880  001B8A  EC77  F00C         	call	_printf	;wreg free
  3881                           
  3882                           ;main.c: 50: read_line();
  3883  001B8E  EC6A  F00E         	call	_read_line	;wreg free
  3884                           
  3885                           ;main.c: 51: strcpy(uuid,line);
  3886  001B92  0E9B               	movlw	low _uuid
  3887  001B94  6E26               	movwf	strcpy@to,c
  3888  001B96  0E00               	movlw	high _uuid
  3889  001B98  6E27               	movwf	strcpy@to+1,c
  3890  001B9A  0E80               	movlw	low _line
  3891  001B9C  6E28               	movwf	strcpy@from,c
  3892  001B9E  0E01               	movlw	high _line
  3893  001BA0  6E29               	movwf	strcpy@from+1,c
  3894  001BA2  EC91  F00D         	call	_strcpy	;wreg free
  3895  001BA6  0012               	return		;funcret
  3896  001BA8                     __end_of_getUUID:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           postinc0	equ	0xFEE
  3906                           wreg	equ	0xFE8
  3907                           indf1	equ	0xFE7
  3908                           postdec1	equ	0xFE5
  3909                           fsr1h	equ	0xFE2
  3910                           fsr1l	equ	0xFE1
  3911                           indf2	equ	0xFDF
  3912                           postinc2	equ	0xFDE
  3913                           postdec2	equ	0xFDD
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function _strcpy *****************
  3919 ;; Defined at:
  3920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  to              2   37[COMRAM] PTR unsigned char 
  3923 ;;		 -> uuid(40), 
  3924 ;;  from            2   39[COMRAM] PTR const unsigned char 
  3925 ;;		 -> line(128), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  cp              2   41[COMRAM] PTR unsigned char 
  3928 ;;		 -> uuid(40), 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  2   37[COMRAM] PTR unsigned char 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;Total ram usage:        6 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    4
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_getUUID
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text18
  3953  001B22                     __ptext18:
  3954                           	opt stack 0
  3955  001B22                     _strcpy:
  3956                           	opt stack 25
  3957                           
  3958                           ;incstack = 0
  3959  001B22  C026  F02A         	movff	strcpy@to,strcpy@cp
  3960  001B26  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  3961  001B2A  D004               	goto	l2715
  3962  001B2C                     l2713:
  3963  001B2C  4A2A               	infsnz	strcpy@cp,f,c
  3964  001B2E  2A2B               	incf	strcpy@cp+1,f,c
  3965  001B30  4A28               	infsnz	strcpy@from,f,c
  3966  001B32  2A29               	incf	strcpy@from+1,f,c
  3967  001B34                     l2715:
  3968  001B34  C028  FFD9         	movff	strcpy@from,fsr2l
  3969  001B38  C029  FFDA         	movff	strcpy@from+1,fsr2h
  3970  001B3C  C02A  FFE1         	movff	strcpy@cp,fsr1l
  3971  001B40  C02B  FFE2         	movff	strcpy@cp+1,fsr1h
  3972  001B44  CFDF FFE7          	movff	indf2,indf1
  3973  001B48  50E7               	movf	indf1,w,c
  3974  001B4A  B4D8               	btfsc	status,2,c
  3975  001B4C  0012               	return	
  3976  001B4E  D7EE               	goto	l2713
  3977  001B50                     __end_of_strcpy:
  3978                           	opt stack 0
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           prodh	equ	0xFF4
  3984                           prodl	equ	0xFF3
  3985                           intcon	equ	0xFF2
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           indf1	equ	0xFE7
  3989                           postdec1	equ	0xFE5
  3990                           fsr1h	equ	0xFE2
  3991                           fsr1l	equ	0xFE1
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _read_line *****************
  4000 ;; Defined at:
  4001 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2  147[None  ] int 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    4
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_getUUID
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text19
  4031  001CD4                     __ptext19:
  4032                           	opt stack 0
  4033  001CD4                     _read_line:
  4034                           	opt stack 26
  4035  001CD4                     l2699:
  4036  001CD4  0434               	decf	_ready,w,c	;volatile
  4037  001CD6  A4D8               	btfss	status,2,c
  4038  001CD8  D7FD               	goto	l2699
  4039                           
  4040                           ;eusart1.c: 252: }
  4041                           ;eusart1.c: 253: ready=0;
  4042  001CDA  0E00               	movlw	0
  4043  001CDC  6E34               	movwf	_ready,c	;volatile
  4044  001CDE  0012               	return	
  4045  001CE0                     __end_of_read_line:
  4046                           	opt stack 0
  4047                           tblptru	equ	0xFF8
  4048                           tblptrh	equ	0xFF7
  4049                           tblptrl	equ	0xFF6
  4050                           tablat	equ	0xFF5
  4051                           prodh	equ	0xFF4
  4052                           prodl	equ	0xFF3
  4053                           intcon	equ	0xFF2
  4054                           postinc0	equ	0xFEE
  4055                           wreg	equ	0xFE8
  4056                           indf1	equ	0xFE7
  4057                           postdec1	equ	0xFE5
  4058                           fsr1h	equ	0xFE2
  4059                           fsr1l	equ	0xFE1
  4060                           indf2	equ	0xFDF
  4061                           postinc2	equ	0xFDE
  4062                           postdec2	equ	0xFDD
  4063                           fsr2h	equ	0xFDA
  4064                           fsr2l	equ	0xFD9
  4065                           status	equ	0xFD8
  4066                           
  4067 ;; *************** function _printf *****************
  4068 ;; Defined at:
  4069 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\printf.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  f               2   27[BANK0 ] PTR const unsigned char 
  4072 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  4073 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  4074 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4075 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4076 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4077 ;;		 -> STR_5(16), 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  pb              4   37[BANK0 ] struct __prbuf
  4080 ;;  ap              2   35[BANK0 ] PTR void [1]
  4081 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  2   27[BANK0 ] int 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4091 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;Total ram usage:       14 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    7
  4098 ;; This function calls:
  4099 ;;		__doprnt
  4100 ;; This function is called by:
  4101 ;;		_getUUID
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text20
  4107  0018EE                     __ptext20:
  4108                           	opt stack 0
  4109  0018EE                     _printf:
  4110                           	opt stack 23
  4111                           
  4112                           ;incstack = 0
  4113  0018EE  0E00               	movlw	0
  4114  0018F0  0100               	movlb	0	; () banked
  4115  0018F2  6F85               	movwf	printf@pb& (0+255),b
  4116  0018F4  0E00               	movlw	0
  4117  0018F6  0100               	movlb	0	; () banked
  4118  0018F8  6F86               	movwf	(printf@pb+1)& (0+255),b
  4119  0018FA  0EE0               	movlw	low _putch
  4120  0018FC  0100               	movlb	0	; () banked
  4121  0018FE  6F87               	movwf	(printf@pb+2)& (0+255),b
  4122  001900  0E1C               	movlw	high _putch
  4123  001902  0100               	movlb	0	; () banked
  4124  001904  6F88               	movwf	(printf@pb+3)& (0+255),b
  4125  001906  0E7D               	movlw	low (?_printf+2)
  4126  001908  0100               	movlb	0	; () banked
  4127  00190A  6F83               	movwf	printf@ap& (0+255),b
  4128  00190C  0E00               	movlw	high (?_printf+2)
  4129  00190E  0100               	movlb	0	; () banked
  4130  001910  6F84               	movwf	(printf@ap+1)& (0+255),b
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;	Return value of _printf is never used
  4134  001912  0E85               	movlw	low printf@pb
  4135  001914  0100               	movlb	0	; () banked
  4136  001916  6F65               	movwf	__doprnt@pb& (0+255),b
  4137  001918  0E00               	movlw	high printf@pb
  4138  00191A  0100               	movlb	0	; () banked
  4139  00191C  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  4140  00191E  C07B  F067         	movff	printf@f,__doprnt@f
  4141  001922  C07C  F068         	movff	printf@f+1,__doprnt@f+1
  4142  001926  0E83               	movlw	low printf@ap
  4143  001928  0100               	movlb	0	; () banked
  4144  00192A  6F69               	movwf	__doprnt@ap& (0+255),b
  4145  00192C  0E00               	movlw	high printf@ap
  4146  00192E  0100               	movlb	0	; () banked
  4147  001930  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  4148  001932  EC4C  F000         	call	__doprnt	;wreg free
  4149  001936  0012               	return	
  4150  001938                     __end_of_printf:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           indf1	equ	0xFE7
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           postinc2	equ	0xFDE
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function __doprnt *****************
  4173 ;; Defined at:
  4174 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  pb              2    5[BANK0 ] PTR struct __prbuf
  4177 ;;		 -> sprintf@pb(4), printf@pb(4), 
  4178 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4179 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  4180 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  4181 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4182 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4183 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4184 ;;		 -> STR_7(5), STR_5(16), 
  4185 ;;  ap              2    9[BANK0 ] PTR PTR void 
  4186 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  idx             1   15[BANK0 ] unsigned char 
  4189 ;;  tmpval          4    0        struct .
  4190 ;;  width           2   24[BANK0 ] int 
  4191 ;;  val             2   21[BANK0 ] unsigned int 
  4192 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  4193 ;;		 -> ?_sprintf(2), ?_printf(2), STR_28(7), _doprnt@c(1), 
  4194 ;;		 -> process_message@hexval(4), uuid(40), NULL(0), 
  4195 ;;  len             2   17[BANK0 ] unsigned int 
  4196 ;;  c               1   26[BANK0 ] char 
  4197 ;;  flag            1   23[BANK0 ] unsigned char 
  4198 ;;  prec            1   16[BANK0 ] char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    5[BANK0 ] int 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4208 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;Total ram usage:       22 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    6
  4215 ;; This function calls:
  4216 ;;		Absolute function
  4217 ;;		___lwdiv
  4218 ;;		___lwmod
  4219 ;;		___wmul
  4220 ;;		_isdigit
  4221 ;;		_putch
  4222 ;; This function is called by:
  4223 ;;		_printf
  4224 ;;		_sprintf
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text21
  4229  000098                     __ptext21:
  4230                           	opt stack 0
  4231  000098                     __doprnt:
  4232                           	opt stack 22
  4233                           
  4234                           ;doprnt.c: 499: signed char c;
  4235                           ;doprnt.c: 501: int width;
  4236                           ;doprnt.c: 506: signed char prec;
  4237                           ;doprnt.c: 508: unsigned char flag;
  4238                           ;doprnt.c: 523: union {
  4239                           ;doprnt.c: 524: unsigned long vd;
  4240                           ;doprnt.c: 525: double integ;
  4241                           ;doprnt.c: 526: } tmpval;
  4242                           ;doprnt.c: 528: unsigned int val;
  4243                           ;doprnt.c: 529: unsigned len;
  4244                           ;doprnt.c: 530: const char * cp;
  4245                           ;doprnt.c: 536: while(c = *f++) {
  4246                           
  4247                           ;incstack = 0
  4248  000098  EFAB  F004         	goto	l3389
  4249  00009C                     l3183:
  4250                           
  4251                           ;doprnt.c: 538: if(c != '%')
  4252  00009C  0E25               	movlw	37
  4253  00009E  0100               	movlb	0	; () banked
  4254  0000A0  197A               	xorwf	__doprnt@c& (0+255),w,b
  4255  0000A2  B4D8               	btfsc	status,2,c
  4256  0000A4  D03C               	goto	l3193
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;doprnt.c: 540: {
  4260                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4261  0000A6  0100               	movlb	0	; () banked
  4262  0000A8  EE20 F002          	lfsr	2,2
  4263  0000AC  5165               	movf	__doprnt@pb& (0+255),w,b
  4264  0000AE  26D9               	addwf	fsr2l,f,c
  4265  0000B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4266  0000B2  22DA               	addwfc	fsr2h,f,c
  4267  0000B4  50DE               	movf	postinc2,w,c
  4268  0000B6  10DE               	iorwf	postinc2,w,c
  4269  0000B8  B4D8               	btfsc	status,2,c
  4270  0000BA  D01A               	goto	l3189
  4271                           
  4272                           ; BSR set to: 0
  4273  0000BC  0100               	movlb	0	; () banked
  4274  0000BE  EE20 F002          	lfsr	2,2
  4275  0000C2  5165               	movf	__doprnt@pb& (0+255),w,b
  4276  0000C4  26D9               	addwf	fsr2l,f,c
  4277  0000C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4278  0000C8  22DA               	addwfc	fsr2h,f,c
  4279  0000CA  CFDE F06B          	movff	postinc2,??__doprnt
  4280  0000CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  4281  0000D2  D802               	call	u3258
  4282  0000D4  EFAB  F004         	goto	l3389
  4283  0000D8                     u3258:
  4284  0000D8  0005               	push	
  4285  0000DA  6EFA               	movwf	pclath,c
  4286  0000DC  0100               	movlb	0	; () banked
  4287  0000DE  516B               	movf	??__doprnt& (0+255),w,b
  4288  0000E0  6EFD               	movwf	tosl,c
  4289  0000E2  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4290  0000E4  6EFE               	movwf	tosh,c
  4291  0000E6  6AFF               	clrf	tosu,c
  4292  0000E8  50FA               	movf	pclath,w,c
  4293  0000EA  0100               	movlb	0	; () banked
  4294  0000EC  517A               	movf	__doprnt@c& (0+255),w,b
  4295  0000EE  0012               	return		;indir
  4296  0000F0                     l3189:
  4297  0000F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4298  0000F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4299  0000F8  CFDE F06B          	movff	postinc2,??__doprnt
  4300  0000FC  CFDD F06C          	movff	postdec2,??__doprnt+1
  4301  000100  C06B  FFD9         	movff	??__doprnt,fsr2l
  4302  000104  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4303  000108  C07A  FFDF         	movff	__doprnt@c,indf2
  4304  00010C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4305  000110  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4306  000114  2ADE               	incf	postinc2,f,c
  4307  000116  0E00               	movlw	0
  4308  000118  22DD               	addwfc	postdec2,f,c
  4309                           
  4310                           ;doprnt.c: 542: continue;
  4311  00011A  EFAB  F004         	goto	l3389
  4312  00011E                     l3193:
  4313                           
  4314                           ;doprnt.c: 543: }
  4315                           ;doprnt.c: 546: width = 0;
  4316  00011E  0E00               	movlw	0
  4317  000120  0100               	movlb	0	; () banked
  4318  000122  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4319  000124  0E00               	movlw	0
  4320  000126  6F78               	movwf	__doprnt@width& (0+255),b
  4321                           
  4322                           ;doprnt.c: 548: flag = 0;
  4323  000128  0E00               	movlw	0
  4324  00012A  0100               	movlb	0	; () banked
  4325  00012C  6F77               	movwf	__doprnt@flag& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;doprnt.c: 551: switch(*f) {
  4329                           
  4330                           ;doprnt.c: 550: for(;;) {
  4331  00012E  D005               	goto	l3199
  4332  000130                     l3195:
  4333                           
  4334                           ;doprnt.c: 580: flag |= 0x04;
  4335  000130  0100               	movlb	0	; () banked
  4336  000132  8577               	bsf	__doprnt@flag& (0+255),2,b
  4337                           
  4338                           ;doprnt.c: 581: f++;
  4339  000134  0100               	movlb	0	; () banked
  4340  000136  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4341  000138  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4342  00013A                     l3199:
  4343  00013A  C067  FFF6         	movff	__doprnt@f,tblptrl
  4344  00013E  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4345  000142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4346  000142  6AF8               	clrf	tblptru,c
  4347  000144                     	endif
  4348  000144                     	if	0	;tblptru may be non-zero
  4349  000144                     	endif
  4350  000144  0008               	tblrd		*
  4351  000146  50F5               	movf	tablat,w,c
  4352                           
  4353                           ; Switch size 1, requested type "space"
  4354                           ; Number of cases is 1, Range of values is 48 to 48
  4355                           ; switch strategies available:
  4356                           ; Name         Instructions Cycles
  4357                           ; simple_byte            4     3 (average)
  4358                           ;	Chosen strategy is simple_byte
  4359  000148  0A30               	xorlw	48	; case 48
  4360  00014A  B4D8               	btfsc	status,2,c
  4361  00014C  D7F1               	goto	l3195
  4362                           
  4363                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4364                           
  4365                           ;doprnt.c: 586: }
  4366                           
  4367                           ;doprnt.c: 585: break;
  4368  00014E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4369  000152  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4370  000156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4371  000156  6AF8               	clrf	tblptru,c
  4372  000158                     	endif
  4373  000158                     	if	0	;tblptru may be non-zero
  4374  000158                     	endif
  4375  000158  0008               	tblrd		*
  4376  00015A  50F5               	movf	tablat,w,c
  4377  00015C  EC2D  F00E         	call	_isdigit
  4378  000160  A0D8               	btfss	status,0,c
  4379  000162  D175               	goto	l3265
  4380                           
  4381                           ;doprnt.c: 598: width = 0;
  4382  000164  0E00               	movlw	0
  4383  000166  0100               	movlb	0	; () banked
  4384  000168  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4385  00016A  0E00               	movlw	0
  4386  00016C  6F78               	movwf	__doprnt@width& (0+255),b
  4387  00016E                     l3205:
  4388                           
  4389                           ;doprnt.c: 600: width *= 10;
  4390  00016E  C078  F026         	movff	__doprnt@width,___wmul@multiplier
  4391  000172  C079  F027         	movff	__doprnt@width+1,___wmul@multiplier+1
  4392  000176  0E00               	movlw	0
  4393  000178  6E29               	movwf	___wmul@multiplicand+1,c
  4394  00017A  0E0A               	movlw	10
  4395  00017C  6E28               	movwf	___wmul@multiplicand,c
  4396  00017E  ECFB  F00D         	call	___wmul	;wreg free
  4397  000182  C026  F078         	movff	?___wmul,__doprnt@width
  4398  000186  C027  F079         	movff	?___wmul+1,__doprnt@width+1
  4399                           
  4400                           ;doprnt.c: 601: width += *f++ - '0';
  4401  00018A  0ED0               	movlw	208
  4402  00018C  0100               	movlb	0	; () banked
  4403  00018E  6F6B               	movwf	??__doprnt& (0+255),b
  4404  000190  0EFF               	movlw	255
  4405  000192  0100               	movlb	0	; () banked
  4406  000194  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4407  000196  C067  FFF6         	movff	__doprnt@f,tblptrl
  4408  00019A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4409  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4410  00019E  6AF8               	clrf	tblptru,c
  4411  0001A0                     	endif
  4412  0001A0                     	if	0	;tblptru may be non-zero
  4413  0001A0                     	endif
  4414  0001A0  0008               	tblrd		*
  4415  0001A2  50F5               	movf	tablat,w,c
  4416  0001A4  0100               	movlb	0	; () banked
  4417  0001A6  6F6D               	movwf	(??__doprnt+2)& (0+255),b
  4418  0001A8  6B6E               	clrf	(??__doprnt+3)& (0+255),b
  4419  0001AA  0100               	movlb	0	; () banked
  4420  0001AC  516B               	movf	??__doprnt& (0+255),w,b
  4421  0001AE  0100               	movlb	0	; () banked
  4422  0001B0  276D               	addwf	(??__doprnt+2)& (0+255),f,b
  4423  0001B2  0100               	movlb	0	; () banked
  4424  0001B4  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4425  0001B6  0100               	movlb	0	; () banked
  4426  0001B8  236E               	addwfc	(??__doprnt+3)& (0+255),f,b
  4427  0001BA  0100               	movlb	0	; () banked
  4428  0001BC  516D               	movf	(??__doprnt+2)& (0+255),w,b
  4429  0001BE  0100               	movlb	0	; () banked
  4430  0001C0  2778               	addwf	__doprnt@width& (0+255),f,b
  4431  0001C2  0100               	movlb	0	; () banked
  4432  0001C4  516E               	movf	(??__doprnt+3)& (0+255),w,b
  4433  0001C6  0100               	movlb	0	; () banked
  4434  0001C8  2379               	addwfc	(__doprnt@width+1)& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 0
  4437  0001CA  0100               	movlb	0	; () banked
  4438  0001CC  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4439  0001CE  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4443  0001D0  C067  FFF6         	movff	__doprnt@f,tblptrl
  4444  0001D4  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4445  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4446  0001D8  6AF8               	clrf	tblptru,c
  4447  0001DA                     	endif
  4448  0001DA                     	if	0	;tblptru may be non-zero
  4449  0001DA                     	endif
  4450  0001DA  0008               	tblrd		*
  4451  0001DC  50F5               	movf	tablat,w,c
  4452  0001DE  EC2D  F00E         	call	_isdigit
  4453  0001E2  A0D8               	btfss	status,0,c
  4454  0001E4  D134               	goto	l3265
  4455  0001E6  D7C3               	goto	l3205
  4456  0001E8                     l3213:
  4457                           
  4458                           ;doprnt.c: 718: case 'x':
  4459                           ;doprnt.c: 721: flag |= 0x80;
  4460  0001E8  0100               	movlb	0	; () banked
  4461  0001EA  8F77               	bsf	__doprnt@flag& (0+255),7,b
  4462                           
  4463                           ;doprnt.c: 723: break;
  4464  0001EC  D153               	goto	l344
  4465  0001EE                     l3215:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4469  0001EE  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4470  0001F2  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4471  0001F6  CFDF F06B          	movff	indf2,??__doprnt
  4472  0001FA  0E02               	movlw	2
  4473  0001FC  26DE               	addwf	postinc2,f,c
  4474  0001FE  CFDF F06C          	movff	indf2,??__doprnt+1
  4475  000202  0E00               	movlw	0
  4476  000204  22DD               	addwfc	postdec2,f,c
  4477  000206  C06B  FFD9         	movff	??__doprnt,fsr2l
  4478  00020A  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4479  00020E  CFDE F073          	movff	postinc2,__doprnt@cp
  4480  000212  CFDD F074          	movff	postdec2,__doprnt@cp+1
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;doprnt.c: 740: if(!cp)
  4484  000216  0100               	movlb	0	; () banked
  4485  000218  5173               	movf	__doprnt@cp& (0+255),w,b
  4486  00021A  0100               	movlb	0	; () banked
  4487  00021C  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4488  00021E  A4D8               	btfss	status,2,c
  4489  000220  D006               	goto	l3221
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;doprnt.c: 741: cp = "(null)";
  4493  000222  0EF2               	movlw	low STR_28
  4494  000224  0100               	movlb	0	; () banked
  4495  000226  6F73               	movwf	__doprnt@cp& (0+255),b
  4496  000228  0EFF               	movlw	high STR_28
  4497  00022A  0100               	movlb	0	; () banked
  4498  00022C  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4499  00022E                     l3221:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;doprnt.c: 745: len = 0;
  4503  00022E  0E00               	movlw	0
  4504  000230  0100               	movlb	0	; () banked
  4505  000232  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4506  000234  0E00               	movlw	0
  4507  000236  6F71               	movwf	__doprnt@len& (0+255),b
  4508                           
  4509                           ;doprnt.c: 746: while(cp[len])
  4510  000238  D003               	goto	l3225
  4511  00023A                     l3223:
  4512                           
  4513                           ;doprnt.c: 747: len++;
  4514  00023A  0100               	movlb	0	; () banked
  4515  00023C  4B71               	infsnz	__doprnt@len& (0+255),f,b
  4516  00023E  2B72               	incf	(__doprnt@len+1)& (0+255),f,b
  4517  000240                     l3225:
  4518                           
  4519                           ; BSR set to: 0
  4520  000240  0100               	movlb	0	; () banked
  4521  000242  5171               	movf	__doprnt@len& (0+255),w,b
  4522  000244  0100               	movlb	0	; () banked
  4523  000246  2573               	addwf	__doprnt@cp& (0+255),w,b
  4524  000248  0100               	movlb	0	; () banked
  4525  00024A  6F6B               	movwf	??__doprnt& (0+255),b
  4526  00024C  0100               	movlb	0	; () banked
  4527  00024E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4528  000250  0100               	movlb	0	; () banked
  4529  000252  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  4530  000254  0100               	movlb	0	; () banked
  4531  000256  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4532  000258  C06B  FFF6         	movff	??__doprnt,tblptrl
  4533  00025C  C06C  FFF7         	movff	??__doprnt+1,tblptrh
  4534  000260  0E00               	movlw	low (__mediumconst shr (0+16))
  4535  000262  6EF8               	movwf	tblptru,c
  4536  000264  0E0F               	movlw	(high __ramtop+-1)
  4537  000266  64F7               	cpfsgt	tblptrh,c
  4538  000268  D003               	bra	u3297
  4539  00026A  0008               	tblrd		*
  4540  00026C  50F5               	movf	tablat,w,c
  4541  00026E  D005               	bra	u3290
  4542  000270                     u3297:
  4543  000270  CFF6 FFE1          	movff	tblptrl,fsr1l
  4544  000274  CFF7 FFE2          	movff	tblptrh,fsr1h
  4545  000278  50E7               	movf	indf1,w,c
  4546  00027A                     u3290:
  4547  00027A  0900               	iorlw	0
  4548  00027C  A4D8               	btfss	status,2,c
  4549  00027E  D7DD               	goto	l3223
  4550  000280                     l3227:
  4551                           
  4552                           ;doprnt.c: 757: if(width > len)
  4553  000280  0100               	movlb	0	; () banked
  4554  000282  5178               	movf	__doprnt@width& (0+255),w,b
  4555  000284  0100               	movlb	0	; () banked
  4556  000286  5D71               	subwf	__doprnt@len& (0+255),w,b
  4557  000288  0100               	movlb	0	; () banked
  4558  00028A  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  4559  00028C  0100               	movlb	0	; () banked
  4560  00028E  5972               	subwfb	(__doprnt@len+1)& (0+255),w,b
  4561  000290  B0D8               	btfsc	status,0,c
  4562  000292  D009               	goto	l3231
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;doprnt.c: 758: width -= len;
  4566  000294  0100               	movlb	0	; () banked
  4567  000296  5171               	movf	__doprnt@len& (0+255),w,b
  4568  000298  0100               	movlb	0	; () banked
  4569  00029A  5F78               	subwf	__doprnt@width& (0+255),f,b
  4570  00029C  0100               	movlb	0	; () banked
  4571  00029E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4572  0002A0  0100               	movlb	0	; () banked
  4573  0002A2  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4574  0002A4  D03E               	goto	l3241
  4575  0002A6                     l3231:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;doprnt.c: 759: else
  4579                           ;doprnt.c: 760: width = 0;
  4580  0002A6  0E00               	movlw	0
  4581  0002A8  0100               	movlb	0	; () banked
  4582  0002AA  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4583  0002AC  0E00               	movlw	0
  4584  0002AE  6F78               	movwf	__doprnt@width& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;doprnt.c: 764: while(width--)
  4588  0002B0  D038               	goto	l3241
  4589  0002B2                     l3233:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4593  0002B2  0100               	movlb	0	; () banked
  4594  0002B4  EE20 F002          	lfsr	2,2
  4595  0002B8  5165               	movf	__doprnt@pb& (0+255),w,b
  4596  0002BA  26D9               	addwf	fsr2l,f,c
  4597  0002BC  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4598  0002BE  22DA               	addwfc	fsr2h,f,c
  4599  0002C0  50DE               	movf	postinc2,w,c
  4600  0002C2  10DE               	iorwf	postinc2,w,c
  4601  0002C4  B4D8               	btfsc	status,2,c
  4602  0002C6  D018               	goto	l3237
  4603                           
  4604                           ; BSR set to: 0
  4605  0002C8  0100               	movlb	0	; () banked
  4606  0002CA  EE20 F002          	lfsr	2,2
  4607  0002CE  5165               	movf	__doprnt@pb& (0+255),w,b
  4608  0002D0  26D9               	addwf	fsr2l,f,c
  4609  0002D2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4610  0002D4  22DA               	addwfc	fsr2h,f,c
  4611  0002D6  CFDE F06B          	movff	postinc2,??__doprnt
  4612  0002DA  CFDD F06C          	movff	postdec2,??__doprnt+1
  4613  0002DE  D801               	call	u3338
  4614  0002E0  D020               	goto	l3241
  4615  0002E2                     u3338:
  4616  0002E2  0005               	push	
  4617  0002E4  6EFA               	movwf	pclath,c
  4618  0002E6  0100               	movlb	0	; () banked
  4619  0002E8  516B               	movf	??__doprnt& (0+255),w,b
  4620  0002EA  6EFD               	movwf	tosl,c
  4621  0002EC  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4622  0002EE  6EFE               	movwf	tosh,c
  4623  0002F0  6AFF               	clrf	tosu,c
  4624  0002F2  50FA               	movf	pclath,w,c
  4625  0002F4  0E20               	movlw	32
  4626  0002F6  0012               	return		;indir
  4627  0002F8                     l3237:
  4628  0002F8  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4629  0002FC  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4630  000300  CFDE F06B          	movff	postinc2,??__doprnt
  4631  000304  CFDD F06C          	movff	postdec2,??__doprnt+1
  4632  000308  C06B  FFD9         	movff	??__doprnt,fsr2l
  4633  00030C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4634  000310  0E20               	movlw	32
  4635  000312  6EDF               	movwf	indf2,c
  4636  000314  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4637  000318  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4638  00031C  2ADE               	incf	postinc2,f,c
  4639  00031E  0E00               	movlw	0
  4640  000320  22DD               	addwfc	postdec2,f,c
  4641  000322                     l3241:
  4642  000322  0100               	movlb	0	; () banked
  4643  000324  0778               	decf	__doprnt@width& (0+255),f,b
  4644  000326  A0D8               	btfss	status,0,c
  4645  000328  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  4646  00032A  0100               	movlb	0	; () banked
  4647  00032C  2978               	incf	__doprnt@width& (0+255),w,b
  4648  00032E  E1C1               	bnz	l3233
  4649  000330  0100               	movlb	0	; () banked
  4650  000332  2979               	incf	(__doprnt@width+1)& (0+255),w,b
  4651  000334  B4D8               	btfsc	status,2,c
  4652  000336  D060               	goto	l3255
  4653  000338  D7BC               	goto	l3233
  4654  00033A                     l3243:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4658  00033A  0100               	movlb	0	; () banked
  4659  00033C  EE20 F002          	lfsr	2,2
  4660  000340  5165               	movf	__doprnt@pb& (0+255),w,b
  4661  000342  26D9               	addwf	fsr2l,f,c
  4662  000344  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4663  000346  22DA               	addwfc	fsr2h,f,c
  4664  000348  50DE               	movf	postinc2,w,c
  4665  00034A  10DE               	iorwf	postinc2,w,c
  4666  00034C  B4D8               	btfsc	status,2,c
  4667  00034E  D02C               	goto	l3249
  4668                           
  4669                           ; BSR set to: 0
  4670  000350  0100               	movlb	0	; () banked
  4671  000352  EE20 F002          	lfsr	2,2
  4672  000356  5165               	movf	__doprnt@pb& (0+255),w,b
  4673  000358  26D9               	addwf	fsr2l,f,c
  4674  00035A  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4675  00035C  22DA               	addwfc	fsr2h,f,c
  4676  00035E  CFDE F06B          	movff	postinc2,??__doprnt
  4677  000362  CFDD F06C          	movff	postdec2,??__doprnt+1
  4678  000366  D801               	call	u3368
  4679  000368  D01B               	goto	l3247
  4680  00036A                     u3368:
  4681  00036A  0005               	push	
  4682  00036C  6EFA               	movwf	pclath,c
  4683  00036E  0100               	movlb	0	; () banked
  4684  000370  516B               	movf	??__doprnt& (0+255),w,b
  4685  000372  6EFD               	movwf	tosl,c
  4686  000374  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4687  000376  6EFE               	movwf	tosh,c
  4688  000378  6AFF               	clrf	tosu,c
  4689  00037A  50FA               	movf	pclath,w,c
  4690  00037C  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4691  000380  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4692  000384  0E00               	movlw	low (__mediumconst shr (0+16))
  4693  000386  6EF8               	movwf	tblptru,c
  4694  000388  0E0F               	movlw	(high __ramtop+-1)
  4695  00038A  64F7               	cpfsgt	tblptrh,c
  4696  00038C  D003               	bra	u3377
  4697  00038E  0008               	tblrd		*
  4698  000390  50F5               	movf	tablat,w,c
  4699  000392  D005               	bra	u3370
  4700  000394                     u3377:
  4701  000394  CFF6 FFE1          	movff	tblptrl,fsr1l
  4702  000398  CFF7 FFE2          	movff	tblptrh,fsr1h
  4703  00039C  50E7               	movf	indf1,w,c
  4704  00039E                     u3370:
  4705  00039E  0012               	return		;indir
  4706  0003A0                     l3247:
  4707  0003A0  0100               	movlb	0	; () banked
  4708  0003A2  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4709  0003A4  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4710  0003A6  D028               	goto	l3255
  4711  0003A8                     l3249:
  4712                           
  4713                           ; BSR set to: 0
  4714  0003A8  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4715  0003AC  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4716  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4717  0003B2  6EF8               	movwf	tblptru,c
  4718  0003B4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4719  0003B8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4720  0003BC  CFDE F06B          	movff	postinc2,??__doprnt
  4721  0003C0  CFDD F06C          	movff	postdec2,??__doprnt+1
  4722  0003C4  C06B  FFD9         	movff	??__doprnt,fsr2l
  4723  0003C8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4724  0003CC  0E0F               	movlw	(high __ramtop+-1)
  4725  0003CE  64F7               	cpfsgt	tblptrh,c
  4726  0003D0  D003               	bra	u3387
  4727  0003D2  0008               	tblrd		*
  4728  0003D4  50F5               	movf	tablat,w,c
  4729  0003D6  D005               	bra	u3380
  4730  0003D8                     u3387:
  4731  0003D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4732  0003DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4733  0003E0  50E7               	movf	indf1,w,c
  4734  0003E2                     u3380:
  4735  0003E2  6EDF               	movwf	indf2,c
  4736  0003E4  0100               	movlb	0	; () banked
  4737  0003E6  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4738  0003E8  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4739                           
  4740                           ; BSR set to: 0
  4741  0003EA  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4742  0003EE  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4743  0003F2  2ADE               	incf	postinc2,f,c
  4744  0003F4  0E00               	movlw	0
  4745  0003F6  22DD               	addwfc	postdec2,f,c
  4746  0003F8                     l3255:
  4747                           
  4748                           ; BSR set to: 0
  4749  0003F8  0100               	movlb	0	; () banked
  4750  0003FA  0771               	decf	__doprnt@len& (0+255),f,b
  4751  0003FC  A0D8               	btfss	status,0,c
  4752  0003FE  0772               	decf	(__doprnt@len+1)& (0+255),f,b
  4753  000400  0100               	movlb	0	; () banked
  4754  000402  2971               	incf	__doprnt@len& (0+255),w,b
  4755  000404  E19A               	bnz	l3243
  4756  000406  0100               	movlb	0	; () banked
  4757  000408  2972               	incf	(__doprnt@len+1)& (0+255),w,b
  4758  00040A  B4D8               	btfsc	status,2,c
  4759  00040C  D2A4               	goto	l3389
  4760  00040E  D795               	goto	l3243
  4761  000410                     l3257:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4765  000410  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4766  000414  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4767  000418  CFDF F06B          	movff	indf2,??__doprnt
  4768  00041C  0E02               	movlw	2
  4769  00041E  26DE               	addwf	postinc2,f,c
  4770  000420  CFDF F06C          	movff	indf2,??__doprnt+1
  4771  000424  0E00               	movlw	0
  4772  000426  22DD               	addwfc	postdec2,f,c
  4773  000428  C06B  FFD9         	movff	??__doprnt,fsr2l
  4774  00042C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4775  000430  50DF               	movf	indf2,w,c
  4776  000432  0100               	movlb	0	; () banked
  4777  000434  6F7A               	movwf	__doprnt@c& (0+255),b
  4778  000436                     l3259:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;doprnt.c: 805: cp = (char *)&c;
  4782  000436  0E7A               	movlw	low __doprnt@c
  4783  000438  0100               	movlb	0	; () banked
  4784  00043A  6F73               	movwf	__doprnt@cp& (0+255),b
  4785  00043C  0E00               	movlw	high __doprnt@c
  4786  00043E  0100               	movlb	0	; () banked
  4787  000440  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;doprnt.c: 806: len = 1;
  4791  000442  0E00               	movlw	0
  4792  000444  0100               	movlb	0	; () banked
  4793  000446  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4794  000448  0E01               	movlw	1
  4795  00044A  6F71               	movwf	__doprnt@len& (0+255),b
  4796                           
  4797                           ;doprnt.c: 807: goto dostring;
  4798  00044C  D719               	goto	l3227
  4799  00044E                     l3265:
  4800  00044E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4801  000452  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4802  000456  0100               	movlb	0	; () banked
  4803  000458  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4804  00045A  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4805  00045C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4806  00045C  6AF8               	clrf	tblptru,c
  4807  00045E                     	endif
  4808  00045E                     	if	0	;tblptru may be non-zero
  4809  00045E                     	endif
  4810  00045E  0008               	tblrd		*
  4811  000460  CFF5 F07A          	movff	tablat,__doprnt@c
  4812  000464  0100               	movlb	0	; () banked
  4813  000466  517A               	movf	__doprnt@c& (0+255),w,b
  4814                           
  4815                           ; Switch size 1, requested type "space"
  4816                           ; Number of cases is 7, Range of values is 0 to 120
  4817                           ; switch strategies available:
  4818                           ; Name         Instructions Cycles
  4819                           ; simple_byte           22    12 (average)
  4820                           ;	Chosen strategy is simple_byte
  4821  000468  0A00               	xorlw	0	; case 0
  4822  00046A  B4D8               	btfsc	status,2,c
  4823  00046C  D284               	goto	l3391
  4824  00046E  0A58               	xorlw	88	; case 88
  4825  000470  B4D8               	btfsc	status,2,c
  4826  000472  D6BA               	goto	l3213
  4827  000474  0A3B               	xorlw	59	; case 99
  4828  000476  B4D8               	btfsc	status,2,c
  4829  000478  D7CB               	goto	l3257
  4830  00047A  0A07               	xorlw	7	; case 100
  4831  00047C  B4D8               	btfsc	status,2,c
  4832  00047E  D00A               	goto	l344
  4833  000480  0A0D               	xorlw	13	; case 105
  4834  000482  B4D8               	btfsc	status,2,c
  4835  000484  D007               	goto	l344
  4836  000486  0A1A               	xorlw	26	; case 115
  4837  000488  B4D8               	btfsc	status,2,c
  4838  00048A  D6B1               	goto	l3215
  4839  00048C  0A0B               	xorlw	11	; case 120
  4840  00048E  B4D8               	btfsc	status,2,c
  4841  000490  D6AB               	goto	l3213
  4842  000492  D7D1               	goto	l3259
  4843  000494                     l344:
  4844                           
  4845                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4846  000494  0100               	movlb	0	; () banked
  4847  000496  BF77               	btfsc	__doprnt@flag& (0+255),7,b
  4848  000498  D020               	goto	l3275
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;doprnt.c: 1253: {
  4852                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4853  00049A  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4854  00049E  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4855  0004A2  CFDF F06B          	movff	indf2,??__doprnt
  4856  0004A6  0E02               	movlw	2
  4857  0004A8  26DE               	addwf	postinc2,f,c
  4858  0004AA  CFDF F06C          	movff	indf2,??__doprnt+1
  4859  0004AE  0E00               	movlw	0
  4860  0004B0  22DD               	addwfc	postdec2,f,c
  4861  0004B2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4862  0004B6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4863  0004BA  CFDE F075          	movff	postinc2,__doprnt@val
  4864  0004BE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;doprnt.c: 1261: if((int)val < 0) {
  4868  0004C2  0100               	movlb	0	; () banked
  4869  0004C4  AF76               	btfss	(__doprnt@val+1)& (0+255),7,b
  4870  0004C6  D060               	goto	l3307
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;doprnt.c: 1262: flag |= 0x03;
  4874  0004C8  0E03               	movlw	3
  4875  0004CA  0100               	movlb	0	; () banked
  4876  0004CC  1377               	iorwf	__doprnt@flag& (0+255),f,b
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;doprnt.c: 1263: val = -val;
  4880  0004CE  0100               	movlb	0	; () banked
  4881  0004D0  6D75               	negf	__doprnt@val& (0+255),b
  4882  0004D2  1F76               	comf	(__doprnt@val+1)& (0+255),f,b
  4883  0004D4  B0D8               	btfsc	status,0,c
  4884  0004D6  2B76               	incf	(__doprnt@val+1)& (0+255),f,b
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;doprnt.c: 1264: }
  4888                           ;doprnt.c: 1266: }
  4889  0004D8  D057               	goto	l3307
  4890  0004DA                     l3275:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;doprnt.c: 1268: else
  4894                           ;doprnt.c: 1273: {
  4895                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4896  0004DA  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4897  0004DE  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4898  0004E2  CFDF F06B          	movff	indf2,??__doprnt
  4899  0004E6  0E02               	movlw	2
  4900  0004E8  26DE               	addwf	postinc2,f,c
  4901  0004EA  CFDF F06C          	movff	indf2,??__doprnt+1
  4902  0004EE  0E00               	movlw	0
  4903  0004F0  22DD               	addwfc	postdec2,f,c
  4904  0004F2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4905  0004F6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4906  0004FA  CFDE F075          	movff	postinc2,__doprnt@val
  4907  0004FE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;doprnt.c: 1287: }
  4911                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4912  000502  D042               	goto	l3307
  4913  000504                     l3277:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4917  000504  0E01               	movlw	1
  4918  000506  0100               	movlb	0	; () banked
  4919  000508  6F7A               	movwf	__doprnt@c& (0+255),b
  4920  00050A                     l3279:
  4921                           
  4922                           ; BSR set to: 0
  4923  00050A  0E05               	movlw	5
  4924  00050C  0100               	movlb	0	; () banked
  4925  00050E  197A               	xorwf	__doprnt@c& (0+255),w,b
  4926  000510  B4D8               	btfsc	status,2,c
  4927  000512  D043               	goto	l3309
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;doprnt.c: 1306: if(val < dpowers[c])
  4931                           
  4932                           ; BSR set to: 0
  4933                           
  4934                           ; BSR set to: 0
  4935  000514  0100               	movlb	0	; () banked
  4936  000516  517A               	movf	__doprnt@c& (0+255),w,b
  4937  000518  0D02               	mullw	2
  4938  00051A  0E5B               	movlw	low _dpowers
  4939  00051C  24F3               	addwf	prodl,w,c
  4940  00051E  6EF6               	movwf	tblptrl,c
  4941  000520  0EFE               	movlw	high _dpowers
  4942  000522  20F4               	addwfc	prodh,w,c
  4943  000524  6EF7               	movwf	tblptrh,c
  4944  000526                     	if	1	;There are 3 active tblptr bytes
  4945  000526  6AF8               	clrf	tblptru,c
  4946  000528  0E00               	movlw	low (__mediumconst shr (0+16))
  4947  00052A  22F8               	addwfc	tblptru,f,c
  4948  00052C                     	endif
  4949  00052C  0009               	tblrd		*+
  4950  00052E  50F5               	movf	tablat,w,c
  4951  000530  0100               	movlb	0	; () banked
  4952  000532  5D75               	subwf	__doprnt@val& (0+255),w,b
  4953  000534  0009               	tblrd		*+
  4954  000536  50F5               	movf	tablat,w,c
  4955  000538  0100               	movlb	0	; () banked
  4956  00053A  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4957  00053C  A0D8               	btfss	status,0,c
  4958  00053E  D02D               	goto	l3309
  4959                           
  4960                           ; BSR set to: 0
  4961                           
  4962                           ; BSR set to: 0
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;doprnt.c: 1307: break;
  4966  000540  0100               	movlb	0	; () banked
  4967  000542  2B7A               	incf	__doprnt@c& (0+255),f,b
  4968  000544  D7E2               	goto	l3279
  4969  000546                     l3291:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4973  000546  0E01               	movlw	1
  4974  000548  0100               	movlb	0	; () banked
  4975  00054A  6F7A               	movwf	__doprnt@c& (0+255),b
  4976  00054C                     l3293:
  4977                           
  4978                           ; BSR set to: 0
  4979  00054C  0E04               	movlw	4
  4980  00054E  0100               	movlb	0	; () banked
  4981  000550  197A               	xorwf	__doprnt@c& (0+255),w,b
  4982  000552  B4D8               	btfsc	status,2,c
  4983  000554  D022               	goto	l3309
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4987                           
  4988                           ; BSR set to: 0
  4989                           
  4990                           ; BSR set to: 0
  4991  000556  0100               	movlb	0	; () banked
  4992  000558  517A               	movf	__doprnt@c& (0+255),w,b
  4993  00055A  0D02               	mullw	2
  4994  00055C  0E65               	movlw	low _hexpowers
  4995  00055E  24F3               	addwf	prodl,w,c
  4996  000560  6EF6               	movwf	tblptrl,c
  4997  000562  0EFE               	movlw	high _hexpowers
  4998  000564  20F4               	addwfc	prodh,w,c
  4999  000566  6EF7               	movwf	tblptrh,c
  5000  000568                     	if	1	;There are 3 active tblptr bytes
  5001  000568  6AF8               	clrf	tblptru,c
  5002  00056A  0E00               	movlw	low (__mediumconst shr (0+16))
  5003  00056C  22F8               	addwfc	tblptru,f,c
  5004  00056E                     	endif
  5005  00056E  0009               	tblrd		*+
  5006  000570  50F5               	movf	tablat,w,c
  5007  000572  0100               	movlb	0	; () banked
  5008  000574  5D75               	subwf	__doprnt@val& (0+255),w,b
  5009  000576  0009               	tblrd		*+
  5010  000578  50F5               	movf	tablat,w,c
  5011  00057A  0100               	movlb	0	; () banked
  5012  00057C  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  5013  00057E  A0D8               	btfss	status,0,c
  5014  000580  D00C               	goto	l3309
  5015                           
  5016                           ; BSR set to: 0
  5017                           
  5018                           ; BSR set to: 0
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;doprnt.c: 1318: break;
  5022  000582  0100               	movlb	0	; () banked
  5023  000584  2B7A               	incf	__doprnt@c& (0+255),f,b
  5024  000586  D7E2               	goto	l3293
  5025  000588                     l3307:
  5026                           
  5027                           ; BSR set to: 0
  5028  000588  0100               	movlb	0	; () banked
  5029  00058A  5177               	movf	__doprnt@flag& (0+255),w,b
  5030  00058C  0B80               	andlw	128
  5031                           
  5032                           ; Switch size 1, requested type "space"
  5033                           ; Number of cases is 2, Range of values is 0 to 128
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte            7     4 (average)
  5037                           ;	Chosen strategy is simple_byte
  5038  00058E  0A00               	xorlw	0	; case 0
  5039  000590  B4D8               	btfsc	status,2,c
  5040  000592  D7B8               	goto	l3277
  5041  000594  0A80               	xorlw	128	; case 128
  5042  000596  B4D8               	btfsc	status,2,c
  5043  000598  D7D6               	goto	l3291
  5044  00059A                     l3309:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5048  00059A  0100               	movlb	0	; () banked
  5049  00059C  5178               	movf	__doprnt@width& (0+255),w,b
  5050  00059E  0100               	movlb	0	; () banked
  5051  0005A0  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5052  0005A2  B4D8               	btfsc	status,2,c
  5053  0005A4  D00B               	goto	l3315
  5054                           
  5055                           ; BSR set to: 0
  5056  0005A6  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5057  0005AA  0E03               	movlw	3
  5058  0005AC  0100               	movlb	0	; () banked
  5059  0005AE  176B               	andwf	??__doprnt& (0+255),f,b
  5060  0005B0  B4D8               	btfsc	status,2,c
  5061  0005B2  D004               	goto	l3315
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;doprnt.c: 1346: width--;
  5065  0005B4  0100               	movlb	0	; () banked
  5066  0005B6  0778               	decf	__doprnt@width& (0+255),f,b
  5067  0005B8  A0D8               	btfss	status,0,c
  5068  0005BA  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5069  0005BC                     l3315:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;doprnt.c: 1381: if(width > c)
  5073  0005BC  0E80               	movlw	128
  5074  0005BE  0100               	movlb	0	; () banked
  5075  0005C0  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5076  0005C2  0E7F               	movlw	127
  5077  0005C4  0100               	movlb	0	; () banked
  5078  0005C6  6F6B               	movwf	??__doprnt& (0+255),b
  5079  0005C8  0100               	movlb	0	; () banked
  5080  0005CA  5178               	movf	__doprnt@width& (0+255),w,b
  5081  0005CC  0100               	movlb	0	; () banked
  5082  0005CE  5D7A               	subwf	__doprnt@c& (0+255),w,b
  5083  0005D0  0100               	movlb	0	; () banked
  5084  0005D2  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  5085  0005D4  0A80               	xorlw	128
  5086  0005D6  0100               	movlb	0	; () banked
  5087  0005D8  596B               	subwfb	??__doprnt& (0+255),w,b
  5088  0005DA  B0D8               	btfsc	status,0,c
  5089  0005DC  D00B               	goto	l3319
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;doprnt.c: 1382: width -= c;
  5093  0005DE  0100               	movlb	0	; () banked
  5094  0005E0  517A               	movf	__doprnt@c& (0+255),w,b
  5095  0005E2  0100               	movlb	0	; () banked
  5096  0005E4  5F78               	subwf	__doprnt@width& (0+255),f,b
  5097  0005E6  0E00               	movlw	0
  5098  0005E8  0100               	movlb	0	; () banked
  5099  0005EA  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5100  0005EC  0EFF               	movlw	255
  5101  0005EE  0100               	movlb	0	; () banked
  5102  0005F0  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  5103  0005F2  D005               	goto	l3321
  5104  0005F4                     l3319:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;doprnt.c: 1383: else
  5108                           ;doprnt.c: 1384: width = 0;
  5109  0005F4  0E00               	movlw	0
  5110  0005F6  0100               	movlb	0	; () banked
  5111  0005F8  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5112  0005FA  0E00               	movlw	0
  5113  0005FC  6F78               	movwf	__doprnt@width& (0+255),b
  5114  0005FE                     l3321:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;doprnt.c: 1387: if(flag & 0x04) {
  5118  0005FE  0100               	movlb	0	; () banked
  5119  000600  A577               	btfss	__doprnt@flag& (0+255),2,b
  5120  000602  D082               	goto	l3345
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;doprnt.c: 1392: if(flag & 0x03)
  5124  000604  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5125  000608  0E03               	movlw	3
  5126  00060A  0100               	movlb	0	; () banked
  5127  00060C  176B               	andwf	??__doprnt& (0+255),f,b
  5128  00060E  B4D8               	btfsc	status,2,c
  5129  000610  D038               	goto	l3333
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5133  000612  0100               	movlb	0	; () banked
  5134  000614  EE20 F002          	lfsr	2,2
  5135  000618  5165               	movf	__doprnt@pb& (0+255),w,b
  5136  00061A  26D9               	addwf	fsr2l,f,c
  5137  00061C  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5138  00061E  22DA               	addwfc	fsr2h,f,c
  5139  000620  50DE               	movf	postinc2,w,c
  5140  000622  10DE               	iorwf	postinc2,w,c
  5141  000624  B4D8               	btfsc	status,2,c
  5142  000626  D018               	goto	l3329
  5143                           
  5144                           ; BSR set to: 0
  5145  000628  0100               	movlb	0	; () banked
  5146  00062A  EE20 F002          	lfsr	2,2
  5147  00062E  5165               	movf	__doprnt@pb& (0+255),w,b
  5148  000630  26D9               	addwf	fsr2l,f,c
  5149  000632  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5150  000634  22DA               	addwfc	fsr2h,f,c
  5151  000636  CFDE F06B          	movff	postinc2,??__doprnt
  5152  00063A  CFDD F06C          	movff	postdec2,??__doprnt+1
  5153  00063E  D801               	call	u3548
  5154  000640  D020               	goto	l3333
  5155  000642                     u3548:
  5156  000642  0005               	push	
  5157  000644  6EFA               	movwf	pclath,c
  5158  000646  0100               	movlb	0	; () banked
  5159  000648  516B               	movf	??__doprnt& (0+255),w,b
  5160  00064A  6EFD               	movwf	tosl,c
  5161  00064C  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5162  00064E  6EFE               	movwf	tosh,c
  5163  000650  6AFF               	clrf	tosu,c
  5164  000652  50FA               	movf	pclath,w,c
  5165  000654  0E2D               	movlw	45
  5166  000656  0012               	return		;indir
  5167  000658                     l3329:
  5168  000658  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5169  00065C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5170  000660  CFDE F06B          	movff	postinc2,??__doprnt
  5171  000664  CFDD F06C          	movff	postdec2,??__doprnt+1
  5172  000668  C06B  FFD9         	movff	??__doprnt,fsr2l
  5173  00066C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5174  000670  0E2D               	movlw	45
  5175  000672  6EDF               	movwf	indf2,c
  5176  000674  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5177  000678  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5178  00067C  2ADE               	incf	postinc2,f,c
  5179  00067E  0E00               	movlw	0
  5180  000680  22DD               	addwfc	postdec2,f,c
  5181  000682                     l3333:
  5182                           
  5183                           ;doprnt.c: 1415: if(width)
  5184  000682  0100               	movlb	0	; () banked
  5185  000684  5178               	movf	__doprnt@width& (0+255),w,b
  5186  000686  0100               	movlb	0	; () banked
  5187  000688  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5188  00068A  B4D8               	btfsc	status,2,c
  5189  00068C  D0C4               	goto	l3367
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  5193                           
  5194                           ; BSR set to: 0
  5195                           
  5196                           ;doprnt.c: 1416: do
  5197  00068E  0100               	movlb	0	; () banked
  5198  000690  EE20 F002          	lfsr	2,2
  5199  000694  5165               	movf	__doprnt@pb& (0+255),w,b
  5200  000696  26D9               	addwf	fsr2l,f,c
  5201  000698  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5202  00069A  22DA               	addwfc	fsr2h,f,c
  5203  00069C  50DE               	movf	postinc2,w,c
  5204  00069E  10DE               	iorwf	postinc2,w,c
  5205  0006A0  B4D8               	btfsc	status,2,c
  5206  0006A2  D018               	goto	l3339
  5207                           
  5208                           ; BSR set to: 0
  5209  0006A4  0100               	movlb	0	; () banked
  5210  0006A6  EE20 F002          	lfsr	2,2
  5211  0006AA  5165               	movf	__doprnt@pb& (0+255),w,b
  5212  0006AC  26D9               	addwf	fsr2l,f,c
  5213  0006AE  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5214  0006B0  22DA               	addwfc	fsr2h,f,c
  5215  0006B2  CFDE F06B          	movff	postinc2,??__doprnt
  5216  0006B6  CFDD F06C          	movff	postdec2,??__doprnt+1
  5217  0006BA  D801               	call	u3578
  5218  0006BC  D020               	goto	l3343
  5219  0006BE                     u3578:
  5220  0006BE  0005               	push	
  5221  0006C0  6EFA               	movwf	pclath,c
  5222  0006C2  0100               	movlb	0	; () banked
  5223  0006C4  516B               	movf	??__doprnt& (0+255),w,b
  5224  0006C6  6EFD               	movwf	tosl,c
  5225  0006C8  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5226  0006CA  6EFE               	movwf	tosh,c
  5227  0006CC  6AFF               	clrf	tosu,c
  5228  0006CE  50FA               	movf	pclath,w,c
  5229  0006D0  0E30               	movlw	48
  5230  0006D2  0012               	return		;indir
  5231  0006D4                     l3339:
  5232  0006D4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5233  0006D8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5234  0006DC  CFDE F06B          	movff	postinc2,??__doprnt
  5235  0006E0  CFDD F06C          	movff	postdec2,??__doprnt+1
  5236  0006E4  C06B  FFD9         	movff	??__doprnt,fsr2l
  5237  0006E8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5238  0006EC  0E30               	movlw	48
  5239  0006EE  6EDF               	movwf	indf2,c
  5240  0006F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5241  0006F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5242  0006F8  2ADE               	incf	postinc2,f,c
  5243  0006FA  0E00               	movlw	0
  5244  0006FC  22DD               	addwfc	postdec2,f,c
  5245  0006FE                     l3343:
  5246                           
  5247                           ;doprnt.c: 1418: while(--width);
  5248  0006FE  0100               	movlb	0	; () banked
  5249  000700  0778               	decf	__doprnt@width& (0+255),f,b
  5250  000702  A0D8               	btfss	status,0,c
  5251  000704  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5252  000706  D7BD               	goto	l3333
  5253  000708                     l3345:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;doprnt.c: 1422: {
  5257                           ;doprnt.c: 1424: if(width
  5258                           ;doprnt.c: 1428: )
  5259  000708  0100               	movlb	0	; () banked
  5260  00070A  5178               	movf	__doprnt@width& (0+255),w,b
  5261  00070C  0100               	movlb	0	; () banked
  5262  00070E  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5263  000710  B4D8               	btfsc	status,2,c
  5264  000712  D042               	goto	l3357
  5265  000714                     l3347:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  5269  000714  0100               	movlb	0	; () banked
  5270  000716  EE20 F002          	lfsr	2,2
  5271  00071A  5165               	movf	__doprnt@pb& (0+255),w,b
  5272  00071C  26D9               	addwf	fsr2l,f,c
  5273  00071E  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5274  000720  22DA               	addwfc	fsr2h,f,c
  5275  000722  50DE               	movf	postinc2,w,c
  5276  000724  10DE               	iorwf	postinc2,w,c
  5277  000726  B4D8               	btfsc	status,2,c
  5278  000728  D018               	goto	l3351
  5279                           
  5280                           ; BSR set to: 0
  5281  00072A  0100               	movlb	0	; () banked
  5282  00072C  EE20 F002          	lfsr	2,2
  5283  000730  5165               	movf	__doprnt@pb& (0+255),w,b
  5284  000732  26D9               	addwf	fsr2l,f,c
  5285  000734  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5286  000736  22DA               	addwfc	fsr2h,f,c
  5287  000738  CFDE F06B          	movff	postinc2,??__doprnt
  5288  00073C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5289  000740  D801               	call	u3618
  5290  000742  D020               	goto	l3355
  5291  000744                     u3618:
  5292  000744  0005               	push	
  5293  000746  6EFA               	movwf	pclath,c
  5294  000748  0100               	movlb	0	; () banked
  5295  00074A  516B               	movf	??__doprnt& (0+255),w,b
  5296  00074C  6EFD               	movwf	tosl,c
  5297  00074E  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5298  000750  6EFE               	movwf	tosh,c
  5299  000752  6AFF               	clrf	tosu,c
  5300  000754  50FA               	movf	pclath,w,c
  5301  000756  0E20               	movlw	32
  5302  000758  0012               	return		;indir
  5303  00075A                     l3351:
  5304  00075A  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5305  00075E  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5306  000762  CFDE F06B          	movff	postinc2,??__doprnt
  5307  000766  CFDD F06C          	movff	postdec2,??__doprnt+1
  5308  00076A  C06B  FFD9         	movff	??__doprnt,fsr2l
  5309  00076E  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5310  000772  0E20               	movlw	32
  5311  000774  6EDF               	movwf	indf2,c
  5312  000776  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5313  00077A  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5314  00077E  2ADE               	incf	postinc2,f,c
  5315  000780  0E00               	movlw	0
  5316  000782  22DD               	addwfc	postdec2,f,c
  5317  000784                     l3355:
  5318                           
  5319                           ;doprnt.c: 1431: while(--width);
  5320  000784  0100               	movlb	0	; () banked
  5321  000786  0778               	decf	__doprnt@width& (0+255),f,b
  5322  000788  A0D8               	btfss	status,0,c
  5323  00078A  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5324  00078C  0100               	movlb	0	; () banked
  5325  00078E  5178               	movf	__doprnt@width& (0+255),w,b
  5326  000790  0100               	movlb	0	; () banked
  5327  000792  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5328  000794  A4D8               	btfss	status,2,c
  5329  000796  D7BE               	goto	l3347
  5330  000798                     l3357:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;doprnt.c: 1438: if(flag & 0x03)
  5334  000798  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5335  00079C  0E03               	movlw	3
  5336  00079E  0100               	movlb	0	; () banked
  5337  0007A0  176B               	andwf	??__doprnt& (0+255),f,b
  5338  0007A2  B4D8               	btfsc	status,2,c
  5339  0007A4  D038               	goto	l3367
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5343  0007A6  0100               	movlb	0	; () banked
  5344  0007A8  EE20 F002          	lfsr	2,2
  5345  0007AC  5165               	movf	__doprnt@pb& (0+255),w,b
  5346  0007AE  26D9               	addwf	fsr2l,f,c
  5347  0007B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5348  0007B2  22DA               	addwfc	fsr2h,f,c
  5349  0007B4  50DE               	movf	postinc2,w,c
  5350  0007B6  10DE               	iorwf	postinc2,w,c
  5351  0007B8  B4D8               	btfsc	status,2,c
  5352  0007BA  D018               	goto	l3363
  5353                           
  5354                           ; BSR set to: 0
  5355  0007BC  0100               	movlb	0	; () banked
  5356  0007BE  EE20 F002          	lfsr	2,2
  5357  0007C2  5165               	movf	__doprnt@pb& (0+255),w,b
  5358  0007C4  26D9               	addwf	fsr2l,f,c
  5359  0007C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5360  0007C8  22DA               	addwfc	fsr2h,f,c
  5361  0007CA  CFDE F06B          	movff	postinc2,??__doprnt
  5362  0007CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  5363  0007D2  D801               	call	u3658
  5364  0007D4  D020               	goto	l3367
  5365  0007D6                     u3658:
  5366  0007D6  0005               	push	
  5367  0007D8  6EFA               	movwf	pclath,c
  5368  0007DA  0100               	movlb	0	; () banked
  5369  0007DC  516B               	movf	??__doprnt& (0+255),w,b
  5370  0007DE  6EFD               	movwf	tosl,c
  5371  0007E0  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5372  0007E2  6EFE               	movwf	tosh,c
  5373  0007E4  6AFF               	clrf	tosu,c
  5374  0007E6  50FA               	movf	pclath,w,c
  5375  0007E8  0E2D               	movlw	45
  5376  0007EA  0012               	return		;indir
  5377  0007EC                     l3363:
  5378  0007EC  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5379  0007F0  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5380  0007F4  CFDE F06B          	movff	postinc2,??__doprnt
  5381  0007F8  CFDD F06C          	movff	postdec2,??__doprnt+1
  5382  0007FC  C06B  FFD9         	movff	??__doprnt,fsr2l
  5383  000800  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5384  000804  0E2D               	movlw	45
  5385  000806  6EDF               	movwf	indf2,c
  5386  000808  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5387  00080C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5388  000810  2ADE               	incf	postinc2,f,c
  5389  000812  0E00               	movlw	0
  5390  000814  22DD               	addwfc	postdec2,f,c
  5391  000816                     l3367:
  5392                           
  5393                           ;doprnt.c: 1469: }
  5394                           ;doprnt.c: 1472: prec = c;
  5395  000816  C07A  F070         	movff	__doprnt@c,__doprnt@prec
  5396                           
  5397                           ;doprnt.c: 1474: while(prec--) {
  5398  00081A  D097               	goto	l3387
  5399  00081C                     l3369:
  5400                           
  5401                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5402  00081C  0100               	movlb	0	; () banked
  5403  00081E  5170               	movf	__doprnt@prec& (0+255),w,b
  5404  000820  0D02               	mullw	2
  5405  000822  0E5B               	movlw	low _dpowers
  5406  000824  24F3               	addwf	prodl,w,c
  5407  000826  6EF6               	movwf	tblptrl,c
  5408  000828  0EFE               	movlw	high _dpowers
  5409  00082A  20F4               	addwfc	prodh,w,c
  5410  00082C  6EF7               	movwf	tblptrh,c
  5411  00082E                     	if	1	;There are 3 active tblptr bytes
  5412  00082E  6AF8               	clrf	tblptru,c
  5413  000830  0E00               	movlw	low (__mediumconst shr (0+16))
  5414  000832  22F8               	addwfc	tblptru,f,c
  5415  000834                     	endif
  5416  000834  0009               	tblrd		*+
  5417  000836  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5418  00083A  000A               	tblrd		*-
  5419  00083C  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5420  000840  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5421  000844  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5422  000848  EC4E  F00C         	call	___lwdiv
  5423  00084C  C026  F060         	movff	?___lwdiv,___lwmod@dividend
  5424  000850  C027  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
  5425  000854  0E00               	movlw	0
  5426  000856  0100               	movlb	0	; () banked
  5427  000858  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5428  00085A  0E0A               	movlw	10
  5429  00085C  6F62               	movwf	___lwmod@divisor& (0+255),b
  5430  00085E  EC76  F00B         	call	___lwmod	;wreg free
  5431  000862  0100               	movlb	0	; () banked
  5432  000864  5160               	movf	?___lwmod& (0+255),w,b
  5433  000866  0F30               	addlw	48
  5434  000868  0100               	movlb	0	; () banked
  5435  00086A  6F7A               	movwf	__doprnt@c& (0+255),b
  5436                           
  5437                           ;doprnt.c: 1491: break;
  5438  00086C  D035               	goto	l3379
  5439  00086E                     l3371:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;doprnt.c: 1499: {
  5443                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5444  00086E  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5445  000872  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5446  000876  0100               	movlb	0	; () banked
  5447  000878  5170               	movf	__doprnt@prec& (0+255),w,b
  5448  00087A  0D02               	mullw	2
  5449  00087C  0E65               	movlw	low _hexpowers
  5450  00087E  24F3               	addwf	prodl,w,c
  5451  000880  6EF6               	movwf	tblptrl,c
  5452  000882  0EFE               	movlw	high _hexpowers
  5453  000884  20F4               	addwfc	prodh,w,c
  5454  000886  6EF7               	movwf	tblptrh,c
  5455  000888                     	if	1	;There are 3 active tblptr bytes
  5456  000888  6AF8               	clrf	tblptru,c
  5457  00088A  0E00               	movlw	low (__mediumconst shr (0+16))
  5458  00088C  22F8               	addwfc	tblptru,f,c
  5459  00088E                     	endif
  5460  00088E  0009               	tblrd		*+
  5461  000890  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5462  000894  000A               	tblrd		*-
  5463  000896  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5464  00089A  EC4E  F00C         	call	___lwdiv	;wreg free
  5465  00089E  5026               	movf	?___lwdiv,w,c
  5466  0008A0  0B0F               	andlw	15
  5467  0008A2  0100               	movlb	0	; () banked
  5468  0008A4  6F6F               	movwf	__doprnt@idx& (0+255),b
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5472  0008A6  0100               	movlb	0	; () banked
  5473  0008A8  516F               	movf	__doprnt@idx& (0+255),w,b
  5474  0008AA  0D01               	mullw	1
  5475  0008AC  0E31               	movlw	low STR_29
  5476  0008AE  24F3               	addwf	prodl,w,c
  5477  0008B0  6EF6               	movwf	tblptrl,c
  5478  0008B2  0EFF               	movlw	high STR_29
  5479  0008B4  20F4               	addwfc	prodh,w,c
  5480  0008B6  6EF7               	movwf	tblptrh,c
  5481  0008B8                     	if	1	;There are 3 active tblptr bytes
  5482  0008B8  6AF8               	clrf	tblptru,c
  5483  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5484  0008BC  22F8               	addwfc	tblptru,f,c
  5485  0008BE                     	endif
  5486  0008BE  0008               	tblrd		*
  5487  0008C0  CFF5 F07A          	movff	tablat,__doprnt@c
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;doprnt.c: 1523: }
  5491                           
  5492                           ;doprnt.c: 1508: }
  5493                           ;doprnt.c: 1510: break;
  5494  0008C4  D009               	goto	l3379
  5495  0008C6                     l3377:
  5496  0008C6  0100               	movlb	0	; () banked
  5497  0008C8  5177               	movf	__doprnt@flag& (0+255),w,b
  5498  0008CA  0B80               	andlw	128
  5499                           
  5500                           ; Switch size 1, requested type "space"
  5501                           ; Number of cases is 2, Range of values is 0 to 128
  5502                           ; switch strategies available:
  5503                           ; Name         Instructions Cycles
  5504                           ; simple_byte            7     4 (average)
  5505                           ;	Chosen strategy is simple_byte
  5506  0008CC  0A00               	xorlw	0	; case 0
  5507  0008CE  B4D8               	btfsc	status,2,c
  5508  0008D0  D7A5               	goto	l3369
  5509  0008D2  0A80               	xorlw	128	; case 128
  5510  0008D4  B4D8               	btfsc	status,2,c
  5511  0008D6  D7CB               	goto	l3371
  5512  0008D8                     l3379:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5516  0008D8  0100               	movlb	0	; () banked
  5517  0008DA  EE20 F002          	lfsr	2,2
  5518  0008DE  5165               	movf	__doprnt@pb& (0+255),w,b
  5519  0008E0  26D9               	addwf	fsr2l,f,c
  5520  0008E2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5521  0008E4  22DA               	addwfc	fsr2h,f,c
  5522  0008E6  50DE               	movf	postinc2,w,c
  5523  0008E8  10DE               	iorwf	postinc2,w,c
  5524  0008EA  B4D8               	btfsc	status,2,c
  5525  0008EC  D019               	goto	l3383
  5526                           
  5527                           ; BSR set to: 0
  5528  0008EE  0100               	movlb	0	; () banked
  5529  0008F0  EE20 F002          	lfsr	2,2
  5530  0008F4  5165               	movf	__doprnt@pb& (0+255),w,b
  5531  0008F6  26D9               	addwf	fsr2l,f,c
  5532  0008F8  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5533  0008FA  22DA               	addwfc	fsr2h,f,c
  5534  0008FC  CFDE F06B          	movff	postinc2,??__doprnt
  5535  000900  CFDD F06C          	movff	postdec2,??__doprnt+1
  5536  000904  D801               	call	u3678
  5537  000906  D021               	goto	l3387
  5538  000908                     u3678:
  5539  000908  0005               	push	
  5540  00090A  6EFA               	movwf	pclath,c
  5541  00090C  0100               	movlb	0	; () banked
  5542  00090E  516B               	movf	??__doprnt& (0+255),w,b
  5543  000910  6EFD               	movwf	tosl,c
  5544  000912  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5545  000914  6EFE               	movwf	tosh,c
  5546  000916  6AFF               	clrf	tosu,c
  5547  000918  50FA               	movf	pclath,w,c
  5548  00091A  0100               	movlb	0	; () banked
  5549  00091C  517A               	movf	__doprnt@c& (0+255),w,b
  5550  00091E  0012               	return		;indir
  5551  000920                     l3383:
  5552  000920  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5553  000924  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5554  000928  CFDE F06B          	movff	postinc2,??__doprnt
  5555  00092C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5556  000930  C06B  FFD9         	movff	??__doprnt,fsr2l
  5557  000934  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5558  000938  C07A  FFDF         	movff	__doprnt@c,indf2
  5559  00093C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5560  000940  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5561  000944  2ADE               	incf	postinc2,f,c
  5562  000946  0E00               	movlw	0
  5563  000948  22DD               	addwfc	postdec2,f,c
  5564  00094A                     l3387:
  5565  00094A  0100               	movlb	0	; () banked
  5566  00094C  0770               	decf	__doprnt@prec& (0+255),f,b
  5567  00094E  0100               	movlb	0	; () banked
  5568  000950  2970               	incf	__doprnt@prec& (0+255),w,b
  5569  000952  A4D8               	btfss	status,2,c
  5570  000954  D7B8               	goto	l3377
  5571  000956                     l3389:
  5572  000956  C067  FFF6         	movff	__doprnt@f,tblptrl
  5573  00095A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5574  00095E  0100               	movlb	0	; () banked
  5575  000960  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5576  000962  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5577  000964                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5578  000964  6AF8               	clrf	tblptru,c
  5579  000966                     	endif
  5580  000966                     	if	0	;tblptru may be non-zero
  5581  000966                     	endif
  5582  000966  0008               	tblrd		*
  5583  000968  CFF5 F07A          	movff	tablat,__doprnt@c
  5584  00096C  0100               	movlb	0	; () banked
  5585  00096E  517A               	movf	__doprnt@c& (0+255),w,b
  5586  000970  A4D8               	btfss	status,2,c
  5587  000972  EF4E  F000         	goto	l3183
  5588  000976                     l3391:
  5589                           
  5590                           ;doprnt.c: 1540: return 0;
  5591  000976  0E00               	movlw	0
  5592  000978  0100               	movlb	0	; () banked
  5593  00097A  6F66               	movwf	(?__doprnt+1)& (0+255),b
  5594  00097C  0E00               	movlw	0
  5595  00097E  6F65               	movwf	?__doprnt& (0+255),b
  5596  000980  0012               	return	
  5597  000982                     __end_of__doprnt:
  5598                           	opt stack 0
  5599                           tosu	equ	0xFFF
  5600                           tosh	equ	0xFFE
  5601                           tosl	equ	0xFFD
  5602                           pclath	equ	0xFFA
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           indf1	equ	0xFE7
  5613                           postdec1	equ	0xFE5
  5614                           fsr1h	equ	0xFE2
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _putch *****************
  5624 ;; Defined at:
  5625 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  txData          1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  txData          1   38[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        1 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    5
  5646 ;; This function calls:
  5647 ;;		_EUSART1_Write
  5648 ;; This function is called by:
  5649 ;;		_printf
  5650 ;;		__doprnt
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text22
  5655  001CE0                     __ptext22:
  5656                           	opt stack 0
  5657  001CE0                     _putch:
  5658                           	opt stack 22
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;incstack = 0
  5662                           ;putch@txData stored from wreg
  5663  001CE0  6E27               	movwf	putch@txData,c
  5664                           
  5665                           ;eusart1.c: 172: EUSART1_Write(txData);
  5666  001CE2  5027               	movf	putch@txData,w,c
  5667  001CE4  ECBE  F00C         	call	_EUSART1_Write
  5668  001CE8  0012               	return		;funcret
  5669  001CEA                     __end_of_putch:
  5670                           	opt stack 0
  5671                           tosu	equ	0xFFF
  5672                           tosh	equ	0xFFE
  5673                           tosl	equ	0xFFD
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           indf1	equ	0xFE7
  5685                           postdec1	equ	0xFE5
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           postdec2	equ	0xFDD
  5691                           fsr2h	equ	0xFDA
  5692                           fsr2l	equ	0xFD9
  5693                           status	equ	0xFD8
  5694                           
  5695 ;; *************** function _EUSART1_Write *****************
  5696 ;; Defined at:
  5697 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  txData          1    wreg     unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  txData          1   37[COMRAM] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;Total ram usage:        1 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    4
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_putch
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text23
  5726  00197C                     __ptext23:
  5727                           	opt stack 0
  5728  00197C                     _EUSART1_Write:
  5729                           	opt stack 22
  5730                           
  5731                           ;incstack = 0
  5732                           ;EUSART1_Write@txData stored from wreg
  5733  00197C  6E26               	movwf	EUSART1_Write@txData,c
  5734  00197E                     l2191:
  5735  00197E  5039               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  5736  001980  B4D8               	btfsc	status,2,c
  5737  001982  D7FD               	goto	l2191
  5738                           
  5739                           ;eusart1.c: 146: }
  5740                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  5741  001984  B89D               	btfsc	3997,4,c	;volatile
  5742  001986  D003               	goto	l110
  5743                           
  5744                           ;eusart1.c: 149: {
  5745                           ;eusart1.c: 150: TXREG1 = txData;
  5746  001988  C026  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5747                           
  5748                           ;eusart1.c: 151: }
  5749  00198C  D012               	goto	l2205
  5750  00198E                     l110:
  5751                           
  5752                           ;eusart1.c: 152: else
  5753                           ;eusart1.c: 153: {
  5754                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  5755  00198E  989D               	bcf	3997,4,c	;volatile
  5756                           
  5757                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  5758  001990  5032               	movf	_eusart1TxHead,w,c
  5759  001992  0D01               	mullw	1
  5760  001994  0E00               	movlw	low _eusart1TxBuffer
  5761  001996  24F3               	addwf	prodl,w,c
  5762  001998  6ED9               	movwf	fsr2l,c
  5763  00199A  0E01               	movlw	high _eusart1TxBuffer
  5764  00199C  20F4               	addwfc	prodh,w,c
  5765  00199E  6EDA               	movwf	fsr2h,c
  5766  0019A0  C026  FFDF         	movff	EUSART1_Write@txData,indf2
  5767  0019A4  2A32               	incf	_eusart1TxHead,f,c
  5768                           
  5769                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  5770  0019A6  0E7F               	movlw	127
  5771  0019A8  6432               	cpfsgt	_eusart1TxHead,c
  5772  0019AA  D002               	goto	l2203
  5773                           
  5774                           ;eusart1.c: 157: {
  5775                           ;eusart1.c: 158: eusart1TxHead = 0;
  5776  0019AC  0E00               	movlw	0
  5777  0019AE  6E32               	movwf	_eusart1TxHead,c
  5778  0019B0                     l2203:
  5779                           
  5780                           ;eusart1.c: 159: }
  5781                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  5782  0019B0  0639               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  5783  0019B2                     l2205:
  5784                           
  5785                           ;eusart1.c: 161: }
  5786                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  5787  0019B2  889D               	bsf	3997,4,c	;volatile
  5788  0019B4  0012               	return		;funcret
  5789  0019B6                     __end_of_EUSART1_Write:
  5790                           	opt stack 0
  5791                           tosu	equ	0xFFF
  5792                           tosh	equ	0xFFE
  5793                           tosl	equ	0xFFD
  5794                           pclath	equ	0xFFA
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           prodh	equ	0xFF4
  5800                           prodl	equ	0xFF3
  5801                           intcon	equ	0xFF2
  5802                           postinc0	equ	0xFEE
  5803                           wreg	equ	0xFE8
  5804                           indf1	equ	0xFE7
  5805                           postdec1	equ	0xFE5
  5806                           fsr1h	equ	0xFE2
  5807                           fsr1l	equ	0xFE1
  5808                           indf2	equ	0xFDF
  5809                           postinc2	equ	0xFDE
  5810                           postdec2	equ	0xFDD
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _isdigit *****************
  5816 ;; Defined at:
  5817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  c               1    wreg     unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  c               1   39[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;		None               void
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;Total ram usage:        3 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    4
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		__doprnt
  5842 ;;		_strtol
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text24
  5847  001C5A                     __ptext24:
  5848                           	opt stack 0
  5849  001C5A                     _isdigit:
  5850                           	opt stack 25
  5851                           
  5852                           ;incstack = 0
  5853                           ;isdigit@c stored from wreg
  5854  001C5A  6E28               	movwf	isdigit@c,c
  5855  001C5C  0E00               	movlw	0
  5856  001C5E  6E27               	movwf	_isdigit$1032,c
  5857  001C60  0E3A               	movlw	58
  5858  001C62  6028               	cpfslt	isdigit@c,c
  5859  001C64  D005               	goto	l2217
  5860  001C66  0E2F               	movlw	47
  5861  001C68  6428               	cpfsgt	isdigit@c,c
  5862  001C6A  D002               	goto	l2217
  5863  001C6C  0E01               	movlw	1
  5864  001C6E  6E27               	movwf	_isdigit$1032,c
  5865  001C70                     l2217:
  5866  001C70  C027  F026         	movff	_isdigit$1032,??_isdigit
  5867  001C74  3026               	rrcf	??_isdigit,w,c
  5868  001C76  0012               	return	
  5869  001C78                     __end_of_isdigit:
  5870                           	opt stack 0
  5871                           tosu	equ	0xFFF
  5872                           tosh	equ	0xFFE
  5873                           tosl	equ	0xFFD
  5874                           pclath	equ	0xFFA
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           wreg	equ	0xFE8
  5884                           indf1	equ	0xFE7
  5885                           postdec1	equ	0xFE5
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function ___wmul *****************
  5896 ;; Defined at:
  5897 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  multiplier      2   37[COMRAM] unsigned int 
  5900 ;;  multiplicand    2   39[COMRAM] unsigned int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  product         2   41[COMRAM] unsigned int 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  2   37[COMRAM] unsigned int 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, prodl, prodh
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        6 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    4
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		__doprnt
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text25
  5927  001BF6                     __ptext25:
  5928                           	opt stack 0
  5929  001BF6                     ___wmul:
  5930                           	opt stack 23
  5931                           
  5932                           ;incstack = 0
  5933  001BF6  5026               	movf	___wmul@multiplier,w,c
  5934  001BF8  0228               	mulwf	___wmul@multiplicand,c
  5935  001BFA  CFF3 F02A          	movff	prodl,___wmul@product
  5936  001BFE  CFF4 F02B          	movff	prodh,___wmul@product+1
  5937  001C02  5026               	movf	___wmul@multiplier,w,c
  5938  001C04  0229               	mulwf	___wmul@multiplicand+1,c
  5939  001C06  50F3               	movf	prodl,w,c
  5940  001C08  262B               	addwf	___wmul@product+1,f,c
  5941  001C0A  5027               	movf	___wmul@multiplier+1,w,c
  5942  001C0C  0228               	mulwf	___wmul@multiplicand,c
  5943  001C0E  50F3               	movf	prodl,w,c
  5944  001C10  262B               	addwf	___wmul@product+1,f,c
  5945  001C12  C02A  F026         	movff	___wmul@product,?___wmul
  5946  001C16  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  5947  001C1A  0012               	return	
  5948  001C1C                     __end_of___wmul:
  5949                           	opt stack 0
  5950                           tosu	equ	0xFFF
  5951                           tosh	equ	0xFFE
  5952                           tosl	equ	0xFFD
  5953                           pclath	equ	0xFFA
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           postinc0	equ	0xFEE
  5962                           wreg	equ	0xFE8
  5963                           indf1	equ	0xFE7
  5964                           postdec1	equ	0xFE5
  5965                           fsr1h	equ	0xFE2
  5966                           fsr1l	equ	0xFE1
  5967                           indf2	equ	0xFDF
  5968                           postinc2	equ	0xFDE
  5969                           postdec2	equ	0xFDD
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function ___lwmod *****************
  5975 ;; Defined at:
  5976 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  dividend        2    0[BANK0 ] unsigned int 
  5979 ;;  divisor         2    2[BANK0 ] unsigned int 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  counter         1    4[BANK0 ] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2    0[BANK0 ] unsigned int 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        5 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    4
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		__doprnt
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text26
  6006  0016EC                     __ptext26:
  6007                           	opt stack 0
  6008  0016EC                     ___lwmod:
  6009                           	opt stack 23
  6010                           
  6011                           ;incstack = 0
  6012  0016EC  0100               	movlb	0	; () banked
  6013  0016EE  5162               	movf	___lwmod@divisor& (0+255),w,b
  6014  0016F0  0100               	movlb	0	; () banked
  6015  0016F2  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6016  0016F4  B4D8               	btfsc	status,2,c
  6017  0016F6  D026               	goto	l829
  6018                           
  6019                           ; BSR set to: 0
  6020  0016F8  0E01               	movlw	1
  6021  0016FA  0100               	movlb	0	; () banked
  6022  0016FC  6F64               	movwf	___lwmod@counter& (0+255),b
  6023  0016FE  D006               	goto	l3171
  6024  001700                     l3169:
  6025                           
  6026                           ; BSR set to: 0
  6027  001700  0100               	movlb	0	; () banked
  6028  001702  90D8               	bcf	status,0,c
  6029  001704  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  6030  001706  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6031  001708  0100               	movlb	0	; () banked
  6032  00170A  2B64               	incf	___lwmod@counter& (0+255),f,b
  6033  00170C                     l3171:
  6034                           
  6035                           ; BSR set to: 0
  6036  00170C  0100               	movlb	0	; () banked
  6037  00170E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6038  001710  D7F7               	goto	l3169
  6039  001712                     l3173:
  6040                           
  6041                           ; BSR set to: 0
  6042  001712  0100               	movlb	0	; () banked
  6043  001714  5162               	movf	___lwmod@divisor& (0+255),w,b
  6044  001716  0100               	movlb	0	; () banked
  6045  001718  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  6046  00171A  0100               	movlb	0	; () banked
  6047  00171C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6048  00171E  0100               	movlb	0	; () banked
  6049  001720  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6050  001722  A0D8               	btfss	status,0,c
  6051  001724  D008               	goto	l3177
  6052                           
  6053                           ; BSR set to: 0
  6054  001726  0100               	movlb	0	; () banked
  6055  001728  5162               	movf	___lwmod@divisor& (0+255),w,b
  6056  00172A  0100               	movlb	0	; () banked
  6057  00172C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  6058  00172E  0100               	movlb	0	; () banked
  6059  001730  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6060  001732  0100               	movlb	0	; () banked
  6061  001734  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6062  001736                     l3177:
  6063                           
  6064                           ; BSR set to: 0
  6065  001736  0100               	movlb	0	; () banked
  6066  001738  90D8               	bcf	status,0,c
  6067  00173A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6068  00173C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  6069                           
  6070                           ; BSR set to: 0
  6071  00173E  0100               	movlb	0	; () banked
  6072  001740  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  6073  001742  D7E7               	goto	l3173
  6074  001744                     l829:
  6075                           
  6076                           ; BSR set to: 0
  6077  001744  C060  F060         	movff	___lwmod@dividend,?___lwmod
  6078  001748  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  6079                           
  6080                           ; BSR set to: 0
  6081  00174C  0012               	return		;funcret
  6082  00174E                     __end_of___lwmod:
  6083                           	opt stack 0
  6084                           tosu	equ	0xFFF
  6085                           tosh	equ	0xFFE
  6086                           tosl	equ	0xFFD
  6087                           pclath	equ	0xFFA
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           intcon	equ	0xFF2
  6095                           postinc0	equ	0xFEE
  6096                           wreg	equ	0xFE8
  6097                           indf1	equ	0xFE7
  6098                           postdec1	equ	0xFE5
  6099                           fsr1h	equ	0xFE2
  6100                           fsr1l	equ	0xFE1
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8
  6107                           
  6108 ;; *************** function ___lwdiv *****************
  6109 ;; Defined at:
  6110 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  dividend        2   37[COMRAM] unsigned int 
  6113 ;;  divisor         2   39[COMRAM] unsigned int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  quotient        2   41[COMRAM] unsigned int 
  6116 ;;  counter         1   43[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2   37[COMRAM] unsigned int 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:        7 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    4
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		__doprnt
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text27
  6141  00189C                     __ptext27:
  6142                           	opt stack 0
  6143  00189C                     ___lwdiv:
  6144                           	opt stack 23
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;incstack = 0
  6148  00189C  0E00               	movlw	0
  6149  00189E  6E2B               	movwf	___lwdiv@quotient+1,c
  6150  0018A0  0E00               	movlw	0
  6151  0018A2  6E2A               	movwf	___lwdiv@quotient,c
  6152  0018A4  5028               	movf	___lwdiv@divisor,w,c
  6153  0018A6  1029               	iorwf	___lwdiv@divisor+1,w,c
  6154  0018A8  B4D8               	btfsc	status,2,c
  6155  0018AA  D01C               	goto	l819
  6156  0018AC  0E01               	movlw	1
  6157  0018AE  6E2C               	movwf	___lwdiv@counter,c
  6158  0018B0  D004               	goto	l2235
  6159  0018B2                     l2233:
  6160  0018B2  90D8               	bcf	status,0,c
  6161  0018B4  3628               	rlcf	___lwdiv@divisor,f,c
  6162  0018B6  3629               	rlcf	___lwdiv@divisor+1,f,c
  6163  0018B8  2A2C               	incf	___lwdiv@counter,f,c
  6164  0018BA                     l2235:
  6165  0018BA  AE29               	btfss	___lwdiv@divisor+1,7,c
  6166  0018BC  D7FA               	goto	l2233
  6167  0018BE                     l2237:
  6168  0018BE  90D8               	bcf	status,0,c
  6169  0018C0  362A               	rlcf	___lwdiv@quotient,f,c
  6170  0018C2  362B               	rlcf	___lwdiv@quotient+1,f,c
  6171  0018C4  5028               	movf	___lwdiv@divisor,w,c
  6172  0018C6  5C26               	subwf	___lwdiv@dividend,w,c
  6173  0018C8  5029               	movf	___lwdiv@divisor+1,w,c
  6174  0018CA  5827               	subwfb	___lwdiv@dividend+1,w,c
  6175  0018CC  A0D8               	btfss	status,0,c
  6176  0018CE  D005               	goto	l2245
  6177  0018D0  5028               	movf	___lwdiv@divisor,w,c
  6178  0018D2  5E26               	subwf	___lwdiv@dividend,f,c
  6179  0018D4  5029               	movf	___lwdiv@divisor+1,w,c
  6180  0018D6  5A27               	subwfb	___lwdiv@dividend+1,f,c
  6181  0018D8  802A               	bsf	___lwdiv@quotient,0,c
  6182  0018DA                     l2245:
  6183  0018DA  90D8               	bcf	status,0,c
  6184  0018DC  3229               	rrcf	___lwdiv@divisor+1,f,c
  6185  0018DE  3228               	rrcf	___lwdiv@divisor,f,c
  6186  0018E0  2E2C               	decfsz	___lwdiv@counter,f,c
  6187  0018E2  D7ED               	goto	l2237
  6188  0018E4                     l819:
  6189  0018E4  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  6190  0018E8  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6191  0018EC  0012               	return		;funcret
  6192  0018EE                     __end_of___lwdiv:
  6193                           	opt stack 0
  6194                           tosu	equ	0xFFF
  6195                           tosh	equ	0xFFE
  6196                           tosl	equ	0xFFD
  6197                           pclath	equ	0xFFA
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           intcon	equ	0xFF2
  6205                           postinc0	equ	0xFEE
  6206                           wreg	equ	0xFE8
  6207                           indf1	equ	0xFE7
  6208                           postdec1	equ	0xFE5
  6209                           fsr1h	equ	0xFE2
  6210                           fsr1l	equ	0xFE1
  6211                           indf2	equ	0xFDF
  6212                           postinc2	equ	0xFDE
  6213                           postdec2	equ	0xFDD
  6214                           fsr2h	equ	0xFDA
  6215                           fsr2l	equ	0xFD9
  6216                           status	equ	0xFD8
  6217                           
  6218 ;; *************** function ___awmod *****************
  6219 ;; Defined at:
  6220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  dividend        2    8[BANK0 ] int 
  6223 ;;  divisor         2   10[BANK0 ] int 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  sign            1   13[BANK0 ] unsigned char 
  6226 ;;  counter         1   12[BANK0 ] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2    8[BANK0 ] int 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:        6 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:    4
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_main
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text28
  6251  00144E                     __ptext28:
  6252                           	opt stack 0
  6253  00144E                     ___awmod:
  6254                           	opt stack 26
  6255                           
  6256                           ;incstack = 0
  6257  00144E  0E00               	movlw	0
  6258  001450  0100               	movlb	0	; () banked
  6259  001452  6F6D               	movwf	___awmod@sign& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262  001454  0100               	movlb	0	; () banked
  6263  001456  AF69               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6264  001458  D008               	goto	l3593
  6265                           
  6266                           ; BSR set to: 0
  6267  00145A  0100               	movlb	0	; () banked
  6268  00145C  6D68               	negf	___awmod@dividend& (0+255),b
  6269  00145E  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6270  001460  B0D8               	btfsc	status,0,c
  6271  001462  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6272                           
  6273                           ; BSR set to: 0
  6274  001464  0E01               	movlw	1
  6275  001466  0100               	movlb	0	; () banked
  6276  001468  6F6D               	movwf	___awmod@sign& (0+255),b
  6277  00146A                     l3593:
  6278                           
  6279                           ; BSR set to: 0
  6280  00146A  0100               	movlb	0	; () banked
  6281  00146C  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6282  00146E  D005               	goto	l3597
  6283                           
  6284                           ; BSR set to: 0
  6285  001470  0100               	movlb	0	; () banked
  6286  001472  6D6A               	negf	___awmod@divisor& (0+255),b
  6287  001474  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  6288  001476  B0D8               	btfsc	status,0,c
  6289  001478  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  6290  00147A                     l3597:
  6291                           
  6292                           ; BSR set to: 0
  6293  00147A  0100               	movlb	0	; () banked
  6294  00147C  516A               	movf	___awmod@divisor& (0+255),w,b
  6295  00147E  0100               	movlb	0	; () banked
  6296  001480  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6297  001482  B4D8               	btfsc	status,2,c
  6298  001484  D026               	goto	l3613
  6299                           
  6300                           ; BSR set to: 0
  6301  001486  0E01               	movlw	1
  6302  001488  0100               	movlb	0	; () banked
  6303  00148A  6F6C               	movwf	___awmod@counter& (0+255),b
  6304  00148C  D006               	goto	l3603
  6305  00148E                     l3601:
  6306                           
  6307                           ; BSR set to: 0
  6308  00148E  0100               	movlb	0	; () banked
  6309  001490  90D8               	bcf	status,0,c
  6310  001492  376A               	rlcf	___awmod@divisor& (0+255),f,b
  6311  001494  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6312  001496  0100               	movlb	0	; () banked
  6313  001498  2B6C               	incf	___awmod@counter& (0+255),f,b
  6314  00149A                     l3603:
  6315                           
  6316                           ; BSR set to: 0
  6317  00149A  0100               	movlb	0	; () banked
  6318  00149C  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6319  00149E  D7F7               	goto	l3601
  6320  0014A0                     l3605:
  6321                           
  6322                           ; BSR set to: 0
  6323  0014A0  0100               	movlb	0	; () banked
  6324  0014A2  516A               	movf	___awmod@divisor& (0+255),w,b
  6325  0014A4  0100               	movlb	0	; () banked
  6326  0014A6  5D68               	subwf	___awmod@dividend& (0+255),w,b
  6327  0014A8  0100               	movlb	0	; () banked
  6328  0014AA  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6329  0014AC  0100               	movlb	0	; () banked
  6330  0014AE  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6331  0014B0  A0D8               	btfss	status,0,c
  6332  0014B2  D008               	goto	l3609
  6333                           
  6334                           ; BSR set to: 0
  6335  0014B4  0100               	movlb	0	; () banked
  6336  0014B6  516A               	movf	___awmod@divisor& (0+255),w,b
  6337  0014B8  0100               	movlb	0	; () banked
  6338  0014BA  5F68               	subwf	___awmod@dividend& (0+255),f,b
  6339  0014BC  0100               	movlb	0	; () banked
  6340  0014BE  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6341  0014C0  0100               	movlb	0	; () banked
  6342  0014C2  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6343  0014C4                     l3609:
  6344                           
  6345                           ; BSR set to: 0
  6346  0014C4  0100               	movlb	0	; () banked
  6347  0014C6  90D8               	bcf	status,0,c
  6348  0014C8  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6349  0014CA  336A               	rrcf	___awmod@divisor& (0+255),f,b
  6350                           
  6351                           ; BSR set to: 0
  6352  0014CC  0100               	movlb	0	; () banked
  6353  0014CE  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  6354  0014D0  D7E7               	goto	l3605
  6355  0014D2                     l3613:
  6356                           
  6357                           ; BSR set to: 0
  6358  0014D2  0100               	movlb	0	; () banked
  6359  0014D4  516D               	movf	___awmod@sign& (0+255),w,b
  6360  0014D6  0100               	movlb	0	; () banked
  6361  0014D8  B4D8               	btfsc	status,2,c
  6362  0014DA  D005               	goto	l3617
  6363                           
  6364                           ; BSR set to: 0
  6365  0014DC  0100               	movlb	0	; () banked
  6366  0014DE  6D68               	negf	___awmod@dividend& (0+255),b
  6367  0014E0  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6368  0014E2  B0D8               	btfsc	status,0,c
  6369  0014E4  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6370  0014E6                     l3617:
  6371                           
  6372                           ; BSR set to: 0
  6373  0014E6  C068  F068         	movff	___awmod@dividend,?___awmod
  6374  0014EA  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  6375  0014EE  0012               	return	
  6376  0014F0                     __end_of___awmod:
  6377                           	opt stack 0
  6378                           tosu	equ	0xFFF
  6379                           tosh	equ	0xFFE
  6380                           tosl	equ	0xFFD
  6381                           pclath	equ	0xFFA
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           indf1	equ	0xFE7
  6392                           postdec1	equ	0xFE5
  6393                           fsr1h	equ	0xFE2
  6394                           fsr1l	equ	0xFE1
  6395                           indf2	equ	0xFDF
  6396                           postinc2	equ	0xFDE
  6397                           postdec2	equ	0xFDD
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _SYSTEM_Initialize *****************
  6403 ;; Defined at:
  6404 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    6
  6425 ;; This function calls:
  6426 ;;		_EPWM1_Initialize
  6427 ;;		_EUSART1_Initialize
  6428 ;;		_INTERRUPT_Initialize
  6429 ;;		_OSCILLATOR_Initialize
  6430 ;;		_PIN_MANAGER_Initialize
  6431 ;;		_TMR2_Initialize
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text29
  6438  001C78                     __ptext29:
  6439                           	opt stack 0
  6440  001C78                     _SYSTEM_Initialize:
  6441                           	opt stack 24
  6442                           
  6443                           ;mcc.c: 115: INTERRUPT_Initialize();
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;incstack = 0
  6447  001C78  EC75  F00E         	call	_INTERRUPT_Initialize	;wreg free
  6448                           
  6449                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  6450  001C7C  EC2B  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6451                           
  6452                           ;mcc.c: 117: OSCILLATOR_Initialize();
  6453  001C80  EC63  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  6454                           
  6455                           ;mcc.c: 118: EPWM1_Initialize();
  6456  001C84  EC0E  F00E         	call	_EPWM1_Initialize	;wreg free
  6457                           
  6458                           ;mcc.c: 119: TMR2_Initialize();
  6459  001C88  EC53  F00E         	call	_TMR2_Initialize	;wreg free
  6460                           
  6461                           ;mcc.c: 120: EUSART1_Initialize();
  6462  001C8C  EC45  F00D         	call	_EUSART1_Initialize	;wreg free
  6463  001C90  0012               	return		;funcret
  6464  001C92                     __end_of_SYSTEM_Initialize:
  6465                           	opt stack 0
  6466                           tosu	equ	0xFFF
  6467                           tosh	equ	0xFFE
  6468                           tosl	equ	0xFFD
  6469                           pclath	equ	0xFFA
  6470                           tblptru	equ	0xFF8
  6471                           tblptrh	equ	0xFF7
  6472                           tblptrl	equ	0xFF6
  6473                           tablat	equ	0xFF5
  6474                           prodh	equ	0xFF4
  6475                           prodl	equ	0xFF3
  6476                           intcon	equ	0xFF2
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8
  6489                           
  6490 ;; *************** function _TMR2_Initialize *****************
  6491 ;; Defined at:
  6492 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;Total ram usage:        0 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    5
  6513 ;; This function calls:
  6514 ;;		_TMR2_StartTimer
  6515 ;; This function is called by:
  6516 ;;		_SYSTEM_Initialize
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text30
  6521  001CA6                     __ptext30:
  6522                           	opt stack 0
  6523  001CA6                     _TMR2_Initialize:
  6524                           	opt stack 24
  6525                           
  6526                           ;tmr2.c: 63: T2CON = 0x00;
  6527                           
  6528                           ;incstack = 0
  6529  001CA6  0E00               	movlw	0
  6530  001CA8  6EBA               	movwf	4026,c	;volatile
  6531                           
  6532                           ;tmr2.c: 66: PR2 = 0xFF;
  6533  001CAA  68BB               	setf	4027,c	;volatile
  6534                           
  6535                           ;tmr2.c: 69: TMR2 = 0x00;
  6536  001CAC  0E00               	movlw	0
  6537  001CAE  6EBC               	movwf	4028,c	;volatile
  6538                           
  6539                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  6540  001CB0  929E               	bcf	3998,1,c	;volatile
  6541                           
  6542                           ;tmr2.c: 75: TMR2_StartTimer();
  6543  001CB2  EC7C  F00E         	call	_TMR2_StartTimer	;wreg free
  6544  001CB6  0012               	return		;funcret
  6545  001CB8                     __end_of_TMR2_Initialize:
  6546                           	opt stack 0
  6547                           tosu	equ	0xFFF
  6548                           tosh	equ	0xFFE
  6549                           tosl	equ	0xFFD
  6550                           pclath	equ	0xFFA
  6551                           tblptru	equ	0xFF8
  6552                           tblptrh	equ	0xFF7
  6553                           tblptrl	equ	0xFF6
  6554                           tablat	equ	0xFF5
  6555                           prodh	equ	0xFF4
  6556                           prodl	equ	0xFF3
  6557                           intcon	equ	0xFF2
  6558                           postinc0	equ	0xFEE
  6559                           wreg	equ	0xFE8
  6560                           indf1	equ	0xFE7
  6561                           postdec1	equ	0xFE5
  6562                           fsr1h	equ	0xFE2
  6563                           fsr1l	equ	0xFE1
  6564                           indf2	equ	0xFDF
  6565                           postinc2	equ	0xFDE
  6566                           postdec2	equ	0xFDD
  6567                           fsr2h	equ	0xFDA
  6568                           fsr2l	equ	0xFD9
  6569                           status	equ	0xFD8
  6570                           
  6571 ;; *************** function _TMR2_StartTimer *****************
  6572 ;; Defined at:
  6573 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		None
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_TMR2_Initialize
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text31
  6602  001CF8                     __ptext31:
  6603                           	opt stack 0
  6604  001CF8                     _TMR2_StartTimer:
  6605                           	opt stack 24
  6606                           
  6607                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  6608                           
  6609                           ;incstack = 0
  6610  001CF8  84BA               	bsf	4026,2,c	;volatile
  6611  001CFA  0012               	return		;funcret
  6612  001CFC                     __end_of_TMR2_StartTimer:
  6613                           	opt stack 0
  6614                           tosu	equ	0xFFF
  6615                           tosh	equ	0xFFE
  6616                           tosl	equ	0xFFD
  6617                           pclath	equ	0xFFA
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           indf1	equ	0xFE7
  6628                           postdec1	equ	0xFE5
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           indf2	equ	0xFDF
  6632                           postinc2	equ	0xFDE
  6633                           postdec2	equ	0xFDD
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _PIN_MANAGER_Initialize *****************
  6639 ;; Defined at:
  6640 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      void 
  6647 ;; Registers used:
  6648 ;;		wreg, status,2
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    4
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_SYSTEM_Initialize
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text32
  6669  001A56                     __ptext32:
  6670                           	opt stack 0
  6671  001A56                     _PIN_MANAGER_Initialize:
  6672                           	opt stack 25
  6673                           
  6674                           ;pin_manager.c: 51: LATB = 0x0;
  6675                           
  6676                           ;incstack = 0
  6677  001A56  0E00               	movlw	0
  6678  001A58  6E8A               	movwf	3978,c	;volatile
  6679                           
  6680                           ;pin_manager.c: 52: LATA = 0x0;
  6681  001A5A  0E00               	movlw	0
  6682  001A5C  6E89               	movwf	3977,c	;volatile
  6683                           
  6684                           ;pin_manager.c: 53: LATC = 0x0;
  6685  001A5E  0E00               	movlw	0
  6686  001A60  6E8B               	movwf	3979,c	;volatile
  6687                           
  6688                           ;pin_manager.c: 54: ANSELA = 0x2F;
  6689  001A62  0E2F               	movlw	47
  6690  001A64  010F               	movlb	15	; () banked
  6691  001A66  6F38               	movwf	56,b	;volatile
  6692                           
  6693                           ;pin_manager.c: 55: ANSELB = 0x3E;
  6694  001A68  0E3E               	movlw	62
  6695  001A6A  010F               	movlb	15	; () banked
  6696  001A6C  6F39               	movwf	57,b	;volatile
  6697                           
  6698                           ;pin_manager.c: 56: ANSELC = 0x38;
  6699  001A6E  0E38               	movlw	56
  6700  001A70  010F               	movlb	15	; () banked
  6701  001A72  6F3A               	movwf	58,b	;volatile
  6702                           
  6703                           ;pin_manager.c: 57: TRISB = 0xC8;
  6704  001A74  0EC8               	movlw	200
  6705  001A76  6E93               	movwf	3987,c	;volatile
  6706                           
  6707                           ;pin_manager.c: 58: TRISC = 0xF9;
  6708  001A78  0EF9               	movlw	249
  6709  001A7A  6E94               	movwf	3988,c	;volatile
  6710                           
  6711                           ;pin_manager.c: 59: WPUB = 0xFE;
  6712  001A7C  0EFE               	movlw	254
  6713  001A7E  6E61               	movwf	3937,c	;volatile
  6714                           
  6715                           ;pin_manager.c: 60: TRISA = 0xEF;
  6716  001A80  0EEF               	movlw	239
  6717  001A82  6E92               	movwf	3986,c	;volatile
  6718                           
  6719                           ; BSR set to: 15
  6720                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  6721  001A84  8EF1               	bsf	intcon2,7,c	;volatile
  6722                           
  6723                           ; BSR set to: 15
  6724                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  6725  001A86  96F2               	bcf	intcon,3,c	;volatile
  6726                           
  6727                           ; BSR set to: 15
  6728  001A88  0012               	return		;funcret
  6729  001A8A                     __end_of_PIN_MANAGER_Initialize:
  6730                           	opt stack 0
  6731                           tosu	equ	0xFFF
  6732                           tosh	equ	0xFFE
  6733                           tosl	equ	0xFFD
  6734                           pclath	equ	0xFFA
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           intcon2	equ	0xFF1
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           indf1	equ	0xFE7
  6746                           postdec1	equ	0xFE5
  6747                           fsr1h	equ	0xFE2
  6748                           fsr1l	equ	0xFE1
  6749                           indf2	equ	0xFDF
  6750                           postinc2	equ	0xFDE
  6751                           postdec2	equ	0xFDD
  6752                           fsr2h	equ	0xFDA
  6753                           fsr2l	equ	0xFD9
  6754                           status	equ	0xFD8
  6755                           
  6756 ;; *************** function _OSCILLATOR_Initialize *****************
  6757 ;; Defined at:
  6758 ;;		line 123 in file "mcc_generated_files/mcc.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    4
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_SYSTEM_Initialize
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text33
  6787  001CC6                     __ptext33:
  6788                           	opt stack 0
  6789  001CC6                     _OSCILLATOR_Initialize:
  6790                           	opt stack 25
  6791                           
  6792                           ;mcc.c: 126: OSCCON = 0x70;
  6793                           
  6794                           ; BSR set to: 15
  6795                           ;incstack = 0
  6796  001CC6  0E70               	movlw	112
  6797  001CC8  6ED3               	movwf	4051,c	;volatile
  6798                           
  6799                           ;mcc.c: 128: OSCCON2 = 0x04;
  6800  001CCA  0E04               	movlw	4
  6801  001CCC  6ED2               	movwf	4050,c	;volatile
  6802                           
  6803                           ;mcc.c: 130: OSCTUNE = 0x40;
  6804  001CCE  0E40               	movlw	64
  6805  001CD0  6E9B               	movwf	3995,c	;volatile
  6806  001CD2  0012               	return		;funcret
  6807  001CD4                     __end_of_OSCILLATOR_Initialize:
  6808                           	opt stack 0
  6809                           tosu	equ	0xFFF
  6810                           tosh	equ	0xFFE
  6811                           tosl	equ	0xFFD
  6812                           pclath	equ	0xFFA
  6813                           tblptru	equ	0xFF8
  6814                           tblptrh	equ	0xFF7
  6815                           tblptrl	equ	0xFF6
  6816                           tablat	equ	0xFF5
  6817                           prodh	equ	0xFF4
  6818                           prodl	equ	0xFF3
  6819                           intcon	equ	0xFF2
  6820                           intcon2	equ	0xFF1
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           indf1	equ	0xFE7
  6824                           postdec1	equ	0xFE5
  6825                           fsr1h	equ	0xFE2
  6826                           fsr1l	equ	0xFE1
  6827                           indf2	equ	0xFDF
  6828                           postinc2	equ	0xFDE
  6829                           postdec2	equ	0xFDD
  6830                           fsr2h	equ	0xFDA
  6831                           fsr2l	equ	0xFD9
  6832                           status	equ	0xFD8
  6833                           
  6834 ;; *************** function _INTERRUPT_Initialize *****************
  6835 ;; Defined at:
  6836 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		None
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    4
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_SYSTEM_Initialize
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text34
  6865  001CEA                     __ptext34:
  6866                           	opt stack 0
  6867  001CEA                     _INTERRUPT_Initialize:
  6868                           	opt stack 25
  6869                           
  6870                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  6871                           
  6872                           ;incstack = 0
  6873  001CEA  9ED0               	bcf	4048,7,c	;volatile
  6874                           
  6875                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  6876  001CEC  94F1               	bcf	intcon2,2,c	;volatile
  6877                           
  6878                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  6879  001CEE  989F               	bcf	3999,4,c	;volatile
  6880                           
  6881                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  6882  001CF0  9A9F               	bcf	3999,5,c	;volatile
  6883  001CF2  0012               	return		;funcret
  6884  001CF4                     __end_of_INTERRUPT_Initialize:
  6885                           	opt stack 0
  6886                           tosu	equ	0xFFF
  6887                           tosh	equ	0xFFE
  6888                           tosl	equ	0xFFD
  6889                           pclath	equ	0xFFA
  6890                           tblptru	equ	0xFF8
  6891                           tblptrh	equ	0xFF7
  6892                           tblptrl	equ	0xFF6
  6893                           tablat	equ	0xFF5
  6894                           prodh	equ	0xFF4
  6895                           prodl	equ	0xFF3
  6896                           intcon	equ	0xFF2
  6897                           intcon2	equ	0xFF1
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           indf1	equ	0xFE7
  6901                           postdec1	equ	0xFE5
  6902                           fsr1h	equ	0xFE2
  6903                           fsr1l	equ	0xFE1
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _EUSART1_Initialize *****************
  6912 ;; Defined at:
  6913 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;Total ram usage:        0 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    4
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_SYSTEM_Initialize
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text35
  6942  001A8A                     __ptext35:
  6943                           	opt stack 0
  6944  001A8A                     _EUSART1_Initialize:
  6945                           	opt stack 25
  6946                           
  6947                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  6948                           
  6949                           ;incstack = 0
  6950  001A8A  9A9D               	bcf	3997,5,c	;volatile
  6951                           
  6952                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  6953  001A8C  989D               	bcf	3997,4,c	;volatile
  6954                           
  6955                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  6956  001A8E  0E00               	movlw	0
  6957  001A90  6EB8               	movwf	4024,c	;volatile
  6958                           
  6959                           ;eusart1.c: 96: RCSTA1 = 0x90;
  6960  001A92  0E90               	movlw	144
  6961  001A94  6EAB               	movwf	4011,c	;volatile
  6962                           
  6963                           ;eusart1.c: 99: TXSTA1 = 0x20;
  6964  001A96  0E20               	movlw	32
  6965  001A98  6EAC               	movwf	4012,c	;volatile
  6966                           
  6967                           ;eusart1.c: 102: SPBRG1 = 0x10;
  6968  001A9A  0E10               	movlw	16
  6969  001A9C  6EAF               	movwf	4015,c	;volatile
  6970                           
  6971                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  6972  001A9E  0E00               	movlw	0
  6973  001AA0  6EB0               	movwf	4016,c	;volatile
  6974                           
  6975                           ;eusart1.c: 109: eusart1TxHead = 0;
  6976  001AA2  0E00               	movlw	0
  6977  001AA4  6E32               	movwf	_eusart1TxHead,c
  6978                           
  6979                           ;eusart1.c: 110: eusart1TxTail = 0;
  6980  001AA6  0E00               	movlw	0
  6981  001AA8  6E33               	movwf	_eusart1TxTail,c
  6982                           
  6983                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  6984  001AAA  0E80               	movlw	128
  6985  001AAC  6E39               	movwf	_eusart1TxBufferRemaining,c	;volatile
  6986                           
  6987                           ;eusart1.c: 113: eusart1RxHead = 0;
  6988  001AAE  0E00               	movlw	0
  6989  001AB0  6E30               	movwf	_eusart1RxHead,c
  6990                           
  6991                           ;eusart1.c: 114: eusart1RxTail = 0;
  6992  001AB2  0E00               	movlw	0
  6993  001AB4  6E31               	movwf	_eusart1RxTail,c
  6994                           
  6995                           ;eusart1.c: 115: eusart1RxCount = 0;
  6996  001AB6  0E00               	movlw	0
  6997  001AB8  6E2F               	movwf	_eusart1RxCount,c	;volatile
  6998                           
  6999                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  7000  001ABA  8A9D               	bsf	3997,5,c	;volatile
  7001  001ABC  0012               	return		;funcret
  7002  001ABE                     __end_of_EUSART1_Initialize:
  7003                           	opt stack 0
  7004                           tosu	equ	0xFFF
  7005                           tosh	equ	0xFFE
  7006                           tosl	equ	0xFFD
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           postinc0	equ	0xFEE
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postdec1	equ	0xFE5
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           postdec2	equ	0xFDD
  7025                           fsr2h	equ	0xFDA
  7026                           fsr2l	equ	0xFD9
  7027                           status	equ	0xFD8
  7028                           
  7029 ;; *************** function _EPWM1_Initialize *****************
  7030 ;; Defined at:
  7031 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;Total ram usage:        0 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    4
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_SYSTEM_Initialize
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text36
  7060  001C1C                     __ptext36:
  7061                           	opt stack 0
  7062  001C1C                     _EPWM1_Initialize:
  7063                           	opt stack 25
  7064                           
  7065                           ;epwm1.c: 69: CCP1CON = 0x0E;
  7066                           
  7067                           ;incstack = 0
  7068  001C1C  0E0E               	movlw	14
  7069  001C1E  6EBD               	movwf	4029,c	;volatile
  7070                           
  7071                           ;epwm1.c: 72: ECCP1AS = 0x00;
  7072  001C20  0E00               	movlw	0
  7073  001C22  6EB6               	movwf	4022,c	;volatile
  7074                           
  7075                           ;epwm1.c: 75: PWM1CON = 0x82;
  7076  001C24  0E82               	movlw	130
  7077  001C26  6EB7               	movwf	4023,c	;volatile
  7078                           
  7079                           ;epwm1.c: 78: PSTR1CON = 0x01;
  7080  001C28  0E01               	movlw	1
  7081  001C2A  6EB9               	movwf	4025,c	;volatile
  7082                           
  7083                           ;epwm1.c: 81: CCPR1L = 0x00;
  7084  001C2C  0E00               	movlw	0
  7085  001C2E  6EBE               	movwf	4030,c	;volatile
  7086                           
  7087                           ;epwm1.c: 84: CCPR1H = 0x00;
  7088  001C30  0E00               	movlw	0
  7089  001C32  6EBF               	movwf	4031,c	;volatile
  7090                           
  7091                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  7092  001C34  0EFC               	movlw	-4
  7093  001C36  010F               	movlb	15	; () banked
  7094  001C38  1749               	andwf	73,f,b	;volatile
  7095                           
  7096                           ; BSR set to: 15
  7097  001C3A  0012               	return		;funcret
  7098  001C3C                     __end_of_EPWM1_Initialize:
  7099                           	opt stack 0
  7100                           tosu	equ	0xFFF
  7101                           tosh	equ	0xFFE
  7102                           tosl	equ	0xFFD
  7103                           pclath	equ	0xFFA
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           intcon2	equ	0xFF1
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postdec1	equ	0xFE5
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           postdec2	equ	0xFDD
  7121                           fsr2h	equ	0xFDA
  7122                           fsr2l	equ	0xFD9
  7123                           status	equ	0xFD8
  7124                           
  7125 ;; *************** function _EPWM1_LoadDutyValue *****************
  7126 ;; Defined at:
  7127 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  dutyValue       2   37[COMRAM] unsigned int 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;Total ram usage:        4 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    4
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_main
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text37
  7156  001AF2                     __ptext37:
  7157                           	opt stack 0
  7158  001AF2                     _EPWM1_LoadDutyValue:
  7159                           	opt stack 26
  7160                           
  7161                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  7162                           
  7163                           ; BSR set to: 15
  7164                           ;incstack = 0
  7165  001AF2  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7166  001AF6  C027  F029         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7167  001AFA  90D8               	bcf	status,0,c
  7168  001AFC  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7169  001AFE  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7170  001B00  90D8               	bcf	status,0,c
  7171  001B02  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7172  001B04  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7173  001B06  5028               	movf	??_EPWM1_LoadDutyValue,w,c
  7174  001B08  6EBE               	movwf	4030,c	;volatile
  7175                           
  7176                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  7177  001B0A  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7178  001B0E  0E03               	movlw	3
  7179  001B10  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7180  001B12  3A28               	swapf	??_EPWM1_LoadDutyValue,f,c
  7181  001B14  0EF0               	movlw	240
  7182  001B16  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7183  001B18  50BD               	movf	4029,w,c	;volatile
  7184  001B1A  0BCF               	andlw	207
  7185  001B1C  1028               	iorwf	??_EPWM1_LoadDutyValue,w,c
  7186  001B1E  6EBD               	movwf	4029,c	;volatile
  7187  001B20  0012               	return		;funcret
  7188  001B22                     __end_of_EPWM1_LoadDutyValue:
  7189                           	opt stack 0
  7190                           tosu	equ	0xFFF
  7191                           tosh	equ	0xFFE
  7192                           tosl	equ	0xFFD
  7193                           pclath	equ	0xFFA
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           intcon2	equ	0xFF1
  7202                           postinc0	equ	0xFEE
  7203                           wreg	equ	0xFE8
  7204                           indf1	equ	0xFE7
  7205                           postdec1	equ	0xFE5
  7206                           fsr1h	equ	0xFE2
  7207                           fsr1l	equ	0xFE1
  7208                           indf2	equ	0xFDF
  7209                           postinc2	equ	0xFDE
  7210                           postdec2	equ	0xFDD
  7211                           fsr2h	equ	0xFDA
  7212                           fsr2l	equ	0xFD9
  7213                           status	equ	0xFD8
  7214                           
  7215 ;; *************** function _INTERRUPT_InterruptManager *****************
  7216 ;; Defined at:
  7217 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:       14 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    3
  7238 ;; This function calls:
  7239 ;;		_EUSART1_Receive_ISR
  7240 ;;		_EUSART1_Transmit_ISR
  7241 ;; This function is called by:
  7242 ;;		Interrupt level 2
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	intcode
  7247  000008                     __pintcode:
  7248                           	opt stack 0
  7249  000008                     _INTERRUPT_InterruptManager:
  7250                           	opt stack 22
  7251                           
  7252                           ;incstack = 0
  7253  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7254  00000A  CFFA F018          	movff	pclath,??_INTERRUPT_InterruptManager
  7255  00000E  CFFB F019          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7256  000012  CFE9 F01A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7257  000016  CFEA F01B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7258  00001A  CFE1 F01C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7259  00001E  CFE2 F01D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7260  000022  CFD9 F01E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7261  000026  CFDA F01F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7262  00002A  CFF3 F020          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7263  00002E  CFF4 F021          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7264  000032  CFF6 F022          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7265  000036  CFF7 F023          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7266  00003A  CFF8 F024          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7267  00003E  CFF5 F025          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7268                           
  7269                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7270  000042  B89D               	btfsc	3997,4,c	;volatile
  7271  000044  A89E               	btfss	3998,4,c	;volatile
  7272  000046  D003               	goto	i2l20
  7273                           
  7274                           ;interrupt_manager.c: 78: {
  7275                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  7276  000048  ECA8  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7277                           
  7278                           ;interrupt_manager.c: 80: }
  7279  00004C  D005               	goto	i2l24
  7280  00004E                     i2l20:
  7281                           
  7282                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7283  00004E  BA9D               	btfsc	3997,5,c	;volatile
  7284  000050  AA9E               	btfss	3998,5,c	;volatile
  7285  000052  D002               	goto	i2l24
  7286                           
  7287                           ;interrupt_manager.c: 82: {
  7288                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  7289  000054  ECE8  F007         	call	_EUSART1_Receive_ISR	;wreg free
  7290  000058                     i2l24:
  7291  000058  C025  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7292  00005C  C024  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7293  000060  C023  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7294  000064  C022  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7295  000068  C021  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7296  00006C  C020  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7297  000070  C01F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7298  000074  C01E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7299  000078  C01D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7300  00007C  C01C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7301  000080  C01B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7302  000084  C01A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7303  000088  C019  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7304  00008C  C018  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7305  000090  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7306  000092  0011               	retfie		f
  7307  000094                     __end_of_INTERRUPT_InterruptManager:
  7308                           	opt stack 0
  7309                           tosu	equ	0xFFF
  7310                           tosh	equ	0xFFE
  7311                           tosl	equ	0xFFD
  7312                           pclatu	equ	0xFFB
  7313                           pclath	equ	0xFFA
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon2	equ	0xFF1
  7322                           postinc0	equ	0xFEE
  7323                           fsr0h	equ	0xFEA
  7324                           fsr0l	equ	0xFE9
  7325                           wreg	equ	0xFE8
  7326                           indf1	equ	0xFE7
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           postinc2	equ	0xFDE
  7332                           postdec2	equ	0xFDD
  7333                           fsr2h	equ	0xFDA
  7334                           fsr2l	equ	0xFD9
  7335                           status	equ	0xFD8
  7336                           
  7337 ;; *************** function _EUSART1_Transmit_ISR *****************
  7338 ;; Defined at:
  7339 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;		None
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;Total ram usage:        0 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_INTERRUPT_InterruptManager
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text39
  7367  001B50                     __ptext39:
  7368                           	opt stack 0
  7369  001B50                     _EUSART1_Transmit_ISR:
  7370                           	opt stack 24
  7371                           
  7372                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7373                           
  7374                           ;incstack = 0
  7375  001B50  0E80               	movlw	128
  7376  001B52  6039               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7377  001B54  D012               	goto	i2l122
  7378                           
  7379                           ;eusart1.c: 180: {
  7380                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7381  001B56  5033               	movf	_eusart1TxTail,w,c
  7382  001B58  0D01               	mullw	1
  7383  001B5A  0E00               	movlw	low _eusart1TxBuffer
  7384  001B5C  24F3               	addwf	prodl,w,c
  7385  001B5E  6ED9               	movwf	fsr2l,c
  7386  001B60  0E01               	movlw	high _eusart1TxBuffer
  7387  001B62  20F4               	addwfc	prodh,w,c
  7388  001B64  6EDA               	movwf	fsr2h,c
  7389  001B66  50DF               	movf	indf2,w,c
  7390  001B68  6EAD               	movwf	4013,c	;volatile
  7391  001B6A  2A33               	incf	_eusart1TxTail,f,c
  7392                           
  7393                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7394  001B6C  0E7F               	movlw	127
  7395  001B6E  6433               	cpfsgt	_eusart1TxTail,c
  7396  001B70  D002               	goto	i2l2831
  7397                           
  7398                           ;eusart1.c: 183: {
  7399                           ;eusart1.c: 184: eusart1TxTail = 0;
  7400  001B72  0E00               	movlw	0
  7401  001B74  6E33               	movwf	_eusart1TxTail,c
  7402  001B76                     i2l2831:
  7403                           
  7404                           ;eusart1.c: 185: }
  7405                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  7406  001B76  2A39               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7407                           
  7408                           ;eusart1.c: 187: }
  7409  001B78  0012               	return	
  7410  001B7A                     i2l122:
  7411                           
  7412                           ;eusart1.c: 188: else
  7413                           ;eusart1.c: 189: {
  7414                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  7415  001B7A  989D               	bcf	3997,4,c	;volatile
  7416  001B7C  0012               	return	
  7417  001B7E                     __end_of_EUSART1_Transmit_ISR:
  7418                           	opt stack 0
  7419                           tosu	equ	0xFFF
  7420                           tosh	equ	0xFFE
  7421                           tosl	equ	0xFFD
  7422                           pclatu	equ	0xFFB
  7423                           pclath	equ	0xFFA
  7424                           tblptru	equ	0xFF8
  7425                           tblptrh	equ	0xFF7
  7426                           tblptrl	equ	0xFF6
  7427                           tablat	equ	0xFF5
  7428                           prodh	equ	0xFF4
  7429                           prodl	equ	0xFF3
  7430                           intcon	equ	0xFF2
  7431                           intcon2	equ	0xFF1
  7432                           postinc0	equ	0xFEE
  7433                           fsr0h	equ	0xFEA
  7434                           fsr0l	equ	0xFE9
  7435                           wreg	equ	0xFE8
  7436                           indf1	equ	0xFE7
  7437                           postdec1	equ	0xFE5
  7438                           fsr1h	equ	0xFE2
  7439                           fsr1l	equ	0xFE1
  7440                           indf2	equ	0xFDF
  7441                           postinc2	equ	0xFDE
  7442                           postdec2	equ	0xFDD
  7443                           fsr2h	equ	0xFDA
  7444                           fsr2l	equ	0xFD9
  7445                           status	equ	0xFD8
  7446                           
  7447 ;; *************** function _EUSART1_Receive_ISR *****************
  7448 ;; Defined at:
  7449 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;		None
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  state           2   21[COMRAM] int 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;Total ram usage:        3 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    2
  7470 ;; This function calls:
  7471 ;;		_EUSART1_Read
  7472 ;;		_strcmp
  7473 ;;		i2_strstr
  7474 ;; This function is called by:
  7475 ;;		_INTERRUPT_InterruptManager
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text40
  7480  000FD0                     __ptext40:
  7481                           	opt stack 0
  7482  000FD0                     _EUSART1_Receive_ISR:
  7483                           	opt stack 22
  7484                           
  7485                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  7486                           
  7487                           ;incstack = 0
  7488  000FD0  A2AB               	btfss	4011,1,c	;volatile
  7489  000FD2  D002               	goto	i2l2837
  7490                           
  7491                           ;eusart1.c: 197: {
  7492                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  7493  000FD4  98AB               	bcf	4011,4,c	;volatile
  7494                           
  7495                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  7496  000FD6  88AB               	bsf	4011,4,c	;volatile
  7497  000FD8                     i2l2837:
  7498                           
  7499                           ;eusart1.c: 202: }
  7500                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7501  000FD8  5030               	movf	_eusart1RxHead,w,c
  7502  000FDA  0D01               	mullw	1
  7503  000FDC  0E00               	movlw	low _eusart1RxBuffer
  7504  000FDE  24F3               	addwf	prodl,w,c
  7505  000FE0  6ED9               	movwf	fsr2l,c
  7506  000FE2  0E02               	movlw	high _eusart1RxBuffer
  7507  000FE4  20F4               	addwfc	prodh,w,c
  7508  000FE6  6EDA               	movwf	fsr2h,c
  7509  000FE8  CFAE FFDF          	movff	4014,indf2	;volatile
  7510  000FEC  2A30               	incf	_eusart1RxHead,f,c
  7511                           
  7512                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7513  000FEE  0E7F               	movlw	127
  7514  000FF0  6430               	cpfsgt	_eusart1RxHead,c
  7515  000FF2  D002               	goto	i2l2845
  7516                           
  7517                           ;eusart1.c: 209: {
  7518                           ;eusart1.c: 210: eusart1RxHead = 0;
  7519  000FF4  0E00               	movlw	0
  7520  000FF6  6E30               	movwf	_eusart1RxHead,c
  7521  000FF8                     i2l2845:
  7522                           
  7523                           ;eusart1.c: 211: }
  7524                           ;eusart1.c: 212: eusart1RxCount++;
  7525  000FF8  2A2F               	incf	_eusart1RxCount,f,c	;volatile
  7526                           
  7527                           ;eusart1.c: 214: int state = 0;
  7528  000FFA  0E00               	movlw	0
  7529  000FFC  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7530  000FFE  0E00               	movlw	0
  7531  001000  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7532                           
  7533                           ;eusart1.c: 216: if(ready)return;
  7534  001002  5034               	movf	_ready,w,c	;volatile
  7535  001004  A4D8               	btfss	status,2,c
  7536  001006  0012               	return	
  7537  001008  D01C               	goto	i2l2861
  7538  00100A                     i2l2853:
  7539                           
  7540                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7541  00100A  EC5F  F00D         	call	_EUSART1_Read	;wreg free
  7542  00100E  6E15               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7543  001010  0E80               	movlw	low _line
  7544  001012  242D               	addwf	_index,w,c
  7545  001014  6ED9               	movwf	fsr2l,c
  7546  001016  0E01               	movlw	high _line
  7547  001018  202E               	addwfc	_index+1,w,c
  7548  00101A  6EDA               	movwf	fsr2h,c
  7549  00101C  C015  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7550                           
  7551                           ;eusart1.c: 220: if (line[index] == '\n'){
  7552  001020  0E80               	movlw	low _line
  7553  001022  242D               	addwf	_index,w,c
  7554  001024  6ED9               	movwf	fsr2l,c
  7555  001026  0E01               	movlw	high _line
  7556  001028  202E               	addwfc	_index+1,w,c
  7557  00102A  6EDA               	movwf	fsr2h,c
  7558  00102C  0E0A               	movlw	10
  7559  00102E  18DE               	xorwf	postinc2,w,c
  7560  001030  A4D8               	btfss	status,2,c
  7561  001032  D005               	goto	i2l2859
  7562                           
  7563                           ;eusart1.c: 221: state=1;
  7564  001034  0E00               	movlw	0
  7565  001036  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7566  001038  0E01               	movlw	1
  7567  00103A  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7568                           
  7569                           ;eusart1.c: 222: break;
  7570  00103C  D005               	goto	i2l2863
  7571  00103E                     i2l2859:
  7572                           
  7573                           ;eusart1.c: 223: }
  7574                           ;eusart1.c: 224: index++;
  7575  00103E  4A2D               	infsnz	_index,f,c
  7576  001040  2A2E               	incf	_index+1,f,c
  7577  001042                     i2l2861:
  7578  001042  502F               	movf	_eusart1RxCount,w,c	;volatile
  7579  001044  A4D8               	btfss	status,2,c
  7580  001046  D7E1               	goto	i2l2853
  7581  001048                     i2l2863:
  7582                           
  7583                           ;eusart1.c: 225: }
  7584                           ;eusart1.c: 227: if(state==1){
  7585  001048  0416               	decf	EUSART1_Receive_ISR@state,w,c
  7586  00104A  1017               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7587  00104C  A4D8               	btfss	status,2,c
  7588  00104E  0012               	return	
  7589                           
  7590                           ;eusart1.c: 228: line[--index] = '\0';
  7591  001050  062D               	decf	_index,f,c
  7592  001052  A0D8               	btfss	status,0,c
  7593  001054  062E               	decf	_index+1,f,c
  7594  001056  0E80               	movlw	low _line
  7595  001058  242D               	addwf	_index,w,c
  7596  00105A  6ED9               	movwf	fsr2l,c
  7597  00105C  0E01               	movlw	high _line
  7598  00105E  202E               	addwfc	_index+1,w,c
  7599  001060  6EDA               	movwf	fsr2h,c
  7600  001062  0E00               	movlw	0
  7601  001064  6EDF               	movwf	indf2,c
  7602                           
  7603                           ;eusart1.c: 229: uartState=0;
  7604  001066  0E00               	movlw	0
  7605  001068  0100               	movlb	0	; () banked
  7606  00106A  6F99               	movwf	_uartState& (0+255),b	;volatile
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7610  00106C  0EDF               	movlw	low STR_1
  7611  00106E  6E01               	movwf	strcmp@s1,c
  7612  001070  0EFF               	movlw	high STR_1
  7613  001072  6E02               	movwf	strcmp@s1+1,c
  7614  001074  0E80               	movlw	low _line
  7615  001076  6E03               	movwf	strcmp@s2,c
  7616  001078  0E01               	movlw	high _line
  7617  00107A  6E04               	movwf	strcmp@s2+1,c
  7618  00107C  ECC7  F00A         	call	_strcmp	;wreg free
  7619  001080  5001               	movf	?_strcmp,w,c
  7620  001082  1002               	iorwf	?_strcmp+1,w,c
  7621  001084  A4D8               	btfss	status,2,c
  7622  001086  D002               	goto	i2l2873
  7623                           
  7624                           ;eusart1.c: 231: uartState=5;
  7625  001088  0E05               	movlw	5
  7626  00108A  D02B               	goto	L3
  7627  00108C                     i2l2873:
  7628  00108C  0E80               	movlw	low _line
  7629  00108E  6E10               	movwf	i2strstr@s1,c
  7630  001090  0E01               	movlw	high _line
  7631  001092  6E11               	movwf	i2strstr@s1+1,c
  7632  001094  0EE9               	movlw	low STR_2
  7633  001096  6E12               	movwf	i2strstr@s2,c
  7634  001098  0EFF               	movlw	high STR_2
  7635  00109A  6E13               	movwf	i2strstr@s2+1,c
  7636  00109C  EC78  F00A         	call	i2_strstr	;wreg free
  7637  0010A0  5010               	movf	?i2_strstr,w,c
  7638  0010A2  1011               	iorwf	?i2_strstr+1,w,c
  7639  0010A4  B4D8               	btfsc	status,2,c
  7640  0010A6  D00E               	goto	i2l2883
  7641                           
  7642                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7643  0010A8  0E34               	movlw	52
  7644  0010AA  0101               	movlb	1	; () banked
  7645  0010AC  198A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7646  0010AE  A4D8               	btfss	status,2,c
  7647  0010B0  D007               	goto	i2l2881
  7648                           
  7649                           ; BSR set to: 1
  7650  0010B2  0E33               	movlw	51
  7651  0010B4  0101               	movlb	1	; () banked
  7652  0010B6  198B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7653  0010B8  A4D8               	btfss	status,2,c
  7654  0010BA  D002               	goto	i2l2881
  7655                           
  7656                           ; BSR set to: 1
  7657                           ;eusart1.c: 234: uartState=4;
  7658  0010BC  0E04               	movlw	4
  7659  0010BE  D011               	goto	L3
  7660  0010C0                     i2l2881:
  7661                           
  7662                           ;eusart1.c: 236: uartState=3;
  7663  0010C0  0E03               	movlw	3
  7664  0010C2  D00F               	goto	L3
  7665  0010C4                     i2l2883:
  7666  0010C4  0E80               	movlw	low _line
  7667  0010C6  6E01               	movwf	strcmp@s1,c
  7668  0010C8  0E01               	movlw	high _line
  7669  0010CA  6E02               	movwf	strcmp@s1+1,c
  7670  0010CC  0ED3               	movlw	low STR_3
  7671  0010CE  6E03               	movwf	strcmp@s2,c
  7672  0010D0  0EFF               	movlw	high STR_3
  7673  0010D2  6E04               	movwf	strcmp@s2+1,c
  7674  0010D4  ECC7  F00A         	call	_strcmp	;wreg free
  7675  0010D8  5001               	movf	?_strcmp,w,c
  7676  0010DA  1002               	iorwf	?_strcmp+1,w,c
  7677  0010DC  A4D8               	btfss	status,2,c
  7678  0010DE  D004               	goto	i2l2887
  7679  0010E0  D011               	goto	i2l2889
  7680  0010E2                     L3:
  7681  0010E2  0100               	movlb	0	; () banked
  7682  0010E4  6F99               	movwf	_uartState& (0+255),b	;volatile
  7683                           
  7684                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7685  0010E6  D010               	goto	i2l138
  7686  0010E8                     i2l2887:
  7687  0010E8  0E80               	movlw	low _line
  7688  0010EA  6E01               	movwf	strcmp@s1,c
  7689  0010EC  0E01               	movlw	high _line
  7690  0010EE  6E02               	movwf	strcmp@s1+1,c
  7691  0010F0  0EDC               	movlw	low (STR_3+9)
  7692  0010F2  6E03               	movwf	strcmp@s2,c
  7693  0010F4  0EFF               	movlw	high (STR_3+9)
  7694  0010F6  6E04               	movwf	strcmp@s2+1,c
  7695  0010F8  ECC7  F00A         	call	_strcmp	;wreg free
  7696  0010FC  5001               	movf	?_strcmp,w,c
  7697  0010FE  1002               	iorwf	?_strcmp+1,w,c
  7698  001100  A4D8               	btfss	status,2,c
  7699  001102  D002               	goto	i2l138
  7700  001104                     i2l2889:
  7701                           
  7702                           ;eusart1.c: 241: uartState=1;
  7703  001104  0E01               	movlw	1
  7704  001106  D7ED               	goto	L3
  7705  001108                     i2l138:
  7706                           
  7707                           ;eusart1.c: 242: }
  7708                           ;eusart1.c: 243: index=0;
  7709  001108  0E00               	movlw	0
  7710  00110A  6E2E               	movwf	_index+1,c
  7711  00110C  0E00               	movlw	0
  7712  00110E  6E2D               	movwf	_index,c
  7713                           
  7714                           ;eusart1.c: 244: ready=1;
  7715  001110  0E01               	movlw	1
  7716  001112  6E34               	movwf	_ready,c	;volatile
  7717  001114  0012               	return	
  7718  001116                     __end_of_EUSART1_Receive_ISR:
  7719                           	opt stack 0
  7720                           tosu	equ	0xFFF
  7721                           tosh	equ	0xFFE
  7722                           tosl	equ	0xFFD
  7723                           pclatu	equ	0xFFB
  7724                           pclath	equ	0xFFA
  7725                           tblptru	equ	0xFF8
  7726                           tblptrh	equ	0xFF7
  7727                           tblptrl	equ	0xFF6
  7728                           tablat	equ	0xFF5
  7729                           prodh	equ	0xFF4
  7730                           prodl	equ	0xFF3
  7731                           intcon	equ	0xFF2
  7732                           intcon2	equ	0xFF1
  7733                           postinc0	equ	0xFEE
  7734                           fsr0h	equ	0xFEA
  7735                           fsr0l	equ	0xFE9
  7736                           wreg	equ	0xFE8
  7737                           indf1	equ	0xFE7
  7738                           postdec1	equ	0xFE5
  7739                           fsr1h	equ	0xFE2
  7740                           fsr1l	equ	0xFE1
  7741                           indf2	equ	0xFDF
  7742                           postinc2	equ	0xFDE
  7743                           postdec2	equ	0xFDD
  7744                           fsr2h	equ	0xFDA
  7745                           fsr2l	equ	0xFD9
  7746                           status	equ	0xFD8
  7747                           
  7748 ;; *************** function i2_strstr *****************
  7749 ;; Defined at:
  7750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7753 ;;		 -> NULL(0), line(128), 
  7754 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7755 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  2   15[COMRAM] PTR unsigned char 
  7760 ;; Registers used:
  7761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;Total ram usage:        5 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    1
  7774 ;; This function calls:
  7775 ;;		i2_strchr
  7776 ;;		i2_strlen
  7777 ;;		i2_strncmp
  7778 ;; This function is called by:
  7779 ;;		_EUSART1_Receive_ISR
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text41
  7784  0014F0                     __ptext41:
  7785                           	opt stack 0
  7786  0014F0                     i2_strstr:
  7787                           	opt stack 22
  7788                           
  7789                           ;incstack = 0
  7790  0014F0  D03E               	goto	i2l2813
  7791  0014F2                     i2l2805:
  7792  0014F2  C010  F007         	movff	i2strstr@s1,i2strncmp@s1
  7793  0014F6  C011  F008         	movff	i2strstr@s1+1,i2strncmp@s1+1
  7794  0014FA  C012  F009         	movff	i2strstr@s2,i2strncmp@s2
  7795  0014FE  C013  F00A         	movff	i2strstr@s2+1,i2strncmp@s2+1
  7796  001502  C012  F001         	movff	i2strstr@s2,i2strlen@s
  7797  001506  C013  F002         	movff	i2strstr@s2+1,i2strlen@s+1
  7798  00150A  ECFB  F00B         	call	i2_strlen	;wreg free
  7799  00150E  C001  F00B         	movff	?i2_strlen,i2strncmp@len
  7800  001512  C002  F00C         	movff	?i2_strlen+1,i2strncmp@len+1
  7801  001516  ECD0  F009         	call	i2_strncmp	;wreg free
  7802  00151A  5007               	movf	?i2_strncmp,w,c
  7803  00151C  1008               	iorwf	?i2_strncmp+1,w,c
  7804  00151E  A4D8               	btfss	status,2,c
  7805  001520  D005               	goto	i2l2811
  7806  001522  C010  F010         	movff	i2strstr@s1,?i2_strstr
  7807  001526  C011  F011         	movff	i2strstr@s1+1,?i2_strstr+1
  7808  00152A  0012               	return	
  7809  00152C                     i2l2811:
  7810  00152C  0E01               	movlw	1
  7811  00152E  2410               	addwf	i2strstr@s1,w,c
  7812  001530  6E01               	movwf	i2strchr@ptr,c
  7813  001532  0E00               	movlw	0
  7814  001534  2011               	addwfc	i2strstr@s1+1,w,c
  7815  001536  6E02               	movwf	i2strchr@ptr+1,c
  7816  001538  C012  FFF6         	movff	i2strstr@s2,tblptrl
  7817  00153C  C013  FFF7         	movff	i2strstr@s2+1,tblptrh
  7818  001540  0E00               	movlw	low (__mediumconst shr (0+16))
  7819  001542  6EF8               	movwf	tblptru,c
  7820  001544  0E0F               	movlw	(high __ramtop+-1)
  7821  001546  64F7               	cpfsgt	tblptrh,c
  7822  001548  D003               	bra	i2u278_47
  7823  00154A  0008               	tblrd		*
  7824  00154C  50F5               	movf	tablat,w,c
  7825  00154E  D005               	bra	i2u278_40
  7826  001550                     i2u278_47:
  7827  001550  CFF6 FFE1          	movff	tblptrl,fsr1l
  7828  001554  CFF7 FFE2          	movff	tblptrh,fsr1h
  7829  001558  50E7               	movf	indf1,w,c
  7830  00155A                     i2u278_40:
  7831  00155A  6E14               	movwf	??i2_strstr& (0+255),c
  7832  00155C  5014               	movf	??i2_strstr,w,c
  7833  00155E  6E03               	movwf	i2strchr@chr,c
  7834  001560  6A04               	clrf	i2strchr@chr+1,c
  7835  001562  ECF6  F00C         	call	i2_strchr	;wreg free
  7836  001566  C001  F010         	movff	?i2_strchr,i2strstr@s1
  7837  00156A  C002  F011         	movff	?i2_strchr+1,i2strstr@s1+1
  7838  00156E                     i2l2813:
  7839  00156E  5010               	movf	i2strstr@s1,w,c
  7840  001570  1011               	iorwf	i2strstr@s1+1,w,c
  7841  001572  B4D8               	btfsc	status,2,c
  7842  001574  D007               	goto	i2l2817
  7843  001576  C010  FFD9         	movff	i2strstr@s1,fsr2l
  7844  00157A  C011  FFDA         	movff	i2strstr@s1+1,fsr2h
  7845  00157E  50DF               	movf	indf2,w,c
  7846  001580  A4D8               	btfss	status,2,c
  7847  001582  D7B7               	goto	i2l2805
  7848  001584                     i2l2817:
  7849  001584  0E00               	movlw	0
  7850  001586  6E10               	movwf	?i2_strstr,c
  7851  001588  0E00               	movlw	0
  7852  00158A  6E11               	movwf	?i2_strstr+1,c
  7853  00158C  0012               	return	
  7854  00158E                     __end_ofi2_strstr:
  7855                           	opt stack 0
  7856                           tosu	equ	0xFFF
  7857                           tosh	equ	0xFFE
  7858                           tosl	equ	0xFFD
  7859                           pclatu	equ	0xFFB
  7860                           pclath	equ	0xFFA
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           intcon2	equ	0xFF1
  7869                           postinc0	equ	0xFEE
  7870                           fsr0h	equ	0xFEA
  7871                           fsr0l	equ	0xFE9
  7872                           wreg	equ	0xFE8
  7873                           indf1	equ	0xFE7
  7874                           postdec1	equ	0xFE5
  7875                           fsr1h	equ	0xFE2
  7876                           fsr1l	equ	0xFE1
  7877                           indf2	equ	0xFDF
  7878                           postinc2	equ	0xFDE
  7879                           postdec2	equ	0xFDD
  7880                           fsr2h	equ	0xFDA
  7881                           fsr2l	equ	0xFD9
  7882                           status	equ	0xFD8
  7883                           
  7884 ;; *************** function i2_strncmp *****************
  7885 ;; Defined at:
  7886 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7889 ;;		 -> NULL(0), line(128), 
  7890 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7891 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7892 ;;  len             2   10[COMRAM] unsigned int 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  2    6[COMRAM] int 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;Total ram usage:        9 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		i2_strstr
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text42
  7918  0013A0                     __ptext42:
  7919                           	opt stack 0
  7920  0013A0                     i2_strncmp:
  7921                           	opt stack 22
  7922                           
  7923                           ;incstack = 0
  7924  0013A0  D049               	goto	i2l2615
  7925  0013A2                     i2l2605:
  7926  0013A2  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7927  0013A6  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7928  0013AA  50DF               	movf	indf2,w,c
  7929  0013AC  B4D8               	btfsc	status,2,c
  7930  0013AE  D01A               	goto	i2l2609
  7931  0013B0  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7932  0013B4  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7933  0013B8  50DF               	movf	indf2,w,c
  7934  0013BA  6E0D               	movwf	??i2_strncmp& (0+255),c
  7935  0013BC  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7936  0013C0  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7937  0013C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7938  0013C6  6EF8               	movwf	tblptru,c
  7939  0013C8  0E0F               	movlw	(high __ramtop+-1)
  7940  0013CA  64F7               	cpfsgt	tblptrh,c
  7941  0013CC  D003               	bra	i2u245_47
  7942  0013CE  0008               	tblrd		*
  7943  0013D0  50F5               	movf	tablat,w,c
  7944  0013D2  D005               	bra	i2u245_40
  7945  0013D4                     i2u245_47:
  7946  0013D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7947  0013D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7948  0013DC  50E7               	movf	indf1,w,c
  7949  0013DE                     i2u245_40:
  7950  0013DE  180D               	xorwf	??i2_strncmp,w,c
  7951  0013E0  B4D8               	btfsc	status,2,c
  7952  0013E2  D024               	goto	i2l2613
  7953  0013E4                     i2l2609:
  7954  0013E4  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7955  0013E8  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7956  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
  7957  0013EE  6EF8               	movwf	tblptru,c
  7958  0013F0  0E0F               	movlw	(high __ramtop+-1)
  7959  0013F2  64F7               	cpfsgt	tblptrh,c
  7960  0013F4  D003               	bra	i2u247_47
  7961  0013F6  0008               	tblrd		*
  7962  0013F8  50F5               	movf	tablat,w,c
  7963  0013FA  D005               	bra	i2u247_40
  7964  0013FC                     i2u247_47:
  7965  0013FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7966  001400  CFF7 FFE2          	movff	tblptrh,fsr1h
  7967  001404  50E7               	movf	indf1,w,c
  7968  001406                     i2u247_40:
  7969  001406  6E0D               	movwf	??i2_strncmp& (0+255),c
  7970  001408  6A0E               	clrf	(??i2_strncmp+1)& (0+255),c
  7971  00140A  1E0D               	comf	??i2_strncmp,f,c
  7972  00140C  1E0E               	comf	??i2_strncmp+1,f,c
  7973  00140E  4A0D               	infsnz	??i2_strncmp,f,c
  7974  001410  2A0E               	incf	??i2_strncmp+1,f,c
  7975  001412  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7976  001416  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7977  00141A  50DF               	movf	indf2,w,c
  7978  00141C  6E0F               	movwf	(??i2_strncmp+2)& (0+255),c
  7979  00141E  500F               	movf	??i2_strncmp+2,w,c
  7980  001420  240D               	addwf	??i2_strncmp,w,c
  7981  001422  6E07               	movwf	?i2_strncmp,c
  7982  001424  0E00               	movlw	0
  7983  001426  200E               	addwfc	??i2_strncmp+1,w,c
  7984  001428  6E08               	movwf	?i2_strncmp+1,c
  7985  00142A  0012               	return	
  7986  00142C                     i2l2613:
  7987  00142C  4A07               	infsnz	i2strncmp@s1,f,c
  7988  00142E  2A08               	incf	i2strncmp@s1+1,f,c
  7989  001430  4A09               	infsnz	i2strncmp@s2,f,c
  7990  001432  2A0A               	incf	i2strncmp@s2+1,f,c
  7991  001434                     i2l2615:
  7992  001434  060B               	decf	i2strncmp@len,f,c
  7993  001436  A0D8               	btfss	status,0,c
  7994  001438  060C               	decf	i2strncmp@len+1,f,c
  7995  00143A  280B               	incf	i2strncmp@len,w,c
  7996  00143C  E1B2               	bnz	i2l2605
  7997  00143E  280C               	incf	i2strncmp@len+1,w,c
  7998  001440  A4D8               	btfss	status,2,c
  7999  001442  D7AF               	goto	i2l2605
  8000  001444  0E00               	movlw	0
  8001  001446  6E08               	movwf	?i2_strncmp+1,c
  8002  001448  0E00               	movlw	0
  8003  00144A  6E07               	movwf	?i2_strncmp,c
  8004  00144C  0012               	return	
  8005  00144E                     __end_ofi2_strncmp:
  8006                           	opt stack 0
  8007                           tosu	equ	0xFFF
  8008                           tosh	equ	0xFFE
  8009                           tosl	equ	0xFFD
  8010                           pclatu	equ	0xFFB
  8011                           pclath	equ	0xFFA
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           prodh	equ	0xFF4
  8017                           prodl	equ	0xFF3
  8018                           intcon	equ	0xFF2
  8019                           intcon2	equ	0xFF1
  8020                           postinc0	equ	0xFEE
  8021                           fsr0h	equ	0xFEA
  8022                           fsr0l	equ	0xFE9
  8023                           wreg	equ	0xFE8
  8024                           indf1	equ	0xFE7
  8025                           postdec1	equ	0xFE5
  8026                           fsr1h	equ	0xFE2
  8027                           fsr1l	equ	0xFE1
  8028                           indf2	equ	0xFDF
  8029                           postinc2	equ	0xFDE
  8030                           postdec2	equ	0xFDD
  8031                           fsr2h	equ	0xFDA
  8032                           fsr2l	equ	0xFD9
  8033                           status	equ	0xFD8
  8034                           
  8035 ;; *************** function i2_strlen *****************
  8036 ;; Defined at:
  8037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8040 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  8043 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  2    0[COMRAM] unsigned int 
  8046 ;; Registers used:
  8047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;Total ram usage:        6 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		i2_strstr
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text43
  8067  0017F6                     __ptext43:
  8068                           	opt stack 0
  8069  0017F6                     i2_strlen:
  8070                           	opt stack 22
  8071                           
  8072                           ;incstack = 0
  8073  0017F6  C001  F005         	movff	i2strlen@s,i2strlen@cp
  8074  0017FA  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
  8075  0017FE  D002               	goto	i2l2585
  8076  001800                     i2l2583:
  8077  001800  4A05               	infsnz	i2strlen@cp,f,c
  8078  001802  2A06               	incf	i2strlen@cp+1,f,c
  8079  001804                     i2l2585:
  8080  001804  C005  FFF6         	movff	i2strlen@cp,tblptrl
  8081  001808  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
  8082  00180C  0E00               	movlw	low (__mediumconst shr (0+16))
  8083  00180E  6EF8               	movwf	tblptru,c
  8084  001810  0E0F               	movlw	(high __ramtop+-1)
  8085  001812  64F7               	cpfsgt	tblptrh,c
  8086  001814  D003               	bra	i2u240_47
  8087  001816  0008               	tblrd		*
  8088  001818  50F5               	movf	tablat,w,c
  8089  00181A  D005               	bra	i2u240_40
  8090  00181C                     i2u240_47:
  8091  00181C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8092  001820  CFF7 FFE2          	movff	tblptrh,fsr1h
  8093  001824  50E7               	movf	indf1,w,c
  8094  001826                     i2u240_40:
  8095  001826  0900               	iorlw	0
  8096  001828  A4D8               	btfss	status,2,c
  8097  00182A  D7EA               	goto	i2l2583
  8098  00182C  C001  F003         	movff	i2strlen@s,??i2_strlen
  8099  001830  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
  8100  001834  1E03               	comf	??i2_strlen,f,c
  8101  001836  1E04               	comf	??i2_strlen+1,f,c
  8102  001838  4A03               	infsnz	??i2_strlen,f,c
  8103  00183A  2A04               	incf	??i2_strlen+1,f,c
  8104  00183C  5005               	movf	i2strlen@cp,w,c
  8105  00183E  2403               	addwf	??i2_strlen,w,c
  8106  001840  6E01               	movwf	?i2_strlen,c
  8107  001842  5006               	movf	i2strlen@cp+1,w,c
  8108  001844  2004               	addwfc	??i2_strlen+1,w,c
  8109  001846  6E02               	movwf	?i2_strlen+1,c
  8110  001848  0012               	return	
  8111  00184A                     __end_ofi2_strlen:
  8112                           	opt stack 0
  8113                           tosu	equ	0xFFF
  8114                           tosh	equ	0xFFE
  8115                           tosl	equ	0xFFD
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           intcon2	equ	0xFF1
  8126                           postinc0	equ	0xFEE
  8127                           fsr0h	equ	0xFEA
  8128                           fsr0l	equ	0xFE9
  8129                           wreg	equ	0xFE8
  8130                           indf1	equ	0xFE7
  8131                           postdec1	equ	0xFE5
  8132                           fsr1h	equ	0xFE2
  8133                           fsr1l	equ	0xFE1
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           fsr2h	equ	0xFDA
  8138                           fsr2l	equ	0xFD9
  8139                           status	equ	0xFD8
  8140                           
  8141 ;; *************** function i2_strchr *****************
  8142 ;; Defined at:
  8143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  8146 ;;		 -> NULL(0), line(128), 
  8147 ;;  chr             2    2[COMRAM] int 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  2    0[COMRAM] PTR unsigned char 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;Total ram usage:        5 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		i2_strstr
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text44
  8173  0019EC                     __ptext44:
  8174                           	opt stack 0
  8175  0019EC                     i2_strchr:
  8176                           	opt stack 22
  8177  0019EC  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8178  0019F0  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8179  0019F4  5003               	movf	i2strchr@chr,w,c
  8180  0019F6  18DE               	xorwf	postinc2,w,c
  8181  0019F8  A4D8               	btfss	status,2,c
  8182  0019FA  D005               	goto	i2l2597
  8183  0019FC  C001  F001         	movff	i2strchr@ptr,?i2_strchr
  8184  001A00  C002  F002         	movff	i2strchr@ptr+1,?i2_strchr+1
  8185  001A04  0012               	return	
  8186  001A06                     i2l2597:
  8187  001A06  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8188  001A0A  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8189  001A0E  4A01               	infsnz	i2strchr@ptr,f,c
  8190  001A10  2A02               	incf	i2strchr@ptr+1,f,c
  8191  001A12  50DF               	movf	indf2,w,c
  8192  001A14  A4D8               	btfss	status,2,c
  8193  001A16  D7EA               	goto	i2l2591
  8194  001A18  0E00               	movlw	0
  8195  001A1A  6E01               	movwf	?i2_strchr,c
  8196  001A1C  0E00               	movlw	0
  8197  001A1E  6E02               	movwf	?i2_strchr+1,c
  8198  001A20  0012               	return	
  8199  001A22                     __end_ofi2_strchr:
  8200                           	opt stack 0
  8201                           tosu	equ	0xFFF
  8202                           tosh	equ	0xFFE
  8203                           tosl	equ	0xFFD
  8204                           pclatu	equ	0xFFB
  8205                           pclath	equ	0xFFA
  8206                           tblptru	equ	0xFF8
  8207                           tblptrh	equ	0xFF7
  8208                           tblptrl	equ	0xFF6
  8209                           tablat	equ	0xFF5
  8210                           prodh	equ	0xFF4
  8211                           prodl	equ	0xFF3
  8212                           intcon	equ	0xFF2
  8213                           intcon2	equ	0xFF1
  8214                           postinc0	equ	0xFEE
  8215                           fsr0h	equ	0xFEA
  8216                           fsr0l	equ	0xFE9
  8217                           wreg	equ	0xFE8
  8218                           indf1	equ	0xFE7
  8219                           postdec1	equ	0xFE5
  8220                           fsr1h	equ	0xFE2
  8221                           fsr1l	equ	0xFE1
  8222                           indf2	equ	0xFDF
  8223                           postinc2	equ	0xFDE
  8224                           postdec2	equ	0xFDD
  8225                           fsr2h	equ	0xFDA
  8226                           fsr2l	equ	0xFD9
  8227                           status	equ	0xFD8
  8228                           
  8229 ;; *************** function _strcmp *****************
  8230 ;; Defined at:
  8231 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8234 ;;		 -> STR_1(10), line(128), 
  8235 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8236 ;;		 -> STR_4(3), STR_3(12), line(128), 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  r               1    5[COMRAM] char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  2    0[COMRAM] int 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;Total ram usage:        6 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_EUSART1_Receive_ISR
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text45
  8262  00158E                     __ptext45:
  8263                           	opt stack 0
  8264  00158E                     _strcmp:
  8265                           	opt stack 23
  8266                           
  8267                           ;incstack = 0
  8268  00158E  D004               	goto	i2l2671
  8269  001590                     i2l2669:
  8270  001590  4A01               	infsnz	strcmp@s1,f,c
  8271  001592  2A02               	incf	strcmp@s1+1,f,c
  8272  001594  4A03               	infsnz	strcmp@s2,f,c
  8273  001596  2A04               	incf	strcmp@s2+1,f,c
  8274  001598                     i2l2671:
  8275  001598  C001  FFF6         	movff	strcmp@s1,tblptrl
  8276  00159C  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8277  0015A0  0E00               	movlw	low (__mediumconst shr (0+16))
  8278  0015A2  6EF8               	movwf	tblptru,c
  8279  0015A4  0E0F               	movlw	(high __ramtop+-1)
  8280  0015A6  64F7               	cpfsgt	tblptrh,c
  8281  0015A8  D003               	bra	i2u251_47
  8282  0015AA  0008               	tblrd		*
  8283  0015AC  50F5               	movf	tablat,w,c
  8284  0015AE  D005               	bra	i2u251_40
  8285  0015B0                     i2u251_47:
  8286  0015B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8287  0015B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8288  0015B8  50E7               	movf	indf1,w,c
  8289  0015BA                     i2u251_40:
  8290  0015BA  6E05               	movwf	??_strcmp& (0+255),c
  8291  0015BC  C003  FFF6         	movff	strcmp@s2,tblptrl
  8292  0015C0  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8293  0015C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8294  0015C6  6EF8               	movwf	tblptru,c
  8295  0015C8  0E0F               	movlw	(high __ramtop+-1)
  8296  0015CA  64F7               	cpfsgt	tblptrh,c
  8297  0015CC  D003               	bra	i2u252_47
  8298  0015CE  0008               	tblrd		*
  8299  0015D0  50F5               	movf	tablat,w,c
  8300  0015D2  D005               	bra	i2u252_40
  8301  0015D4                     i2u252_47:
  8302  0015D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8303  0015D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8304  0015DC  50E7               	movf	indf1,w,c
  8305  0015DE                     i2u252_40:
  8306  0015DE  0800               	sublw	0
  8307  0015E0  2405               	addwf	??_strcmp,w,c
  8308  0015E2  6E06               	movwf	strcmp@r,c
  8309  0015E4  5006               	movf	strcmp@r,w,c
  8310  0015E6  A4D8               	btfss	status,2,c
  8311  0015E8  D014               	goto	i2l2675
  8312  0015EA  C001  FFF6         	movff	strcmp@s1,tblptrl
  8313  0015EE  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8314  0015F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8315  0015F4  6EF8               	movwf	tblptru,c
  8316  0015F6  0E0F               	movlw	(high __ramtop+-1)
  8317  0015F8  64F7               	cpfsgt	tblptrh,c
  8318  0015FA  D003               	bra	i2u254_47
  8319  0015FC  0008               	tblrd		*
  8320  0015FE  50F5               	movf	tablat,w,c
  8321  001600  D005               	bra	i2u254_40
  8322  001602                     i2u254_47:
  8323  001602  CFF6 FFE1          	movff	tblptrl,fsr1l
  8324  001606  CFF7 FFE2          	movff	tblptrh,fsr1h
  8325  00160A  50E7               	movf	indf1,w,c
  8326  00160C                     i2u254_40:
  8327  00160C  0900               	iorlw	0
  8328  00160E  A4D8               	btfss	status,2,c
  8329  001610  D7BF               	goto	i2l2669
  8330  001612                     i2l2675:
  8331  001612  5006               	movf	strcmp@r,w,c
  8332  001614  6E01               	movwf	?_strcmp,c
  8333  001616  6A02               	clrf	?_strcmp+1,c
  8334  001618  BE01               	btfsc	?_strcmp,7,c
  8335  00161A  0602               	decf	?_strcmp+1,f,c
  8336  00161C  0012               	return	
  8337  00161E                     __end_of_strcmp:
  8338                           	opt stack 0
  8339                           tosu	equ	0xFFF
  8340                           tosh	equ	0xFFE
  8341                           tosl	equ	0xFFD
  8342                           pclatu	equ	0xFFB
  8343                           pclath	equ	0xFFA
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           intcon2	equ	0xFF1
  8352                           postinc0	equ	0xFEE
  8353                           fsr0h	equ	0xFEA
  8354                           fsr0l	equ	0xFE9
  8355                           wreg	equ	0xFE8
  8356                           indf1	equ	0xFE7
  8357                           postdec1	equ	0xFE5
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           indf2	equ	0xFDF
  8361                           postinc2	equ	0xFDE
  8362                           postdec2	equ	0xFDD
  8363                           fsr2h	equ	0xFDA
  8364                           fsr2l	equ	0xFD9
  8365                           status	equ	0xFD8
  8366                           
  8367 ;; *************** function _EUSART1_Read *****************
  8368 ;; Defined at:
  8369 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  readValue       1    0[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      unsigned char 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;Total ram usage:        1 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_EUSART1_Receive_ISR
  8393 ;;		_getch
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text46
  8398  001ABE                     __ptext46:
  8399                           	opt stack 0
  8400  001ABE                     _EUSART1_Read:
  8401                           	opt stack 23
  8402                           
  8403                           ;eusart1.c: 123: uint8_t readValue = 0;
  8404                           
  8405                           ;incstack = 0
  8406  001ABE  0E00               	movlw	0
  8407  001AC0  6E01               	movwf	EUSART1_Read@readValue,c
  8408  001AC2                     i2l2649:
  8409  001AC2  502F               	movf	_eusart1RxCount,w,c	;volatile
  8410  001AC4  B4D8               	btfsc	status,2,c
  8411  001AC6  D7FD               	goto	i2l2649
  8412                           
  8413                           ;eusart1.c: 127: }
  8414                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  8415  001AC8  9A9D               	bcf	3997,5,c	;volatile
  8416                           
  8417                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  8418  001ACA  5031               	movf	_eusart1RxTail,w,c
  8419  001ACC  0D01               	mullw	1
  8420  001ACE  0E00               	movlw	low _eusart1RxBuffer
  8421  001AD0  24F3               	addwf	prodl,w,c
  8422  001AD2  6ED9               	movwf	fsr2l,c
  8423  001AD4  0E02               	movlw	high _eusart1RxBuffer
  8424  001AD6  20F4               	addwfc	prodh,w,c
  8425  001AD8  6EDA               	movwf	fsr2h,c
  8426  001ADA  50DF               	movf	indf2,w,c
  8427  001ADC  6E01               	movwf	EUSART1_Read@readValue,c
  8428  001ADE  2A31               	incf	_eusart1RxTail,f,c
  8429                           
  8430                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8431  001AE0  0E7F               	movlw	127
  8432  001AE2  6431               	cpfsgt	_eusart1RxTail,c
  8433  001AE4  D002               	goto	i2l2659
  8434                           
  8435                           ;eusart1.c: 133: {
  8436                           ;eusart1.c: 134: eusart1RxTail = 0;
  8437  001AE6  0E00               	movlw	0
  8438  001AE8  6E31               	movwf	_eusart1RxTail,c
  8439  001AEA                     i2l2659:
  8440                           
  8441                           ;eusart1.c: 135: }
  8442                           ;eusart1.c: 136: eusart1RxCount--;
  8443  001AEA  062F               	decf	_eusart1RxCount,f,c	;volatile
  8444                           
  8445                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  8446  001AEC  8A9D               	bsf	3997,5,c	;volatile
  8447                           
  8448                           ;eusart1.c: 139: return readValue;
  8449  001AEE  5001               	movf	EUSART1_Read@readValue,w,c
  8450  001AF0  0012               	return	
  8451  001AF2                     __end_of_EUSART1_Read:
  8452                           	opt stack 0
  8453                           tosu	equ	0xFFF
  8454                           tosh	equ	0xFFE
  8455                           tosl	equ	0xFFD
  8456                           pclatu	equ	0xFFB
  8457                           pclath	equ	0xFFA
  8458                           tblptru	equ	0xFF8
  8459                           tblptrh	equ	0xFF7
  8460                           tblptrl	equ	0xFF6
  8461                           tablat	equ	0xFF5
  8462                           prodh	equ	0xFF4
  8463                           prodl	equ	0xFF3
  8464                           intcon	equ	0xFF2
  8465                           intcon2	equ	0xFF1
  8466                           postinc0	equ	0xFEE
  8467                           fsr0h	equ	0xFEA
  8468                           fsr0l	equ	0xFE9
  8469                           wreg	equ	0xFE8
  8470                           indf1	equ	0xFE7
  8471                           postdec1	equ	0xFE5
  8472                           fsr1h	equ	0xFE2
  8473                           fsr1l	equ	0xFE1
  8474                           indf2	equ	0xFDF
  8475                           postinc2	equ	0xFDE
  8476                           postdec2	equ	0xFDD
  8477                           fsr2h	equ	0xFDA
  8478                           fsr2l	equ	0xFD9
  8479                           status	equ	0xFD8
  8480                           tosu	equ	0xFFF
  8481                           tosh	equ	0xFFE
  8482                           tosl	equ	0xFFD
  8483                           pclatu	equ	0xFFB
  8484                           pclath	equ	0xFFA
  8485                           tblptru	equ	0xFF8
  8486                           tblptrh	equ	0xFF7
  8487                           tblptrl	equ	0xFF6
  8488                           tablat	equ	0xFF5
  8489                           prodh	equ	0xFF4
  8490                           prodl	equ	0xFF3
  8491                           intcon	equ	0xFF2
  8492                           intcon2	equ	0xFF1
  8493                           postinc0	equ	0xFEE
  8494                           fsr0h	equ	0xFEA
  8495                           fsr0l	equ	0xFE9
  8496                           wreg	equ	0xFE8
  8497                           indf1	equ	0xFE7
  8498                           postdec1	equ	0xFE5
  8499                           fsr1h	equ	0xFE2
  8500                           fsr1l	equ	0xFE1
  8501                           indf2	equ	0xFDF
  8502                           postinc2	equ	0xFDE
  8503                           postdec2	equ	0xFDD
  8504                           fsr2h	equ	0xFDA
  8505                           fsr2l	equ	0xFD9
  8506                           status	equ	0xFD8
  8507                           
  8508                           	psect	text47
  8509  000000                     __ptext47:
  8510                           	opt stack 0
  8511                           tosu	equ	0xFFF
  8512                           tosh	equ	0xFFE
  8513                           tosl	equ	0xFFD
  8514                           pclatu	equ	0xFFB
  8515                           pclath	equ	0xFFA
  8516                           tblptru	equ	0xFF8
  8517                           tblptrh	equ	0xFF7
  8518                           tblptrl	equ	0xFF6
  8519                           tablat	equ	0xFF5
  8520                           prodh	equ	0xFF4
  8521                           prodl	equ	0xFF3
  8522                           intcon	equ	0xFF2
  8523                           intcon2	equ	0xFF1
  8524                           postinc0	equ	0xFEE
  8525                           fsr0h	equ	0xFEA
  8526                           fsr0l	equ	0xFE9
  8527                           wreg	equ	0xFE8
  8528                           indf1	equ	0xFE7
  8529                           postdec1	equ	0xFE5
  8530                           fsr1h	equ	0xFE2
  8531                           fsr1l	equ	0xFE1
  8532                           indf2	equ	0xFDF
  8533                           postinc2	equ	0xFDE
  8534                           postdec2	equ	0xFDD
  8535                           fsr2h	equ	0xFDA
  8536                           fsr2l	equ	0xFD9
  8537                           status	equ	0xFD8
  8538                           
  8539                           	psect	rparam
  8540  0000                     tosu	equ	0xFFF
  8541                           tosh	equ	0xFFE
  8542                           tosl	equ	0xFFD
  8543                           pclatu	equ	0xFFB
  8544                           pclath	equ	0xFFA
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           intcon2	equ	0xFF1
  8553                           postinc0	equ	0xFEE
  8554                           fsr0h	equ	0xFEA
  8555                           fsr0l	equ	0xFE9
  8556                           wreg	equ	0xFE8
  8557                           indf1	equ	0xFE7
  8558                           postdec1	equ	0xFE5
  8559                           fsr1h	equ	0xFE2
  8560                           fsr1l	equ	0xFE1
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568                           	psect	temp
  8569  00003A                     btemp:
  8570                           	opt stack 0
  8571  00003A                     	ds	1
  8572  0000                     int$flags	set	btemp
  8573                           tosu	equ	0xFFF
  8574                           tosh	equ	0xFFE
  8575                           tosl	equ	0xFFD
  8576                           pclatu	equ	0xFFB
  8577                           pclath	equ	0xFFA
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           intcon2	equ	0xFF1
  8586                           postinc0	equ	0xFEE
  8587                           fsr0h	equ	0xFEA
  8588                           fsr0l	equ	0xFE9
  8589                           wreg	equ	0xFE8
  8590                           indf1	equ	0xFE7
  8591                           postdec1	equ	0xFE5
  8592                           fsr1h	equ	0xFE2
  8593                           fsr1l	equ	0xFE1
  8594                           indf2	equ	0xFDF
  8595                           postinc2	equ	0xFDE
  8596                           postdec2	equ	0xFDD
  8597                           fsr2h	equ	0xFDA
  8598                           fsr2l	equ	0xFD9
  8599                           status	equ	0xFD8


Data Sizes:
    Strings     401
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     56      99
    BANK1           256      0     256
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK1[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK1[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_28(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[5]), STR_5(CODE[16]), 

    S772__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S772__prbuf$ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main->_wait_1ms
    _wait_1ms->_rand
    _rand->___lmul
    _process_message->_strstr
    _strtol->_isalpha
    _isalpha->_isupper
    _strstr->_strlen
    _strncmp->_strlen
    __doprnt->___lwdiv
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->i2_strstr
    i2_strstr->i2_strncmp
    i2_strncmp->i2_strlen

Critical Paths under _main in BANK0

    _main->_process_message
    _wait_1ms->___awmod
    _srand->_strtol
    _rand->___lmul
    _process_message->_sprintf
    _strtol->___lmul
    _strstr->_strncmp
    _sprintf->__doprnt
    _getUUID->_printf
    _printf->__doprnt
    __doprnt->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   27526
                                             49 BANK0      7     7      0
                _EPWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awmod
                            _getUUID
                             _printf
                    _process_message
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_1ms
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     174
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _wait_1ms                                             6     4      2     145
                                             43 COMRAM     1     1      0
                                             14 BANK0      5     3      2
                            ___awmod (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     108
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             41 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _process_message                                      8     6      2    9435
                                             41 BANK0      8     6      2
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2396
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             40 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             37 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     1      4    1500
                                             43 COMRAM     1     1      0
                                              9 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     423
                                              0 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     218
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     216
                                             37 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     6      8    5138
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    6728
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     6      8    6525
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             26    20      6    4628
                                              5 BANK0     22    16      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             38 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1049
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     108
                                             37 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0    1220
                                             23 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  3     3      0    1220
                                             20 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                           i2_strstr
 ---------------------------------------------------------------------------------
 (8) i2_strstr                                             5     1      4     697
                                             15 COMRAM     5     1      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (9) i2_strncmp                                            9     3      6     212
                                              6 COMRAM     9     3      6
                           i2_strlen (ARG)
 ---------------------------------------------------------------------------------
 (9) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_strchr                                             5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _read_line
     _strcpy
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
         _EUSART1_Write
   _process_message
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_1ms
     ___awmod (ARG)
       _rand (ARG)
         ___lmul
     _rand (ARG)
       ___lmul
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     i2_strstr
       i2_strchr
       i2_strlen
       i2_strncmp
         i2_strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      12        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Mar 21 00:20:15 2016

           _eusart1TxBufferRemaining 0039                  ___wmul@multiplicand 0028  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 198E                                  l344 0494  
                                l280 1A3A                                  l286 1952  
                                l819 18E4                                  l829 1744  
                       __CFG_CPB$OFF 000000                                  _PR2 000FBB  
                       __CFG_CPD$OFF 000000                                  _inc 0098  
                                _val 009A                         ___awmod@sign 006D  
                    _TMR2_Initialize 1CA6                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l1053 0FBE  
                               l2203 19B0                                 l2205 19B2  
                               l2233 18B2                                 l2217 1C70  
                               l2235 18BA                                 l2245 18DA  
                               l2237 18BE                                 l3221 022E  
                               l3213 01E8                                 l3205 016E  
                               l2191 197E                                 l3231 02A6  
                               l3223 023A                                 l3215 01EE  
                               l3321 05FE                                 l3233 02B2  
                               l3241 0322                                 l3225 0240  
                               l2281 17AC                                 l3401 164C  
                               l2273 1C52                                 l3171 170C  
                               l3315 05BC                                 l3307 0588  
                               l3243 033A                                 l3227 0280  
                               l2531 19B6                                 l2283 17B0  
                               l3411 126C                                 l3173 1712  
                               l3333 0682                                 l3309 059A  
                               l3237 02F8                                 l3501 0E78  
                               l3351 075A                                 l3343 06FE  
                               l3319 05F4                                 l3247 03A0  
                               l3255 03F8                                 l3183 009C  
                               l3415 12C4                                 l3407 1226  
                               l3431 1332                                 l2551 1BEA  
                               l3601 148E                                 l3177 1736  
                               l3169 1700                                 l3329 0658  
                               l3345 0708                                 l3257 0410  
                               l3249 03A8                                 l3265 044E  
                               l3193 011E                                 l2713 1B2C  
                               l2537 19D0                                 l3417 12D0  
                               l3425 12F4                                 l3433 1378  
                               l2553 1BEE                                 l3513 0EBC  
                               l3505 0E8E                                 l3603 149A  
                               l3371 086E                                 l3363 07EC  
                               l3355 0784                                 l3347 0714  
                               l3339 06D4                                 l3291 0546  
                               l3275 04DA                                 l3259 0436  
                               l3195 0130                                 l2715 1B34  
                               l2563 1BBA                                 l3523 0F4E  
                               l3605 14A0                                 l3613 14D2  
                               l3357 0798                                 l3293 054C  
                               l3277 0504                                 l3189 00F0  
                               l3437 1392                                 l3509 0EAA  
                               l3383 0920                                 l3367 0816  
                               l3279 050A                                 l3391 0976  
                               l3199 013A                                 l2567 1BC8  
                               l3527 0F7E                                 l3471 0DDC  
                               l3455 0D8A                                 l3551 1138  
                               l3535 193E                                 l3617 14E6  
                               l3609 14C4                                 l3369 081C  
                               l3377 08C6                                 l2577 1CA2  
                               l3473 0DE6                                 l3561 119E  
                               l3379 08D8                                 l3387 094A  
                               l3491 0E42                                 l3571 1218  
                               l2907 1A28                                 l3715 0BC6  
                               l3389 0956                                 l3397 162E  
                               l3477 0DF6                                 l3469 0DD4  
                               l3557 1170                                 l3741 0CD8  
                               l3487 0E2E                                 l3593 146A  
                               l3497 0E62                                 l3737 0CB2  
                               l2699 1CD4                                 l3597 147A  
                               l3759 0D6E                                 l3697 0B40  
                               STR_1 FFDF                                 STR_2 FFE9  
                               STR_3 FFD3                                 STR_4 FFDC  
                               STR_5 FF53                                 STR_6 FF42  
                               STR_7 FFF9                                 STR_8 FFC7  
                               STR_9 FFA0                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u4000 11B2                                 u1740 17D2  
                               u3370 039E                                 u3338 02E2  
                               u3290 027A                                 u3258 00D8  
                               u1747 17C8                                 u3380 03E2  
                               u4157 0B48                                 u4167 1A2E  
                               u3368 036A                                 u3377 0394  
                               u3297 0270                                 u4177 1946  
                               u3618 0744                                 u3730 1264  
                               u3387 03D8                                 u3548 0642  
                               u3750 128E                                 u3737 125A  
                               u3658 07D6                                 u3578 06BE  
                               i2l20 004E                                 u3780 1364  
                               u3757 1284                                 u3678 0908  
                               i2l24 0058                                 u3787 135A  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 197C                                 _main 0982  
                               _line 0180                                 _rand 174E  
                      ?_EUSART1_Read 0001                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 003A  
                               _uuid 009B                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0094  
                      __CFG_IESO$OFF 000000                ??_EPWM1_LoadDutyValue 0028  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 1CD4                                ?_main 0001  
                              ?_rand 002A                                STR_10 FF73  
                              STR_11 FF91                                STR_12 FF82  
                              STR_20 FF0C                                STR_13 FF1F  
                              STR_21 FEF9                                STR_22 FFAE  
                              STR_14 FF63                                STR_15 FFBB  
                              STR_23 FE8D                                STR_24 FEF9  
                              STR_16 FEC0                                STR_17 FEAD  
                              STR_25 FE6D                                STR_26 FEF9  
                              STR_18 FED3                                STR_27 FFAE  
                              STR_19 FEE6                                STR_28 FFF2  
                    __end_of___awmod 14F0                                STR_29 FF31  
                              _T2CON 000FBA                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 18EE                      __end_of___lwmod 174E  
                              i2l122 1B7A                                i2l138 1108  
                    __end_of__doprnt 0982                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                    __end_of_getUUID 1BA8                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                ___lmul@multiplicand 0064                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1B50                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_dpowers FE65                                _index 002D  
                    __end_of_isalpha 1BD0                                _ready 0034  
                    __end_of_isdigit 1C78                                _randx 0035  
                 __CFG_MCLRE$EXTMCLR 000000                                _srand 1CB8  
                              _putch 1CE0                                main@q 0094  
                    __end_of_isspace 1BF6                       ?_EUSART1_Write 0001  
                    __end_of_isupper 1C5A                                pclath 000FFA  
                              tablat 000FF5                       ??_EUSART1_Read 0001  
                              status 000FD8                      __end_of_sprintf 189C  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 1CF8  
                    __end_of_strncmp 12F2                      __end_of_toupper 1CA6  
                     __CFG_PBADEN$ON 000000                     __end_ofi2_strchr 1A22  
                   __end_ofi2_strlen 184A                     __end_ofi2_strstr 158E  
                    __initialization 168A           __end_of_EUSART1_Initialize 1ABE  
                       __end_of_main 0D8A                         __end_of_rand 17A2  
            __end_of_TMR2_Initialize 1CB8          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0091                               ??_rand 002C  
                      __activetblptr 000003                   __size_ofi2_strncmp 00AE  
              ?_EUSART1_Transmit_ISR 0001                           i2strlen@cp 0005  
                         i2strstr@s1 0010                           i2strstr@s2 0012  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                             ?_srand 0078                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l2613 142C  
                             i2l2605 13A2                       __CFG_WDTEN$OFF 000000  
                             i2l2615 1434                               i2l2609 13E4  
                             i2l2811 152C                               i2l2805 14F2  
                             i2l2813 156E                               i2l2671 1598  
                             i2l2591 19EC                               i2l2583 1800  
                             i2l2831 1B76                               i2l2649 1AC2  
                             i2l2585 1804                               i2l2817 1584  
                             i2l2659 1AEA                               i2l2675 1612  
                             i2l2669 1590                               i2l2597 1A06  
                             i2l2853 100A                               i2l2861 1042  
                             i2l2845 0FF8                               i2l2837 0FD8  
                             i2l2863 1048                               i2l2881 10C0  
                             i2l2873 108C                               i2l2883 10C4  
                             i2l2859 103E                               i2l2887 10E8  
                             i2l2889 1104                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                               ___lmul 161E  
                             ___wmul 1BF6                       __CFG_STVREN$ON 000000  
                          ??___awmod 002C                            ??___lwdiv 002A  
                          ??___lwmod 002D                            ??__doprnt 006B  
                             clear_0 1690                               clear_1 169E  
                             clear_2 16B0                               clear_3 16BC  
                    ___awmod@divisor 006A                            ??_getUUID 002D  
                       __doprnt@flag 0077                      ___awmod@counter 006C  
                             _printf 18EE                         __doprnt@prec 0070  
                             _strchr 19B6                               _strcmp 158E  
                             _strcpy 1B22                               _strlen 17A2  
                             _strtol 0D8A                               _strstr 12F2  
                   __end_of_wait_1ms 197C                     __end_of_wait_5ms 1A56  
                       __pdataCOMRAM 0035                            ??_isalpha 0029  
                          ??_isdigit 0026                         __mediumconst FE5A  
                          ??_isspace 0026                               tblptrh 000FF7  
                          ??_isupper 0026                               tblptrl 000FF6  
                             tblptru 000FF8                               srand@x 0078  
                    ??_EUSART1_Write 0026              __end_of_TMR2_StartTimer 1CFC  
                          ??_sprintf 002D                      _eusart1RxBuffer 0200  
                          ??_strncmp 0066                            ??_toupper 0026  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0100  
                  _SYSTEM_Initialize 1C78                           __accesstop 0060  
            __end_of__initialization 16E2                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    __end_ofi2_strncmp 144E  
                  ?_EPWM1_Initialize 0001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0026                   ??_EPWM1_Initialize 0026  
                      __end_of_srand 1CC6                        __end_of_putch 1CEA  
                   ?_TMR2_Initialize 0001                 __end_of_EUSART1_Read 1AF2  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 1116  
           __size_of_process_message 010E                            ?i2_strchr 0001  
                          ?i2_strlen 0001                           __doprnt@ap 0069  
                         __doprnt@cp 0073                           __doprnt@pb 0065  
                          ?i2_strstr 0010            __end_of_SYSTEM_Initialize 1C92  
                            ??_srand 002C                              ??_putch 0027  
                      _eusart1RxHead 0030                        _eusart1TxHead 0032  
                      _eusart1RxTail 0031                           __pbssBANK0 0098  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0033                      __CFG_PLLCFG$OFF 000000  
                        i2strchr@chr 0003                          i2strchr@ptr 0001  
                         __pnvCOMRAM 0039                   __size_of_read_line 000C  
                        i2strncmp@s1 0007                          i2strncmp@s2 0009  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 0060  
                            ?___wmul 0026                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                     ___lmul@product 0026                              ?_printf 007B  
                            ?_strchr 0026                              ?_strcmp 0001  
                            ?_strcpy 0026                              ?_strlen 0026  
                            ?_strtol 0068                              ?_strstr 0069  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7                              _SPBRGH1 000FB0  
                         ??i2_strchr 0005                           ??i2_strlen 0003  
                         ??i2_strstr 0014                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 1B22                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          ?_wait_1ms 006E                            ?_wait_5ms 0026  
                    __size_of___lmul 006C                              ___awmod 144E  
                    __size_of___wmul 0026                              ___lwdiv 189C  
                            ___lwmod 16EC                              __doprnt 0098  
                            __pcinit 168A                              _getUUID 1B7E  
                            __ramtop 1000                process_message@hexval 008D  
                            __ptext0 0982                              __ptext1 1A22  
                            __ptext2 1938                              __ptext3 1CB8  
                            __ptext4 174E                              __ptext5 1116  
                            __ptext6 0D8A                              __ptext7 1C92  
                            __ptext8 1BD0                              __ptext9 1BA8  
                    __size_of_printf 004A                      __size_of_strchr 0036  
                    __size_of_strcmp 0090                      __size_of_strcpy 002E  
                    __size_of_strlen 0054                    __end_of_hexpowers FE6D  
                    __size_of_strtol 0246                      __size_of_strstr 00AE  
                            _dpowers FE5B                _OSCILLATOR_Initialize 1CC6  
                          _T2CONbits 000FBA                              _isalpha 1BA8  
                            _isdigit 1C5A                     ___awmod@dividend 0068  
                  __end_of_read_line 1CE0                   _EUSART1_Initialize 1A8A  
           ??_PIN_MANAGER_Initialize 0026                              _isspace 1BD0  
                            _isupper 1C3C           __size_of_SYSTEM_Initialize 001A  
                            _sprintf 184A                        __doprnt@width 0078  
                            _strncmp 1224                              _toupper 1C92  
               end_of_initialization 16E2                  ?_EUSART1_Initialize 0001  
                  ??_process_message 002D                           ??_wait_1ms 0070  
                         ??_wait_5ms 0028                              printf@f 007B  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0026  
                            strcmp@r 0006                              strlen@s 0026  
                            strtol@a 0073                              strtol@c 0077  
                            strtol@s 0068                         strtol@endptr 006A  
                EUSART1_Write@txData 0026                         _EUSART1_Read 1ABE  
       __end_of_INTERRUPT_Initialize 1CF4                            i2_strncmp 13A0  
                     __end_of___lmul 168A                       __end_of___wmul 1C1C  
                      __pidataCOMRAM 1CF4               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 1938                       __end_of_strchr 19EC  
                     __end_of_strcmp 161E                       __end_of_strcpy 1B50  
                     __end_of_strlen 17F6                       __end_of_strtol 0FD0  
                     __end_of_strstr 13A0                  start_initialization 168A  
          __size_of_EPWM1_Initialize 0020      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0027         EPWM1_LoadDutyValue@dutyValue 0026  
              __end_of_EUSART1_Write 19B6                    __size_ofi2_strchr 0036  
                  __size_ofi2_strlen 0054                            i2strlen@s 0001  
                  __size_ofi2_strstr 009E                             ??___lmul 0026  
                           ??___wmul 002A                           ?i2_strncmp 0007  
                        __doprnt@idx 006F                          __doprnt@len 0071  
                        __doprnt@val 0075                             ??_printf 002D  
                           ??_strchr 002A                             ??_strcmp 0005  
                           ??_strcpy 002A                             ??_strlen 0028  
                           ??_strtol 006E                       _eusart1RxCount 002F  
                           ??_strstr 002C                          __pbssCOMRAM 002D  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 0060  
                       _isalpha$1312 002A             __size_of_TMR2_Initialize 0012  
                       _isdigit$1032 0027         __size_of_EUSART1_Receive_ISR 0146  
                          __doprnt@c 007A                            __doprnt@f 0067  
                       i2strncmp@len 000B                     ___lwdiv@dividend 0026  
             _PIN_MANAGER_Initialize 1A56                            __pintcode 0008  
                      __pmediumconst FE5A                             ?___awmod 0068  
                  __size_of_wait_1ms 0044                    __size_of_wait_5ms 0034  
                           ?___lwdiv 0026                             ?___lwmod 0060  
                           ?__doprnt 0065                             ?_getUUID 0001  
       ??_INTERRUPT_InterruptManager 0018                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isalpha 0001  
                           ?_isdigit 0001                      _process_message 1116  
                           ?_isspace 0001                             ?_isupper 0001  
           EUSART1_Receive_ISR@state 0016                            _hexpowers FE65  
                   ___lwdiv@quotient 002A                             ?_sprintf 007B  
                           ?_strncmp 0060                            _read_line 1CD4  
                           ?_toupper 0001                       __size_of_srand 000E  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 1CEA  
                     ___wmul@product 002A                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
__size_of_INTERRUPT_InterruptManager 008C                             i2u240_40 1826  
                           i2u240_47 181C                             i2u251_40 15BA  
                           i2u251_47 15B0                             i2u252_40 15DE  
                           i2u252_47 15D4                             i2u245_40 13DE  
                           i2u245_47 13D4                             i2u254_40 160C  
                           i2u254_47 1602                             i2u247_40 1406  
                           i2u247_47 13FC                             _PIR1bits 000F9E  
                           i2u278_40 155A                             i2u278_47 1550  
       __size_of_EPWM1_LoadDutyValue 0030                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0099  
                           _PSTR1CON 000FB9                          ??i2_strncmp 000D  
                  ___wmul@multiplier 0026                            main@delay 0096  
                   _EPWM1_Initialize 1C1C                         _isspace$1315 0027  
                           i2_strchr 19EC                             i2_strlen 17F6  
                           i2_strstr 14F0                    ___lmul@multiplier 0060  
                        _INTCON2bits 000FF1                           ?_read_line 0001  
                          copy_data0 16D6                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0026                EUSART1_Read@readValue 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                   process_message@res 008B  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0026  
                   __size_of___awmod 00A2          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 0052              __end_of_process_message 1224  
                   __size_of___lwmod 0062                     __size_of__doprnt 08EA  
                   __size_of_getUUID 002A                         _isupper$1318 0027  
                   __size_of_isalpha 0028                     __size_of_isdigit 001E  
                    ___lwdiv@divisor 0028                     __size_of_isspace 0026  
                    ___lwdiv@counter 002C                             __ptext10 1C3C  
                           __ptext11 161E                             __ptext20 18EE  
                           __ptext12 12F2                             __ptext21 0098  
                           __ptext13 1224                             __ptext30 1CA6  
                           __ptext22 1CE0                             __ptext14 17A2  
                           __ptext31 1CF8                             __ptext23 197C  
                           __ptext15 19B6                             __ptext40 0FD0  
                           __ptext32 1A56                             __ptext24 1C5A  
                           __ptext16 184A                             __ptext41 14F0  
                           __ptext33 1CC6                             __ptext25 1BF6  
                           __ptext17 1B7E                             __ptext42 13A0  
                           __ptext34 1CEA                             __ptext26 16EC  
                           __ptext18 1B22                             __ptext43 17F6  
                           __ptext35 1A8A                             __ptext27 189C  
                           __ptext19 1CD4                             __ptext44 19EC  
                           __ptext36 1C1C                             __ptext28 144E  
                           __ptext45 158E                             __ptext37 1AF2  
                           __ptext29 1C78                             __ptext46 1ABE  
                           __ptext47 0000                             __ptext39 1B50  
                   __size_of_isupper 001E                     __size_of_sprintf 0052  
                   __size_of_strncmp 00CE                     __size_of_toupper 0014  
                         strcpy@from 0028                            wait_1ms@i 002C  
                          wait_1ms@j 006E                        __size_of_main 0408  
                      __size_of_rand 0054                            wait_5ms@i 002B  
                          wait_5ms@j 0026                           strncmp@len 0064  
                           _wait_1ms 1938                             _wait_5ms 1A22  
                           int$flags 003A                           strtol@base 006C  
                         strtol@sign 0072                    ??_TMR2_StartTimer 0026  
 __end_of_INTERRUPT_InterruptManager 0094           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 0FD0                           _INTCONbits 000FF2  
                           isalpha@c 002B                             isdigit@c 0028  
             ??_INTERRUPT_Initialize 0026                          ??_read_line 0026  
                           intlevel2 0000                            sprintf@ap 0083  
                          sprintf@pb 0085                            sprintf@wh 007B  
               ?_EUSART1_Receive_ISR 0001                            strchr@chr 0028  
                   ___lwmod@dividend 0060                            strchr@ptr 0026  
                           isspace@c 0028              ?_PIN_MANAGER_Initialize 0001  
                         _RCSTA1bits 000FAB                             isupper@c 0028  
       __end_of_EUSART1_Transmit_ISR 1B7E                            strncmp@s1 0060  
                          strncmp@s2 0062                             printf@ap 0083  
                           printf@pb 0085                     ?_process_message 0089  
             __size_of_EUSART1_Write 003A                             sprintf@f 007D  
                           strcmp@s1 0001                             strcmp@s2 0003  
                    ___lwmod@divisor 0062                             strcpy@cp 002A  
                           strlen@cp 002A                             strcpy@to 0026  
                    ___lwmod@counter 0064                             toupper@c 0026  
                  __CFG_T3CMX$PORTC0 000000                  _EPWM1_LoadDutyValue 1AF2  
                           strstr@s1 0069                             strstr@s2 006B  
              ??_EUSART1_Receive_ISR 0015       __end_of_PIN_MANAGER_Initialize 1A8A  
                  __CFG_FOSC$INTIO67 000000             __end_of_EPWM1_Initialize 1C3C  
               ?_EPWM1_LoadDutyValue 0026  
