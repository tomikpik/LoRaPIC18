

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar 15 09:26:09 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataCOMRAM
    69  001CF4                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _randx
    73  001CF4  0001               	dw	1
    74  001CF6  0000               	dw	0
    75                           
    76                           	psect	mediumconst
    77  00FE62                     __pmediumconst:
    78                           	opt stack 0
    79  00FE62  00                 	db	0
    80  00FE63                     _dpowers:
    81                           	opt stack 0
    82  00FE63  0001               	dw	1
    83  00FE65  000A               	dw	10
    84  00FE67  0064               	dw	100
    85  00FE69  03E8               	dw	1000
    86  00FE6B  2710               	dw	10000
    87  00FE6D                     __end_of_dpowers:
    88                           	opt stack 0
    89  00FE6D                     _hexpowers:
    90                           	opt stack 0
    91  00FE6D  0001               	dw	1
    92  00FE6F  0010               	dw	16
    93  00FE71  0100               	dw	256
    94  00FE73  1000               	dw	4096
    95  00FE75                     __end_of_hexpowers:
    96                           	opt stack 0
    97  00FE75                     STR_25:
    98  00FE75  72                 	db	114	;'r'
    99  00FE76  61                 	db	97	;'a'
   100  00FE77  64                 	db	100	;'d'
   101  00FE78  69                 	db	105	;'i'
   102  00FE79  6F                 	db	111	;'o'
   103  00FE7A  20                 	db	32
   104  00FE7B  74                 	db	116	;'t'
   105  00FE7C  78                 	db	120	;'x'
   106  00FE7D  20                 	db	32
   107  00FE7E  34                 	db	52	;'4'
   108  00FE7F  32                 	db	50	;'2'
   109  00FE80  25                 	db	37
   110  00FE81  73                 	db	115	;'s'
   111  00FE82  25                 	db	37
   112  00FE83  30                 	db	48	;'0'
   113  00FE84  32                 	db	50	;'2'
   114  00FE85  58                 	db	88	;'X'
   115  00FE86  25                 	db	37
   116  00FE87  30                 	db	48	;'0'
   117  00FE88  32                 	db	50	;'2'
   118  00FE89  58                 	db	88	;'X'
   119  00FE8A  30                 	db	48	;'0'
   120  00FE8B  30                 	db	48	;'0'
   121  00FE8C  30                 	db	48	;'0'
   122  00FE8D  30                 	db	48	;'0'
   123  00FE8E  0D                 	db	13
   124  00FE8F  0A                 	db	10
   125  00FE90  00                 	db	0
   126  00FE91                     STR_23:
   127  00FE91  72                 	db	114	;'r'
   128  00FE92  61                 	db	97	;'a'
   129  00FE93  64                 	db	100	;'d'
   130  00FE94  69                 	db	105	;'i'
   131  00FE95  6F                 	db	111	;'o'
   132  00FE96  20                 	db	32
   133  00FE97  74                 	db	116	;'t'
   134  00FE98  78                 	db	120	;'x'
   135  00FE99  20                 	db	32
   136  00FE9A  34                 	db	52	;'4'
   137  00FE9B  32                 	db	50	;'2'
   138  00FE9C  25                 	db	37
   139  00FE9D  73                 	db	115	;'s'
   140  00FE9E  25                 	db	37
   141  00FE9F  30                 	db	48	;'0'
   142  00FEA0  32                 	db	50	;'2'
   143  00FEA1  58                 	db	88	;'X'
   144  00FEA2  25                 	db	37
   145  00FEA3  30                 	db	48	;'0'
   146  00FEA4  32                 	db	50	;'2'
   147  00FEA5  58                 	db	88	;'X'
   148  00FEA6  30                 	db	48	;'0'
   149  00FEA7  30                 	db	48	;'0'
   150  00FEA8  30                 	db	48	;'0'
   151  00FEA9  31                 	db	49	;'1'
   152  00FEAA  0D                 	db	13
   153  00FEAB  0A                 	db	10
   154  00FEAC  00                 	db	0
   155  00FEAD                     STR_17:
   156  00FEAD  72                 	db	114	;'r'
   157  00FEAE  61                 	db	97	;'a'
   158  00FEAF  64                 	db	100	;'d'
   159  00FEB0  69                 	db	105	;'i'
   160  00FEB1  6F                 	db	111	;'o'
   161  00FEB2  20                 	db	32
   162  00FEB3  73                 	db	115	;'s'
   163  00FEB4  65                 	db	101	;'e'
   164  00FEB5  74                 	db	116	;'t'
   165  00FEB6  20                 	db	32
   166  00FEB7  62                 	db	98	;'b'
   167  00FEB8  77                 	db	119	;'w'
   168  00FEB9  20                 	db	32
   169  00FEBA  35                 	db	53	;'5'
   170  00FEBB  30                 	db	48	;'0'
   171  00FEBC  30                 	db	48	;'0'
   172  00FEBD  0D                 	db	13
   173  00FEBE  0A                 	db	10
   174  00FEBF  00                 	db	0
   175  00FEC0                     STR_16:
   176  00FEC0  72                 	db	114	;'r'
   177  00FEC1  61                 	db	97	;'a'
   178  00FEC2  64                 	db	100	;'d'
   179  00FEC3  69                 	db	105	;'i'
   180  00FEC4  6F                 	db	111	;'o'
   181  00FEC5  20                 	db	32
   182  00FEC6  73                 	db	115	;'s'
   183  00FEC7  65                 	db	101	;'e'
   184  00FEC8  74                 	db	116	;'t'
   185  00FEC9  20                 	db	32
   186  00FECA  70                 	db	112	;'p'
   187  00FECB  77                 	db	119	;'w'
   188  00FECC  72                 	db	114	;'r'
   189  00FECD  20                 	db	32
   190  00FECE  2D                 	db	45
   191  00FECF  32                 	db	50	;'2'
   192  00FED0  0D                 	db	13
   193  00FED1  0A                 	db	10
   194  00FED2  00                 	db	0
   195  00FED3                     STR_18:
   196  00FED3  72                 	db	114	;'r'
   197  00FED4  61                 	db	97	;'a'
   198  00FED5  64                 	db	100	;'d'
   199  00FED6  69                 	db	105	;'i'
   200  00FED7  6F                 	db	111	;'o'
   201  00FED8  20                 	db	32
   202  00FED9  73                 	db	115	;'s'
   203  00FEDA  65                 	db	101	;'e'
   204  00FEDB  74                 	db	116	;'t'
   205  00FEDC  20                 	db	32
   206  00FEDD  73                 	db	115	;'s'
   207  00FEDE  66                 	db	102	;'f'
   208  00FEDF  20                 	db	32
   209  00FEE0  73                 	db	115	;'s'
   210  00FEE1  66                 	db	102	;'f'
   211  00FEE2  37                 	db	55	;'7'
   212  00FEE3  0D                 	db	13
   213  00FEE4  0A                 	db	10
   214  00FEE5  00                 	db	0
   215  00FEE6                     STR_19:
   216  00FEE6  72                 	db	114	;'r'
   217  00FEE7  61                 	db	97	;'a'
   218  00FEE8  64                 	db	100	;'d'
   219  00FEE9  69                 	db	105	;'i'
   220  00FEEA  6F                 	db	111	;'o'
   221  00FEEB  20                 	db	32
   222  00FEEC  73                 	db	115	;'s'
   223  00FEED  65                 	db	101	;'e'
   224  00FEEE  74                 	db	116	;'t'
   225  00FEEF  20                 	db	32
   226  00FEF0  63                 	db	99	;'c'
   227  00FEF1  72                 	db	114	;'r'
   228  00FEF2  20                 	db	32
   229  00FEF3  34                 	db	52	;'4'
   230  00FEF4  2F                 	db	47
   231  00FEF5  38                 	db	56	;'8'
   232  00FEF6  0D                 	db	13
   233  00FEF7  0A                 	db	10
   234  00FEF8  00                 	db	0
   235  00FEF9                     STR_21:
   236  00FEF9  72                 	db	114	;'r'
   237  00FEFA  61                 	db	97	;'a'
   238  00FEFB  64                 	db	100	;'d'
   239  00FEFC  69                 	db	105	;'i'
   240  00FEFD  6F                 	db	111	;'o'
   241  00FEFE  20                 	db	32
   242  00FEFF  73                 	db	115	;'s'
   243  00FF00  65                 	db	101	;'e'
   244  00FF01  74                 	db	116	;'t'
   245  00FF02  20                 	db	32
   246  00FF03  77                 	db	119	;'w'
   247  00FF04  64                 	db	100	;'d'
   248  00FF05  74                 	db	116	;'t'
   249  00FF06  20                 	db	32
   250  00FF07  25                 	db	37
   251  00FF08  64                 	db	100	;'d'
   252  00FF09  0D                 	db	13
   253  00FF0A  0A                 	db	10
   254  00FF0B  00                 	db	0
   255  00FF0C                     STR_20:
   256  00FF0C  72                 	db	114	;'r'
   257  00FF0D  61                 	db	97	;'a'
   258  00FF0E  64                 	db	100	;'d'
   259  00FF0F  69                 	db	105	;'i'
   260  00FF10  6F                 	db	111	;'o'
   261  00FF11  20                 	db	32
   262  00FF12  73                 	db	115	;'s'
   263  00FF13  65                 	db	101	;'e'
   264  00FF14  74                 	db	116	;'t'
   265  00FF15  20                 	db	32
   266  00FF16  63                 	db	99	;'c'
   267  00FF17  72                 	db	114	;'r'
   268  00FF18  63                 	db	99	;'c'
   269  00FF19  20                 	db	32
   270  00FF1A  6F                 	db	111	;'o'
   271  00FF1B  6E                 	db	110	;'n'
   272  00FF1C  0D                 	db	13
   273  00FF1D  0A                 	db	10
   274  00FF1E  00                 	db	0
   275  00FF1F                     STR_13:
   276  00FF1F  72                 	db	114	;'r'
   277  00FF20  61                 	db	97	;'a'
   278  00FF21  64                 	db	100	;'d'
   279  00FF22  69                 	db	105	;'i'
   280  00FF23  6F                 	db	111	;'o'
   281  00FF24  20                 	db	32
   282  00FF25  67                 	db	103	;'g'
   283  00FF26  65                 	db	101	;'e'
   284  00FF27  74                 	db	116	;'t'
   285  00FF28  20                 	db	32
   286  00FF29  70                 	db	112	;'p'
   287  00FF2A  72                 	db	114	;'r'
   288  00FF2B  6C                 	db	108	;'l'
   289  00FF2C  65                 	db	101	;'e'
   290  00FF2D  6E                 	db	110	;'n'
   291  00FF2E  0D                 	db	13
   292  00FF2F  0A                 	db	10
   293  00FF30  00                 	db	0
   294  00FF31                     STR_29:
   295  00FF31  30                 	db	48	;'0'
   296  00FF32  31                 	db	49	;'1'
   297  00FF33  32                 	db	50	;'2'
   298  00FF34  33                 	db	51	;'3'
   299  00FF35  34                 	db	52	;'4'
   300  00FF36  35                 	db	53	;'5'
   301  00FF37  36                 	db	54	;'6'
   302  00FF38  37                 	db	55	;'7'
   303  00FF39  38                 	db	56	;'8'
   304  00FF3A  39                 	db	57	;'9'
   305  00FF3B  41                 	db	65	;'A'
   306  00FF3C  42                 	db	66	;'B'
   307  00FF3D  43                 	db	67	;'C'
   308  00FF3E  44                 	db	68	;'D'
   309  00FF3F  45                 	db	69	;'E'
   310  00FF40  46                 	db	70	;'F'
   311  00FF41  00                 	db	0
   312  00FF42                     STR_6:
   313  00FF42  46                 	db	70	;'F'
   314  00FF43  46                 	db	70	;'F'
   315  00FF44  46                 	db	70	;'F'
   316  00FF45  46                 	db	70	;'F'
   317  00FF46  46                 	db	70	;'F'
   318  00FF47  46                 	db	70	;'F'
   319  00FF48  46                 	db	70	;'F'
   320  00FF49  46                 	db	70	;'F'
   321  00FF4A  46                 	db	70	;'F'
   322  00FF4B  46                 	db	70	;'F'
   323  00FF4C  46                 	db	70	;'F'
   324  00FF4D  46                 	db	70	;'F'
   325  00FF4E  46                 	db	70	;'F'
   326  00FF4F  46                 	db	70	;'F'
   327  00FF50  46                 	db	70	;'F'
   328  00FF51  46                 	db	70	;'F'
   329  00FF52  00                 	db	0
   330  00FF53                     STR_5:
   331  00FF53  73                 	db	115	;'s'
   332  00FF54  79                 	db	121	;'y'
   333  00FF55  73                 	db	115	;'s'
   334  00FF56  20                 	db	32
   335  00FF57  67                 	db	103	;'g'
   336  00FF58  65                 	db	101	;'e'
   337  00FF59  74                 	db	116	;'t'
   338  00FF5A  20                 	db	32
   339  00FF5B  68                 	db	104	;'h'
   340  00FF5C  77                 	db	119	;'w'
   341  00FF5D  65                 	db	101	;'e'
   342  00FF5E  75                 	db	117	;'u'
   343  00FF5F  69                 	db	105	;'i'
   344  00FF60  0D                 	db	13
   345  00FF61  0A                 	db	10
   346  00FF62  00                 	db	0
   347  00FF63                     STR_14:
   348  00FF63  72                 	db	114	;'r'
   349  00FF64  61                 	db	97	;'a'
   350  00FF65  64                 	db	100	;'d'
   351  00FF66  69                 	db	105	;'i'
   352  00FF67  6F                 	db	111	;'o'
   353  00FF68  20                 	db	32
   354  00FF69  67                 	db	103	;'g'
   355  00FF6A  65                 	db	101	;'e'
   356  00FF6B  74                 	db	116	;'t'
   357  00FF6C  20                 	db	32
   358  00FF6D  70                 	db	112	;'p'
   359  00FF6E  77                 	db	119	;'w'
   360  00FF6F  72                 	db	114	;'r'
   361  00FF70  0D                 	db	13
   362  00FF71  0A                 	db	10
   363  00FF72  00                 	db	0
   364  00FF73                     STR_10:
   365  00FF73  72                 	db	114	;'r'
   366  00FF74  61                 	db	97	;'a'
   367  00FF75  64                 	db	100	;'d'
   368  00FF76  69                 	db	105	;'i'
   369  00FF77  6F                 	db	111	;'o'
   370  00FF78  20                 	db	32
   371  00FF79  67                 	db	103	;'g'
   372  00FF7A  65                 	db	101	;'e'
   373  00FF7B  74                 	db	116	;'t'
   374  00FF7C  20                 	db	32
   375  00FF7D  73                 	db	115	;'s'
   376  00FF7E  66                 	db	102	;'f'
   377  00FF7F  0D                 	db	13
   378  00FF80  0A                 	db	10
   379  00FF81  00                 	db	0
   380  00FF82                     STR_12:
   381  00FF82  72                 	db	114	;'r'
   382  00FF83  61                 	db	97	;'a'
   383  00FF84  64                 	db	100	;'d'
   384  00FF85  69                 	db	105	;'i'
   385  00FF86  6F                 	db	111	;'o'
   386  00FF87  20                 	db	32
   387  00FF88  67                 	db	103	;'g'
   388  00FF89  65                 	db	101	;'e'
   389  00FF8A  74                 	db	116	;'t'
   390  00FF8B  20                 	db	32
   391  00FF8C  63                 	db	99	;'c'
   392  00FF8D  72                 	db	114	;'r'
   393  00FF8E  0D                 	db	13
   394  00FF8F  0A                 	db	10
   395  00FF90  00                 	db	0
   396  00FF91                     STR_11:
   397  00FF91  72                 	db	114	;'r'
   398  00FF92  61                 	db	97	;'a'
   399  00FF93  64                 	db	100	;'d'
   400  00FF94  69                 	db	105	;'i'
   401  00FF95  6F                 	db	111	;'o'
   402  00FF96  20                 	db	32
   403  00FF97  67                 	db	103	;'g'
   404  00FF98  65                 	db	101	;'e'
   405  00FF99  74                 	db	116	;'t'
   406  00FF9A  20                 	db	32
   407  00FF9B  62                 	db	98	;'b'
   408  00FF9C  77                 	db	119	;'w'
   409  00FF9D  0D                 	db	13
   410  00FF9E  0A                 	db	10
   411  00FF9F  00                 	db	0
   412  00FFA0                     STR_9:
   413  00FFA0  73                 	db	115	;'s'
   414  00FFA1  79                 	db	121	;'y'
   415  00FFA2  73                 	db	115	;'s'
   416  00FFA3  20                 	db	32
   417  00FFA4  67                 	db	103	;'g'
   418  00FFA5  65                 	db	101	;'e'
   419  00FFA6  74                 	db	116	;'t'
   420  00FFA7  20                 	db	32
   421  00FFA8  76                 	db	118	;'v'
   422  00FFA9  65                 	db	101	;'e'
   423  00FFAA  72                 	db	114	;'r'
   424  00FFAB  0D                 	db	13
   425  00FFAC  0A                 	db	10
   426  00FFAD  00                 	db	0
   427  00FFAE                     STR_22:
   428  00FFAE  72                 	db	114	;'r'
   429  00FFAF  61                 	db	97	;'a'
   430  00FFB0  64                 	db	100	;'d'
   431  00FFB1  69                 	db	105	;'i'
   432  00FFB2  6F                 	db	111	;'o'
   433  00FFB3  20                 	db	32
   434  00FFB4  72                 	db	114	;'r'
   435  00FFB5  78                 	db	120	;'x'
   436  00FFB6  20                 	db	32
   437  00FFB7  30                 	db	48	;'0'
   438  00FFB8  0D                 	db	13
   439  00FFB9  0A                 	db	10
   440  00FFBA  00                 	db	0
   441  00FFBB                     STR_15:
   442  00FFBB  6D                 	db	109	;'m'
   443  00FFBC  61                 	db	97	;'a'
   444  00FFBD  63                 	db	99	;'c'
   445  00FFBE  20                 	db	32
   446  00FFBF  70                 	db	112	;'p'
   447  00FFC0  61                 	db	97	;'a'
   448  00FFC1  75                 	db	117	;'u'
   449  00FFC2  73                 	db	115	;'s'
   450  00FFC3  65                 	db	101	;'e'
   451  00FFC4  0D                 	db	13
   452  00FFC5  0A                 	db	10
   453  00FFC6  00                 	db	0
   454  00FFC7                     STR_8:
   455  00FFC7  73                 	db	115	;'s'
   456  00FFC8  79                 	db	121	;'y'
   457  00FFC9  73                 	db	115	;'s'
   458  00FFCA  20                 	db	32
   459  00FFCB  72                 	db	114	;'r'
   460  00FFCC  65                 	db	101	;'e'
   461  00FFCD  73                 	db	115	;'s'
   462  00FFCE  65                 	db	101	;'e'
   463  00FFCF  74                 	db	116	;'t'
   464  00FFD0  0D                 	db	13
   465  00FFD1  0A                 	db	10
   466  00FFD2  00                 	db	0
   467  00FFD3                     STR_3:
   468  00FFD3  72                 	db	114	;'r'
   469  00FFD4  61                 	db	97	;'a'
   470  00FFD5  64                 	db	100	;'d'
   471  00FFD6  69                 	db	105	;'i'
   472  00FFD7  6F                 	db	111	;'o'
   473  00FFD8  5F                 	db	95	;'_'
   474  00FFD9  74                 	db	116	;'t'
   475  00FFDA  78                 	db	120	;'x'
   476  00FFDB  5F                 	db	95	;'_'
   477  00FFDC  6F                 	db	111	;'o'
   478  00FFDD  6B                 	db	107	;'k'
   479  00FFDE  00                 	db	0
   480  00FFDF                     STR_1:
   481  00FFDF  72                 	db	114	;'r'
   482  00FFE0  61                 	db	97	;'a'
   483  00FFE1  64                 	db	100	;'d'
   484  00FFE2  69                 	db	105	;'i'
   485  00FFE3  6F                 	db	111	;'o'
   486  00FFE4  5F                 	db	95	;'_'
   487  00FFE5  65                 	db	101	;'e'
   488  00FFE6  72                 	db	114	;'r'
   489  00FFE7  72                 	db	114	;'r'
   490  00FFE8  00                 	db	0
   491  00FFE9                     STR_2:
   492  00FFE9  72                 	db	114	;'r'
   493  00FFEA  61                 	db	97	;'a'
   494  00FFEB  64                 	db	100	;'d'
   495  00FFEC  69                 	db	105	;'i'
   496  00FFED  6F                 	db	111	;'o'
   497  00FFEE  5F                 	db	95	;'_'
   498  00FFEF  72                 	db	114	;'r'
   499  00FFF0  78                 	db	120	;'x'
   500  00FFF1  00                 	db	0
   501  00FFF2                     STR_28:
   502  00FFF2  28                 	db	40
   503  00FFF3  6E                 	db	110	;'n'
   504  00FFF4  75                 	db	117	;'u'
   505  00FFF5  6C                 	db	108	;'l'
   506  00FFF6  6C                 	db	108	;'l'
   507  00FFF7  29                 	db	41
   508  00FFF8  00                 	db	0
   509  00FFF9                     STR_7:
   510  00FFF9  25                 	db	37
   511  00FFFA  63                 	db	99	;'c'
   512  00FFFB  25                 	db	37
   513  00FFFC  63                 	db	99	;'c'
   514  00FFFD  00                 	db	0
   515  0000                     
   516                           ; #config settings
   517  00FFFE  00                 	db	0	; dummy byte at the end
   518  0000                     
   519                           	psect	nvCOMRAM
   520  000039                     __pnvCOMRAM:
   521                           	opt stack 0
   522  000039                     _eusart1TxBufferRemaining:
   523                           	opt stack 0
   524  000039                     	ds	1
   525  0000                     _ANSELA	set	3896
   526  0000                     _ANSELB	set	3897
   527  0000                     _ANSELC	set	3898
   528  0000                     _CCPTMRS0bits	set	3913
   529  0000                     _BAUDCON1	set	4024
   530  0000                     _CCP1CON	set	4029
   531  0000                     _CCPR1H	set	4031
   532  0000                     _CCPR1L	set	4030
   533  0000                     _ECCP1AS	set	4022
   534  0000                     _INTCON2bits	set	4081
   535  0000                     _INTCONbits	set	4082
   536  0000                     _IPR1bits	set	3999
   537  0000                     _LATA	set	3977
   538  0000                     _LATB	set	3978
   539  0000                     _LATC	set	3979
   540  0000                     _OSCCON	set	4051
   541  0000                     _OSCCON2	set	4050
   542  0000                     _OSCTUNE	set	3995
   543  0000                     _PIE1bits	set	3997
   544  0000                     _PIR1bits	set	3998
   545  0000                     _PR2	set	4027
   546  0000                     _PSTR1CON	set	4025
   547  0000                     _PWM1CON	set	4023
   548  0000                     _RCONbits	set	4048
   549  0000                     _RCREG1	set	4014
   550  0000                     _RCSTA1	set	4011
   551  0000                     _RCSTA1bits	set	4011
   552  0000                     _SPBRG1	set	4015
   553  0000                     _SPBRGH1	set	4016
   554  0000                     _T2CON	set	4026
   555  0000                     _T2CONbits	set	4026
   556  0000                     _TMR2	set	4028
   557  0000                     _TRISA	set	3986
   558  0000                     _TRISB	set	3987
   559  0000                     _TRISC	set	3988
   560  0000                     _TXREG1	set	4013
   561  0000                     _TXSTA1	set	4012
   562  0000                     _WPUB	set	3937
   563                           
   564                           	psect	cinit
   565  00168A                     __pcinit:
   566                           	opt stack 0
   567  00168A                     start_initialization:
   568                           	opt stack 0
   569  00168A                     __initialization:
   570                           	opt stack 0
   571                           
   572                           ; Clear objects allocated to BANK2 (128 bytes)
   573  00168A  EE02  F000         	lfsr	0,__pbssBANK2
   574  00168E  0E80               	movlw	128
   575  001690                     clear_0:
   576  001690  6AEE               	clrf	postinc0,c
   577  001692  06E8               	decf	wreg,f,c
   578  001694  E1FD               	bnz	clear_0
   579                           
   580                           ; Clear objects allocated to BANK1 (256 bytes)
   581  001696  EE01  F000         	lfsr	0,__pbssBANK1
   582  00169A  EE11 F000          	lfsr	1,256
   583  00169E                     clear_1:
   584  00169E  6AEE               	clrf	postinc0,c
   585  0016A0  50E5               	movf	postdec1,w,c
   586  0016A2  50E1               	movf	fsr1l,w,c
   587  0016A4  E1FC               	bnz	clear_1
   588  0016A6  50E2               	movf	fsr1h,w,c
   589  0016A8  E1FA               	bnz	clear_1
   590                           
   591                           ; Clear objects allocated to BANK0 (43 bytes)
   592  0016AA  EE00  F098         	lfsr	0,__pbssBANK0
   593  0016AE  0E2B               	movlw	43
   594  0016B0                     clear_2:
   595  0016B0  6AEE               	clrf	postinc0,c
   596  0016B2  06E8               	decf	wreg,f,c
   597  0016B4  E1FD               	bnz	clear_2
   598                           
   599                           ; Clear objects allocated to COMRAM (8 bytes)
   600  0016B6  EE00  F02D         	lfsr	0,__pbssCOMRAM
   601  0016BA  0E08               	movlw	8
   602  0016BC                     clear_3:
   603  0016BC  6AEE               	clrf	postinc0,c
   604  0016BE  06E8               	decf	wreg,f,c
   605  0016C0  E1FD               	bnz	clear_3
   606                           
   607                           ; Initialize objects allocated to COMRAM (4 bytes)
   608                           ; load TBLPTR registers with __pidataCOMRAM
   609  0016C2  0EF4               	movlw	low __pidataCOMRAM
   610  0016C4  6EF6               	movwf	tblptrl,c
   611  0016C6  0E1C               	movlw	high __pidataCOMRAM
   612  0016C8  6EF7               	movwf	tblptrh,c
   613  0016CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   614  0016CC  6EF8               	movwf	tblptru,c
   615  0016CE  EE00  F035         	lfsr	0,__pdataCOMRAM
   616  0016D2  EE10 F004          	lfsr	1,4
   617  0016D6                     copy_data0:
   618  0016D6  0009               	tblrd		*+
   619  0016D8  CFF5 FFEE          	movff	tablat,postinc0
   620  0016DC  50E5               	movf	postdec1,w,c
   621  0016DE  50E1               	movf	fsr1l,w,c
   622  0016E0  E1FA               	bnz	copy_data0
   623  0016E2                     end_of_initialization:
   624                           	opt stack 0
   625  0016E2                     __end_of__initialization:
   626                           	opt stack 0
   627  0016E2  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   628  0016E4  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   629  0016E6  0100               	movlb	0
   630  0016E8  EFC1  F004         	goto	_main	;jump to C main() function
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1h	equ	0xFE2
   639                           fsr1l	equ	0xFE1
   640                           
   641                           	psect	bssCOMRAM
   642  00002D                     __pbssCOMRAM:
   643                           	opt stack 0
   644  00002D                     _index:
   645                           	opt stack 0
   646  00002D                     	ds	2
   647  00002F                     _eusart1RxCount:
   648                           	opt stack 0
   649  00002F                     	ds	1
   650  000030                     _eusart1RxHead:
   651                           	opt stack 0
   652  000030                     	ds	1
   653  000031                     _eusart1RxTail:
   654                           	opt stack 0
   655  000031                     	ds	1
   656  000032                     _eusart1TxHead:
   657                           	opt stack 0
   658  000032                     	ds	1
   659  000033                     _eusart1TxTail:
   660                           	opt stack 0
   661  000033                     	ds	1
   662  000034                     _ready:
   663                           	opt stack 0
   664  000034                     	ds	1
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1h	equ	0xFE2
   673                           fsr1l	equ	0xFE1
   674                           
   675                           	psect	dataCOMRAM
   676  000035                     __pdataCOMRAM:
   677                           	opt stack 0
   678  000035                     _randx:
   679                           	opt stack 0
   680  000035                     	ds	4
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1h	equ	0xFE2
   689                           fsr1l	equ	0xFE1
   690                           
   691                           	psect	bssBANK0
   692  000098                     __pbssBANK0:
   693                           	opt stack 0
   694  000098                     _inc:
   695                           	opt stack 0
   696  000098                     	ds	1
   697  000099                     _uartState:
   698                           	opt stack 0
   699  000099                     	ds	1
   700  00009A                     _val:
   701                           	opt stack 0
   702  00009A                     	ds	1
   703  00009B                     _uuid:
   704                           	opt stack 0
   705  00009B                     	ds	40
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           postinc0	equ	0xFEE
   711                           wreg	equ	0xFE8
   712                           postdec1	equ	0xFE5
   713                           fsr1h	equ	0xFE2
   714                           fsr1l	equ	0xFE1
   715                           
   716                           	psect	bssBANK1
   717  000100                     __pbssBANK1:
   718                           	opt stack 0
   719  000100                     _eusart1TxBuffer:
   720                           	opt stack 0
   721  000100                     	ds	128
   722  000180                     _line:
   723                           	opt stack 0
   724  000180                     	ds	128
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           
   735                           	psect	bssBANK2
   736  000200                     __pbssBANK2:
   737                           	opt stack 0
   738  000200                     _eusart1RxBuffer:
   739                           	opt stack 0
   740  000200                     	ds	128
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1h	equ	0xFE2
   749                           fsr1l	equ	0xFE1
   750                           
   751                           	psect	cstackBANK0
   752  000060                     __pcstackBANK0:
   753                           	opt stack 0
   754  000060                     ?_strncmp:
   755                           	opt stack 0
   756  000060                     ?___lwmod:
   757                           	opt stack 0
   758  000060                     ?___lmul:
   759                           	opt stack 0
   760  000060                     ___lwmod@dividend:
   761                           	opt stack 0
   762  000060                     strncmp@s1:
   763                           	opt stack 0
   764  000060                     ___lmul@multiplier:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x0
   768  000060                     	ds	2
   769  000062                     ___lwmod@divisor:
   770                           	opt stack 0
   771  000062                     strncmp@s2:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x2
   775  000062                     	ds	2
   776  000064                     ___lwmod@counter:
   777                           	opt stack 0
   778  000064                     strncmp@len:
   779                           	opt stack 0
   780  000064                     ___lmul@multiplicand:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x4
   784  000064                     	ds	1
   785  000065                     ?__doprnt:
   786                           	opt stack 0
   787  000065                     __doprnt@pb:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x5
   791  000065                     	ds	1
   792  000066                     ??_strncmp:
   793                           
   794                           ; 1 bytes @ 0x6
   795  000066                     	ds	1
   796  000067                     __doprnt@f:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x7
   800  000067                     	ds	1
   801  000068                     ?___awmod:
   802                           	opt stack 0
   803  000068                     ?_strtol:
   804                           	opt stack 0
   805  000068                     ___awmod@dividend:
   806                           	opt stack 0
   807  000068                     strtol@s:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x8
   811  000068                     	ds	1
   812  000069                     ?_strstr:
   813                           	opt stack 0
   814  000069                     __doprnt@ap:
   815                           	opt stack 0
   816  000069                     strstr@s1:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x9
   820  000069                     	ds	1
   821  00006A                     ___awmod@divisor:
   822                           	opt stack 0
   823  00006A                     strtol@endptr:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0xA
   827  00006A                     	ds	1
   828  00006B                     ??__doprnt:
   829  00006B                     strstr@s2:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0xB
   833  00006B                     	ds	1
   834  00006C                     ___awmod@counter:
   835                           	opt stack 0
   836  00006C                     strtol@base:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0xC
   840  00006C                     	ds	1
   841  00006D                     ___awmod@sign:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0xD
   845  00006D                     	ds	1
   846  00006E                     ??_strtol:
   847  00006E                     wait_1ms@j:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0xE
   851  00006E                     	ds	1
   852  00006F                     __doprnt@idx:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0xF
   856  00006F                     	ds	1
   857  000070                     ??_wait_1ms:
   858  000070                     __doprnt@prec:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x10
   862  000070                     	ds	1
   863  000071                     __doprnt@len:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x11
   867  000071                     	ds	1
   868  000072                     strtol@sign:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x12
   872  000072                     	ds	1
   873  000073                     __doprnt@cp:
   874                           	opt stack 0
   875  000073                     strtol@a:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x13
   879  000073                     	ds	2
   880  000075                     __doprnt@val:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x15
   884  000075                     	ds	2
   885  000077                     __doprnt@flag:
   886                           	opt stack 0
   887  000077                     strtol@c:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x17
   891  000077                     	ds	1
   892  000078                     __doprnt@width:
   893                           	opt stack 0
   894  000078                     srand@x:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x18
   898  000078                     	ds	2
   899  00007A                     __doprnt@c:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x1A
   903  00007A                     	ds	1
   904  00007B                     ?_printf:
   905                           	opt stack 0
   906  00007B                     ?_sprintf:
   907                           	opt stack 0
   908  00007B                     printf@f:
   909                           	opt stack 0
   910  00007B                     sprintf@wh:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x1B
   914  00007B                     	ds	2
   915  00007D                     sprintf@f:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919  00007D                     	ds	6
   920  000083                     printf@ap:
   921                           	opt stack 0
   922  000083                     sprintf@ap:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x23
   926  000083                     	ds	2
   927  000085                     printf@pb:
   928                           	opt stack 0
   929  000085                     sprintf@pb:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x25
   933  000085                     	ds	4
   934  000089                     ?_process_message:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x29
   938  000089                     	ds	2
   939  00008B                     process_message@res:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x2B
   943  00008B                     	ds	2
   944  00008D                     process_message@hexval:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x2D
   948  00008D                     	ds	4
   949  000091                     ??_main:
   950                           
   951                           ; 1 bytes @ 0x31
   952  000091                     	ds	3
   953  000094                     main@q:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x34
   957  000094                     	ds	2
   958  000096                     main@delay:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x36
   962  000096                     	ds	2
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           
   973                           	psect	cstackCOMRAM
   974  000001                     __pcstackCOMRAM:
   975                           	opt stack 0
   976  000001                     ?_strcmp:
   977                           	opt stack 0
   978  000001                     ?i2_strlen:
   979                           	opt stack 0
   980  000001                     ?i2_strchr:
   981                           	opt stack 0
   982  000001                     EUSART1_Read@readValue:
   983                           	opt stack 0
   984  000001                     strcmp@s1:
   985                           	opt stack 0
   986  000001                     i2strlen@s:
   987                           	opt stack 0
   988  000001                     i2strchr@ptr:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x0
   992  000001                     	ds	2
   993  000003                     ??i2_strlen:
   994  000003                     strcmp@s2:
   995                           	opt stack 0
   996  000003                     i2strchr@chr:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x2
  1000  000003                     	ds	2
  1001  000005                     ??_strcmp:
  1002  000005                     i2strlen@cp:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006  000005                     	ds	1
  1007  000006                     strcmp@r:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x5
  1011  000006                     	ds	1
  1012  000007                     ?i2_strncmp:
  1013                           	opt stack 0
  1014  000007                     i2strncmp@s1:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x6
  1018  000007                     	ds	2
  1019  000009                     i2strncmp@s2:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x8
  1023  000009                     	ds	2
  1024  00000B                     i2strncmp@len:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0xA
  1028  00000B                     	ds	2
  1029  00000D                     ??i2_strncmp:
  1030                           
  1031                           ; 1 bytes @ 0xC
  1032  00000D                     	ds	3
  1033  000010                     ?i2_strstr:
  1034                           	opt stack 0
  1035  000010                     i2strstr@s1:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0xF
  1039  000010                     	ds	2
  1040  000012                     i2strstr@s2:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x11
  1044  000012                     	ds	2
  1045  000014                     ??i2_strstr:
  1046                           
  1047                           ; 1 bytes @ 0x13
  1048  000014                     	ds	1
  1049  000015                     ??_EUSART1_Receive_ISR:
  1050                           
  1051                           ; 1 bytes @ 0x14
  1052  000015                     	ds	1
  1053  000016                     EUSART1_Receive_ISR@state:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x15
  1057  000016                     	ds	2
  1058  000018                     ??_INTERRUPT_InterruptManager:
  1059                           
  1060                           ; 1 bytes @ 0x17
  1061  000018                     	ds	14
  1062  000026                     ??_isdigit:
  1063  000026                     ??_isspace:
  1064  000026                     ??_isupper:
  1065  000026                     ?_strlen:
  1066                           	opt stack 0
  1067  000026                     ?_strchr:
  1068                           	opt stack 0
  1069  000026                     ?___wmul:
  1070                           	opt stack 0
  1071  000026                     ?___lwdiv:
  1072                           	opt stack 0
  1073  000026                     EUSART1_Write@txData:
  1074                           	opt stack 0
  1075  000026                     toupper@c:
  1076                           	opt stack 0
  1077  000026                     EPWM1_LoadDutyValue@dutyValue:
  1078                           	opt stack 0
  1079  000026                     wait_5ms@j:
  1080                           	opt stack 0
  1081  000026                     ___wmul@multiplier:
  1082                           	opt stack 0
  1083  000026                     ___lwdiv@dividend:
  1084                           	opt stack 0
  1085  000026                     strcpy@to:
  1086                           	opt stack 0
  1087  000026                     strlen@s:
  1088                           	opt stack 0
  1089  000026                     strchr@ptr:
  1090                           	opt stack 0
  1091  000026                     ___lmul@product:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x25
  1095  000026                     	ds	1
  1096  000027                     putch@txData:
  1097                           	opt stack 0
  1098  000027                     _isdigit$1032:
  1099                           	opt stack 0
  1100  000027                     _isspace$1315:
  1101                           	opt stack 0
  1102  000027                     _isupper$1318:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x26
  1106  000027                     	ds	1
  1107  000028                     ??_strlen:
  1108  000028                     ??_EPWM1_LoadDutyValue:
  1109  000028                     ??_wait_5ms:
  1110  000028                     isdigit@c:
  1111                           	opt stack 0
  1112  000028                     isspace@c:
  1113                           	opt stack 0
  1114  000028                     isupper@c:
  1115                           	opt stack 0
  1116  000028                     ___wmul@multiplicand:
  1117                           	opt stack 0
  1118  000028                     ___lwdiv@divisor:
  1119                           	opt stack 0
  1120  000028                     strcpy@from:
  1121                           	opt stack 0
  1122  000028                     strchr@chr:
  1123                           	opt stack 0
  1124                           
  1125                           ; 2 bytes @ 0x27
  1126  000028                     	ds	1
  1127  000029                     ??_isalpha:
  1128                           
  1129                           ; 1 bytes @ 0x28
  1130  000029                     	ds	1
  1131  00002A                     ?_rand:
  1132                           	opt stack 0
  1133  00002A                     _isalpha$1312:
  1134                           	opt stack 0
  1135  00002A                     ___wmul@product:
  1136                           	opt stack 0
  1137  00002A                     ___lwdiv@quotient:
  1138                           	opt stack 0
  1139  00002A                     strcpy@cp:
  1140                           	opt stack 0
  1141  00002A                     strlen@cp:
  1142                           	opt stack 0
  1143                           
  1144                           ; 2 bytes @ 0x29
  1145  00002A                     	ds	1
  1146  00002B                     wait_5ms@i:
  1147                           	opt stack 0
  1148  00002B                     isalpha@c:
  1149                           	opt stack 0
  1150                           
  1151                           ; 1 bytes @ 0x2A
  1152  00002B                     	ds	1
  1153  00002C                     ??_strstr:
  1154  00002C                     wait_1ms@i:
  1155                           	opt stack 0
  1156  00002C                     ___lwdiv@counter:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0x2B
  1160  00002C                     	ds	1
  1161  00002D                     tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           postdec1	equ	0xFE5
  1168                           fsr1h	equ	0xFE2
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171                           ; 1 bytes @ 0x2C
  1172 ;;
  1173 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1174 ;;
  1175 ;; *************** function _main *****************
  1176 ;; Defined at:
  1177 ;;		line 78 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  delay           2   54[BANK0 ] int 
  1182 ;;  q               2   52[BANK0 ] int 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        7 bytes
  1197 ;; Hardware stack levels required when called:    9
  1198 ;; This function calls:
  1199 ;;		_EPWM1_LoadDutyValue
  1200 ;;		_SYSTEM_Initialize
  1201 ;;		___awmod
  1202 ;;		_getUUID
  1203 ;;		_printf
  1204 ;;		_process_message
  1205 ;;		_rand
  1206 ;;		_read_line
  1207 ;;		_srand
  1208 ;;		_strtol
  1209 ;;		_wait_1ms
  1210 ;;		_wait_5ms
  1211 ;; This function is called by:
  1212 ;;		Startup code after reset
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text0
  1217  000982                     __ptext0:
  1218                           	opt stack 0
  1219  000982                     _main:
  1220                           	opt stack 22
  1221                           
  1222                           ;main.c: 79: SYSTEM_Initialize();
  1223                           
  1224                           ;incstack = 0
  1225  000982  EC3C  F00E         	call	_SYSTEM_Initialize	;wreg free
  1226                           
  1227                           ;main.c: 80: (INTCONbits.GIE = 1);
  1228  000986  8EF2               	bsf	intcon,7,c	;volatile
  1229                           
  1230                           ;main.c: 81: (INTCONbits.PEIE = 1);
  1231  000988  8CF2               	bsf	intcon,6,c	;volatile
  1232                           
  1233                           ;main.c: 84: wait_5ms(5);
  1234  00098A  0E00               	movlw	0
  1235  00098C  6E27               	movwf	wait_5ms@j+1,c
  1236  00098E  0E05               	movlw	5
  1237  000990  6E26               	movwf	wait_5ms@j,c
  1238  000992  EC11  F00D         	call	_wait_5ms	;wreg free
  1239                           
  1240                           ;main.c: 85: printf("sys reset\r\n");
  1241  000996  0EC7               	movlw	low STR_8
  1242  000998  0100               	movlb	0	; () banked
  1243  00099A  6F7B               	movwf	printf@f& (0+255),b
  1244  00099C  0EFF               	movlw	high STR_8
  1245  00099E  0100               	movlb	0	; () banked
  1246  0009A0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1247  0009A2  EC77  F00C         	call	_printf	;wreg free
  1248                           
  1249                           ;main.c: 86: wait_5ms(5);
  1250  0009A6  0E00               	movlw	0
  1251  0009A8  6E27               	movwf	wait_5ms@j+1,c
  1252  0009AA  0E05               	movlw	5
  1253  0009AC  6E26               	movwf	wait_5ms@j,c
  1254  0009AE  EC11  F00D         	call	_wait_5ms	;wreg free
  1255                           
  1256                           ;main.c: 87: printf("sys get ver\r\n");
  1257  0009B2  0EA0               	movlw	low STR_9
  1258  0009B4  0100               	movlb	0	; () banked
  1259  0009B6  6F7B               	movwf	printf@f& (0+255),b
  1260  0009B8  0EFF               	movlw	high STR_9
  1261  0009BA  0100               	movlb	0	; () banked
  1262  0009BC  6F7C               	movwf	(printf@f+1)& (0+255),b
  1263  0009BE  EC77  F00C         	call	_printf	;wreg free
  1264                           
  1265                           ;main.c: 88: read_line();
  1266  0009C2  EC6A  F00E         	call	_read_line	;wreg free
  1267                           
  1268                           ;main.c: 89: printf("radio get sf\r\n");
  1269  0009C6  0E73               	movlw	low STR_10
  1270  0009C8  0100               	movlb	0	; () banked
  1271  0009CA  6F7B               	movwf	printf@f& (0+255),b
  1272  0009CC  0EFF               	movlw	high STR_10
  1273  0009CE  0100               	movlb	0	; () banked
  1274  0009D0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1275  0009D2  EC77  F00C         	call	_printf	;wreg free
  1276                           
  1277                           ;main.c: 90: read_line();
  1278  0009D6  EC6A  F00E         	call	_read_line	;wreg free
  1279                           
  1280                           ;main.c: 91: printf("radio get bw\r\n");
  1281  0009DA  0E91               	movlw	low STR_11
  1282  0009DC  0100               	movlb	0	; () banked
  1283  0009DE  6F7B               	movwf	printf@f& (0+255),b
  1284  0009E0  0EFF               	movlw	high STR_11
  1285  0009E2  0100               	movlb	0	; () banked
  1286  0009E4  6F7C               	movwf	(printf@f+1)& (0+255),b
  1287  0009E6  EC77  F00C         	call	_printf	;wreg free
  1288                           
  1289                           ;main.c: 92: read_line();
  1290  0009EA  EC6A  F00E         	call	_read_line	;wreg free
  1291                           
  1292                           ;main.c: 93: printf("radio get cr\r\n");
  1293  0009EE  0E82               	movlw	low STR_12
  1294  0009F0  0100               	movlb	0	; () banked
  1295  0009F2  6F7B               	movwf	printf@f& (0+255),b
  1296  0009F4  0EFF               	movlw	high STR_12
  1297  0009F6  0100               	movlb	0	; () banked
  1298  0009F8  6F7C               	movwf	(printf@f+1)& (0+255),b
  1299  0009FA  EC77  F00C         	call	_printf	;wreg free
  1300                           
  1301                           ;main.c: 94: read_line();
  1302  0009FE  EC6A  F00E         	call	_read_line	;wreg free
  1303                           
  1304                           ;main.c: 95: printf("radio get prlen\r\n");
  1305  000A02  0E1F               	movlw	low STR_13
  1306  000A04  0100               	movlb	0	; () banked
  1307  000A06  6F7B               	movwf	printf@f& (0+255),b
  1308  000A08  0EFF               	movlw	high STR_13
  1309  000A0A  0100               	movlb	0	; () banked
  1310  000A0C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1311  000A0E  EC77  F00C         	call	_printf	;wreg free
  1312                           
  1313                           ;main.c: 96: read_line();
  1314  000A12  EC6A  F00E         	call	_read_line	;wreg free
  1315                           
  1316                           ;main.c: 97: printf("radio get pwr\r\n");
  1317  000A16  0E63               	movlw	low STR_14
  1318  000A18  0100               	movlb	0	; () banked
  1319  000A1A  6F7B               	movwf	printf@f& (0+255),b
  1320  000A1C  0EFF               	movlw	high STR_14
  1321  000A1E  0100               	movlb	0	; () banked
  1322  000A20  6F7C               	movwf	(printf@f+1)& (0+255),b
  1323  000A22  EC77  F00C         	call	_printf	;wreg free
  1324                           
  1325                           ;main.c: 98: read_line();
  1326  000A26  EC6A  F00E         	call	_read_line	;wreg free
  1327                           
  1328                           ;main.c: 99: printf("mac pause\r\n");
  1329  000A2A  0EBB               	movlw	low STR_15
  1330  000A2C  0100               	movlb	0	; () banked
  1331  000A2E  6F7B               	movwf	printf@f& (0+255),b
  1332  000A30  0EFF               	movlw	high STR_15
  1333  000A32  0100               	movlb	0	; () banked
  1334  000A34  6F7C               	movwf	(printf@f+1)& (0+255),b
  1335  000A36  EC77  F00C         	call	_printf	;wreg free
  1336                           
  1337                           ;main.c: 100: read_line();
  1338  000A3A  EC6A  F00E         	call	_read_line	;wreg free
  1339                           
  1340                           ;main.c: 102: printf("radio set pwr -2\r\n");
  1341  000A3E  0EC0               	movlw	low STR_16
  1342  000A40  0100               	movlb	0	; () banked
  1343  000A42  6F7B               	movwf	printf@f& (0+255),b
  1344  000A44  0EFE               	movlw	high STR_16
  1345  000A46  0100               	movlb	0	; () banked
  1346  000A48  6F7C               	movwf	(printf@f+1)& (0+255),b
  1347  000A4A  EC77  F00C         	call	_printf	;wreg free
  1348                           
  1349                           ;main.c: 103: read_line();
  1350  000A4E  EC6A  F00E         	call	_read_line	;wreg free
  1351                           
  1352                           ;main.c: 104: printf("radio set bw 500\r\n");
  1353  000A52  0EAD               	movlw	low STR_17
  1354  000A54  0100               	movlb	0	; () banked
  1355  000A56  6F7B               	movwf	printf@f& (0+255),b
  1356  000A58  0EFE               	movlw	high STR_17
  1357  000A5A  0100               	movlb	0	; () banked
  1358  000A5C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1359  000A5E  EC77  F00C         	call	_printf	;wreg free
  1360                           
  1361                           ;main.c: 105: read_line();
  1362  000A62  EC6A  F00E         	call	_read_line	;wreg free
  1363                           
  1364                           ;main.c: 106: printf("radio set sf sf7\r\n");
  1365  000A66  0ED3               	movlw	low STR_18
  1366  000A68  0100               	movlb	0	; () banked
  1367  000A6A  6F7B               	movwf	printf@f& (0+255),b
  1368  000A6C  0EFE               	movlw	high STR_18
  1369  000A6E  0100               	movlb	0	; () banked
  1370  000A70  6F7C               	movwf	(printf@f+1)& (0+255),b
  1371  000A72  EC77  F00C         	call	_printf	;wreg free
  1372                           
  1373                           ;main.c: 107: read_line();
  1374  000A76  EC6A  F00E         	call	_read_line	;wreg free
  1375                           
  1376                           ;main.c: 108: printf("radio set cr 4/8\r\n");
  1377  000A7A  0EE6               	movlw	low STR_19
  1378  000A7C  0100               	movlb	0	; () banked
  1379  000A7E  6F7B               	movwf	printf@f& (0+255),b
  1380  000A80  0EFE               	movlw	high STR_19
  1381  000A82  0100               	movlb	0	; () banked
  1382  000A84  6F7C               	movwf	(printf@f+1)& (0+255),b
  1383  000A86  EC77  F00C         	call	_printf	;wreg free
  1384                           
  1385                           ;main.c: 109: read_line();
  1386  000A8A  EC6A  F00E         	call	_read_line	;wreg free
  1387                           
  1388                           ;main.c: 110: printf("radio set crc on\r\n");
  1389  000A8E  0E0C               	movlw	low STR_20
  1390  000A90  0100               	movlb	0	; () banked
  1391  000A92  6F7B               	movwf	printf@f& (0+255),b
  1392  000A94  0EFF               	movlw	high STR_20
  1393  000A96  0100               	movlb	0	; () banked
  1394  000A98  6F7C               	movwf	(printf@f+1)& (0+255),b
  1395  000A9A  EC77  F00C         	call	_printf	;wreg free
  1396                           
  1397                           ;main.c: 111: read_line();
  1398  000A9E  EC6A  F00E         	call	_read_line	;wreg free
  1399                           
  1400                           ;main.c: 113: getUUID();
  1401  000AA2  ECBF  F00D         	call	_getUUID	;wreg free
  1402                           
  1403                           ;main.c: 115: srand((int)strtol(uuid, (0), 0));
  1404  000AA6  0E9B               	movlw	low _uuid
  1405  000AA8  0100               	movlb	0	; () banked
  1406  000AAA  6F68               	movwf	strtol@s& (0+255),b
  1407  000AAC  0E00               	movlw	high _uuid
  1408  000AAE  0100               	movlb	0	; () banked
  1409  000AB0  6F69               	movwf	(strtol@s+1)& (0+255),b
  1410  000AB2  0E00               	movlw	0
  1411  000AB4  0100               	movlb	0	; () banked
  1412  000AB6  6F6A               	movwf	strtol@endptr& (0+255),b
  1413  000AB8  0E00               	movlw	0
  1414  000ABA  0100               	movlb	0	; () banked
  1415  000ABC  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  1416  000ABE  0E00               	movlw	0
  1417  000AC0  0100               	movlb	0	; () banked
  1418  000AC2  6F6D               	movwf	(strtol@base+1)& (0+255),b
  1419  000AC4  0E00               	movlw	0
  1420  000AC6  6F6C               	movwf	strtol@base& (0+255),b
  1421  000AC8  ECC5  F006         	call	_strtol	;wreg free
  1422  000ACC  C068  F078         	movff	?_strtol,srand@x
  1423  000AD0  C069  F079         	movff	?_strtol+1,srand@x+1
  1424  000AD4  EC5C  F00E         	call	_srand	;wreg free
  1425                           
  1426                           ;main.c: 116: int delay = 2000+(rand()%1000);
  1427  000AD8  ECA7  F00B         	call	_rand	;wreg free
  1428  000ADC  C02A  F068         	movff	?_rand,___awmod@dividend
  1429  000AE0  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1430  000AE4  0E03               	movlw	3
  1431  000AE6  0100               	movlb	0	; () banked
  1432  000AE8  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1433  000AEA  0EE8               	movlw	232
  1434  000AEC  6F6A               	movwf	___awmod@divisor& (0+255),b
  1435  000AEE  EC27  F00A         	call	___awmod	;wreg free
  1436  000AF2  0ED0               	movlw	208
  1437  000AF4  0100               	movlb	0	; () banked
  1438  000AF6  2568               	addwf	?___awmod& (0+255),w,b
  1439  000AF8  0100               	movlb	0	; () banked
  1440  000AFA  6F96               	movwf	main@delay& (0+255),b
  1441  000AFC  0E07               	movlw	7
  1442  000AFE  0100               	movlb	0	; () banked
  1443  000B00  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1444  000B02  0100               	movlb	0	; () banked
  1445  000B04  6F97               	movwf	(main@delay+1)& (0+255),b
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;main.c: 117: printf("radio set wdt %d\r\n",delay);
  1449  000B06  0EF9               	movlw	low STR_21
  1450  000B08  0100               	movlb	0	; () banked
  1451  000B0A  6F7B               	movwf	printf@f& (0+255),b
  1452  000B0C  0EFE               	movlw	high STR_21
  1453  000B0E  0100               	movlb	0	; () banked
  1454  000B10  6F7C               	movwf	(printf@f+1)& (0+255),b
  1455  000B12  C096  F07D         	movff	main@delay,?_printf+2
  1456  000B16  C097  F07E         	movff	main@delay+1,?_printf+3
  1457  000B1A  EC77  F00C         	call	_printf	;wreg free
  1458                           
  1459                           ;main.c: 118: read_line();
  1460  000B1E  EC6A  F00E         	call	_read_line	;wreg free
  1461                           
  1462                           ;main.c: 132: printf("radio rx 0\r\n");
  1463  000B22  0EAE               	movlw	low STR_22
  1464  000B24  0100               	movlb	0	; () banked
  1465  000B26  6F7B               	movwf	printf@f& (0+255),b
  1466  000B28  0EFF               	movlw	high STR_22
  1467  000B2A  0100               	movlb	0	; () banked
  1468  000B2C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1469  000B2E  EC77  F00C         	call	_printf	;wreg free
  1470                           
  1471                           ;main.c: 133: read_line();
  1472  000B32  EC6A  F00E         	call	_read_line	;wreg free
  1473                           
  1474                           ;main.c: 136: int q=0;
  1475  000B36  0E00               	movlw	0
  1476  000B38  0100               	movlb	0	; () banked
  1477  000B3A  6F95               	movwf	(main@q+1)& (0+255),b
  1478  000B3C  0E00               	movlw	0
  1479  000B3E  6F94               	movwf	main@q& (0+255),b
  1480  000B40                     l3697:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;main.c: 139: _delay((unsigned long)((1)*(64000000/4000.0)));
  1484  000B40  0E15               	movlw	21
  1485  000B42  0100               	movlb	0	; () banked
  1486  000B44  6F91               	movwf	??_main& (0+255),b
  1487  000B46  0EC6               	movlw	198
  1488  000B48                     u4157:
  1489  000B48  2EE8               	decfsz	wreg,f,c
  1490  000B4A  D7FE               	goto	u4157
  1491  000B4C  2F91               	decfsz	??_main& (0+255),f,b
  1492  000B4E  D7FC               	goto	u4157
  1493  000B50  D000               	nop2	
  1494                           
  1495                           ;main.c: 140: q++;
  1496  000B52  0100               	movlb	0	; () banked
  1497  000B54  4B94               	infsnz	main@q& (0+255),f,b
  1498  000B56  2B95               	incf	(main@q+1)& (0+255),f,b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 146: if(q>(2*delay)){
  1502  000B58  C096  F091         	movff	main@delay,??_main
  1503  000B5C  C097  F092         	movff	main@delay+1,??_main+1
  1504  000B60  90D8               	bcf	status,0,c
  1505  000B62  0100               	movlb	0	; () banked
  1506  000B64  3791               	rlcf	??_main& (0+255),f,b
  1507  000B66  3792               	rlcf	(??_main+1)& (0+255),f,b
  1508  000B68  0100               	movlb	0	; () banked
  1509  000B6A  5194               	movf	main@q& (0+255),w,b
  1510  000B6C  0100               	movlb	0	; () banked
  1511  000B6E  5D91               	subwf	??_main& (0+255),w,b
  1512  000B70  0100               	movlb	0	; () banked
  1513  000B72  5192               	movf	(??_main+1)& (0+255),w,b
  1514  000B74  0A80               	xorlw	128
  1515  000B76  0100               	movlb	0	; () banked
  1516  000B78  6F93               	movwf	(??_main+2)& (0+255),b
  1517  000B7A  0100               	movlb	0	; () banked
  1518  000B7C  5195               	movf	(main@q+1)& (0+255),w,b
  1519  000B7E  0A80               	xorlw	128
  1520  000B80  0100               	movlb	0	; () banked
  1521  000B82  5993               	subwfb	(??_main+2)& (0+255),w,b
  1522  000B84  A0D8               	btfss	status,0,c
  1523  000B86  EF4A  F000         	goto	start
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 148: }
  1527                           ;main.c: 153: if(uartState>2){
  1528                           
  1529                           ; BSR set to: 0
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;main.c: 147: break;
  1533  000B8A  0E02               	movlw	2
  1534  000B8C  0100               	movlb	0	; () banked
  1535  000B8E  6599               	cpfsgt	_uartState& (0+255),b	;volatile
  1536  000B90  D7D7               	goto	l3697
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;main.c: 154: read_line();
  1540  000B92  EC6A  F00E         	call	_read_line	;wreg free
  1541                           
  1542                           ;main.c: 157: if(uartState==3){
  1543  000B96  0E03               	movlw	3
  1544  000B98  0100               	movlb	0	; () banked
  1545  000B9A  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1546  000B9C  A4D8               	btfss	status,2,c
  1547  000B9E  D013               	goto	l3715
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 158: if(q>delay){
  1551  000BA0  0100               	movlb	0	; () banked
  1552  000BA2  5194               	movf	main@q& (0+255),w,b
  1553  000BA4  0100               	movlb	0	; () banked
  1554  000BA6  5D96               	subwf	main@delay& (0+255),w,b
  1555  000BA8  0100               	movlb	0	; () banked
  1556  000BAA  5197               	movf	(main@delay+1)& (0+255),w,b
  1557  000BAC  0A80               	xorlw	128
  1558  000BAE  0100               	movlb	0	; () banked
  1559  000BB0  6F91               	movwf	??_main& (0+255),b
  1560  000BB2  0100               	movlb	0	; () banked
  1561  000BB4  5195               	movf	(main@q+1)& (0+255),w,b
  1562  000BB6  0A80               	xorlw	128
  1563  000BB8  0100               	movlb	0	; () banked
  1564  000BBA  5991               	subwfb	??_main& (0+255),w,b
  1565  000BBC  B0D8               	btfsc	status,0,c
  1566  000BBE  D003               	goto	l3715
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;main.c: 159: uartState=5;
  1570  000BC0  0E05               	movlw	5
  1571  000BC2  0100               	movlb	0	; () banked
  1572  000BC4  6F99               	movwf	_uartState& (0+255),b	;volatile
  1573  000BC6                     l3715:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 160: }
  1577                           ;main.c: 161: }
  1578                           ;main.c: 165: if(uartState==4){
  1579  000BC6  0E04               	movlw	4
  1580  000BC8  0100               	movlb	0	; () banked
  1581  000BCA  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1582  000BCC  A4D8               	btfss	status,2,c
  1583  000BCE  D084               	goto	l3741
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;main.c: 167: if(process_message()){
  1587  000BD0  EC8B  F008         	call	_process_message	;wreg free
  1588  000BD4  0100               	movlb	0	; () banked
  1589  000BD6  5189               	movf	?_process_message& (0+255),w,b
  1590  000BD8  0100               	movlb	0	; () banked
  1591  000BDA  118A               	iorwf	(?_process_message+1)& (0+255),w,b
  1592  000BDC  B4D8               	btfsc	status,2,c
  1593  000BDE  D069               	goto	l3737
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 168: delay = 2000+(rand()%1000);
  1597  000BE0  ECA7  F00B         	call	_rand	;wreg free
  1598  000BE4  C02A  F068         	movff	?_rand,___awmod@dividend
  1599  000BE8  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1600  000BEC  0E03               	movlw	3
  1601  000BEE  0100               	movlb	0	; () banked
  1602  000BF0  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1603  000BF2  0EE8               	movlw	232
  1604  000BF4  6F6A               	movwf	___awmod@divisor& (0+255),b
  1605  000BF6  EC27  F00A         	call	___awmod	;wreg free
  1606  000BFA  0ED0               	movlw	208
  1607  000BFC  0100               	movlb	0	; () banked
  1608  000BFE  2568               	addwf	?___awmod& (0+255),w,b
  1609  000C00  0100               	movlb	0	; () banked
  1610  000C02  6F96               	movwf	main@delay& (0+255),b
  1611  000C04  0E07               	movlw	7
  1612  000C06  0100               	movlb	0	; () banked
  1613  000C08  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1614  000C0A  0100               	movlb	0	; () banked
  1615  000C0C  6F97               	movwf	(main@delay+1)& (0+255),b
  1616                           
  1617                           ;main.c: 169: wait_1ms((rand()%40)+25);
  1618  000C0E  ECA7  F00B         	call	_rand	;wreg free
  1619  000C12  C02A  F068         	movff	?_rand,___awmod@dividend
  1620  000C16  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1621  000C1A  0E00               	movlw	0
  1622  000C1C  0100               	movlb	0	; () banked
  1623  000C1E  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1624  000C20  0E28               	movlw	40
  1625  000C22  6F6A               	movwf	___awmod@divisor& (0+255),b
  1626  000C24  EC27  F00A         	call	___awmod	;wreg free
  1627  000C28  0E19               	movlw	25
  1628  000C2A  0100               	movlb	0	; () banked
  1629  000C2C  2568               	addwf	?___awmod& (0+255),w,b
  1630  000C2E  0100               	movlb	0	; () banked
  1631  000C30  6F6E               	movwf	wait_1ms@j& (0+255),b
  1632  000C32  0E00               	movlw	0
  1633  000C34  0100               	movlb	0	; () banked
  1634  000C36  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1635  000C38  0100               	movlb	0	; () banked
  1636  000C3A  6F6F               	movwf	(wait_1ms@j+1)& (0+255),b
  1637  000C3C  EC9C  F00C         	call	_wait_1ms	;wreg free
  1638                           
  1639                           ;main.c: 170: printf("radio tx 42%s%02X%02X0001\r\n",uuid,inc++,val);
  1640  000C40  0E91               	movlw	low STR_23
  1641  000C42  0100               	movlb	0	; () banked
  1642  000C44  6F7B               	movwf	printf@f& (0+255),b
  1643  000C46  0EFE               	movlw	high STR_23
  1644  000C48  0100               	movlb	0	; () banked
  1645  000C4A  6F7C               	movwf	(printf@f+1)& (0+255),b
  1646  000C4C  0E9B               	movlw	low _uuid
  1647  000C4E  0100               	movlb	0	; () banked
  1648  000C50  6F7D               	movwf	(?_printf+2)& (0+255),b
  1649  000C52  0E00               	movlw	high _uuid
  1650  000C54  0100               	movlb	0	; () banked
  1651  000C56  6F7E               	movwf	(?_printf+3)& (0+255),b
  1652  000C58  C098  F07F         	movff	_inc,?_printf+4
  1653  000C5C  0100               	movlb	0	; () banked
  1654  000C5E  6B80               	clrf	(?_printf+5)& (0+255),b
  1655  000C60  C09A  F081         	movff	_val,?_printf+6
  1656  000C64  0100               	movlb	0	; () banked
  1657  000C66  6B82               	clrf	(?_printf+7)& (0+255),b
  1658  000C68  EC77  F00C         	call	_printf	;wreg free
  1659  000C6C  0100               	movlb	0	; () banked
  1660  000C6E  2B98               	incf	_inc& (0+255),f,b
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 171: read_line();
  1664  000C70  EC6A  F00E         	call	_read_line	;wreg free
  1665                           
  1666                           ;main.c: 172: read_line();
  1667  000C74  EC6A  F00E         	call	_read_line	;wreg free
  1668                           
  1669                           ;main.c: 173: printf("radio set wdt %d\r\n",delay);
  1670  000C78  0EF9               	movlw	low STR_21
  1671  000C7A  0100               	movlb	0	; () banked
  1672  000C7C  6F7B               	movwf	printf@f& (0+255),b
  1673  000C7E  0EFE               	movlw	high STR_21
  1674  000C80  0100               	movlb	0	; () banked
  1675  000C82  6F7C               	movwf	(printf@f+1)& (0+255),b
  1676  000C84  C096  F07D         	movff	main@delay,?_printf+2
  1677  000C88  C097  F07E         	movff	main@delay+1,?_printf+3
  1678  000C8C  EC77  F00C         	call	_printf	;wreg free
  1679                           
  1680                           ;main.c: 174: read_line();
  1681  000C90  EC6A  F00E         	call	_read_line	;wreg free
  1682                           
  1683                           ;main.c: 176: EPWM1_LoadDutyValue((uint16_t) val*4);
  1684  000C94  0100               	movlb	0	; () banked
  1685  000C96  519A               	movf	_val& (0+255),w,b
  1686  000C98  0D04               	mullw	4
  1687  000C9A  CFF3 F026          	movff	prodl,EPWM1_LoadDutyValue@dutyValue
  1688  000C9E  CFF4 F027          	movff	prodh,EPWM1_LoadDutyValue@dutyValue+1
  1689  000CA2  EC79  F00D         	call	_EPWM1_LoadDutyValue	;wreg free
  1690                           
  1691                           ;main.c: 177: q=0;
  1692  000CA6  0E00               	movlw	0
  1693  000CA8  0100               	movlb	0	; () banked
  1694  000CAA  6F95               	movwf	(main@q+1)& (0+255),b
  1695  000CAC  0E00               	movlw	0
  1696  000CAE  6F94               	movwf	main@q& (0+255),b
  1697                           
  1698                           ;main.c: 178: } else {
  1699  000CB0  D013               	goto	l3741
  1700  000CB2                     l3737:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 179: if(q>delay){
  1704  000CB2  0100               	movlb	0	; () banked
  1705  000CB4  5194               	movf	main@q& (0+255),w,b
  1706  000CB6  0100               	movlb	0	; () banked
  1707  000CB8  5D96               	subwf	main@delay& (0+255),w,b
  1708  000CBA  0100               	movlb	0	; () banked
  1709  000CBC  5197               	movf	(main@delay+1)& (0+255),w,b
  1710  000CBE  0A80               	xorlw	128
  1711  000CC0  0100               	movlb	0	; () banked
  1712  000CC2  6F91               	movwf	??_main& (0+255),b
  1713  000CC4  0100               	movlb	0	; () banked
  1714  000CC6  5195               	movf	(main@q+1)& (0+255),w,b
  1715  000CC8  0A80               	xorlw	128
  1716  000CCA  0100               	movlb	0	; () banked
  1717  000CCC  5991               	subwfb	??_main& (0+255),w,b
  1718  000CCE  B0D8               	btfsc	status,0,c
  1719  000CD0  D003               	goto	l3741
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;main.c: 180: uartState=5;
  1723  000CD2  0E05               	movlw	5
  1724  000CD4  0100               	movlb	0	; () banked
  1725  000CD6  6F99               	movwf	_uartState& (0+255),b	;volatile
  1726  000CD8                     l3741:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 181: }
  1730                           ;main.c: 182: }
  1731                           ;main.c: 183: }
  1732                           ;main.c: 185: if(uartState==5){
  1733  000CD8  0E05               	movlw	5
  1734  000CDA  0100               	movlb	0	; () banked
  1735  000CDC  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1736  000CDE  A4D8               	btfss	status,2,c
  1737  000CE0  D046               	goto	l3759
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 186: delay = 2000+(rand()%1000);
  1741  000CE2  ECA7  F00B         	call	_rand	;wreg free
  1742  000CE6  C02A  F068         	movff	?_rand,___awmod@dividend
  1743  000CEA  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1744  000CEE  0E03               	movlw	3
  1745  000CF0  0100               	movlb	0	; () banked
  1746  000CF2  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1747  000CF4  0EE8               	movlw	232
  1748  000CF6  6F6A               	movwf	___awmod@divisor& (0+255),b
  1749  000CF8  EC27  F00A         	call	___awmod	;wreg free
  1750  000CFC  0ED0               	movlw	208
  1751  000CFE  0100               	movlb	0	; () banked
  1752  000D00  2568               	addwf	?___awmod& (0+255),w,b
  1753  000D02  0100               	movlb	0	; () banked
  1754  000D04  6F96               	movwf	main@delay& (0+255),b
  1755  000D06  0E07               	movlw	7
  1756  000D08  0100               	movlb	0	; () banked
  1757  000D0A  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1758  000D0C  0100               	movlb	0	; () banked
  1759  000D0E  6F97               	movwf	(main@delay+1)& (0+255),b
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;main.c: 187: printf("radio tx 42%s%02X%02X0000\r\n",uuid,inc++,val);
  1763  000D10  0E75               	movlw	low STR_25
  1764  000D12  0100               	movlb	0	; () banked
  1765  000D14  6F7B               	movwf	printf@f& (0+255),b
  1766  000D16  0EFE               	movlw	high STR_25
  1767  000D18  0100               	movlb	0	; () banked
  1768  000D1A  6F7C               	movwf	(printf@f+1)& (0+255),b
  1769  000D1C  0E9B               	movlw	low _uuid
  1770  000D1E  0100               	movlb	0	; () banked
  1771  000D20  6F7D               	movwf	(?_printf+2)& (0+255),b
  1772  000D22  0E00               	movlw	high _uuid
  1773  000D24  0100               	movlb	0	; () banked
  1774  000D26  6F7E               	movwf	(?_printf+3)& (0+255),b
  1775  000D28  C098  F07F         	movff	_inc,?_printf+4
  1776  000D2C  0100               	movlb	0	; () banked
  1777  000D2E  6B80               	clrf	(?_printf+5)& (0+255),b
  1778  000D30  C09A  F081         	movff	_val,?_printf+6
  1779  000D34  0100               	movlb	0	; () banked
  1780  000D36  6B82               	clrf	(?_printf+7)& (0+255),b
  1781  000D38  EC77  F00C         	call	_printf	;wreg free
  1782  000D3C  0100               	movlb	0	; () banked
  1783  000D3E  2B98               	incf	_inc& (0+255),f,b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 188: read_line();
  1787  000D40  EC6A  F00E         	call	_read_line	;wreg free
  1788                           
  1789                           ;main.c: 189: read_line();
  1790  000D44  EC6A  F00E         	call	_read_line	;wreg free
  1791                           
  1792                           ;main.c: 190: printf("radio set wdt %d\r\n",delay);
  1793  000D48  0EF9               	movlw	low STR_21
  1794  000D4A  0100               	movlb	0	; () banked
  1795  000D4C  6F7B               	movwf	printf@f& (0+255),b
  1796  000D4E  0EFE               	movlw	high STR_21
  1797  000D50  0100               	movlb	0	; () banked
  1798  000D52  6F7C               	movwf	(printf@f+1)& (0+255),b
  1799  000D54  C096  F07D         	movff	main@delay,?_printf+2
  1800  000D58  C097  F07E         	movff	main@delay+1,?_printf+3
  1801  000D5C  EC77  F00C         	call	_printf	;wreg free
  1802                           
  1803                           ;main.c: 191: read_line();
  1804  000D60  EC6A  F00E         	call	_read_line	;wreg free
  1805                           
  1806                           ;main.c: 192: q=0;
  1807  000D64  0E00               	movlw	0
  1808  000D66  0100               	movlb	0	; () banked
  1809  000D68  6F95               	movwf	(main@q+1)& (0+255),b
  1810  000D6A  0E00               	movlw	0
  1811  000D6C  6F94               	movwf	main@q& (0+255),b
  1812  000D6E                     l3759:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main.c: 193: }
  1816                           ;main.c: 195: printf("radio rx 0\r\n");
  1817  000D6E  0EAE               	movlw	low STR_22
  1818  000D70  0100               	movlb	0	; () banked
  1819  000D72  6F7B               	movwf	printf@f& (0+255),b
  1820  000D74  0EFF               	movlw	high STR_22
  1821  000D76  0100               	movlb	0	; () banked
  1822  000D78  6F7C               	movwf	(printf@f+1)& (0+255),b
  1823  000D7A  EC77  F00C         	call	_printf	;wreg free
  1824                           
  1825                           ;main.c: 196: read_line();
  1826  000D7E  EC6A  F00E         	call	_read_line	;wreg free
  1827                           
  1828                           ;main.c: 197: uartState=0;
  1829  000D82  0E00               	movlw	0
  1830  000D84  0100               	movlb	0	; () banked
  1831  000D86  6F99               	movwf	_uartState& (0+255),b	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           
  1835                           ; BSR set to: 0
  1836  000D88  D6DB               	goto	l3697
  1837  000D8A                     __end_of_main:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1h	equ	0xFE2
  1850                           fsr1l	equ	0xFE1
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _wait_5ms *****************
  1854 ;; Defined at:
  1855 ;;		line 40 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  j               2   37[COMRAM] int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  i               1   42[COMRAM] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;Total ram usage:        6 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    4
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text1
  1884  001A22                     __ptext1:
  1885                           	opt stack 0
  1886  001A22                     _wait_5ms:
  1887                           	opt stack 26
  1888                           
  1889                           ;main.c: 41: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;incstack = 0
  1893  001A22  0E00               	movlw	0
  1894  001A24  6E2B               	movwf	wait_5ms@i,c
  1895  001A26  D009               	goto	l280
  1896  001A28                     l2907:
  1897  001A28  0E68               	movlw	104
  1898  001A2A  6E28               	movwf	??_wait_5ms& (0+255),c
  1899  001A2C  0EE4               	movlw	228
  1900  001A2E                     u4167:
  1901  001A2E  2EE8               	decfsz	wreg,f,c
  1902  001A30  D7FE               	goto	u4167
  1903  001A32  2E28               	decfsz	??_wait_5ms& (0+255),f,c
  1904  001A34  D7FC               	goto	u4167
  1905  001A36  D000               	nop2	
  1906  001A38  2A2B               	incf	wait_5ms@i,f,c
  1907  001A3A                     l280:
  1908  001A3A  502B               	movf	wait_5ms@i,w,c
  1909  001A3C  6E28               	movwf	??_wait_5ms& (0+255),c
  1910  001A3E  6A29               	clrf	(??_wait_5ms+1)& (0+255),c
  1911  001A40  5026               	movf	wait_5ms@j,w,c
  1912  001A42  5C28               	subwf	??_wait_5ms,w,c
  1913  001A44  5029               	movf	??_wait_5ms+1,w,c
  1914  001A46  0A80               	xorlw	128
  1915  001A48  6E2A               	movwf	(??_wait_5ms+2)& (0+255),c
  1916  001A4A  5027               	movf	wait_5ms@j+1,w,c
  1917  001A4C  0A80               	xorlw	128
  1918  001A4E  582A               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  1919  001A50  B0D8               	btfsc	status,0,c
  1920  001A52  0012               	return	
  1921  001A54  D7E9               	goto	l2907
  1922  001A56                     __end_of_wait_5ms:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           prodh	equ	0xFF4
  1929                           prodl	equ	0xFF3
  1930                           intcon	equ	0xFF2
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _wait_1ms *****************
  1939 ;; Defined at:
  1940 ;;		line 44 in file "main.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  j               2   14[BANK0 ] int 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  i               1   43[COMRAM] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1954 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;Total ram usage:        6 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    4
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text2
  1969  001938                     __ptext2:
  1970                           	opt stack 0
  1971  001938                     _wait_1ms:
  1972                           	opt stack 26
  1973                           
  1974                           ;main.c: 45: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((1)*(64000000/4000.0))); 
      +                          }
  1975                           
  1976                           ;incstack = 0
  1977  001938  0E00               	movlw	0
  1978  00193A  6E2C               	movwf	wait_1ms@i,c
  1979  00193C  D00A               	goto	l286
  1980  00193E                     l3535:
  1981  00193E  0E15               	movlw	21
  1982  001940  0100               	movlb	0	; () banked
  1983  001942  6F70               	movwf	??_wait_1ms& (0+255),b
  1984  001944  0EC6               	movlw	198
  1985  001946                     u4177:
  1986  001946  2EE8               	decfsz	wreg,f,c
  1987  001948  D7FE               	goto	u4177
  1988  00194A  2F70               	decfsz	??_wait_1ms& (0+255),f,b
  1989  00194C  D7FC               	goto	u4177
  1990  00194E  D000               	nop2	
  1991  001950  2A2C               	incf	wait_1ms@i,f,c
  1992  001952                     l286:
  1993  001952  502C               	movf	wait_1ms@i,w,c
  1994  001954  0100               	movlb	0	; () banked
  1995  001956  6F70               	movwf	??_wait_1ms& (0+255),b
  1996  001958  6B71               	clrf	(??_wait_1ms+1)& (0+255),b
  1997  00195A  0100               	movlb	0	; () banked
  1998  00195C  516E               	movf	wait_1ms@j& (0+255),w,b
  1999  00195E  0100               	movlb	0	; () banked
  2000  001960  5D70               	subwf	??_wait_1ms& (0+255),w,b
  2001  001962  0100               	movlb	0	; () banked
  2002  001964  5171               	movf	(??_wait_1ms+1)& (0+255),w,b
  2003  001966  0A80               	xorlw	128
  2004  001968  0100               	movlb	0	; () banked
  2005  00196A  6F72               	movwf	(??_wait_1ms+2)& (0+255),b
  2006  00196C  0100               	movlb	0	; () banked
  2007  00196E  516F               	movf	(wait_1ms@j+1)& (0+255),w,b
  2008  001970  0A80               	xorlw	128
  2009  001972  0100               	movlb	0	; () banked
  2010  001974  5972               	subwfb	(??_wait_1ms+2)& (0+255),w,b
  2011  001976  B0D8               	btfsc	status,0,c
  2012  001978  0012               	return	
  2013  00197A  D7E1               	goto	l3535
  2014  00197C                     __end_of_wait_1ms:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodh	equ	0xFF4
  2021                           prodl	equ	0xFF3
  2022                           intcon	equ	0xFF2
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           postdec1	equ	0xFE5
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _srand *****************
  2031 ;; Defined at:
  2032 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  x               2   24[BANK0 ] unsigned int 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		status,2
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;Total ram usage:        2 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    4
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text3
  2061  001CB8                     __ptext3:
  2062                           	opt stack 0
  2063  001CB8                     _srand:
  2064                           	opt stack 26
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;incstack = 0
  2068  001CB8  C078  F035         	movff	srand@x,_randx
  2069  001CBC  C079  F036         	movff	srand@x+1,_randx+1
  2070  001CC0  6A37               	clrf	_randx+2,c
  2071  001CC2  6A38               	clrf	_randx+3,c
  2072  001CC4  0012               	return		;funcret
  2073  001CC6                     __end_of_srand:
  2074                           	opt stack 0
  2075                           tblptru	equ	0xFF8
  2076                           tblptrh	equ	0xFF7
  2077                           tblptrl	equ	0xFF6
  2078                           tablat	equ	0xFF5
  2079                           prodh	equ	0xFF4
  2080                           prodl	equ	0xFF3
  2081                           intcon	equ	0xFF2
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           postdec1	equ	0xFE5
  2085                           fsr1h	equ	0xFE2
  2086                           fsr1l	equ	0xFE1
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _rand *****************
  2090 ;; Defined at:
  2091 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2   41[COMRAM] int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        2 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    5
  2112 ;; This function calls:
  2113 ;;		___lmul
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text4
  2120  00174E                     __ptext4:
  2121                           	opt stack 0
  2122  00174E                     _rand:
  2123                           	opt stack 25
  2124                           
  2125                           ;incstack = 0
  2126  00174E  C035  F060         	movff	_randx,___lmul@multiplier
  2127  001752  C036  F061         	movff	_randx+1,___lmul@multiplier+1
  2128  001756  C037  F062         	movff	_randx+2,___lmul@multiplier+2
  2129  00175A  C038  F063         	movff	_randx+3,___lmul@multiplier+3
  2130  00175E  0E6D               	movlw	109
  2131  001760  0100               	movlb	0	; () banked
  2132  001762  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2133  001764  0E4E               	movlw	78
  2134  001766  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2135  001768  0EC6               	movlw	198
  2136  00176A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2137  00176C  0E41               	movlw	65
  2138  00176E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2139  001770  EC0F  F00B         	call	___lmul	;wreg free
  2140  001774  C060  F035         	movff	?___lmul,_randx
  2141  001778  C061  F036         	movff	?___lmul+1,_randx+1
  2142  00177C  C062  F037         	movff	?___lmul+2,_randx+2
  2143  001780  C063  F038         	movff	?___lmul+3,_randx+3
  2144  001784  0E39               	movlw	57
  2145  001786  2635               	addwf	_randx,f,c
  2146  001788  0E30               	movlw	48
  2147  00178A  2236               	addwfc	_randx+1,f,c
  2148  00178C  0E00               	movlw	0
  2149  00178E  2237               	addwfc	_randx+2,f,c
  2150  001790  0E00               	movlw	0
  2151  001792  2238               	addwfc	_randx+3,f,c
  2152  001794  0EFF               	movlw	255
  2153  001796  1437               	andwf	_randx+2,w,c
  2154  001798  6E2A               	movwf	?_rand,c
  2155  00179A  0E7F               	movlw	127
  2156  00179C  1438               	andwf	_randx+3,w,c
  2157  00179E  6E2B               	movwf	?_rand+1,c
  2158  0017A0  0012               	return	
  2159  0017A2                     __end_of_rand:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           intcon	equ	0xFF2
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postdec1	equ	0xFE5
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _process_message *****************
  2176 ;; Defined at:
  2177 ;;		line 54 in file "main.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  hexval          4   45[BANK0 ] unsigned char [4]
  2182 ;;  res             2   43[BANK0 ] int 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2   41[BANK0 ] int 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        8 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    8
  2199 ;; This function calls:
  2200 ;;		_sprintf
  2201 ;;		_strlen
  2202 ;;		_strstr
  2203 ;;		_strtol
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text5
  2210  001116                     __ptext5:
  2211                           	opt stack 0
  2212  001116                     _process_message:
  2213                           	opt stack 22
  2214                           
  2215                           ;main.c: 56: if(strlen(line)!=32)return 0;
  2216                           
  2217                           ;incstack = 0
  2218  001116  0E80               	movlw	low _line
  2219  001118  6E26               	movwf	strlen@s,c
  2220  00111A  0E01               	movlw	high _line
  2221  00111C  6E27               	movwf	strlen@s+1,c
  2222  00111E  ECD1  F00B         	call	_strlen	;wreg free
  2223  001122  0E20               	movlw	32
  2224  001124  1826               	xorwf	?_strlen,w,c
  2225  001126  1027               	iorwf	?_strlen+1,w,c
  2226  001128  B4D8               	btfsc	status,2,c
  2227  00112A  D006               	goto	l3551
  2228  00112C  0E00               	movlw	0
  2229  00112E  0100               	movlb	0	; () banked
  2230  001130  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2231  001132  0E00               	movlw	0
  2232  001134  6F89               	movwf	?_process_message& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235  001136  0012               	return	
  2236  001138                     l3551:
  2237                           
  2238                           ;main.c: 58: int res = 0;
  2239  001138  0E00               	movlw	0
  2240  00113A  0100               	movlb	0	; () banked
  2241  00113C  6F8C               	movwf	(process_message@res+1)& (0+255),b
  2242  00113E  0E00               	movlw	0
  2243  001140  6F8B               	movwf	process_message@res& (0+255),b
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;main.c: 60: if(strstr(line,uuid)!=0)res++;
  2247  001142  0E80               	movlw	low _line
  2248  001144  0100               	movlb	0	; () banked
  2249  001146  6F69               	movwf	strstr@s1& (0+255),b
  2250  001148  0E01               	movlw	high _line
  2251  00114A  0100               	movlb	0	; () banked
  2252  00114C  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2253  00114E  0E9B               	movlw	low _uuid
  2254  001150  0100               	movlb	0	; () banked
  2255  001152  6F6B               	movwf	strstr@s2& (0+255),b
  2256  001154  0E00               	movlw	high _uuid
  2257  001156  0100               	movlb	0	; () banked
  2258  001158  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2259  00115A  EC79  F009         	call	_strstr	;wreg free
  2260  00115E  0100               	movlb	0	; () banked
  2261  001160  5169               	movf	?_strstr& (0+255),w,b
  2262  001162  0100               	movlb	0	; () banked
  2263  001164  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2264  001166  B4D8               	btfsc	status,2,c
  2265  001168  D003               	goto	l3557
  2266                           
  2267                           ; BSR set to: 0
  2268  00116A  0100               	movlb	0	; () banked
  2269  00116C  4B8B               	infsnz	process_message@res& (0+255),f,b
  2270  00116E  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2271  001170                     l3557:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 62: if(strstr(line,"FFFFFFFFFFFFFFFF")!=0)res++;
  2275  001170  0E80               	movlw	low _line
  2276  001172  0100               	movlb	0	; () banked
  2277  001174  6F69               	movwf	strstr@s1& (0+255),b
  2278  001176  0E01               	movlw	high _line
  2279  001178  0100               	movlb	0	; () banked
  2280  00117A  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2281  00117C  0E42               	movlw	low STR_6
  2282  00117E  0100               	movlb	0	; () banked
  2283  001180  6F6B               	movwf	strstr@s2& (0+255),b
  2284  001182  0EFF               	movlw	high STR_6
  2285  001184  0100               	movlb	0	; () banked
  2286  001186  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2287  001188  EC79  F009         	call	_strstr	;wreg free
  2288  00118C  0100               	movlb	0	; () banked
  2289  00118E  5169               	movf	?_strstr& (0+255),w,b
  2290  001190  0100               	movlb	0	; () banked
  2291  001192  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2292  001194  B4D8               	btfsc	status,2,c
  2293  001196  D003               	goto	l3561
  2294                           
  2295                           ; BSR set to: 0
  2296  001198  0100               	movlb	0	; () banked
  2297  00119A  4B8B               	infsnz	process_message@res& (0+255),f,b
  2298  00119C  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2299  00119E                     l3561:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 64: if(res>0){
  2303  00119E  0100               	movlb	0	; () banked
  2304  0011A0  BF8C               	btfsc	(process_message@res+1)& (0+255),7,b
  2305  0011A2  D03A               	goto	l3571
  2306  0011A4  0100               	movlb	0	; () banked
  2307  0011A6  518C               	movf	(process_message@res+1)& (0+255),w,b
  2308  0011A8  E104               	bnz	u4000
  2309  0011AA  0100               	movlb	0	; () banked
  2310  0011AC  058B               	decf	process_message@res& (0+255),w,b
  2311  0011AE  A0D8               	btfss	status,0,c
  2312  0011B0  D033               	goto	l3571
  2313  0011B2                     u4000:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;main.c: 66: char hexval[4];
  2317                           ;main.c: 67: sprintf(hexval,"%c%c",line[28],line[29]);
  2318  0011B2  0E8D               	movlw	low process_message@hexval
  2319  0011B4  0100               	movlb	0	; () banked
  2320  0011B6  6F7B               	movwf	sprintf@wh& (0+255),b
  2321  0011B8  0E00               	movlw	high process_message@hexval
  2322  0011BA  0100               	movlb	0	; () banked
  2323  0011BC  6F7C               	movwf	(sprintf@wh+1)& (0+255),b
  2324  0011BE  0EF9               	movlw	low STR_7
  2325  0011C0  0100               	movlb	0	; () banked
  2326  0011C2  6F7D               	movwf	sprintf@f& (0+255),b
  2327  0011C4  0EFF               	movlw	high STR_7
  2328  0011C6  0100               	movlb	0	; () banked
  2329  0011C8  6F7E               	movwf	(sprintf@f+1)& (0+255),b
  2330  0011CA  C19C  F07F         	movff	_line+28,?_sprintf+4	;volatile
  2331  0011CE  0100               	movlb	0	; () banked
  2332  0011D0  6B80               	clrf	(?_sprintf+5)& (0+255),b
  2333  0011D2  C19D  F081         	movff	_line+29,?_sprintf+6	;volatile
  2334  0011D6  0100               	movlb	0	; () banked
  2335  0011D8  6B82               	clrf	(?_sprintf+7)& (0+255),b
  2336  0011DA  EC25  F00C         	call	_sprintf	;wreg free
  2337                           
  2338                           ;main.c: 68: val = (int)strtol(hexval, (0), 16);
  2339  0011DE  0E8D               	movlw	low process_message@hexval
  2340  0011E0  0100               	movlb	0	; () banked
  2341  0011E2  6F68               	movwf	strtol@s& (0+255),b
  2342  0011E4  0E00               	movlw	high process_message@hexval
  2343  0011E6  0100               	movlb	0	; () banked
  2344  0011E8  6F69               	movwf	(strtol@s+1)& (0+255),b
  2345  0011EA  0E00               	movlw	0
  2346  0011EC  0100               	movlb	0	; () banked
  2347  0011EE  6F6A               	movwf	strtol@endptr& (0+255),b
  2348  0011F0  0E00               	movlw	0
  2349  0011F2  0100               	movlb	0	; () banked
  2350  0011F4  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  2351  0011F6  0E00               	movlw	0
  2352  0011F8  0100               	movlb	0	; () banked
  2353  0011FA  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2354  0011FC  0E10               	movlw	16
  2355  0011FE  6F6C               	movwf	strtol@base& (0+255),b
  2356  001200  ECC5  F006         	call	_strtol	;wreg free
  2357  001204  0100               	movlb	0	; () banked
  2358  001206  5168               	movf	?_strtol& (0+255),w,b
  2359  001208  0100               	movlb	0	; () banked
  2360  00120A  6F9A               	movwf	_val& (0+255),b
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 70: return 1;
  2364  00120C  0E00               	movlw	0
  2365  00120E  0100               	movlb	0	; () banked
  2366  001210  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2367  001212  0E01               	movlw	1
  2368  001214  6F89               	movwf	?_process_message& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371  001216  0012               	return	
  2372  001218                     l3571:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;main.c: 71: }
  2376                           ;main.c: 73: return 0;
  2377  001218  0E00               	movlw	0
  2378  00121A  0100               	movlb	0	; () banked
  2379  00121C  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2380  00121E  0E00               	movlw	0
  2381  001220  6F89               	movwf	?_process_message& (0+255),b
  2382  001222  0012               	return	
  2383  001224                     __end_of_process_message:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           prodh	equ	0xFF4
  2390                           prodl	equ	0xFF3
  2391                           intcon	equ	0xFF2
  2392                           postinc0	equ	0xFEE
  2393                           wreg	equ	0xFE8
  2394                           postdec1	equ	0xFE5
  2395                           fsr1h	equ	0xFE2
  2396                           fsr1l	equ	0xFE1
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _strtol *****************
  2400 ;; Defined at:
  2401 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2404 ;;		 -> process_message@hexval(4), uuid(40), 
  2405 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2406 ;;		 -> NULL(0), 
  2407 ;;  base            2   12[BANK0 ] int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  a               4   19[BANK0 ] long 
  2410 ;;  c               1   23[BANK0 ] unsigned char 
  2411 ;;  sign            1   18[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  4    8[BANK0 ] long 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:       16 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    6
  2428 ;; This function calls:
  2429 ;;		___lmul
  2430 ;;		_isalpha
  2431 ;;		_isdigit
  2432 ;;		_isspace
  2433 ;;		_toupper
  2434 ;; This function is called by:
  2435 ;;		_process_message
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text6
  2441  000D8A                     __ptext6:
  2442                           	opt stack 0
  2443  000D8A                     _strtol:
  2444                           	opt stack 24
  2445  000D8A  C068  FFD9         	movff	strtol@s,fsr2l
  2446  000D8E  C069  FFDA         	movff	strtol@s+1,fsr2h
  2447  000D92  50DF               	movf	indf2,w,c
  2448  000D94  0100               	movlb	0	; () banked
  2449  000D96  6F77               	movwf	strtol@c& (0+255),b
  2450                           
  2451                           ; BSR set to: 0
  2452  000D98  0100               	movlb	0	; () banked
  2453  000D9A  4B68               	infsnz	strtol@s& (0+255),f,b
  2454  000D9C  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2455                           
  2456                           ; BSR set to: 0
  2457  000D9E  0100               	movlb	0	; () banked
  2458  000DA0  5177               	movf	strtol@c& (0+255),w,b
  2459  000DA2  ECE8  F00D         	call	_isspace
  2460  000DA6  B0D8               	btfsc	status,0,c
  2461  000DA8  D7F0               	goto	l3455
  2462  000DAA  0E00               	movlw	0
  2463  000DAC  0100               	movlb	0	; () banked
  2464  000DAE  6F73               	movwf	strtol@a& (0+255),b
  2465  000DB0  0E00               	movlw	0
  2466  000DB2  6F74               	movwf	(strtol@a+1)& (0+255),b
  2467  000DB4  0E00               	movlw	0
  2468  000DB6  6F75               	movwf	(strtol@a+2)& (0+255),b
  2469  000DB8  0E00               	movlw	0
  2470  000DBA  6F76               	movwf	(strtol@a+3)& (0+255),b
  2471  000DBC  0E00               	movlw	0
  2472  000DBE  0100               	movlb	0	; () banked
  2473  000DC0  6F72               	movwf	strtol@sign& (0+255),b
  2474                           
  2475                           ; BSR set to: 0
  2476  000DC2  0E2D               	movlw	45
  2477  000DC4  0100               	movlb	0	; () banked
  2478  000DC6  1977               	xorwf	strtol@c& (0+255),w,b
  2479  000DC8  A4D8               	btfss	status,2,c
  2480  000DCA  D008               	goto	l3471
  2481                           
  2482                           ; BSR set to: 0
  2483  000DCC  0E01               	movlw	1
  2484  000DCE  0100               	movlb	0	; () banked
  2485  000DD0  6F72               	movwf	strtol@sign& (0+255),b
  2486  000DD2  D009               	goto	l3473
  2487  000DD4                     l3469:
  2488                           
  2489                           ; BSR set to: 0
  2490  000DD4  0100               	movlb	0	; () banked
  2491  000DD6  4B68               	infsnz	strtol@s& (0+255),f,b
  2492  000DD8  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2493  000DDA  D00D               	goto	l3477
  2494  000DDC                     l3471:
  2495                           
  2496                           ; BSR set to: 0
  2497  000DDC  0E2B               	movlw	43
  2498  000DDE  0100               	movlb	0	; () banked
  2499  000DE0  1977               	xorwf	strtol@c& (0+255),w,b
  2500  000DE2  A4D8               	btfss	status,2,c
  2501  000DE4  D008               	goto	l3477
  2502  000DE6                     l3473:
  2503                           
  2504                           ; BSR set to: 0
  2505  000DE6  C068  FFD9         	movff	strtol@s,fsr2l
  2506  000DEA  C069  FFDA         	movff	strtol@s+1,fsr2h
  2507  000DEE  50DF               	movf	indf2,w,c
  2508  000DF0  0100               	movlb	0	; () banked
  2509  000DF2  6F77               	movwf	strtol@c& (0+255),b
  2510  000DF4  D7EF               	goto	l3469
  2511  000DF6                     l3477:
  2512                           
  2513                           ; BSR set to: 0
  2514  000DF6  0E30               	movlw	48
  2515  000DF8  0100               	movlb	0	; () banked
  2516  000DFA  1977               	xorwf	strtol@c& (0+255),w,b
  2517  000DFC  A4D8               	btfss	status,2,c
  2518  000DFE  D03C               	goto	l3501
  2519                           
  2520                           ; BSR set to: 0
  2521  000E00  C068  FFD9         	movff	strtol@s,fsr2l
  2522  000E04  C069  FFDA         	movff	strtol@s+1,fsr2h
  2523  000E08  50DF               	movf	indf2,w,c
  2524  000E0A  0100               	movlb	0	; () banked
  2525  000E0C  6F77               	movwf	strtol@c& (0+255),b
  2526                           
  2527                           ; BSR set to: 0
  2528  000E0E  0100               	movlb	0	; () banked
  2529  000E10  4B68               	infsnz	strtol@s& (0+255),f,b
  2530  000E12  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2531                           
  2532                           ; BSR set to: 0
  2533  000E14  0100               	movlb	0	; () banked
  2534  000E16  516C               	movf	strtol@base& (0+255),w,b
  2535  000E18  0100               	movlb	0	; () banked
  2536  000E1A  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2537  000E1C  B4D8               	btfsc	status,2,c
  2538  000E1E  D007               	goto	l3487
  2539                           
  2540                           ; BSR set to: 0
  2541  000E20  0E10               	movlw	16
  2542  000E22  0100               	movlb	0	; () banked
  2543  000E24  196C               	xorwf	strtol@base& (0+255),w,b
  2544  000E26  0100               	movlb	0	; () banked
  2545  000E28  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2546  000E2A  A4D8               	btfss	status,2,c
  2547  000E2C  D01A               	goto	l3497
  2548  000E2E                     l3487:
  2549                           
  2550                           ; BSR set to: 0
  2551  000E2E  0E78               	movlw	120
  2552  000E30  0100               	movlb	0	; () banked
  2553  000E32  1977               	xorwf	strtol@c& (0+255),w,b
  2554  000E34  B4D8               	btfsc	status,2,c
  2555  000E36  D005               	goto	l3491
  2556                           
  2557                           ; BSR set to: 0
  2558  000E38  0E58               	movlw	88
  2559  000E3A  0100               	movlb	0	; () banked
  2560  000E3C  1977               	xorwf	strtol@c& (0+255),w,b
  2561  000E3E  A4D8               	btfss	status,2,c
  2562  000E40  D010               	goto	l3497
  2563  000E42                     l3491:
  2564                           
  2565                           ; BSR set to: 0
  2566  000E42  0E00               	movlw	0
  2567  000E44  0100               	movlb	0	; () banked
  2568  000E46  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2569  000E48  0E10               	movlw	16
  2570  000E4A  6F6C               	movwf	strtol@base& (0+255),b
  2571                           
  2572                           ; BSR set to: 0
  2573  000E4C  C068  FFD9         	movff	strtol@s,fsr2l
  2574  000E50  C069  FFDA         	movff	strtol@s+1,fsr2h
  2575  000E54  50DF               	movf	indf2,w,c
  2576  000E56  0100               	movlb	0	; () banked
  2577  000E58  6F77               	movwf	strtol@c& (0+255),b
  2578                           
  2579                           ; BSR set to: 0
  2580  000E5A  0100               	movlb	0	; () banked
  2581  000E5C  4B68               	infsnz	strtol@s& (0+255),f,b
  2582  000E5E  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2583  000E60  D00B               	goto	l3501
  2584  000E62                     l3497:
  2585                           
  2586                           ; BSR set to: 0
  2587  000E62  0100               	movlb	0	; () banked
  2588  000E64  516C               	movf	strtol@base& (0+255),w,b
  2589  000E66  0100               	movlb	0	; () banked
  2590  000E68  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2591  000E6A  A4D8               	btfss	status,2,c
  2592  000E6C  D005               	goto	l3501
  2593                           
  2594                           ; BSR set to: 0
  2595  000E6E  0E00               	movlw	0
  2596  000E70  0100               	movlb	0	; () banked
  2597  000E72  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2598  000E74  0E08               	movlw	8
  2599  000E76  6F6C               	movwf	strtol@base& (0+255),b
  2600  000E78                     l3501:
  2601                           
  2602                           ; BSR set to: 0
  2603  000E78  0100               	movlb	0	; () banked
  2604  000E7A  516C               	movf	strtol@base& (0+255),w,b
  2605  000E7C  0100               	movlb	0	; () banked
  2606  000E7E  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2607  000E80  A4D8               	btfss	status,2,c
  2608  000E82  D005               	goto	l3505
  2609                           
  2610                           ; BSR set to: 0
  2611  000E84  0E00               	movlw	0
  2612  000E86  0100               	movlb	0	; () banked
  2613  000E88  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2614  000E8A  0E0A               	movlw	10
  2615  000E8C  6F6C               	movwf	strtol@base& (0+255),b
  2616  000E8E                     l3505:
  2617                           
  2618                           ; BSR set to: 0
  2619  000E8E  0100               	movlb	0	; () banked
  2620  000E90  5177               	movf	strtol@c& (0+255),w,b
  2621  000E92  ECD4  F00D         	call	_isalpha
  2622  000E96  A0D8               	btfss	status,0,c
  2623  000E98  D008               	goto	l3509
  2624  000E9A  0100               	movlb	0	; () banked
  2625  000E9C  5177               	movf	strtol@c& (0+255),w,b
  2626  000E9E  EC49  F00E         	call	_toupper
  2627  000EA2  0FC9               	addlw	201
  2628  000EA4  0100               	movlb	0	; () banked
  2629  000EA6  6F77               	movwf	strtol@c& (0+255),b
  2630  000EA8  D009               	goto	l3513
  2631  000EAA                     l3509:
  2632  000EAA  0100               	movlb	0	; () banked
  2633  000EAC  5177               	movf	strtol@c& (0+255),w,b
  2634  000EAE  EC2D  F00E         	call	_isdigit
  2635  000EB2  A0D8               	btfss	status,0,c
  2636  000EB4  D04C               	goto	l3523
  2637  000EB6  0E30               	movlw	48
  2638  000EB8  0100               	movlb	0	; () banked
  2639  000EBA  5F77               	subwf	strtol@c& (0+255),f,b
  2640  000EBC                     l3513:
  2641                           
  2642                           ; BSR set to: 0
  2643  000EBC  0100               	movlb	0	; () banked
  2644  000EBE  5177               	movf	strtol@c& (0+255),w,b
  2645  000EC0  0100               	movlb	0	; () banked
  2646  000EC2  6F6E               	movwf	??_strtol& (0+255),b
  2647  000EC4  6B6F               	clrf	(??_strtol+1)& (0+255),b
  2648  000EC6  0100               	movlb	0	; () banked
  2649  000EC8  516C               	movf	strtol@base& (0+255),w,b
  2650  000ECA  0100               	movlb	0	; () banked
  2651  000ECC  5D6E               	subwf	??_strtol& (0+255),w,b
  2652  000ECE  0100               	movlb	0	; () banked
  2653  000ED0  516F               	movf	(??_strtol+1)& (0+255),w,b
  2654  000ED2  0A80               	xorlw	128
  2655  000ED4  0100               	movlb	0	; () banked
  2656  000ED6  6F70               	movwf	(??_strtol+2)& (0+255),b
  2657  000ED8  0100               	movlb	0	; () banked
  2658  000EDA  516D               	movf	(strtol@base+1)& (0+255),w,b
  2659  000EDC  0A80               	xorlw	128
  2660  000EDE  0100               	movlb	0	; () banked
  2661  000EE0  5970               	subwfb	(??_strtol+2)& (0+255),w,b
  2662  000EE2  B0D8               	btfsc	status,0,c
  2663  000EE4  D034               	goto	l3523
  2664                           
  2665                           ; BSR set to: 0
  2666                           
  2667                           ; BSR set to: 0
  2668                           
  2669                           ; BSR set to: 0
  2670  000EE6  C06C  F060         	movff	strtol@base,___lmul@multiplier
  2671  000EEA  C06D  F061         	movff	strtol@base+1,___lmul@multiplier+1
  2672  000EEE  0100               	movlb	0	; () banked
  2673  000EF0  0E00               	movlw	0
  2674  000EF2  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2675  000EF4  0EFF               	movlw	-1
  2676  000EF6  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
  2677  000EF8  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
  2678  000EFA  C073  F064         	movff	strtol@a,___lmul@multiplicand
  2679  000EFE  C074  F065         	movff	strtol@a+1,___lmul@multiplicand+1
  2680  000F02  C075  F066         	movff	strtol@a+2,___lmul@multiplicand+2
  2681  000F06  C076  F067         	movff	strtol@a+3,___lmul@multiplicand+3
  2682  000F0A  EC0F  F00B         	call	___lmul	;wreg free
  2683  000F0E  0100               	movlb	0	; () banked
  2684  000F10  5177               	movf	strtol@c& (0+255),w,b
  2685  000F12  0100               	movlb	0	; () banked
  2686  000F14  2560               	addwf	?___lmul& (0+255),w,b
  2687  000F16  0100               	movlb	0	; () banked
  2688  000F18  6F73               	movwf	strtol@a& (0+255),b
  2689  000F1A  0E00               	movlw	0
  2690  000F1C  0100               	movlb	0	; () banked
  2691  000F1E  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  2692  000F20  0100               	movlb	0	; () banked
  2693  000F22  6F74               	movwf	(strtol@a+1)& (0+255),b
  2694  000F24  0E00               	movlw	0
  2695  000F26  0100               	movlb	0	; () banked
  2696  000F28  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  2697  000F2A  0100               	movlb	0	; () banked
  2698  000F2C  6F75               	movwf	(strtol@a+2)& (0+255),b
  2699  000F2E  0E00               	movlw	0
  2700  000F30  0100               	movlb	0	; () banked
  2701  000F32  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  2702  000F34  0100               	movlb	0	; () banked
  2703  000F36  6F76               	movwf	(strtol@a+3)& (0+255),b
  2704                           
  2705                           ; BSR set to: 0
  2706  000F38  C068  FFD9         	movff	strtol@s,fsr2l
  2707  000F3C  C069  FFDA         	movff	strtol@s+1,fsr2h
  2708  000F40  50DF               	movf	indf2,w,c
  2709  000F42  0100               	movlb	0	; () banked
  2710  000F44  6F77               	movwf	strtol@c& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713  000F46  0100               	movlb	0	; () banked
  2714  000F48  4B68               	infsnz	strtol@s& (0+255),f,b
  2715  000F4A  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2716  000F4C  D7A0               	goto	l3505
  2717  000F4E                     l3523:
  2718  000F4E  0100               	movlb	0	; () banked
  2719  000F50  516A               	movf	strtol@endptr& (0+255),w,b
  2720  000F52  0100               	movlb	0	; () banked
  2721  000F54  116B               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2722  000F56  B4D8               	btfsc	status,2,c
  2723  000F58  D012               	goto	l3527
  2724                           
  2725                           ; BSR set to: 0
  2726  000F5A  0EFF               	movlw	255
  2727  000F5C  0100               	movlb	0	; () banked
  2728  000F5E  2568               	addwf	strtol@s& (0+255),w,b
  2729  000F60  0100               	movlb	0	; () banked
  2730  000F62  6F6E               	movwf	??_strtol& (0+255),b
  2731  000F64  0EFF               	movlw	255
  2732  000F66  0100               	movlb	0	; () banked
  2733  000F68  2169               	addwfc	(strtol@s+1)& (0+255),w,b
  2734  000F6A  0100               	movlb	0	; () banked
  2735  000F6C  6F6F               	movwf	(??_strtol+1)& (0+255),b
  2736  000F6E  C06A  FFD9         	movff	strtol@endptr,fsr2l
  2737  000F72  C06B  FFDA         	movff	strtol@endptr+1,fsr2h
  2738  000F76  C06E  FFDE         	movff	??_strtol,postinc2
  2739  000F7A  C06F  FFDD         	movff	??_strtol+1,postdec2
  2740  000F7E                     l3527:
  2741                           
  2742                           ; BSR set to: 0
  2743  000F7E  0100               	movlb	0	; () banked
  2744  000F80  5172               	movf	strtol@sign& (0+255),w,b
  2745  000F82  0100               	movlb	0	; () banked
  2746  000F84  B4D8               	btfsc	status,2,c
  2747  000F86  D01B               	goto	l1053
  2748                           
  2749                           ; BSR set to: 0
  2750  000F88  C073  F06E         	movff	strtol@a,??_strtol
  2751  000F8C  C074  F06F         	movff	strtol@a+1,??_strtol+1
  2752  000F90  C075  F070         	movff	strtol@a+2,??_strtol+2
  2753  000F94  C076  F071         	movff	strtol@a+3,??_strtol+3
  2754  000F98  0100               	movlb	0	; () banked
  2755  000F9A  1F6E               	comf	??_strtol& (0+255),f,b
  2756  000F9C  1F6F               	comf	(??_strtol+1)& (0+255),f,b
  2757  000F9E  1F70               	comf	(??_strtol+2)& (0+255),f,b
  2758  000FA0  1F71               	comf	(??_strtol+3)& (0+255),f,b
  2759  000FA2  2B6E               	incf	??_strtol& (0+255),f,b
  2760  000FA4  0E00               	movlw	0
  2761  000FA6  236F               	addwfc	(??_strtol+1)& (0+255),f,b
  2762  000FA8  2370               	addwfc	(??_strtol+2)& (0+255),f,b
  2763  000FAA  2371               	addwfc	(??_strtol+3)& (0+255),f,b
  2764  000FAC  C06E  F068         	movff	??_strtol,?_strtol
  2765  000FB0  C06F  F069         	movff	??_strtol+1,?_strtol+1
  2766  000FB4  C070  F06A         	movff	??_strtol+2,?_strtol+2
  2767  000FB8  C071  F06B         	movff	??_strtol+3,?_strtol+3
  2768                           
  2769                           ; BSR set to: 0
  2770  000FBC  0012               	return	
  2771  000FBE                     l1053:
  2772                           
  2773                           ; BSR set to: 0
  2774  000FBE  C073  F068         	movff	strtol@a,?_strtol
  2775  000FC2  C074  F069         	movff	strtol@a+1,?_strtol+1
  2776  000FC6  C075  F06A         	movff	strtol@a+2,?_strtol+2
  2777  000FCA  C076  F06B         	movff	strtol@a+3,?_strtol+3
  2778                           
  2779                           ; BSR set to: 0
  2780  000FCE  0012               	return		;funcret
  2781  000FD0                     __end_of_strtol:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           intcon	equ	0xFF2
  2790                           postinc0	equ	0xFEE
  2791                           wreg	equ	0xFE8
  2792                           postdec1	equ	0xFE5
  2793                           fsr1h	equ	0xFE2
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _toupper *****************
  2803 ;; Defined at:
  2804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  c               1    wreg     unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  c               1   37[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    4
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_strtol
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text7
  2833  001C92                     __ptext7:
  2834                           	opt stack 0
  2835  001C92                     _toupper:
  2836                           	opt stack 25
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;incstack = 0
  2840                           ;toupper@c stored from wreg
  2841  001C92  6E26               	movwf	toupper@c,c
  2842  001C94  0E7B               	movlw	123
  2843  001C96  6026               	cpfslt	toupper@c,c
  2844  001C98  D004               	goto	l2577
  2845  001C9A  0E60               	movlw	96
  2846  001C9C  6426               	cpfsgt	toupper@c,c
  2847  001C9E  D001               	goto	l2577
  2848  001CA0  9A26               	bcf	toupper@c,5,c
  2849  001CA2                     l2577:
  2850  001CA2  5026               	movf	toupper@c,w,c
  2851  001CA4  0012               	return	
  2852  001CA6                     __end_of_toupper:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           intcon	equ	0xFF2
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           postdec1	equ	0xFE5
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _isspace *****************
  2874 ;; Defined at:
  2875 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  c               1    wreg     unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  c               1   39[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    4
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_strtol
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text8
  2904  001BD0                     __ptext8:
  2905                           	opt stack 0
  2906  001BD0                     _isspace:
  2907                           	opt stack 25
  2908                           
  2909                           ;incstack = 0
  2910                           ;isspace@c stored from wreg
  2911  001BD0  6E28               	movwf	isspace@c,c
  2912  001BD2  0E01               	movlw	1
  2913  001BD4  6E27               	movwf	_isspace$1315,c
  2914  001BD6  0E20               	movlw	32
  2915  001BD8  1828               	xorwf	isspace@c,w,c
  2916  001BDA  B4D8               	btfsc	status,2,c
  2917  001BDC  D008               	goto	l2553
  2918  001BDE  0E0E               	movlw	14
  2919  001BE0  6028               	cpfslt	isspace@c,c
  2920  001BE2  D003               	goto	l2551
  2921  001BE4  0E09               	movlw	9
  2922  001BE6  6028               	cpfslt	isspace@c,c
  2923  001BE8  D002               	goto	l2553
  2924  001BEA                     l2551:
  2925  001BEA  0E00               	movlw	0
  2926  001BEC  6E27               	movwf	_isspace$1315,c
  2927  001BEE                     l2553:
  2928  001BEE  C027  F026         	movff	_isspace$1315,??_isspace
  2929  001BF2  3026               	rrcf	??_isspace,w,c
  2930  001BF4  0012               	return	
  2931  001BF6                     __end_of_isspace:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           prodh	equ	0xFF4
  2938                           prodl	equ	0xFF3
  2939                           intcon	equ	0xFF2
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           postdec1	equ	0xFE5
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           postdec2	equ	0xFDD
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _isalpha *****************
  2953 ;; Defined at:
  2954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  c               1    wreg     unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  c               1   42[COMRAM] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        3 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    5
  2975 ;; This function calls:
  2976 ;;		_isupper
  2977 ;; This function is called by:
  2978 ;;		_strtol
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text9
  2983  001BA8                     __ptext9:
  2984                           	opt stack 0
  2985  001BA8                     _isalpha:
  2986                           	opt stack 24
  2987                           
  2988                           ;incstack = 0
  2989                           ;isalpha@c stored from wreg
  2990  001BA8  6E2B               	movwf	isalpha@c,c
  2991  001BAA  0E01               	movlw	1
  2992  001BAC  6E2A               	movwf	_isalpha$1312,c
  2993  001BAE  0E7B               	movlw	123
  2994  001BB0  602B               	cpfslt	isalpha@c,c
  2995  001BB2  D003               	goto	l2563
  2996  001BB4  0E61               	movlw	97
  2997  001BB6  602B               	cpfslt	isalpha@c,c
  2998  001BB8  D007               	goto	l2567
  2999  001BBA                     l2563:
  3000  001BBA  502B               	movf	isalpha@c,w,c
  3001  001BBC  EC1E  F00E         	call	_isupper
  3002  001BC0  B0D8               	btfsc	status,0,c
  3003  001BC2  D002               	goto	l2567
  3004  001BC4  0E00               	movlw	0
  3005  001BC6  6E2A               	movwf	_isalpha$1312,c
  3006  001BC8                     l2567:
  3007  001BC8  C02A  F029         	movff	_isalpha$1312,??_isalpha
  3008  001BCC  3029               	rrcf	??_isalpha,w,c
  3009  001BCE  0012               	return	
  3010  001BD0                     __end_of_isalpha:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodh	equ	0xFF4
  3017                           prodl	equ	0xFF3
  3018                           intcon	equ	0xFF2
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           postdec1	equ	0xFE5
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           indf2	equ	0xFDF
  3025                           postinc2	equ	0xFDE
  3026                           postdec2	equ	0xFDD
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _isupper *****************
  3032 ;; Defined at:
  3033 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  c               1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  c               1   39[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;		None               void
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;Total ram usage:        3 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    4
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_isalpha
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text10
  3062  001C3C                     __ptext10:
  3063                           	opt stack 0
  3064  001C3C                     _isupper:
  3065                           	opt stack 24
  3066                           
  3067                           ;incstack = 0
  3068                           ;isupper@c stored from wreg
  3069  001C3C  6E28               	movwf	isupper@c,c
  3070  001C3E  0E00               	movlw	0
  3071  001C40  6E27               	movwf	_isupper$1318,c
  3072  001C42  0E5B               	movlw	91
  3073  001C44  6028               	cpfslt	isupper@c,c
  3074  001C46  D005               	goto	l2273
  3075  001C48  0E40               	movlw	64
  3076  001C4A  6428               	cpfsgt	isupper@c,c
  3077  001C4C  D002               	goto	l2273
  3078  001C4E  0E01               	movlw	1
  3079  001C50  6E27               	movwf	_isupper$1318,c
  3080  001C52                     l2273:
  3081  001C52  C027  F026         	movff	_isupper$1318,??_isupper
  3082  001C56  3026               	rrcf	??_isupper,w,c
  3083  001C58  0012               	return	
  3084  001C5A                     __end_of_isupper:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           postinc0	equ	0xFEE
  3094                           wreg	equ	0xFE8
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           postinc2	equ	0xFDE
  3100                           postdec2	equ	0xFDD
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function ___lmul *****************
  3106 ;; Defined at:
  3107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3110 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  product         4   37[COMRAM] unsigned long 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  4    0[BANK0 ] unsigned long 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;Total ram usage:       12 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    4
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_rand
  3133 ;;		_strtol
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text11
  3138  00161E                     __ptext11:
  3139                           	opt stack 0
  3140  00161E                     ___lmul:
  3141                           	opt stack 25
  3142                           
  3143                           ;incstack = 0
  3144  00161E  0E00               	movlw	0
  3145  001620  6E26               	movwf	___lmul@product,c
  3146  001622  0E00               	movlw	0
  3147  001624  6E27               	movwf	___lmul@product+1,c
  3148  001626  0E00               	movlw	0
  3149  001628  6E28               	movwf	___lmul@product+2,c
  3150  00162A  0E00               	movlw	0
  3151  00162C  6E29               	movwf	___lmul@product+3,c
  3152  00162E                     l3397:
  3153  00162E  0100               	movlb	0	; () banked
  3154  001630  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3155  001632  D00C               	goto	l3401
  3156                           
  3157                           ; BSR set to: 0
  3158  001634  0100               	movlb	0	; () banked
  3159  001636  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3160  001638  2626               	addwf	___lmul@product,f,c
  3161  00163A  0100               	movlb	0	; () banked
  3162  00163C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3163  00163E  2227               	addwfc	___lmul@product+1,f,c
  3164  001640  0100               	movlb	0	; () banked
  3165  001642  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3166  001644  2228               	addwfc	___lmul@product+2,f,c
  3167  001646  0100               	movlb	0	; () banked
  3168  001648  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3169  00164A  2229               	addwfc	___lmul@product+3,f,c
  3170  00164C                     l3401:
  3171                           
  3172                           ; BSR set to: 0
  3173  00164C  0100               	movlb	0	; () banked
  3174  00164E  90D8               	bcf	status,0,c
  3175  001650  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3176  001652  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3177  001654  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3178  001656  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3179                           
  3180                           ; BSR set to: 0
  3181  001658  0100               	movlb	0	; () banked
  3182  00165A  90D8               	bcf	status,0,c
  3183  00165C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3184  00165E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3185  001660  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3186  001662  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3187  001664  0100               	movlb	0	; () banked
  3188  001666  5160               	movf	___lmul@multiplier& (0+255),w,b
  3189  001668  0100               	movlb	0	; () banked
  3190  00166A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3191  00166C  0100               	movlb	0	; () banked
  3192  00166E  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3193  001670  0100               	movlb	0	; () banked
  3194  001672  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3195  001674  A4D8               	btfss	status,2,c
  3196  001676  D7DB               	goto	l3397
  3197                           
  3198                           ; BSR set to: 0
  3199  001678  C026  F060         	movff	___lmul@product,?___lmul
  3200  00167C  C027  F061         	movff	___lmul@product+1,?___lmul+1
  3201  001680  C028  F062         	movff	___lmul@product+2,?___lmul+2
  3202  001684  C029  F063         	movff	___lmul@product+3,?___lmul+3
  3203                           
  3204                           ; BSR set to: 0
  3205  001688  0012               	return		;funcret
  3206  00168A                     __end_of___lmul:
  3207                           	opt stack 0
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           postinc0	equ	0xFEE
  3216                           wreg	equ	0xFE8
  3217                           postdec1	equ	0xFE5
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           indf2	equ	0xFDF
  3221                           postinc2	equ	0xFDE
  3222                           postdec2	equ	0xFDD
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8
  3226                           
  3227 ;; *************** function _strstr *****************
  3228 ;; Defined at:
  3229 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  s1              2    9[BANK0 ] PTR const unsigned char 
  3232 ;;		 -> NULL(0), line(128), 
  3233 ;;  s2              2   11[BANK0 ] PTR const unsigned char 
  3234 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    9[BANK0 ] PTR unsigned char 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3246 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;Total ram usage:        5 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    5
  3253 ;; This function calls:
  3254 ;;		_strchr
  3255 ;;		_strlen
  3256 ;;		_strncmp
  3257 ;; This function is called by:
  3258 ;;		_process_message
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text12
  3263  0012F2                     __ptext12:
  3264                           	opt stack 0
  3265  0012F2                     _strstr:
  3266                           	opt stack 24
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;incstack = 0
  3270  0012F2  D042               	goto	l3433
  3271  0012F4                     l3425:
  3272  0012F4  C069  F060         	movff	strstr@s1,strncmp@s1
  3273  0012F8  C06A  F061         	movff	strstr@s1+1,strncmp@s1+1
  3274  0012FC  C06B  F062         	movff	strstr@s2,strncmp@s2
  3275  001300  C06C  F063         	movff	strstr@s2+1,strncmp@s2+1
  3276  001304  C06B  F026         	movff	strstr@s2,strlen@s
  3277  001308  C06C  F027         	movff	strstr@s2+1,strlen@s+1
  3278  00130C  ECD1  F00B         	call	_strlen	;wreg free
  3279  001310  C026  F064         	movff	?_strlen,strncmp@len
  3280  001314  C027  F065         	movff	?_strlen+1,strncmp@len+1
  3281  001318  EC12  F009         	call	_strncmp	;wreg free
  3282  00131C  0100               	movlb	0	; () banked
  3283  00131E  5160               	movf	?_strncmp& (0+255),w,b
  3284  001320  0100               	movlb	0	; () banked
  3285  001322  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  3286  001324  A4D8               	btfss	status,2,c
  3287  001326  D005               	goto	l3431
  3288                           
  3289                           ; BSR set to: 0
  3290  001328  C069  F069         	movff	strstr@s1,?_strstr
  3291  00132C  C06A  F06A         	movff	strstr@s1+1,?_strstr+1
  3292                           
  3293                           ; BSR set to: 0
  3294  001330  0012               	return	
  3295  001332                     l3431:
  3296                           
  3297                           ; BSR set to: 0
  3298  001332  0E01               	movlw	1
  3299  001334  0100               	movlb	0	; () banked
  3300  001336  2569               	addwf	strstr@s1& (0+255),w,b
  3301  001338  6E26               	movwf	strchr@ptr,c
  3302  00133A  0E00               	movlw	0
  3303  00133C  0100               	movlb	0	; () banked
  3304  00133E  216A               	addwfc	(strstr@s1+1)& (0+255),w,b
  3305  001340  6E27               	movwf	strchr@ptr+1,c
  3306  001342  C06B  FFF6         	movff	strstr@s2,tblptrl
  3307  001346  C06C  FFF7         	movff	strstr@s2+1,tblptrh
  3308  00134A  0E00               	movlw	low (__mediumconst shr (0+16))
  3309  00134C  6EF8               	movwf	tblptru,c
  3310  00134E  0E0F               	movlw	(high __ramtop+-1)
  3311  001350  64F7               	cpfsgt	tblptrh,c
  3312  001352  D003               	bra	u3787
  3313  001354  0008               	tblrd		*
  3314  001356  50F5               	movf	tablat,w,c
  3315  001358  D005               	bra	u3780
  3316  00135A                     u3787:
  3317  00135A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3318  00135E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3319  001362  50E7               	movf	indf1,w,c
  3320  001364                     u3780:
  3321  001364  6E2C               	movwf	??_strstr& (0+255),c
  3322  001366  502C               	movf	??_strstr,w,c
  3323  001368  6E28               	movwf	strchr@chr,c
  3324  00136A  6A29               	clrf	strchr@chr+1,c
  3325  00136C  ECDB  F00C         	call	_strchr	;wreg free
  3326  001370  C026  F069         	movff	?_strchr,strstr@s1
  3327  001374  C027  F06A         	movff	?_strchr+1,strstr@s1+1
  3328  001378                     l3433:
  3329  001378  0100               	movlb	0	; () banked
  3330  00137A  5169               	movf	strstr@s1& (0+255),w,b
  3331  00137C  0100               	movlb	0	; () banked
  3332  00137E  116A               	iorwf	(strstr@s1+1)& (0+255),w,b
  3333  001380  B4D8               	btfsc	status,2,c
  3334  001382  D007               	goto	l3437
  3335                           
  3336                           ; BSR set to: 0
  3337  001384  C069  FFD9         	movff	strstr@s1,fsr2l
  3338  001388  C06A  FFDA         	movff	strstr@s1+1,fsr2h
  3339  00138C  50DF               	movf	indf2,w,c
  3340  00138E  A4D8               	btfss	status,2,c
  3341  001390  D7B1               	goto	l3425
  3342  001392                     l3437:
  3343                           
  3344                           ; BSR set to: 0
  3345  001392  0E00               	movlw	0
  3346  001394  0100               	movlb	0	; () banked
  3347  001396  6F69               	movwf	?_strstr& (0+255),b
  3348  001398  0E00               	movlw	0
  3349  00139A  0100               	movlb	0	; () banked
  3350  00139C  6F6A               	movwf	(?_strstr+1)& (0+255),b
  3351  00139E  0012               	return	
  3352  0013A0                     __end_of_strstr:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           intcon	equ	0xFF2
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           indf1	equ	0xFE7
  3364                           postdec1	equ	0xFE5
  3365                           fsr1h	equ	0xFE2
  3366                           fsr1l	equ	0xFE1
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           postdec2	equ	0xFDD
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _strncmp *****************
  3375 ;; Defined at:
  3376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  3379 ;;		 -> NULL(0), line(128), 
  3380 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  3381 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3382 ;;  len             2    4[BANK0 ] unsigned int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2    0[BANK0 ] int 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        9 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    4
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_strstr
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text13
  3409  001224                     __ptext13:
  3410                           	opt stack 0
  3411  001224                     _strncmp:
  3412                           	opt stack 24
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;incstack = 0
  3416  001224  D055               	goto	l3417
  3417  001226                     l3407:
  3418  001226  C060  FFD9         	movff	strncmp@s1,fsr2l
  3419  00122A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3420  00122E  50DF               	movf	indf2,w,c
  3421  001230  B4D8               	btfsc	status,2,c
  3422  001232  D01C               	goto	l3411
  3423  001234  C060  FFD9         	movff	strncmp@s1,fsr2l
  3424  001238  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3425  00123C  50DF               	movf	indf2,w,c
  3426  00123E  0100               	movlb	0	; () banked
  3427  001240  6F66               	movwf	??_strncmp& (0+255),b
  3428  001242  C062  FFF6         	movff	strncmp@s2,tblptrl
  3429  001246  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3430  00124A  0E00               	movlw	low (__mediumconst shr (0+16))
  3431  00124C  6EF8               	movwf	tblptru,c
  3432  00124E  0E0F               	movlw	(high __ramtop+-1)
  3433  001250  64F7               	cpfsgt	tblptrh,c
  3434  001252  D003               	bra	u3737
  3435  001254  0008               	tblrd		*
  3436  001256  50F5               	movf	tablat,w,c
  3437  001258  D005               	bra	u3730
  3438  00125A                     u3737:
  3439  00125A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3440  00125E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3441  001262  50E7               	movf	indf1,w,c
  3442  001264                     u3730:
  3443  001264  0100               	movlb	0	; () banked
  3444  001266  1966               	xorwf	??_strncmp& (0+255),w,b
  3445  001268  B4D8               	btfsc	status,2,c
  3446  00126A  D02C               	goto	l3415
  3447  00126C                     l3411:
  3448  00126C  C062  FFF6         	movff	strncmp@s2,tblptrl
  3449  001270  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3450  001274  0E00               	movlw	low (__mediumconst shr (0+16))
  3451  001276  6EF8               	movwf	tblptru,c
  3452  001278  0E0F               	movlw	(high __ramtop+-1)
  3453  00127A  64F7               	cpfsgt	tblptrh,c
  3454  00127C  D003               	bra	u3757
  3455  00127E  0008               	tblrd		*
  3456  001280  50F5               	movf	tablat,w,c
  3457  001282  D005               	bra	u3750
  3458  001284                     u3757:
  3459  001284  CFF6 FFE1          	movff	tblptrl,fsr1l
  3460  001288  CFF7 FFE2          	movff	tblptrh,fsr1h
  3461  00128C  50E7               	movf	indf1,w,c
  3462  00128E                     u3750:
  3463  00128E  0100               	movlb	0	; () banked
  3464  001290  6F66               	movwf	??_strncmp& (0+255),b
  3465  001292  6B67               	clrf	(??_strncmp+1)& (0+255),b
  3466  001294  0100               	movlb	0	; () banked
  3467  001296  1F66               	comf	??_strncmp& (0+255),f,b
  3468  001298  1F67               	comf	(??_strncmp+1)& (0+255),f,b
  3469  00129A  4B66               	infsnz	??_strncmp& (0+255),f,b
  3470  00129C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
  3471  00129E  C060  FFD9         	movff	strncmp@s1,fsr2l
  3472  0012A2  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3473  0012A6  50DF               	movf	indf2,w,c
  3474  0012A8  0100               	movlb	0	; () banked
  3475  0012AA  6F68               	movwf	(??_strncmp+2)& (0+255),b
  3476  0012AC  0100               	movlb	0	; () banked
  3477  0012AE  5168               	movf	(??_strncmp+2)& (0+255),w,b
  3478  0012B0  0100               	movlb	0	; () banked
  3479  0012B2  2566               	addwf	??_strncmp& (0+255),w,b
  3480  0012B4  0100               	movlb	0	; () banked
  3481  0012B6  6F60               	movwf	?_strncmp& (0+255),b
  3482  0012B8  0E00               	movlw	0
  3483  0012BA  0100               	movlb	0	; () banked
  3484  0012BC  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
  3485  0012BE  0100               	movlb	0	; () banked
  3486  0012C0  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3487                           
  3488                           ; BSR set to: 0
  3489  0012C2  0012               	return	
  3490  0012C4                     l3415:
  3491                           
  3492                           ; BSR set to: 0
  3493  0012C4  0100               	movlb	0	; () banked
  3494  0012C6  4B60               	infsnz	strncmp@s1& (0+255),f,b
  3495  0012C8  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  3496  0012CA  0100               	movlb	0	; () banked
  3497  0012CC  4B62               	infsnz	strncmp@s2& (0+255),f,b
  3498  0012CE  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  3499  0012D0                     l3417:
  3500  0012D0  0100               	movlb	0	; () banked
  3501  0012D2  0764               	decf	strncmp@len& (0+255),f,b
  3502  0012D4  A0D8               	btfss	status,0,c
  3503  0012D6  0765               	decf	(strncmp@len+1)& (0+255),f,b
  3504  0012D8  0100               	movlb	0	; () banked
  3505  0012DA  2964               	incf	strncmp@len& (0+255),w,b
  3506  0012DC  E1A4               	bnz	l3407
  3507  0012DE  0100               	movlb	0	; () banked
  3508  0012E0  2965               	incf	(strncmp@len+1)& (0+255),w,b
  3509  0012E2  A4D8               	btfss	status,2,c
  3510  0012E4  D7A0               	goto	l3407
  3511                           
  3512                           ; BSR set to: 0
  3513                           
  3514                           ; BSR set to: 0
  3515  0012E6  0E00               	movlw	0
  3516  0012E8  0100               	movlb	0	; () banked
  3517  0012EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3518  0012EC  0E00               	movlw	0
  3519  0012EE  6F60               	movwf	?_strncmp& (0+255),b
  3520  0012F0  0012               	return	
  3521  0012F2                     __end_of_strncmp:
  3522                           	opt stack 0
  3523                           tblptru	equ	0xFF8
  3524                           tblptrh	equ	0xFF7
  3525                           tblptrl	equ	0xFF6
  3526                           tablat	equ	0xFF5
  3527                           prodh	equ	0xFF4
  3528                           prodl	equ	0xFF3
  3529                           intcon	equ	0xFF2
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           indf1	equ	0xFE7
  3533                           postdec1	equ	0xFE5
  3534                           fsr1h	equ	0xFE2
  3535                           fsr1l	equ	0xFE1
  3536                           indf2	equ	0xFDF
  3537                           postinc2	equ	0xFDE
  3538                           postdec2	equ	0xFDD
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _strlen *****************
  3544 ;; Defined at:
  3545 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  s               2   37[COMRAM] PTR const unsigned char 
  3548 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  cp              2   41[COMRAM] PTR const unsigned char 
  3551 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2   37[COMRAM] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        6 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    4
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_process_message
  3572 ;;		_strstr
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text14
  3577  0017A2                     __ptext14:
  3578                           	opt stack 0
  3579  0017A2                     _strlen:
  3580                           	opt stack 24
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;incstack = 0
  3584  0017A2  C026  F02A         	movff	strlen@s,strlen@cp
  3585  0017A6  C027  F02B         	movff	strlen@s+1,strlen@cp+1
  3586  0017AA  D002               	goto	l2283
  3587  0017AC                     l2281:
  3588  0017AC  4A2A               	infsnz	strlen@cp,f,c
  3589  0017AE  2A2B               	incf	strlen@cp+1,f,c
  3590  0017B0                     l2283:
  3591  0017B0  C02A  FFF6         	movff	strlen@cp,tblptrl
  3592  0017B4  C02B  FFF7         	movff	strlen@cp+1,tblptrh
  3593  0017B8  0E00               	movlw	low (__mediumconst shr (0+16))
  3594  0017BA  6EF8               	movwf	tblptru,c
  3595  0017BC  0E0F               	movlw	(high __ramtop+-1)
  3596  0017BE  64F7               	cpfsgt	tblptrh,c
  3597  0017C0  D003               	bra	u1747
  3598  0017C2  0008               	tblrd		*
  3599  0017C4  50F5               	movf	tablat,w,c
  3600  0017C6  D005               	bra	u1740
  3601  0017C8                     u1747:
  3602  0017C8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3603  0017CC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3604  0017D0  50E7               	movf	indf1,w,c
  3605  0017D2                     u1740:
  3606  0017D2  0900               	iorlw	0
  3607  0017D4  A4D8               	btfss	status,2,c
  3608  0017D6  D7EA               	goto	l2281
  3609  0017D8  C026  F028         	movff	strlen@s,??_strlen
  3610  0017DC  C027  F029         	movff	strlen@s+1,??_strlen+1
  3611  0017E0  1E28               	comf	??_strlen,f,c
  3612  0017E2  1E29               	comf	??_strlen+1,f,c
  3613  0017E4  4A28               	infsnz	??_strlen,f,c
  3614  0017E6  2A29               	incf	??_strlen+1,f,c
  3615  0017E8  502A               	movf	strlen@cp,w,c
  3616  0017EA  2428               	addwf	??_strlen,w,c
  3617  0017EC  6E26               	movwf	?_strlen,c
  3618  0017EE  502B               	movf	strlen@cp+1,w,c
  3619  0017F0  2029               	addwfc	??_strlen+1,w,c
  3620  0017F2  6E27               	movwf	?_strlen+1,c
  3621  0017F4  0012               	return	
  3622  0017F6                     __end_of_strlen:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           indf1	equ	0xFE7
  3634                           postdec1	equ	0xFE5
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _strchr *****************
  3645 ;; Defined at:
  3646 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  ptr             2   37[COMRAM] PTR const unsigned char 
  3649 ;;		 -> NULL(0), line(128), 
  3650 ;;  chr             2   39[COMRAM] int 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  2   37[COMRAM] PTR unsigned char 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;Total ram usage:        5 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    4
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_strstr
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text15
  3677  0019B6                     __ptext15:
  3678                           	opt stack 0
  3679  0019B6                     _strchr:
  3680                           	opt stack 24
  3681  0019B6  C026  FFD9         	movff	strchr@ptr,fsr2l
  3682  0019BA  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3683  0019BE  5028               	movf	strchr@chr,w,c
  3684  0019C0  18DE               	xorwf	postinc2,w,c
  3685  0019C2  A4D8               	btfss	status,2,c
  3686  0019C4  D005               	goto	l2537
  3687  0019C6  C026  F026         	movff	strchr@ptr,?_strchr
  3688  0019CA  C027  F027         	movff	strchr@ptr+1,?_strchr+1
  3689  0019CE  0012               	return	
  3690  0019D0                     l2537:
  3691  0019D0  C026  FFD9         	movff	strchr@ptr,fsr2l
  3692  0019D4  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3693  0019D8  4A26               	infsnz	strchr@ptr,f,c
  3694  0019DA  2A27               	incf	strchr@ptr+1,f,c
  3695  0019DC  50DF               	movf	indf2,w,c
  3696  0019DE  A4D8               	btfss	status,2,c
  3697  0019E0  D7EA               	goto	l2531
  3698  0019E2  0E00               	movlw	0
  3699  0019E4  6E26               	movwf	?_strchr,c
  3700  0019E6  0E00               	movlw	0
  3701  0019E8  6E27               	movwf	?_strchr+1,c
  3702  0019EA  0012               	return	
  3703  0019EC                     __end_of_strchr:
  3704                           	opt stack 0
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           intcon	equ	0xFF2
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           indf1	equ	0xFE7
  3715                           postdec1	equ	0xFE5
  3716                           fsr1h	equ	0xFE2
  3717                           fsr1l	equ	0xFE1
  3718                           indf2	equ	0xFDF
  3719                           postinc2	equ	0xFDE
  3720                           postdec2	equ	0xFDD
  3721                           fsr2h	equ	0xFDA
  3722                           fsr2l	equ	0xFD9
  3723                           status	equ	0xFD8
  3724                           
  3725 ;; *************** function _sprintf *****************
  3726 ;; Defined at:
  3727 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprintf.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  wh              2   27[BANK0 ] PTR unsigned char 
  3730 ;;		 -> process_message@hexval(4), 
  3731 ;;  f               2   29[BANK0 ] PTR const unsigned char 
  3732 ;;		 -> STR_7(5), 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  pb              4   37[BANK0 ] struct __prbuf
  3735 ;;  ap              2   35[BANK0 ] PTR void [1]
  3736 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2   27[BANK0 ] int 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3746 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;Total ram usage:       14 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    7
  3753 ;; This function calls:
  3754 ;;		__doprnt
  3755 ;; This function is called by:
  3756 ;;		_process_message
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text16
  3761  00184A                     __ptext16:
  3762                           	opt stack 0
  3763  00184A                     _sprintf:
  3764                           	opt stack 22
  3765                           
  3766                           ;incstack = 0
  3767  00184A  C07B  F085         	movff	sprintf@wh,sprintf@pb
  3768  00184E  C07C  F086         	movff	sprintf@wh+1,sprintf@pb+1
  3769  001852  0E00               	movlw	0
  3770  001854  0100               	movlb	0	; () banked
  3771  001856  6F87               	movwf	(sprintf@pb+2)& (0+255),b
  3772  001858  0E00               	movlw	0
  3773  00185A  0100               	movlb	0	; () banked
  3774  00185C  6F88               	movwf	(sprintf@pb+3)& (0+255),b
  3775  00185E  0E7F               	movlw	low (?_sprintf+4)
  3776  001860  0100               	movlb	0	; () banked
  3777  001862  6F83               	movwf	sprintf@ap& (0+255),b
  3778  001864  0E00               	movlw	high (?_sprintf+4)
  3779  001866  0100               	movlb	0	; () banked
  3780  001868  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783  00186A  0E85               	movlw	low sprintf@pb
  3784  00186C  0100               	movlb	0	; () banked
  3785  00186E  6F65               	movwf	__doprnt@pb& (0+255),b
  3786  001870  0E00               	movlw	high sprintf@pb
  3787  001872  0100               	movlb	0	; () banked
  3788  001874  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  3789  001876  C07D  F067         	movff	sprintf@f,__doprnt@f
  3790  00187A  C07E  F068         	movff	sprintf@f+1,__doprnt@f+1
  3791  00187E  0E83               	movlw	low sprintf@ap
  3792  001880  0100               	movlb	0	; () banked
  3793  001882  6F69               	movwf	__doprnt@ap& (0+255),b
  3794  001884  0E00               	movlw	high sprintf@ap
  3795  001886  0100               	movlb	0	; () banked
  3796  001888  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  3797  00188A  EC4C  F000         	call	__doprnt	;wreg free
  3798  00188E  C085  FFD9         	movff	sprintf@pb,fsr2l
  3799  001892  C086  FFDA         	movff	sprintf@pb+1,fsr2h
  3800  001896  0E00               	movlw	0
  3801  001898  6EDF               	movwf	indf2,c
  3802  00189A  0012               	return	
  3803  00189C                     __end_of_sprintf:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           indf1	equ	0xFE7
  3815                           postdec1	equ	0xFE5
  3816                           fsr1h	equ	0xFE2
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _getUUID *****************
  3826 ;; Defined at:
  3827 ;;		line 48 in file "main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    8
  3848 ;; This function calls:
  3849 ;;		_printf
  3850 ;;		_read_line
  3851 ;;		_strcpy
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text17
  3858  001B7E                     __ptext17:
  3859                           	opt stack 0
  3860  001B7E                     _getUUID:
  3861                           	opt stack 22
  3862                           
  3863                           ;main.c: 49: printf("sys get hweui\r\n");
  3864                           
  3865                           ;incstack = 0
  3866  001B7E  0E53               	movlw	low STR_5
  3867  001B80  0100               	movlb	0	; () banked
  3868  001B82  6F7B               	movwf	printf@f& (0+255),b
  3869  001B84  0EFF               	movlw	high STR_5
  3870  001B86  0100               	movlb	0	; () banked
  3871  001B88  6F7C               	movwf	(printf@f+1)& (0+255),b
  3872  001B8A  EC77  F00C         	call	_printf	;wreg free
  3873                           
  3874                           ;main.c: 50: read_line();
  3875  001B8E  EC6A  F00E         	call	_read_line	;wreg free
  3876                           
  3877                           ;main.c: 51: strcpy(uuid,line);
  3878  001B92  0E9B               	movlw	low _uuid
  3879  001B94  6E26               	movwf	strcpy@to,c
  3880  001B96  0E00               	movlw	high _uuid
  3881  001B98  6E27               	movwf	strcpy@to+1,c
  3882  001B9A  0E80               	movlw	low _line
  3883  001B9C  6E28               	movwf	strcpy@from,c
  3884  001B9E  0E01               	movlw	high _line
  3885  001BA0  6E29               	movwf	strcpy@from+1,c
  3886  001BA2  EC91  F00D         	call	_strcpy	;wreg free
  3887  001BA6  0012               	return		;funcret
  3888  001BA8                     __end_of_getUUID:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           indf1	equ	0xFE7
  3900                           postdec1	equ	0xFE5
  3901                           fsr1h	equ	0xFE2
  3902                           fsr1l	equ	0xFE1
  3903                           indf2	equ	0xFDF
  3904                           postinc2	equ	0xFDE
  3905                           postdec2	equ	0xFDD
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _strcpy *****************
  3911 ;; Defined at:
  3912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  to              2   37[COMRAM] PTR unsigned char 
  3915 ;;		 -> uuid(40), 
  3916 ;;  from            2   39[COMRAM] PTR const unsigned char 
  3917 ;;		 -> line(128), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  cp              2   41[COMRAM] PTR unsigned char 
  3920 ;;		 -> uuid(40), 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  2   37[COMRAM] PTR unsigned char 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;Total ram usage:        6 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    4
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_getUUID
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text18
  3945  001B22                     __ptext18:
  3946                           	opt stack 0
  3947  001B22                     _strcpy:
  3948                           	opt stack 25
  3949                           
  3950                           ;incstack = 0
  3951  001B22  C026  F02A         	movff	strcpy@to,strcpy@cp
  3952  001B26  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  3953  001B2A  D004               	goto	l2715
  3954  001B2C                     l2713:
  3955  001B2C  4A2A               	infsnz	strcpy@cp,f,c
  3956  001B2E  2A2B               	incf	strcpy@cp+1,f,c
  3957  001B30  4A28               	infsnz	strcpy@from,f,c
  3958  001B32  2A29               	incf	strcpy@from+1,f,c
  3959  001B34                     l2715:
  3960  001B34  C028  FFD9         	movff	strcpy@from,fsr2l
  3961  001B38  C029  FFDA         	movff	strcpy@from+1,fsr2h
  3962  001B3C  C02A  FFE1         	movff	strcpy@cp,fsr1l
  3963  001B40  C02B  FFE2         	movff	strcpy@cp+1,fsr1h
  3964  001B44  CFDF FFE7          	movff	indf2,indf1
  3965  001B48  50E7               	movf	indf1,w,c
  3966  001B4A  B4D8               	btfsc	status,2,c
  3967  001B4C  0012               	return	
  3968  001B4E  D7EE               	goto	l2713
  3969  001B50                     __end_of_strcpy:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           indf1	equ	0xFE7
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           postinc2	equ	0xFDE
  3986                           postdec2	equ	0xFDD
  3987                           fsr2h	equ	0xFDA
  3988                           fsr2l	equ	0xFD9
  3989                           status	equ	0xFD8
  3990                           
  3991 ;; *************** function _read_line *****************
  3992 ;; Defined at:
  3993 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  2  147[None  ] int 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    4
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_getUUID
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text19
  4023  001CD4                     __ptext19:
  4024                           	opt stack 0
  4025  001CD4                     _read_line:
  4026                           	opt stack 26
  4027  001CD4                     l2699:
  4028  001CD4  0434               	decf	_ready,w,c	;volatile
  4029  001CD6  A4D8               	btfss	status,2,c
  4030  001CD8  D7FD               	goto	l2699
  4031                           
  4032                           ;eusart1.c: 252: }
  4033                           ;eusart1.c: 253: ready=0;
  4034  001CDA  0E00               	movlw	0
  4035  001CDC  6E34               	movwf	_ready,c	;volatile
  4036  001CDE  0012               	return	
  4037  001CE0                     __end_of_read_line:
  4038                           	opt stack 0
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           intcon	equ	0xFF2
  4046                           postinc0	equ	0xFEE
  4047                           wreg	equ	0xFE8
  4048                           indf1	equ	0xFE7
  4049                           postdec1	equ	0xFE5
  4050                           fsr1h	equ	0xFE2
  4051                           fsr1l	equ	0xFE1
  4052                           indf2	equ	0xFDF
  4053                           postinc2	equ	0xFDE
  4054                           postdec2	equ	0xFDD
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _printf *****************
  4060 ;; Defined at:
  4061 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\printf.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  f               2   27[BANK0 ] PTR const unsigned char 
  4064 ;;		 -> STR_27(13), STR_26(19), STR_25(28), STR_24(19), 
  4065 ;;		 -> STR_23(28), STR_22(13), STR_21(19), STR_20(19), 
  4066 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4067 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4068 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4069 ;;		 -> STR_5(16), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  pb              4   37[BANK0 ] struct __prbuf
  4072 ;;  ap              2   35[BANK0 ] PTR void [1]
  4073 ;;		 -> ?_sprintf(2), ?_printf(2), 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2   27[BANK0 ] int 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:       14 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    7
  4090 ;; This function calls:
  4091 ;;		__doprnt
  4092 ;; This function is called by:
  4093 ;;		_getUUID
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text20
  4099  0018EE                     __ptext20:
  4100                           	opt stack 0
  4101  0018EE                     _printf:
  4102                           	opt stack 23
  4103                           
  4104                           ;incstack = 0
  4105  0018EE  0E00               	movlw	0
  4106  0018F0  0100               	movlb	0	; () banked
  4107  0018F2  6F85               	movwf	printf@pb& (0+255),b
  4108  0018F4  0E00               	movlw	0
  4109  0018F6  0100               	movlb	0	; () banked
  4110  0018F8  6F86               	movwf	(printf@pb+1)& (0+255),b
  4111  0018FA  0EE0               	movlw	low _putch
  4112  0018FC  0100               	movlb	0	; () banked
  4113  0018FE  6F87               	movwf	(printf@pb+2)& (0+255),b
  4114  001900  0E1C               	movlw	high _putch
  4115  001902  0100               	movlb	0	; () banked
  4116  001904  6F88               	movwf	(printf@pb+3)& (0+255),b
  4117  001906  0E7D               	movlw	low (?_printf+2)
  4118  001908  0100               	movlb	0	; () banked
  4119  00190A  6F83               	movwf	printf@ap& (0+255),b
  4120  00190C  0E00               	movlw	high (?_printf+2)
  4121  00190E  0100               	movlb	0	; () banked
  4122  001910  6F84               	movwf	(printf@ap+1)& (0+255),b
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;	Return value of _printf is never used
  4126  001912  0E85               	movlw	low printf@pb
  4127  001914  0100               	movlb	0	; () banked
  4128  001916  6F65               	movwf	__doprnt@pb& (0+255),b
  4129  001918  0E00               	movlw	high printf@pb
  4130  00191A  0100               	movlb	0	; () banked
  4131  00191C  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  4132  00191E  C07B  F067         	movff	printf@f,__doprnt@f
  4133  001922  C07C  F068         	movff	printf@f+1,__doprnt@f+1
  4134  001926  0E83               	movlw	low printf@ap
  4135  001928  0100               	movlb	0	; () banked
  4136  00192A  6F69               	movwf	__doprnt@ap& (0+255),b
  4137  00192C  0E00               	movlw	high printf@ap
  4138  00192E  0100               	movlb	0	; () banked
  4139  001930  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  4140  001932  EC4C  F000         	call	__doprnt	;wreg free
  4141  001936  0012               	return	
  4142  001938                     __end_of_printf:
  4143                           	opt stack 0
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           prodh	equ	0xFF4
  4149                           prodl	equ	0xFF3
  4150                           intcon	equ	0xFF2
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           indf1	equ	0xFE7
  4154                           postdec1	equ	0xFE5
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function __doprnt *****************
  4165 ;; Defined at:
  4166 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  pb              2    5[BANK0 ] PTR struct __prbuf
  4169 ;;		 -> sprintf@pb(4), printf@pb(4), 
  4170 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4171 ;;		 -> STR_27(13), STR_26(19), STR_25(28), STR_24(19), 
  4172 ;;		 -> STR_23(28), STR_22(13), STR_21(19), STR_20(19), 
  4173 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4174 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4175 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4176 ;;		 -> STR_7(5), STR_5(16), 
  4177 ;;  ap              2    9[BANK0 ] PTR PTR void 
  4178 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  idx             1   15[BANK0 ] unsigned char 
  4181 ;;  tmpval          4    0        struct .
  4182 ;;  width           2   24[BANK0 ] int 
  4183 ;;  val             2   21[BANK0 ] unsigned int 
  4184 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  4185 ;;		 -> ?_sprintf(2), ?_printf(2), STR_28(7), _doprnt@c(1), 
  4186 ;;		 -> process_message@hexval(4), uuid(40), NULL(0), 
  4187 ;;  len             2   17[BANK0 ] unsigned int 
  4188 ;;  c               1   26[BANK0 ] char 
  4189 ;;  flag            1   23[BANK0 ] unsigned char 
  4190 ;;  prec            1   16[BANK0 ] char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  2    5[BANK0 ] int 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4200 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;Total ram usage:       22 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    6
  4207 ;; This function calls:
  4208 ;;		Absolute function
  4209 ;;		___lwdiv
  4210 ;;		___lwmod
  4211 ;;		___wmul
  4212 ;;		_isdigit
  4213 ;;		_putch
  4214 ;; This function is called by:
  4215 ;;		_printf
  4216 ;;		_sprintf
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text21
  4221  000098                     __ptext21:
  4222                           	opt stack 0
  4223  000098                     __doprnt:
  4224                           	opt stack 22
  4225                           
  4226                           ;doprnt.c: 499: signed char c;
  4227                           ;doprnt.c: 501: int width;
  4228                           ;doprnt.c: 506: signed char prec;
  4229                           ;doprnt.c: 508: unsigned char flag;
  4230                           ;doprnt.c: 523: union {
  4231                           ;doprnt.c: 524: unsigned long vd;
  4232                           ;doprnt.c: 525: double integ;
  4233                           ;doprnt.c: 526: } tmpval;
  4234                           ;doprnt.c: 528: unsigned int val;
  4235                           ;doprnt.c: 529: unsigned len;
  4236                           ;doprnt.c: 530: const char * cp;
  4237                           ;doprnt.c: 536: while(c = *f++) {
  4238                           
  4239                           ;incstack = 0
  4240  000098  EFAB  F004         	goto	l3389
  4241  00009C                     l3183:
  4242                           
  4243                           ;doprnt.c: 538: if(c != '%')
  4244  00009C  0E25               	movlw	37
  4245  00009E  0100               	movlb	0	; () banked
  4246  0000A0  197A               	xorwf	__doprnt@c& (0+255),w,b
  4247  0000A2  B4D8               	btfsc	status,2,c
  4248  0000A4  D03C               	goto	l3193
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;doprnt.c: 540: {
  4252                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4253  0000A6  0100               	movlb	0	; () banked
  4254  0000A8  EE20 F002          	lfsr	2,2
  4255  0000AC  5165               	movf	__doprnt@pb& (0+255),w,b
  4256  0000AE  26D9               	addwf	fsr2l,f,c
  4257  0000B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4258  0000B2  22DA               	addwfc	fsr2h,f,c
  4259  0000B4  50DE               	movf	postinc2,w,c
  4260  0000B6  10DE               	iorwf	postinc2,w,c
  4261  0000B8  B4D8               	btfsc	status,2,c
  4262  0000BA  D01A               	goto	l3189
  4263                           
  4264                           ; BSR set to: 0
  4265  0000BC  0100               	movlb	0	; () banked
  4266  0000BE  EE20 F002          	lfsr	2,2
  4267  0000C2  5165               	movf	__doprnt@pb& (0+255),w,b
  4268  0000C4  26D9               	addwf	fsr2l,f,c
  4269  0000C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4270  0000C8  22DA               	addwfc	fsr2h,f,c
  4271  0000CA  CFDE F06B          	movff	postinc2,??__doprnt
  4272  0000CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  4273  0000D2  D802               	call	u3258
  4274  0000D4  EFAB  F004         	goto	l3389
  4275  0000D8                     u3258:
  4276  0000D8  0005               	push	
  4277  0000DA  6EFA               	movwf	pclath,c
  4278  0000DC  0100               	movlb	0	; () banked
  4279  0000DE  516B               	movf	??__doprnt& (0+255),w,b
  4280  0000E0  6EFD               	movwf	tosl,c
  4281  0000E2  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4282  0000E4  6EFE               	movwf	tosh,c
  4283  0000E6  6AFF               	clrf	tosu,c
  4284  0000E8  50FA               	movf	pclath,w,c
  4285  0000EA  0100               	movlb	0	; () banked
  4286  0000EC  517A               	movf	__doprnt@c& (0+255),w,b
  4287  0000EE  0012               	return		;indir
  4288  0000F0                     l3189:
  4289  0000F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4290  0000F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4291  0000F8  CFDE F06B          	movff	postinc2,??__doprnt
  4292  0000FC  CFDD F06C          	movff	postdec2,??__doprnt+1
  4293  000100  C06B  FFD9         	movff	??__doprnt,fsr2l
  4294  000104  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4295  000108  C07A  FFDF         	movff	__doprnt@c,indf2
  4296  00010C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4297  000110  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4298  000114  2ADE               	incf	postinc2,f,c
  4299  000116  0E00               	movlw	0
  4300  000118  22DD               	addwfc	postdec2,f,c
  4301                           
  4302                           ;doprnt.c: 542: continue;
  4303  00011A  EFAB  F004         	goto	l3389
  4304  00011E                     l3193:
  4305                           
  4306                           ;doprnt.c: 543: }
  4307                           ;doprnt.c: 546: width = 0;
  4308  00011E  0E00               	movlw	0
  4309  000120  0100               	movlb	0	; () banked
  4310  000122  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4311  000124  0E00               	movlw	0
  4312  000126  6F78               	movwf	__doprnt@width& (0+255),b
  4313                           
  4314                           ;doprnt.c: 548: flag = 0;
  4315  000128  0E00               	movlw	0
  4316  00012A  0100               	movlb	0	; () banked
  4317  00012C  6F77               	movwf	__doprnt@flag& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;doprnt.c: 551: switch(*f) {
  4321                           
  4322                           ;doprnt.c: 550: for(;;) {
  4323  00012E  D005               	goto	l3199
  4324  000130                     l3195:
  4325                           
  4326                           ;doprnt.c: 580: flag |= 0x04;
  4327  000130  0100               	movlb	0	; () banked
  4328  000132  8577               	bsf	__doprnt@flag& (0+255),2,b
  4329                           
  4330                           ;doprnt.c: 581: f++;
  4331  000134  0100               	movlb	0	; () banked
  4332  000136  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4333  000138  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4334  00013A                     l3199:
  4335  00013A  C067  FFF6         	movff	__doprnt@f,tblptrl
  4336  00013E  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4337  000142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4338  000142  6AF8               	clrf	tblptru,c
  4339  000144                     	endif
  4340  000144                     	if	0	;tblptru may be non-zero
  4341  000144                     	endif
  4342  000144  0008               	tblrd		*
  4343  000146  50F5               	movf	tablat,w,c
  4344                           
  4345                           ; Switch size 1, requested type "space"
  4346                           ; Number of cases is 1, Range of values is 48 to 48
  4347                           ; switch strategies available:
  4348                           ; Name         Instructions Cycles
  4349                           ; simple_byte            4     3 (average)
  4350                           ;	Chosen strategy is simple_byte
  4351  000148  0A30               	xorlw	48	; case 48
  4352  00014A  B4D8               	btfsc	status,2,c
  4353  00014C  D7F1               	goto	l3195
  4354                           
  4355                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4356                           
  4357                           ;doprnt.c: 586: }
  4358                           
  4359                           ;doprnt.c: 585: break;
  4360  00014E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4361  000152  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4362  000156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4363  000156  6AF8               	clrf	tblptru,c
  4364  000158                     	endif
  4365  000158                     	if	0	;tblptru may be non-zero
  4366  000158                     	endif
  4367  000158  0008               	tblrd		*
  4368  00015A  50F5               	movf	tablat,w,c
  4369  00015C  EC2D  F00E         	call	_isdigit
  4370  000160  A0D8               	btfss	status,0,c
  4371  000162  D175               	goto	l3265
  4372                           
  4373                           ;doprnt.c: 598: width = 0;
  4374  000164  0E00               	movlw	0
  4375  000166  0100               	movlb	0	; () banked
  4376  000168  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4377  00016A  0E00               	movlw	0
  4378  00016C  6F78               	movwf	__doprnt@width& (0+255),b
  4379  00016E                     l3205:
  4380                           
  4381                           ;doprnt.c: 600: width *= 10;
  4382  00016E  C078  F026         	movff	__doprnt@width,___wmul@multiplier
  4383  000172  C079  F027         	movff	__doprnt@width+1,___wmul@multiplier+1
  4384  000176  0E00               	movlw	0
  4385  000178  6E29               	movwf	___wmul@multiplicand+1,c
  4386  00017A  0E0A               	movlw	10
  4387  00017C  6E28               	movwf	___wmul@multiplicand,c
  4388  00017E  ECFB  F00D         	call	___wmul	;wreg free
  4389  000182  C026  F078         	movff	?___wmul,__doprnt@width
  4390  000186  C027  F079         	movff	?___wmul+1,__doprnt@width+1
  4391                           
  4392                           ;doprnt.c: 601: width += *f++ - '0';
  4393  00018A  0ED0               	movlw	208
  4394  00018C  0100               	movlb	0	; () banked
  4395  00018E  6F6B               	movwf	??__doprnt& (0+255),b
  4396  000190  0EFF               	movlw	255
  4397  000192  0100               	movlb	0	; () banked
  4398  000194  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4399  000196  C067  FFF6         	movff	__doprnt@f,tblptrl
  4400  00019A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4401  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4402  00019E  6AF8               	clrf	tblptru,c
  4403  0001A0                     	endif
  4404  0001A0                     	if	0	;tblptru may be non-zero
  4405  0001A0                     	endif
  4406  0001A0  0008               	tblrd		*
  4407  0001A2  50F5               	movf	tablat,w,c
  4408  0001A4  0100               	movlb	0	; () banked
  4409  0001A6  6F6D               	movwf	(??__doprnt+2)& (0+255),b
  4410  0001A8  6B6E               	clrf	(??__doprnt+3)& (0+255),b
  4411  0001AA  0100               	movlb	0	; () banked
  4412  0001AC  516B               	movf	??__doprnt& (0+255),w,b
  4413  0001AE  0100               	movlb	0	; () banked
  4414  0001B0  276D               	addwf	(??__doprnt+2)& (0+255),f,b
  4415  0001B2  0100               	movlb	0	; () banked
  4416  0001B4  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4417  0001B6  0100               	movlb	0	; () banked
  4418  0001B8  236E               	addwfc	(??__doprnt+3)& (0+255),f,b
  4419  0001BA  0100               	movlb	0	; () banked
  4420  0001BC  516D               	movf	(??__doprnt+2)& (0+255),w,b
  4421  0001BE  0100               	movlb	0	; () banked
  4422  0001C0  2778               	addwf	__doprnt@width& (0+255),f,b
  4423  0001C2  0100               	movlb	0	; () banked
  4424  0001C4  516E               	movf	(??__doprnt+3)& (0+255),w,b
  4425  0001C6  0100               	movlb	0	; () banked
  4426  0001C8  2379               	addwfc	(__doprnt@width+1)& (0+255),f,b
  4427                           
  4428                           ; BSR set to: 0
  4429  0001CA  0100               	movlb	0	; () banked
  4430  0001CC  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4431  0001CE  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4435  0001D0  C067  FFF6         	movff	__doprnt@f,tblptrl
  4436  0001D4  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4437  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4438  0001D8  6AF8               	clrf	tblptru,c
  4439  0001DA                     	endif
  4440  0001DA                     	if	0	;tblptru may be non-zero
  4441  0001DA                     	endif
  4442  0001DA  0008               	tblrd		*
  4443  0001DC  50F5               	movf	tablat,w,c
  4444  0001DE  EC2D  F00E         	call	_isdigit
  4445  0001E2  A0D8               	btfss	status,0,c
  4446  0001E4  D134               	goto	l3265
  4447  0001E6  D7C3               	goto	l3205
  4448  0001E8                     l3213:
  4449                           
  4450                           ;doprnt.c: 718: case 'x':
  4451                           ;doprnt.c: 721: flag |= 0x80;
  4452  0001E8  0100               	movlb	0	; () banked
  4453  0001EA  8F77               	bsf	__doprnt@flag& (0+255),7,b
  4454                           
  4455                           ;doprnt.c: 723: break;
  4456  0001EC  D153               	goto	l344
  4457  0001EE                     l3215:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4461  0001EE  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4462  0001F2  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4463  0001F6  CFDF F06B          	movff	indf2,??__doprnt
  4464  0001FA  0E02               	movlw	2
  4465  0001FC  26DE               	addwf	postinc2,f,c
  4466  0001FE  CFDF F06C          	movff	indf2,??__doprnt+1
  4467  000202  0E00               	movlw	0
  4468  000204  22DD               	addwfc	postdec2,f,c
  4469  000206  C06B  FFD9         	movff	??__doprnt,fsr2l
  4470  00020A  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4471  00020E  CFDE F073          	movff	postinc2,__doprnt@cp
  4472  000212  CFDD F074          	movff	postdec2,__doprnt@cp+1
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;doprnt.c: 740: if(!cp)
  4476  000216  0100               	movlb	0	; () banked
  4477  000218  5173               	movf	__doprnt@cp& (0+255),w,b
  4478  00021A  0100               	movlb	0	; () banked
  4479  00021C  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4480  00021E  A4D8               	btfss	status,2,c
  4481  000220  D006               	goto	l3221
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;doprnt.c: 741: cp = "(null)";
  4485  000222  0EF2               	movlw	low STR_28
  4486  000224  0100               	movlb	0	; () banked
  4487  000226  6F73               	movwf	__doprnt@cp& (0+255),b
  4488  000228  0EFF               	movlw	high STR_28
  4489  00022A  0100               	movlb	0	; () banked
  4490  00022C  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4491  00022E                     l3221:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;doprnt.c: 745: len = 0;
  4495  00022E  0E00               	movlw	0
  4496  000230  0100               	movlb	0	; () banked
  4497  000232  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4498  000234  0E00               	movlw	0
  4499  000236  6F71               	movwf	__doprnt@len& (0+255),b
  4500                           
  4501                           ;doprnt.c: 746: while(cp[len])
  4502  000238  D003               	goto	l3225
  4503  00023A                     l3223:
  4504                           
  4505                           ;doprnt.c: 747: len++;
  4506  00023A  0100               	movlb	0	; () banked
  4507  00023C  4B71               	infsnz	__doprnt@len& (0+255),f,b
  4508  00023E  2B72               	incf	(__doprnt@len+1)& (0+255),f,b
  4509  000240                     l3225:
  4510                           
  4511                           ; BSR set to: 0
  4512  000240  0100               	movlb	0	; () banked
  4513  000242  5171               	movf	__doprnt@len& (0+255),w,b
  4514  000244  0100               	movlb	0	; () banked
  4515  000246  2573               	addwf	__doprnt@cp& (0+255),w,b
  4516  000248  0100               	movlb	0	; () banked
  4517  00024A  6F6B               	movwf	??__doprnt& (0+255),b
  4518  00024C  0100               	movlb	0	; () banked
  4519  00024E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4520  000250  0100               	movlb	0	; () banked
  4521  000252  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  4522  000254  0100               	movlb	0	; () banked
  4523  000256  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4524  000258  C06B  FFF6         	movff	??__doprnt,tblptrl
  4525  00025C  C06C  FFF7         	movff	??__doprnt+1,tblptrh
  4526  000260  0E00               	movlw	low (__mediumconst shr (0+16))
  4527  000262  6EF8               	movwf	tblptru,c
  4528  000264  0E0F               	movlw	(high __ramtop+-1)
  4529  000266  64F7               	cpfsgt	tblptrh,c
  4530  000268  D003               	bra	u3297
  4531  00026A  0008               	tblrd		*
  4532  00026C  50F5               	movf	tablat,w,c
  4533  00026E  D005               	bra	u3290
  4534  000270                     u3297:
  4535  000270  CFF6 FFE1          	movff	tblptrl,fsr1l
  4536  000274  CFF7 FFE2          	movff	tblptrh,fsr1h
  4537  000278  50E7               	movf	indf1,w,c
  4538  00027A                     u3290:
  4539  00027A  0900               	iorlw	0
  4540  00027C  A4D8               	btfss	status,2,c
  4541  00027E  D7DD               	goto	l3223
  4542  000280                     l3227:
  4543                           
  4544                           ;doprnt.c: 757: if(width > len)
  4545  000280  0100               	movlb	0	; () banked
  4546  000282  5178               	movf	__doprnt@width& (0+255),w,b
  4547  000284  0100               	movlb	0	; () banked
  4548  000286  5D71               	subwf	__doprnt@len& (0+255),w,b
  4549  000288  0100               	movlb	0	; () banked
  4550  00028A  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  4551  00028C  0100               	movlb	0	; () banked
  4552  00028E  5972               	subwfb	(__doprnt@len+1)& (0+255),w,b
  4553  000290  B0D8               	btfsc	status,0,c
  4554  000292  D009               	goto	l3231
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;doprnt.c: 758: width -= len;
  4558  000294  0100               	movlb	0	; () banked
  4559  000296  5171               	movf	__doprnt@len& (0+255),w,b
  4560  000298  0100               	movlb	0	; () banked
  4561  00029A  5F78               	subwf	__doprnt@width& (0+255),f,b
  4562  00029C  0100               	movlb	0	; () banked
  4563  00029E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4564  0002A0  0100               	movlb	0	; () banked
  4565  0002A2  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4566  0002A4  D03E               	goto	l3241
  4567  0002A6                     l3231:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;doprnt.c: 759: else
  4571                           ;doprnt.c: 760: width = 0;
  4572  0002A6  0E00               	movlw	0
  4573  0002A8  0100               	movlb	0	; () banked
  4574  0002AA  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4575  0002AC  0E00               	movlw	0
  4576  0002AE  6F78               	movwf	__doprnt@width& (0+255),b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;doprnt.c: 764: while(width--)
  4580  0002B0  D038               	goto	l3241
  4581  0002B2                     l3233:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4585  0002B2  0100               	movlb	0	; () banked
  4586  0002B4  EE20 F002          	lfsr	2,2
  4587  0002B8  5165               	movf	__doprnt@pb& (0+255),w,b
  4588  0002BA  26D9               	addwf	fsr2l,f,c
  4589  0002BC  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4590  0002BE  22DA               	addwfc	fsr2h,f,c
  4591  0002C0  50DE               	movf	postinc2,w,c
  4592  0002C2  10DE               	iorwf	postinc2,w,c
  4593  0002C4  B4D8               	btfsc	status,2,c
  4594  0002C6  D018               	goto	l3237
  4595                           
  4596                           ; BSR set to: 0
  4597  0002C8  0100               	movlb	0	; () banked
  4598  0002CA  EE20 F002          	lfsr	2,2
  4599  0002CE  5165               	movf	__doprnt@pb& (0+255),w,b
  4600  0002D0  26D9               	addwf	fsr2l,f,c
  4601  0002D2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4602  0002D4  22DA               	addwfc	fsr2h,f,c
  4603  0002D6  CFDE F06B          	movff	postinc2,??__doprnt
  4604  0002DA  CFDD F06C          	movff	postdec2,??__doprnt+1
  4605  0002DE  D801               	call	u3338
  4606  0002E0  D020               	goto	l3241
  4607  0002E2                     u3338:
  4608  0002E2  0005               	push	
  4609  0002E4  6EFA               	movwf	pclath,c
  4610  0002E6  0100               	movlb	0	; () banked
  4611  0002E8  516B               	movf	??__doprnt& (0+255),w,b
  4612  0002EA  6EFD               	movwf	tosl,c
  4613  0002EC  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4614  0002EE  6EFE               	movwf	tosh,c
  4615  0002F0  6AFF               	clrf	tosu,c
  4616  0002F2  50FA               	movf	pclath,w,c
  4617  0002F4  0E20               	movlw	32
  4618  0002F6  0012               	return		;indir
  4619  0002F8                     l3237:
  4620  0002F8  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4621  0002FC  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4622  000300  CFDE F06B          	movff	postinc2,??__doprnt
  4623  000304  CFDD F06C          	movff	postdec2,??__doprnt+1
  4624  000308  C06B  FFD9         	movff	??__doprnt,fsr2l
  4625  00030C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4626  000310  0E20               	movlw	32
  4627  000312  6EDF               	movwf	indf2,c
  4628  000314  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4629  000318  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4630  00031C  2ADE               	incf	postinc2,f,c
  4631  00031E  0E00               	movlw	0
  4632  000320  22DD               	addwfc	postdec2,f,c
  4633  000322                     l3241:
  4634  000322  0100               	movlb	0	; () banked
  4635  000324  0778               	decf	__doprnt@width& (0+255),f,b
  4636  000326  A0D8               	btfss	status,0,c
  4637  000328  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  4638  00032A  0100               	movlb	0	; () banked
  4639  00032C  2978               	incf	__doprnt@width& (0+255),w,b
  4640  00032E  E1C1               	bnz	l3233
  4641  000330  0100               	movlb	0	; () banked
  4642  000332  2979               	incf	(__doprnt@width+1)& (0+255),w,b
  4643  000334  B4D8               	btfsc	status,2,c
  4644  000336  D060               	goto	l3255
  4645  000338  D7BC               	goto	l3233
  4646  00033A                     l3243:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4650  00033A  0100               	movlb	0	; () banked
  4651  00033C  EE20 F002          	lfsr	2,2
  4652  000340  5165               	movf	__doprnt@pb& (0+255),w,b
  4653  000342  26D9               	addwf	fsr2l,f,c
  4654  000344  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4655  000346  22DA               	addwfc	fsr2h,f,c
  4656  000348  50DE               	movf	postinc2,w,c
  4657  00034A  10DE               	iorwf	postinc2,w,c
  4658  00034C  B4D8               	btfsc	status,2,c
  4659  00034E  D02C               	goto	l3249
  4660                           
  4661                           ; BSR set to: 0
  4662  000350  0100               	movlb	0	; () banked
  4663  000352  EE20 F002          	lfsr	2,2
  4664  000356  5165               	movf	__doprnt@pb& (0+255),w,b
  4665  000358  26D9               	addwf	fsr2l,f,c
  4666  00035A  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4667  00035C  22DA               	addwfc	fsr2h,f,c
  4668  00035E  CFDE F06B          	movff	postinc2,??__doprnt
  4669  000362  CFDD F06C          	movff	postdec2,??__doprnt+1
  4670  000366  D801               	call	u3368
  4671  000368  D01B               	goto	l3247
  4672  00036A                     u3368:
  4673  00036A  0005               	push	
  4674  00036C  6EFA               	movwf	pclath,c
  4675  00036E  0100               	movlb	0	; () banked
  4676  000370  516B               	movf	??__doprnt& (0+255),w,b
  4677  000372  6EFD               	movwf	tosl,c
  4678  000374  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4679  000376  6EFE               	movwf	tosh,c
  4680  000378  6AFF               	clrf	tosu,c
  4681  00037A  50FA               	movf	pclath,w,c
  4682  00037C  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4683  000380  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4684  000384  0E00               	movlw	low (__mediumconst shr (0+16))
  4685  000386  6EF8               	movwf	tblptru,c
  4686  000388  0E0F               	movlw	(high __ramtop+-1)
  4687  00038A  64F7               	cpfsgt	tblptrh,c
  4688  00038C  D003               	bra	u3377
  4689  00038E  0008               	tblrd		*
  4690  000390  50F5               	movf	tablat,w,c
  4691  000392  D005               	bra	u3370
  4692  000394                     u3377:
  4693  000394  CFF6 FFE1          	movff	tblptrl,fsr1l
  4694  000398  CFF7 FFE2          	movff	tblptrh,fsr1h
  4695  00039C  50E7               	movf	indf1,w,c
  4696  00039E                     u3370:
  4697  00039E  0012               	return		;indir
  4698  0003A0                     l3247:
  4699  0003A0  0100               	movlb	0	; () banked
  4700  0003A2  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4701  0003A4  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4702  0003A6  D028               	goto	l3255
  4703  0003A8                     l3249:
  4704                           
  4705                           ; BSR set to: 0
  4706  0003A8  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4707  0003AC  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4708  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4709  0003B2  6EF8               	movwf	tblptru,c
  4710  0003B4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4711  0003B8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4712  0003BC  CFDE F06B          	movff	postinc2,??__doprnt
  4713  0003C0  CFDD F06C          	movff	postdec2,??__doprnt+1
  4714  0003C4  C06B  FFD9         	movff	??__doprnt,fsr2l
  4715  0003C8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4716  0003CC  0E0F               	movlw	(high __ramtop+-1)
  4717  0003CE  64F7               	cpfsgt	tblptrh,c
  4718  0003D0  D003               	bra	u3387
  4719  0003D2  0008               	tblrd		*
  4720  0003D4  50F5               	movf	tablat,w,c
  4721  0003D6  D005               	bra	u3380
  4722  0003D8                     u3387:
  4723  0003D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4724  0003DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4725  0003E0  50E7               	movf	indf1,w,c
  4726  0003E2                     u3380:
  4727  0003E2  6EDF               	movwf	indf2,c
  4728  0003E4  0100               	movlb	0	; () banked
  4729  0003E6  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4730  0003E8  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4731                           
  4732                           ; BSR set to: 0
  4733  0003EA  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4734  0003EE  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4735  0003F2  2ADE               	incf	postinc2,f,c
  4736  0003F4  0E00               	movlw	0
  4737  0003F6  22DD               	addwfc	postdec2,f,c
  4738  0003F8                     l3255:
  4739                           
  4740                           ; BSR set to: 0
  4741  0003F8  0100               	movlb	0	; () banked
  4742  0003FA  0771               	decf	__doprnt@len& (0+255),f,b
  4743  0003FC  A0D8               	btfss	status,0,c
  4744  0003FE  0772               	decf	(__doprnt@len+1)& (0+255),f,b
  4745  000400  0100               	movlb	0	; () banked
  4746  000402  2971               	incf	__doprnt@len& (0+255),w,b
  4747  000404  E19A               	bnz	l3243
  4748  000406  0100               	movlb	0	; () banked
  4749  000408  2972               	incf	(__doprnt@len+1)& (0+255),w,b
  4750  00040A  B4D8               	btfsc	status,2,c
  4751  00040C  D2A4               	goto	l3389
  4752  00040E  D795               	goto	l3243
  4753  000410                     l3257:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4757  000410  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4758  000414  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4759  000418  CFDF F06B          	movff	indf2,??__doprnt
  4760  00041C  0E02               	movlw	2
  4761  00041E  26DE               	addwf	postinc2,f,c
  4762  000420  CFDF F06C          	movff	indf2,??__doprnt+1
  4763  000424  0E00               	movlw	0
  4764  000426  22DD               	addwfc	postdec2,f,c
  4765  000428  C06B  FFD9         	movff	??__doprnt,fsr2l
  4766  00042C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4767  000430  50DF               	movf	indf2,w,c
  4768  000432  0100               	movlb	0	; () banked
  4769  000434  6F7A               	movwf	__doprnt@c& (0+255),b
  4770  000436                     l3259:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;doprnt.c: 805: cp = (char *)&c;
  4774  000436  0E7A               	movlw	low __doprnt@c
  4775  000438  0100               	movlb	0	; () banked
  4776  00043A  6F73               	movwf	__doprnt@cp& (0+255),b
  4777  00043C  0E00               	movlw	high __doprnt@c
  4778  00043E  0100               	movlb	0	; () banked
  4779  000440  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 806: len = 1;
  4783  000442  0E00               	movlw	0
  4784  000444  0100               	movlb	0	; () banked
  4785  000446  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4786  000448  0E01               	movlw	1
  4787  00044A  6F71               	movwf	__doprnt@len& (0+255),b
  4788                           
  4789                           ;doprnt.c: 807: goto dostring;
  4790  00044C  D719               	goto	l3227
  4791  00044E                     l3265:
  4792  00044E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4793  000452  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4794  000456  0100               	movlb	0	; () banked
  4795  000458  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4796  00045A  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4797  00045C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4798  00045C  6AF8               	clrf	tblptru,c
  4799  00045E                     	endif
  4800  00045E                     	if	0	;tblptru may be non-zero
  4801  00045E                     	endif
  4802  00045E  0008               	tblrd		*
  4803  000460  CFF5 F07A          	movff	tablat,__doprnt@c
  4804  000464  0100               	movlb	0	; () banked
  4805  000466  517A               	movf	__doprnt@c& (0+255),w,b
  4806                           
  4807                           ; Switch size 1, requested type "space"
  4808                           ; Number of cases is 7, Range of values is 0 to 120
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte           22    12 (average)
  4812                           ;	Chosen strategy is simple_byte
  4813  000468  0A00               	xorlw	0	; case 0
  4814  00046A  B4D8               	btfsc	status,2,c
  4815  00046C  D284               	goto	l3391
  4816  00046E  0A58               	xorlw	88	; case 88
  4817  000470  B4D8               	btfsc	status,2,c
  4818  000472  D6BA               	goto	l3213
  4819  000474  0A3B               	xorlw	59	; case 99
  4820  000476  B4D8               	btfsc	status,2,c
  4821  000478  D7CB               	goto	l3257
  4822  00047A  0A07               	xorlw	7	; case 100
  4823  00047C  B4D8               	btfsc	status,2,c
  4824  00047E  D00A               	goto	l344
  4825  000480  0A0D               	xorlw	13	; case 105
  4826  000482  B4D8               	btfsc	status,2,c
  4827  000484  D007               	goto	l344
  4828  000486  0A1A               	xorlw	26	; case 115
  4829  000488  B4D8               	btfsc	status,2,c
  4830  00048A  D6B1               	goto	l3215
  4831  00048C  0A0B               	xorlw	11	; case 120
  4832  00048E  B4D8               	btfsc	status,2,c
  4833  000490  D6AB               	goto	l3213
  4834  000492  D7D1               	goto	l3259
  4835  000494                     l344:
  4836                           
  4837                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4838  000494  0100               	movlb	0	; () banked
  4839  000496  BF77               	btfsc	__doprnt@flag& (0+255),7,b
  4840  000498  D020               	goto	l3275
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;doprnt.c: 1253: {
  4844                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4845  00049A  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4846  00049E  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4847  0004A2  CFDF F06B          	movff	indf2,??__doprnt
  4848  0004A6  0E02               	movlw	2
  4849  0004A8  26DE               	addwf	postinc2,f,c
  4850  0004AA  CFDF F06C          	movff	indf2,??__doprnt+1
  4851  0004AE  0E00               	movlw	0
  4852  0004B0  22DD               	addwfc	postdec2,f,c
  4853  0004B2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4854  0004B6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4855  0004BA  CFDE F075          	movff	postinc2,__doprnt@val
  4856  0004BE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;doprnt.c: 1261: if((int)val < 0) {
  4860  0004C2  0100               	movlb	0	; () banked
  4861  0004C4  AF76               	btfss	(__doprnt@val+1)& (0+255),7,b
  4862  0004C6  D060               	goto	l3307
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;doprnt.c: 1262: flag |= 0x03;
  4866  0004C8  0E03               	movlw	3
  4867  0004CA  0100               	movlb	0	; () banked
  4868  0004CC  1377               	iorwf	__doprnt@flag& (0+255),f,b
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;doprnt.c: 1263: val = -val;
  4872  0004CE  0100               	movlb	0	; () banked
  4873  0004D0  6D75               	negf	__doprnt@val& (0+255),b
  4874  0004D2  1F76               	comf	(__doprnt@val+1)& (0+255),f,b
  4875  0004D4  B0D8               	btfsc	status,0,c
  4876  0004D6  2B76               	incf	(__doprnt@val+1)& (0+255),f,b
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;doprnt.c: 1264: }
  4880                           ;doprnt.c: 1266: }
  4881  0004D8  D057               	goto	l3307
  4882  0004DA                     l3275:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;doprnt.c: 1268: else
  4886                           ;doprnt.c: 1273: {
  4887                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4888  0004DA  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4889  0004DE  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4890  0004E2  CFDF F06B          	movff	indf2,??__doprnt
  4891  0004E6  0E02               	movlw	2
  4892  0004E8  26DE               	addwf	postinc2,f,c
  4893  0004EA  CFDF F06C          	movff	indf2,??__doprnt+1
  4894  0004EE  0E00               	movlw	0
  4895  0004F0  22DD               	addwfc	postdec2,f,c
  4896  0004F2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4897  0004F6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4898  0004FA  CFDE F075          	movff	postinc2,__doprnt@val
  4899  0004FE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;doprnt.c: 1287: }
  4903                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4904  000502  D042               	goto	l3307
  4905  000504                     l3277:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4909  000504  0E01               	movlw	1
  4910  000506  0100               	movlb	0	; () banked
  4911  000508  6F7A               	movwf	__doprnt@c& (0+255),b
  4912  00050A                     l3279:
  4913                           
  4914                           ; BSR set to: 0
  4915  00050A  0E05               	movlw	5
  4916  00050C  0100               	movlb	0	; () banked
  4917  00050E  197A               	xorwf	__doprnt@c& (0+255),w,b
  4918  000510  B4D8               	btfsc	status,2,c
  4919  000512  D043               	goto	l3309
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 1306: if(val < dpowers[c])
  4923                           
  4924                           ; BSR set to: 0
  4925                           
  4926                           ; BSR set to: 0
  4927  000514  0100               	movlb	0	; () banked
  4928  000516  517A               	movf	__doprnt@c& (0+255),w,b
  4929  000518  0D02               	mullw	2
  4930  00051A  0E63               	movlw	low _dpowers
  4931  00051C  24F3               	addwf	prodl,w,c
  4932  00051E  6EF6               	movwf	tblptrl,c
  4933  000520  0EFE               	movlw	high _dpowers
  4934  000522  20F4               	addwfc	prodh,w,c
  4935  000524  6EF7               	movwf	tblptrh,c
  4936  000526                     	if	1	;There are 3 active tblptr bytes
  4937  000526  6AF8               	clrf	tblptru,c
  4938  000528  0E00               	movlw	low (__mediumconst shr (0+16))
  4939  00052A  22F8               	addwfc	tblptru,f,c
  4940  00052C                     	endif
  4941  00052C  0009               	tblrd		*+
  4942  00052E  50F5               	movf	tablat,w,c
  4943  000530  0100               	movlb	0	; () banked
  4944  000532  5D75               	subwf	__doprnt@val& (0+255),w,b
  4945  000534  0009               	tblrd		*+
  4946  000536  50F5               	movf	tablat,w,c
  4947  000538  0100               	movlb	0	; () banked
  4948  00053A  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4949  00053C  A0D8               	btfss	status,0,c
  4950  00053E  D02D               	goto	l3309
  4951                           
  4952                           ; BSR set to: 0
  4953                           
  4954                           ; BSR set to: 0
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;doprnt.c: 1307: break;
  4958  000540  0100               	movlb	0	; () banked
  4959  000542  2B7A               	incf	__doprnt@c& (0+255),f,b
  4960  000544  D7E2               	goto	l3279
  4961  000546                     l3291:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4965  000546  0E01               	movlw	1
  4966  000548  0100               	movlb	0	; () banked
  4967  00054A  6F7A               	movwf	__doprnt@c& (0+255),b
  4968  00054C                     l3293:
  4969                           
  4970                           ; BSR set to: 0
  4971  00054C  0E04               	movlw	4
  4972  00054E  0100               	movlb	0	; () banked
  4973  000550  197A               	xorwf	__doprnt@c& (0+255),w,b
  4974  000552  B4D8               	btfsc	status,2,c
  4975  000554  D022               	goto	l3309
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4979                           
  4980                           ; BSR set to: 0
  4981                           
  4982                           ; BSR set to: 0
  4983  000556  0100               	movlb	0	; () banked
  4984  000558  517A               	movf	__doprnt@c& (0+255),w,b
  4985  00055A  0D02               	mullw	2
  4986  00055C  0E6D               	movlw	low _hexpowers
  4987  00055E  24F3               	addwf	prodl,w,c
  4988  000560  6EF6               	movwf	tblptrl,c
  4989  000562  0EFE               	movlw	high _hexpowers
  4990  000564  20F4               	addwfc	prodh,w,c
  4991  000566  6EF7               	movwf	tblptrh,c
  4992  000568                     	if	1	;There are 3 active tblptr bytes
  4993  000568  6AF8               	clrf	tblptru,c
  4994  00056A  0E00               	movlw	low (__mediumconst shr (0+16))
  4995  00056C  22F8               	addwfc	tblptru,f,c
  4996  00056E                     	endif
  4997  00056E  0009               	tblrd		*+
  4998  000570  50F5               	movf	tablat,w,c
  4999  000572  0100               	movlb	0	; () banked
  5000  000574  5D75               	subwf	__doprnt@val& (0+255),w,b
  5001  000576  0009               	tblrd		*+
  5002  000578  50F5               	movf	tablat,w,c
  5003  00057A  0100               	movlb	0	; () banked
  5004  00057C  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  5005  00057E  A0D8               	btfss	status,0,c
  5006  000580  D00C               	goto	l3309
  5007                           
  5008                           ; BSR set to: 0
  5009                           
  5010                           ; BSR set to: 0
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;doprnt.c: 1318: break;
  5014  000582  0100               	movlb	0	; () banked
  5015  000584  2B7A               	incf	__doprnt@c& (0+255),f,b
  5016  000586  D7E2               	goto	l3293
  5017  000588                     l3307:
  5018                           
  5019                           ; BSR set to: 0
  5020  000588  0100               	movlb	0	; () banked
  5021  00058A  5177               	movf	__doprnt@flag& (0+255),w,b
  5022  00058C  0B80               	andlw	128
  5023                           
  5024                           ; Switch size 1, requested type "space"
  5025                           ; Number of cases is 2, Range of values is 0 to 128
  5026                           ; switch strategies available:
  5027                           ; Name         Instructions Cycles
  5028                           ; simple_byte            7     4 (average)
  5029                           ;	Chosen strategy is simple_byte
  5030  00058E  0A00               	xorlw	0	; case 0
  5031  000590  B4D8               	btfsc	status,2,c
  5032  000592  D7B8               	goto	l3277
  5033  000594  0A80               	xorlw	128	; case 128
  5034  000596  B4D8               	btfsc	status,2,c
  5035  000598  D7D6               	goto	l3291
  5036  00059A                     l3309:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5040  00059A  0100               	movlb	0	; () banked
  5041  00059C  5178               	movf	__doprnt@width& (0+255),w,b
  5042  00059E  0100               	movlb	0	; () banked
  5043  0005A0  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5044  0005A2  B4D8               	btfsc	status,2,c
  5045  0005A4  D00B               	goto	l3315
  5046                           
  5047                           ; BSR set to: 0
  5048  0005A6  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5049  0005AA  0E03               	movlw	3
  5050  0005AC  0100               	movlb	0	; () banked
  5051  0005AE  176B               	andwf	??__doprnt& (0+255),f,b
  5052  0005B0  B4D8               	btfsc	status,2,c
  5053  0005B2  D004               	goto	l3315
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;doprnt.c: 1346: width--;
  5057  0005B4  0100               	movlb	0	; () banked
  5058  0005B6  0778               	decf	__doprnt@width& (0+255),f,b
  5059  0005B8  A0D8               	btfss	status,0,c
  5060  0005BA  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5061  0005BC                     l3315:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;doprnt.c: 1381: if(width > c)
  5065  0005BC  0E80               	movlw	128
  5066  0005BE  0100               	movlb	0	; () banked
  5067  0005C0  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5068  0005C2  0E7F               	movlw	127
  5069  0005C4  0100               	movlb	0	; () banked
  5070  0005C6  6F6B               	movwf	??__doprnt& (0+255),b
  5071  0005C8  0100               	movlb	0	; () banked
  5072  0005CA  5178               	movf	__doprnt@width& (0+255),w,b
  5073  0005CC  0100               	movlb	0	; () banked
  5074  0005CE  5D7A               	subwf	__doprnt@c& (0+255),w,b
  5075  0005D0  0100               	movlb	0	; () banked
  5076  0005D2  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  5077  0005D4  0A80               	xorlw	128
  5078  0005D6  0100               	movlb	0	; () banked
  5079  0005D8  596B               	subwfb	??__doprnt& (0+255),w,b
  5080  0005DA  B0D8               	btfsc	status,0,c
  5081  0005DC  D00B               	goto	l3319
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;doprnt.c: 1382: width -= c;
  5085  0005DE  0100               	movlb	0	; () banked
  5086  0005E0  517A               	movf	__doprnt@c& (0+255),w,b
  5087  0005E2  0100               	movlb	0	; () banked
  5088  0005E4  5F78               	subwf	__doprnt@width& (0+255),f,b
  5089  0005E6  0E00               	movlw	0
  5090  0005E8  0100               	movlb	0	; () banked
  5091  0005EA  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  5092  0005EC  0EFF               	movlw	255
  5093  0005EE  0100               	movlb	0	; () banked
  5094  0005F0  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  5095  0005F2  D005               	goto	l3321
  5096  0005F4                     l3319:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;doprnt.c: 1383: else
  5100                           ;doprnt.c: 1384: width = 0;
  5101  0005F4  0E00               	movlw	0
  5102  0005F6  0100               	movlb	0	; () banked
  5103  0005F8  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  5104  0005FA  0E00               	movlw	0
  5105  0005FC  6F78               	movwf	__doprnt@width& (0+255),b
  5106  0005FE                     l3321:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;doprnt.c: 1387: if(flag & 0x04) {
  5110  0005FE  0100               	movlb	0	; () banked
  5111  000600  A577               	btfss	__doprnt@flag& (0+255),2,b
  5112  000602  D082               	goto	l3345
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;doprnt.c: 1392: if(flag & 0x03)
  5116  000604  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5117  000608  0E03               	movlw	3
  5118  00060A  0100               	movlb	0	; () banked
  5119  00060C  176B               	andwf	??__doprnt& (0+255),f,b
  5120  00060E  B4D8               	btfsc	status,2,c
  5121  000610  D038               	goto	l3333
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5125  000612  0100               	movlb	0	; () banked
  5126  000614  EE20 F002          	lfsr	2,2
  5127  000618  5165               	movf	__doprnt@pb& (0+255),w,b
  5128  00061A  26D9               	addwf	fsr2l,f,c
  5129  00061C  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5130  00061E  22DA               	addwfc	fsr2h,f,c
  5131  000620  50DE               	movf	postinc2,w,c
  5132  000622  10DE               	iorwf	postinc2,w,c
  5133  000624  B4D8               	btfsc	status,2,c
  5134  000626  D018               	goto	l3329
  5135                           
  5136                           ; BSR set to: 0
  5137  000628  0100               	movlb	0	; () banked
  5138  00062A  EE20 F002          	lfsr	2,2
  5139  00062E  5165               	movf	__doprnt@pb& (0+255),w,b
  5140  000630  26D9               	addwf	fsr2l,f,c
  5141  000632  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5142  000634  22DA               	addwfc	fsr2h,f,c
  5143  000636  CFDE F06B          	movff	postinc2,??__doprnt
  5144  00063A  CFDD F06C          	movff	postdec2,??__doprnt+1
  5145  00063E  D801               	call	u3548
  5146  000640  D020               	goto	l3333
  5147  000642                     u3548:
  5148  000642  0005               	push	
  5149  000644  6EFA               	movwf	pclath,c
  5150  000646  0100               	movlb	0	; () banked
  5151  000648  516B               	movf	??__doprnt& (0+255),w,b
  5152  00064A  6EFD               	movwf	tosl,c
  5153  00064C  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5154  00064E  6EFE               	movwf	tosh,c
  5155  000650  6AFF               	clrf	tosu,c
  5156  000652  50FA               	movf	pclath,w,c
  5157  000654  0E2D               	movlw	45
  5158  000656  0012               	return		;indir
  5159  000658                     l3329:
  5160  000658  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5161  00065C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5162  000660  CFDE F06B          	movff	postinc2,??__doprnt
  5163  000664  CFDD F06C          	movff	postdec2,??__doprnt+1
  5164  000668  C06B  FFD9         	movff	??__doprnt,fsr2l
  5165  00066C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5166  000670  0E2D               	movlw	45
  5167  000672  6EDF               	movwf	indf2,c
  5168  000674  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5169  000678  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5170  00067C  2ADE               	incf	postinc2,f,c
  5171  00067E  0E00               	movlw	0
  5172  000680  22DD               	addwfc	postdec2,f,c
  5173  000682                     l3333:
  5174                           
  5175                           ;doprnt.c: 1415: if(width)
  5176  000682  0100               	movlb	0	; () banked
  5177  000684  5178               	movf	__doprnt@width& (0+255),w,b
  5178  000686  0100               	movlb	0	; () banked
  5179  000688  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5180  00068A  B4D8               	btfsc	status,2,c
  5181  00068C  D0C4               	goto	l3367
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  5185                           
  5186                           ; BSR set to: 0
  5187                           
  5188                           ;doprnt.c: 1416: do
  5189  00068E  0100               	movlb	0	; () banked
  5190  000690  EE20 F002          	lfsr	2,2
  5191  000694  5165               	movf	__doprnt@pb& (0+255),w,b
  5192  000696  26D9               	addwf	fsr2l,f,c
  5193  000698  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5194  00069A  22DA               	addwfc	fsr2h,f,c
  5195  00069C  50DE               	movf	postinc2,w,c
  5196  00069E  10DE               	iorwf	postinc2,w,c
  5197  0006A0  B4D8               	btfsc	status,2,c
  5198  0006A2  D018               	goto	l3339
  5199                           
  5200                           ; BSR set to: 0
  5201  0006A4  0100               	movlb	0	; () banked
  5202  0006A6  EE20 F002          	lfsr	2,2
  5203  0006AA  5165               	movf	__doprnt@pb& (0+255),w,b
  5204  0006AC  26D9               	addwf	fsr2l,f,c
  5205  0006AE  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5206  0006B0  22DA               	addwfc	fsr2h,f,c
  5207  0006B2  CFDE F06B          	movff	postinc2,??__doprnt
  5208  0006B6  CFDD F06C          	movff	postdec2,??__doprnt+1
  5209  0006BA  D801               	call	u3578
  5210  0006BC  D020               	goto	l3343
  5211  0006BE                     u3578:
  5212  0006BE  0005               	push	
  5213  0006C0  6EFA               	movwf	pclath,c
  5214  0006C2  0100               	movlb	0	; () banked
  5215  0006C4  516B               	movf	??__doprnt& (0+255),w,b
  5216  0006C6  6EFD               	movwf	tosl,c
  5217  0006C8  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5218  0006CA  6EFE               	movwf	tosh,c
  5219  0006CC  6AFF               	clrf	tosu,c
  5220  0006CE  50FA               	movf	pclath,w,c
  5221  0006D0  0E30               	movlw	48
  5222  0006D2  0012               	return		;indir
  5223  0006D4                     l3339:
  5224  0006D4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5225  0006D8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5226  0006DC  CFDE F06B          	movff	postinc2,??__doprnt
  5227  0006E0  CFDD F06C          	movff	postdec2,??__doprnt+1
  5228  0006E4  C06B  FFD9         	movff	??__doprnt,fsr2l
  5229  0006E8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5230  0006EC  0E30               	movlw	48
  5231  0006EE  6EDF               	movwf	indf2,c
  5232  0006F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5233  0006F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5234  0006F8  2ADE               	incf	postinc2,f,c
  5235  0006FA  0E00               	movlw	0
  5236  0006FC  22DD               	addwfc	postdec2,f,c
  5237  0006FE                     l3343:
  5238                           
  5239                           ;doprnt.c: 1418: while(--width);
  5240  0006FE  0100               	movlb	0	; () banked
  5241  000700  0778               	decf	__doprnt@width& (0+255),f,b
  5242  000702  A0D8               	btfss	status,0,c
  5243  000704  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5244  000706  D7BD               	goto	l3333
  5245  000708                     l3345:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;doprnt.c: 1422: {
  5249                           ;doprnt.c: 1424: if(width
  5250                           ;doprnt.c: 1428: )
  5251  000708  0100               	movlb	0	; () banked
  5252  00070A  5178               	movf	__doprnt@width& (0+255),w,b
  5253  00070C  0100               	movlb	0	; () banked
  5254  00070E  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5255  000710  B4D8               	btfsc	status,2,c
  5256  000712  D042               	goto	l3357
  5257  000714                     l3347:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  5261  000714  0100               	movlb	0	; () banked
  5262  000716  EE20 F002          	lfsr	2,2
  5263  00071A  5165               	movf	__doprnt@pb& (0+255),w,b
  5264  00071C  26D9               	addwf	fsr2l,f,c
  5265  00071E  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5266  000720  22DA               	addwfc	fsr2h,f,c
  5267  000722  50DE               	movf	postinc2,w,c
  5268  000724  10DE               	iorwf	postinc2,w,c
  5269  000726  B4D8               	btfsc	status,2,c
  5270  000728  D018               	goto	l3351
  5271                           
  5272                           ; BSR set to: 0
  5273  00072A  0100               	movlb	0	; () banked
  5274  00072C  EE20 F002          	lfsr	2,2
  5275  000730  5165               	movf	__doprnt@pb& (0+255),w,b
  5276  000732  26D9               	addwf	fsr2l,f,c
  5277  000734  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5278  000736  22DA               	addwfc	fsr2h,f,c
  5279  000738  CFDE F06B          	movff	postinc2,??__doprnt
  5280  00073C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5281  000740  D801               	call	u3618
  5282  000742  D020               	goto	l3355
  5283  000744                     u3618:
  5284  000744  0005               	push	
  5285  000746  6EFA               	movwf	pclath,c
  5286  000748  0100               	movlb	0	; () banked
  5287  00074A  516B               	movf	??__doprnt& (0+255),w,b
  5288  00074C  6EFD               	movwf	tosl,c
  5289  00074E  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5290  000750  6EFE               	movwf	tosh,c
  5291  000752  6AFF               	clrf	tosu,c
  5292  000754  50FA               	movf	pclath,w,c
  5293  000756  0E20               	movlw	32
  5294  000758  0012               	return		;indir
  5295  00075A                     l3351:
  5296  00075A  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5297  00075E  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5298  000762  CFDE F06B          	movff	postinc2,??__doprnt
  5299  000766  CFDD F06C          	movff	postdec2,??__doprnt+1
  5300  00076A  C06B  FFD9         	movff	??__doprnt,fsr2l
  5301  00076E  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5302  000772  0E20               	movlw	32
  5303  000774  6EDF               	movwf	indf2,c
  5304  000776  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5305  00077A  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5306  00077E  2ADE               	incf	postinc2,f,c
  5307  000780  0E00               	movlw	0
  5308  000782  22DD               	addwfc	postdec2,f,c
  5309  000784                     l3355:
  5310                           
  5311                           ;doprnt.c: 1431: while(--width);
  5312  000784  0100               	movlb	0	; () banked
  5313  000786  0778               	decf	__doprnt@width& (0+255),f,b
  5314  000788  A0D8               	btfss	status,0,c
  5315  00078A  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5316  00078C  0100               	movlb	0	; () banked
  5317  00078E  5178               	movf	__doprnt@width& (0+255),w,b
  5318  000790  0100               	movlb	0	; () banked
  5319  000792  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5320  000794  A4D8               	btfss	status,2,c
  5321  000796  D7BE               	goto	l3347
  5322  000798                     l3357:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;doprnt.c: 1438: if(flag & 0x03)
  5326  000798  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5327  00079C  0E03               	movlw	3
  5328  00079E  0100               	movlb	0	; () banked
  5329  0007A0  176B               	andwf	??__doprnt& (0+255),f,b
  5330  0007A2  B4D8               	btfsc	status,2,c
  5331  0007A4  D038               	goto	l3367
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5335  0007A6  0100               	movlb	0	; () banked
  5336  0007A8  EE20 F002          	lfsr	2,2
  5337  0007AC  5165               	movf	__doprnt@pb& (0+255),w,b
  5338  0007AE  26D9               	addwf	fsr2l,f,c
  5339  0007B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5340  0007B2  22DA               	addwfc	fsr2h,f,c
  5341  0007B4  50DE               	movf	postinc2,w,c
  5342  0007B6  10DE               	iorwf	postinc2,w,c
  5343  0007B8  B4D8               	btfsc	status,2,c
  5344  0007BA  D018               	goto	l3363
  5345                           
  5346                           ; BSR set to: 0
  5347  0007BC  0100               	movlb	0	; () banked
  5348  0007BE  EE20 F002          	lfsr	2,2
  5349  0007C2  5165               	movf	__doprnt@pb& (0+255),w,b
  5350  0007C4  26D9               	addwf	fsr2l,f,c
  5351  0007C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5352  0007C8  22DA               	addwfc	fsr2h,f,c
  5353  0007CA  CFDE F06B          	movff	postinc2,??__doprnt
  5354  0007CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  5355  0007D2  D801               	call	u3658
  5356  0007D4  D020               	goto	l3367
  5357  0007D6                     u3658:
  5358  0007D6  0005               	push	
  5359  0007D8  6EFA               	movwf	pclath,c
  5360  0007DA  0100               	movlb	0	; () banked
  5361  0007DC  516B               	movf	??__doprnt& (0+255),w,b
  5362  0007DE  6EFD               	movwf	tosl,c
  5363  0007E0  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5364  0007E2  6EFE               	movwf	tosh,c
  5365  0007E4  6AFF               	clrf	tosu,c
  5366  0007E6  50FA               	movf	pclath,w,c
  5367  0007E8  0E2D               	movlw	45
  5368  0007EA  0012               	return		;indir
  5369  0007EC                     l3363:
  5370  0007EC  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5371  0007F0  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5372  0007F4  CFDE F06B          	movff	postinc2,??__doprnt
  5373  0007F8  CFDD F06C          	movff	postdec2,??__doprnt+1
  5374  0007FC  C06B  FFD9         	movff	??__doprnt,fsr2l
  5375  000800  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5376  000804  0E2D               	movlw	45
  5377  000806  6EDF               	movwf	indf2,c
  5378  000808  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5379  00080C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5380  000810  2ADE               	incf	postinc2,f,c
  5381  000812  0E00               	movlw	0
  5382  000814  22DD               	addwfc	postdec2,f,c
  5383  000816                     l3367:
  5384                           
  5385                           ;doprnt.c: 1469: }
  5386                           ;doprnt.c: 1472: prec = c;
  5387  000816  C07A  F070         	movff	__doprnt@c,__doprnt@prec
  5388                           
  5389                           ;doprnt.c: 1474: while(prec--) {
  5390  00081A  D097               	goto	l3387
  5391  00081C                     l3369:
  5392                           
  5393                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5394  00081C  0100               	movlb	0	; () banked
  5395  00081E  5170               	movf	__doprnt@prec& (0+255),w,b
  5396  000820  0D02               	mullw	2
  5397  000822  0E63               	movlw	low _dpowers
  5398  000824  24F3               	addwf	prodl,w,c
  5399  000826  6EF6               	movwf	tblptrl,c
  5400  000828  0EFE               	movlw	high _dpowers
  5401  00082A  20F4               	addwfc	prodh,w,c
  5402  00082C  6EF7               	movwf	tblptrh,c
  5403  00082E                     	if	1	;There are 3 active tblptr bytes
  5404  00082E  6AF8               	clrf	tblptru,c
  5405  000830  0E00               	movlw	low (__mediumconst shr (0+16))
  5406  000832  22F8               	addwfc	tblptru,f,c
  5407  000834                     	endif
  5408  000834  0009               	tblrd		*+
  5409  000836  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5410  00083A  000A               	tblrd		*-
  5411  00083C  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5412  000840  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5413  000844  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5414  000848  EC4E  F00C         	call	___lwdiv
  5415  00084C  C026  F060         	movff	?___lwdiv,___lwmod@dividend
  5416  000850  C027  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
  5417  000854  0E00               	movlw	0
  5418  000856  0100               	movlb	0	; () banked
  5419  000858  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5420  00085A  0E0A               	movlw	10
  5421  00085C  6F62               	movwf	___lwmod@divisor& (0+255),b
  5422  00085E  EC76  F00B         	call	___lwmod	;wreg free
  5423  000862  0100               	movlb	0	; () banked
  5424  000864  5160               	movf	?___lwmod& (0+255),w,b
  5425  000866  0F30               	addlw	48
  5426  000868  0100               	movlb	0	; () banked
  5427  00086A  6F7A               	movwf	__doprnt@c& (0+255),b
  5428                           
  5429                           ;doprnt.c: 1491: break;
  5430  00086C  D035               	goto	l3379
  5431  00086E                     l3371:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;doprnt.c: 1499: {
  5435                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5436  00086E  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5437  000872  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5438  000876  0100               	movlb	0	; () banked
  5439  000878  5170               	movf	__doprnt@prec& (0+255),w,b
  5440  00087A  0D02               	mullw	2
  5441  00087C  0E6D               	movlw	low _hexpowers
  5442  00087E  24F3               	addwf	prodl,w,c
  5443  000880  6EF6               	movwf	tblptrl,c
  5444  000882  0EFE               	movlw	high _hexpowers
  5445  000884  20F4               	addwfc	prodh,w,c
  5446  000886  6EF7               	movwf	tblptrh,c
  5447  000888                     	if	1	;There are 3 active tblptr bytes
  5448  000888  6AF8               	clrf	tblptru,c
  5449  00088A  0E00               	movlw	low (__mediumconst shr (0+16))
  5450  00088C  22F8               	addwfc	tblptru,f,c
  5451  00088E                     	endif
  5452  00088E  0009               	tblrd		*+
  5453  000890  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5454  000894  000A               	tblrd		*-
  5455  000896  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5456  00089A  EC4E  F00C         	call	___lwdiv	;wreg free
  5457  00089E  5026               	movf	?___lwdiv,w,c
  5458  0008A0  0B0F               	andlw	15
  5459  0008A2  0100               	movlb	0	; () banked
  5460  0008A4  6F6F               	movwf	__doprnt@idx& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5464  0008A6  0100               	movlb	0	; () banked
  5465  0008A8  516F               	movf	__doprnt@idx& (0+255),w,b
  5466  0008AA  0D01               	mullw	1
  5467  0008AC  0E31               	movlw	low STR_29
  5468  0008AE  24F3               	addwf	prodl,w,c
  5469  0008B0  6EF6               	movwf	tblptrl,c
  5470  0008B2  0EFF               	movlw	high STR_29
  5471  0008B4  20F4               	addwfc	prodh,w,c
  5472  0008B6  6EF7               	movwf	tblptrh,c
  5473  0008B8                     	if	1	;There are 3 active tblptr bytes
  5474  0008B8  6AF8               	clrf	tblptru,c
  5475  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5476  0008BC  22F8               	addwfc	tblptru,f,c
  5477  0008BE                     	endif
  5478  0008BE  0008               	tblrd		*
  5479  0008C0  CFF5 F07A          	movff	tablat,__doprnt@c
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;doprnt.c: 1523: }
  5483                           
  5484                           ;doprnt.c: 1508: }
  5485                           ;doprnt.c: 1510: break;
  5486  0008C4  D009               	goto	l3379
  5487  0008C6                     l3377:
  5488  0008C6  0100               	movlb	0	; () banked
  5489  0008C8  5177               	movf	__doprnt@flag& (0+255),w,b
  5490  0008CA  0B80               	andlw	128
  5491                           
  5492                           ; Switch size 1, requested type "space"
  5493                           ; Number of cases is 2, Range of values is 0 to 128
  5494                           ; switch strategies available:
  5495                           ; Name         Instructions Cycles
  5496                           ; simple_byte            7     4 (average)
  5497                           ;	Chosen strategy is simple_byte
  5498  0008CC  0A00               	xorlw	0	; case 0
  5499  0008CE  B4D8               	btfsc	status,2,c
  5500  0008D0  D7A5               	goto	l3369
  5501  0008D2  0A80               	xorlw	128	; case 128
  5502  0008D4  B4D8               	btfsc	status,2,c
  5503  0008D6  D7CB               	goto	l3371
  5504  0008D8                     l3379:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5508  0008D8  0100               	movlb	0	; () banked
  5509  0008DA  EE20 F002          	lfsr	2,2
  5510  0008DE  5165               	movf	__doprnt@pb& (0+255),w,b
  5511  0008E0  26D9               	addwf	fsr2l,f,c
  5512  0008E2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5513  0008E4  22DA               	addwfc	fsr2h,f,c
  5514  0008E6  50DE               	movf	postinc2,w,c
  5515  0008E8  10DE               	iorwf	postinc2,w,c
  5516  0008EA  B4D8               	btfsc	status,2,c
  5517  0008EC  D019               	goto	l3383
  5518                           
  5519                           ; BSR set to: 0
  5520  0008EE  0100               	movlb	0	; () banked
  5521  0008F0  EE20 F002          	lfsr	2,2
  5522  0008F4  5165               	movf	__doprnt@pb& (0+255),w,b
  5523  0008F6  26D9               	addwf	fsr2l,f,c
  5524  0008F8  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5525  0008FA  22DA               	addwfc	fsr2h,f,c
  5526  0008FC  CFDE F06B          	movff	postinc2,??__doprnt
  5527  000900  CFDD F06C          	movff	postdec2,??__doprnt+1
  5528  000904  D801               	call	u3678
  5529  000906  D021               	goto	l3387
  5530  000908                     u3678:
  5531  000908  0005               	push	
  5532  00090A  6EFA               	movwf	pclath,c
  5533  00090C  0100               	movlb	0	; () banked
  5534  00090E  516B               	movf	??__doprnt& (0+255),w,b
  5535  000910  6EFD               	movwf	tosl,c
  5536  000912  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5537  000914  6EFE               	movwf	tosh,c
  5538  000916  6AFF               	clrf	tosu,c
  5539  000918  50FA               	movf	pclath,w,c
  5540  00091A  0100               	movlb	0	; () banked
  5541  00091C  517A               	movf	__doprnt@c& (0+255),w,b
  5542  00091E  0012               	return		;indir
  5543  000920                     l3383:
  5544  000920  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5545  000924  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5546  000928  CFDE F06B          	movff	postinc2,??__doprnt
  5547  00092C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5548  000930  C06B  FFD9         	movff	??__doprnt,fsr2l
  5549  000934  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5550  000938  C07A  FFDF         	movff	__doprnt@c,indf2
  5551  00093C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5552  000940  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5553  000944  2ADE               	incf	postinc2,f,c
  5554  000946  0E00               	movlw	0
  5555  000948  22DD               	addwfc	postdec2,f,c
  5556  00094A                     l3387:
  5557  00094A  0100               	movlb	0	; () banked
  5558  00094C  0770               	decf	__doprnt@prec& (0+255),f,b
  5559  00094E  0100               	movlb	0	; () banked
  5560  000950  2970               	incf	__doprnt@prec& (0+255),w,b
  5561  000952  A4D8               	btfss	status,2,c
  5562  000954  D7B8               	goto	l3377
  5563  000956                     l3389:
  5564  000956  C067  FFF6         	movff	__doprnt@f,tblptrl
  5565  00095A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5566  00095E  0100               	movlb	0	; () banked
  5567  000960  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5568  000962  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5569  000964                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5570  000964  6AF8               	clrf	tblptru,c
  5571  000966                     	endif
  5572  000966                     	if	0	;tblptru may be non-zero
  5573  000966                     	endif
  5574  000966  0008               	tblrd		*
  5575  000968  CFF5 F07A          	movff	tablat,__doprnt@c
  5576  00096C  0100               	movlb	0	; () banked
  5577  00096E  517A               	movf	__doprnt@c& (0+255),w,b
  5578  000970  A4D8               	btfss	status,2,c
  5579  000972  EF4E  F000         	goto	l3183
  5580  000976                     l3391:
  5581                           
  5582                           ;doprnt.c: 1540: return 0;
  5583  000976  0E00               	movlw	0
  5584  000978  0100               	movlb	0	; () banked
  5585  00097A  6F66               	movwf	(?__doprnt+1)& (0+255),b
  5586  00097C  0E00               	movlw	0
  5587  00097E  6F65               	movwf	?__doprnt& (0+255),b
  5588  000980  0012               	return	
  5589  000982                     __end_of__doprnt:
  5590                           	opt stack 0
  5591                           tosu	equ	0xFFF
  5592                           tosh	equ	0xFFE
  5593                           tosl	equ	0xFFD
  5594                           pclath	equ	0xFFA
  5595                           tblptru	equ	0xFF8
  5596                           tblptrh	equ	0xFF7
  5597                           tblptrl	equ	0xFF6
  5598                           tablat	equ	0xFF5
  5599                           prodh	equ	0xFF4
  5600                           prodl	equ	0xFF3
  5601                           intcon	equ	0xFF2
  5602                           postinc0	equ	0xFEE
  5603                           wreg	equ	0xFE8
  5604                           indf1	equ	0xFE7
  5605                           postdec1	equ	0xFE5
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _putch *****************
  5616 ;; Defined at:
  5617 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  txData          1    wreg     unsigned char 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  txData          1   38[COMRAM] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		_EUSART1_Write
  5640 ;; This function is called by:
  5641 ;;		_printf
  5642 ;;		__doprnt
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text22
  5647  001CE0                     __ptext22:
  5648                           	opt stack 0
  5649  001CE0                     _putch:
  5650                           	opt stack 22
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;incstack = 0
  5654                           ;putch@txData stored from wreg
  5655  001CE0  6E27               	movwf	putch@txData,c
  5656                           
  5657                           ;eusart1.c: 172: EUSART1_Write(txData);
  5658  001CE2  5027               	movf	putch@txData,w,c
  5659  001CE4  ECBE  F00C         	call	_EUSART1_Write
  5660  001CE8  0012               	return		;funcret
  5661  001CEA                     __end_of_putch:
  5662                           	opt stack 0
  5663                           tosu	equ	0xFFF
  5664                           tosh	equ	0xFFE
  5665                           tosl	equ	0xFFD
  5666                           pclath	equ	0xFFA
  5667                           tblptru	equ	0xFF8
  5668                           tblptrh	equ	0xFF7
  5669                           tblptrl	equ	0xFF6
  5670                           tablat	equ	0xFF5
  5671                           prodh	equ	0xFF4
  5672                           prodl	equ	0xFF3
  5673                           intcon	equ	0xFF2
  5674                           postinc0	equ	0xFEE
  5675                           wreg	equ	0xFE8
  5676                           indf1	equ	0xFE7
  5677                           postdec1	equ	0xFE5
  5678                           fsr1h	equ	0xFE2
  5679                           fsr1l	equ	0xFE1
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function _EUSART1_Write *****************
  5688 ;; Defined at:
  5689 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  txData          1    wreg     unsigned char 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  txData          1   37[COMRAM] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;Total ram usage:        1 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    4
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_putch
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text23
  5718  00197C                     __ptext23:
  5719                           	opt stack 0
  5720  00197C                     _EUSART1_Write:
  5721                           	opt stack 22
  5722                           
  5723                           ;incstack = 0
  5724                           ;EUSART1_Write@txData stored from wreg
  5725  00197C  6E26               	movwf	EUSART1_Write@txData,c
  5726  00197E                     l2191:
  5727  00197E  5039               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  5728  001980  B4D8               	btfsc	status,2,c
  5729  001982  D7FD               	goto	l2191
  5730                           
  5731                           ;eusart1.c: 146: }
  5732                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  5733  001984  B89D               	btfsc	3997,4,c	;volatile
  5734  001986  D003               	goto	l110
  5735                           
  5736                           ;eusart1.c: 149: {
  5737                           ;eusart1.c: 150: TXREG1 = txData;
  5738  001988  C026  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5739                           
  5740                           ;eusart1.c: 151: }
  5741  00198C  D012               	goto	l2205
  5742  00198E                     l110:
  5743                           
  5744                           ;eusart1.c: 152: else
  5745                           ;eusart1.c: 153: {
  5746                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  5747  00198E  989D               	bcf	3997,4,c	;volatile
  5748                           
  5749                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  5750  001990  5032               	movf	_eusart1TxHead,w,c
  5751  001992  0D01               	mullw	1
  5752  001994  0E00               	movlw	low _eusart1TxBuffer
  5753  001996  24F3               	addwf	prodl,w,c
  5754  001998  6ED9               	movwf	fsr2l,c
  5755  00199A  0E01               	movlw	high _eusart1TxBuffer
  5756  00199C  20F4               	addwfc	prodh,w,c
  5757  00199E  6EDA               	movwf	fsr2h,c
  5758  0019A0  C026  FFDF         	movff	EUSART1_Write@txData,indf2
  5759  0019A4  2A32               	incf	_eusart1TxHead,f,c
  5760                           
  5761                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  5762  0019A6  0E7F               	movlw	127
  5763  0019A8  6432               	cpfsgt	_eusart1TxHead,c
  5764  0019AA  D002               	goto	l2203
  5765                           
  5766                           ;eusart1.c: 157: {
  5767                           ;eusart1.c: 158: eusart1TxHead = 0;
  5768  0019AC  0E00               	movlw	0
  5769  0019AE  6E32               	movwf	_eusart1TxHead,c
  5770  0019B0                     l2203:
  5771                           
  5772                           ;eusart1.c: 159: }
  5773                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  5774  0019B0  0639               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  5775  0019B2                     l2205:
  5776                           
  5777                           ;eusart1.c: 161: }
  5778                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  5779  0019B2  889D               	bsf	3997,4,c	;volatile
  5780  0019B4  0012               	return		;funcret
  5781  0019B6                     __end_of_EUSART1_Write:
  5782                           	opt stack 0
  5783                           tosu	equ	0xFFF
  5784                           tosh	equ	0xFFE
  5785                           tosl	equ	0xFFD
  5786                           pclath	equ	0xFFA
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           prodh	equ	0xFF4
  5792                           prodl	equ	0xFF3
  5793                           intcon	equ	0xFF2
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           indf1	equ	0xFE7
  5797                           postdec1	equ	0xFE5
  5798                           fsr1h	equ	0xFE2
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _isdigit *****************
  5808 ;; Defined at:
  5809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  c               1    wreg     unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  c               1   39[COMRAM] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;		None               void
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:        3 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    4
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		__doprnt
  5834 ;;		_strtol
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text24
  5839  001C5A                     __ptext24:
  5840                           	opt stack 0
  5841  001C5A                     _isdigit:
  5842                           	opt stack 25
  5843                           
  5844                           ;incstack = 0
  5845                           ;isdigit@c stored from wreg
  5846  001C5A  6E28               	movwf	isdigit@c,c
  5847  001C5C  0E00               	movlw	0
  5848  001C5E  6E27               	movwf	_isdigit$1032,c
  5849  001C60  0E3A               	movlw	58
  5850  001C62  6028               	cpfslt	isdigit@c,c
  5851  001C64  D005               	goto	l2217
  5852  001C66  0E2F               	movlw	47
  5853  001C68  6428               	cpfsgt	isdigit@c,c
  5854  001C6A  D002               	goto	l2217
  5855  001C6C  0E01               	movlw	1
  5856  001C6E  6E27               	movwf	_isdigit$1032,c
  5857  001C70                     l2217:
  5858  001C70  C027  F026         	movff	_isdigit$1032,??_isdigit
  5859  001C74  3026               	rrcf	??_isdigit,w,c
  5860  001C76  0012               	return	
  5861  001C78                     __end_of_isdigit:
  5862                           	opt stack 0
  5863                           tosu	equ	0xFFF
  5864                           tosh	equ	0xFFE
  5865                           tosl	equ	0xFFD
  5866                           pclath	equ	0xFFA
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           prodh	equ	0xFF4
  5872                           prodl	equ	0xFF3
  5873                           intcon	equ	0xFF2
  5874                           postinc0	equ	0xFEE
  5875                           wreg	equ	0xFE8
  5876                           indf1	equ	0xFE7
  5877                           postdec1	equ	0xFE5
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function ___wmul *****************
  5888 ;; Defined at:
  5889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  multiplier      2   37[COMRAM] unsigned int 
  5892 ;;  multiplicand    2   39[COMRAM] unsigned int 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  product         2   41[COMRAM] unsigned int 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  2   37[COMRAM] unsigned int 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0, prodl, prodh
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;Total ram usage:        6 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    4
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		__doprnt
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text25
  5919  001BF6                     __ptext25:
  5920                           	opt stack 0
  5921  001BF6                     ___wmul:
  5922                           	opt stack 23
  5923                           
  5924                           ;incstack = 0
  5925  001BF6  5026               	movf	___wmul@multiplier,w,c
  5926  001BF8  0228               	mulwf	___wmul@multiplicand,c
  5927  001BFA  CFF3 F02A          	movff	prodl,___wmul@product
  5928  001BFE  CFF4 F02B          	movff	prodh,___wmul@product+1
  5929  001C02  5026               	movf	___wmul@multiplier,w,c
  5930  001C04  0229               	mulwf	___wmul@multiplicand+1,c
  5931  001C06  50F3               	movf	prodl,w,c
  5932  001C08  262B               	addwf	___wmul@product+1,f,c
  5933  001C0A  5027               	movf	___wmul@multiplier+1,w,c
  5934  001C0C  0228               	mulwf	___wmul@multiplicand,c
  5935  001C0E  50F3               	movf	prodl,w,c
  5936  001C10  262B               	addwf	___wmul@product+1,f,c
  5937  001C12  C02A  F026         	movff	___wmul@product,?___wmul
  5938  001C16  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  5939  001C1A  0012               	return	
  5940  001C1C                     __end_of___wmul:
  5941                           	opt stack 0
  5942                           tosu	equ	0xFFF
  5943                           tosh	equ	0xFFE
  5944                           tosl	equ	0xFFD
  5945                           pclath	equ	0xFFA
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           postdec1	equ	0xFE5
  5957                           fsr1h	equ	0xFE2
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function ___lwmod *****************
  5967 ;; Defined at:
  5968 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  dividend        2    0[BANK0 ] unsigned int 
  5971 ;;  divisor         2    2[BANK0 ] unsigned int 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  counter         1    4[BANK0 ] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2    0[BANK0 ] unsigned int 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        5 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    4
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		__doprnt
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text26
  5998  0016EC                     __ptext26:
  5999                           	opt stack 0
  6000  0016EC                     ___lwmod:
  6001                           	opt stack 23
  6002                           
  6003                           ;incstack = 0
  6004  0016EC  0100               	movlb	0	; () banked
  6005  0016EE  5162               	movf	___lwmod@divisor& (0+255),w,b
  6006  0016F0  0100               	movlb	0	; () banked
  6007  0016F2  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6008  0016F4  B4D8               	btfsc	status,2,c
  6009  0016F6  D026               	goto	l829
  6010                           
  6011                           ; BSR set to: 0
  6012  0016F8  0E01               	movlw	1
  6013  0016FA  0100               	movlb	0	; () banked
  6014  0016FC  6F64               	movwf	___lwmod@counter& (0+255),b
  6015  0016FE  D006               	goto	l3171
  6016  001700                     l3169:
  6017                           
  6018                           ; BSR set to: 0
  6019  001700  0100               	movlb	0	; () banked
  6020  001702  90D8               	bcf	status,0,c
  6021  001704  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  6022  001706  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6023  001708  0100               	movlb	0	; () banked
  6024  00170A  2B64               	incf	___lwmod@counter& (0+255),f,b
  6025  00170C                     l3171:
  6026                           
  6027                           ; BSR set to: 0
  6028  00170C  0100               	movlb	0	; () banked
  6029  00170E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6030  001710  D7F7               	goto	l3169
  6031  001712                     l3173:
  6032                           
  6033                           ; BSR set to: 0
  6034  001712  0100               	movlb	0	; () banked
  6035  001714  5162               	movf	___lwmod@divisor& (0+255),w,b
  6036  001716  0100               	movlb	0	; () banked
  6037  001718  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  6038  00171A  0100               	movlb	0	; () banked
  6039  00171C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6040  00171E  0100               	movlb	0	; () banked
  6041  001720  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6042  001722  A0D8               	btfss	status,0,c
  6043  001724  D008               	goto	l3177
  6044                           
  6045                           ; BSR set to: 0
  6046  001726  0100               	movlb	0	; () banked
  6047  001728  5162               	movf	___lwmod@divisor& (0+255),w,b
  6048  00172A  0100               	movlb	0	; () banked
  6049  00172C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  6050  00172E  0100               	movlb	0	; () banked
  6051  001730  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6052  001732  0100               	movlb	0	; () banked
  6053  001734  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6054  001736                     l3177:
  6055                           
  6056                           ; BSR set to: 0
  6057  001736  0100               	movlb	0	; () banked
  6058  001738  90D8               	bcf	status,0,c
  6059  00173A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6060  00173C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  6061                           
  6062                           ; BSR set to: 0
  6063  00173E  0100               	movlb	0	; () banked
  6064  001740  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  6065  001742  D7E7               	goto	l3173
  6066  001744                     l829:
  6067                           
  6068                           ; BSR set to: 0
  6069  001744  C060  F060         	movff	___lwmod@dividend,?___lwmod
  6070  001748  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  6071                           
  6072                           ; BSR set to: 0
  6073  00174C  0012               	return		;funcret
  6074  00174E                     __end_of___lwmod:
  6075                           	opt stack 0
  6076                           tosu	equ	0xFFF
  6077                           tosh	equ	0xFFE
  6078                           tosl	equ	0xFFD
  6079                           pclath	equ	0xFFA
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           postinc0	equ	0xFEE
  6088                           wreg	equ	0xFE8
  6089                           indf1	equ	0xFE7
  6090                           postdec1	equ	0xFE5
  6091                           fsr1h	equ	0xFE2
  6092                           fsr1l	equ	0xFE1
  6093                           indf2	equ	0xFDF
  6094                           postinc2	equ	0xFDE
  6095                           postdec2	equ	0xFDD
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function ___lwdiv *****************
  6101 ;; Defined at:
  6102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  dividend        2   37[COMRAM] unsigned int 
  6105 ;;  divisor         2   39[COMRAM] unsigned int 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  quotient        2   41[COMRAM] unsigned int 
  6108 ;;  counter         1   43[COMRAM] unsigned char 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2   37[COMRAM] unsigned int 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;Total ram usage:        7 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    4
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		__doprnt
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text27
  6133  00189C                     __ptext27:
  6134                           	opt stack 0
  6135  00189C                     ___lwdiv:
  6136                           	opt stack 23
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;incstack = 0
  6140  00189C  0E00               	movlw	0
  6141  00189E  6E2B               	movwf	___lwdiv@quotient+1,c
  6142  0018A0  0E00               	movlw	0
  6143  0018A2  6E2A               	movwf	___lwdiv@quotient,c
  6144  0018A4  5028               	movf	___lwdiv@divisor,w,c
  6145  0018A6  1029               	iorwf	___lwdiv@divisor+1,w,c
  6146  0018A8  B4D8               	btfsc	status,2,c
  6147  0018AA  D01C               	goto	l819
  6148  0018AC  0E01               	movlw	1
  6149  0018AE  6E2C               	movwf	___lwdiv@counter,c
  6150  0018B0  D004               	goto	l2235
  6151  0018B2                     l2233:
  6152  0018B2  90D8               	bcf	status,0,c
  6153  0018B4  3628               	rlcf	___lwdiv@divisor,f,c
  6154  0018B6  3629               	rlcf	___lwdiv@divisor+1,f,c
  6155  0018B8  2A2C               	incf	___lwdiv@counter,f,c
  6156  0018BA                     l2235:
  6157  0018BA  AE29               	btfss	___lwdiv@divisor+1,7,c
  6158  0018BC  D7FA               	goto	l2233
  6159  0018BE                     l2237:
  6160  0018BE  90D8               	bcf	status,0,c
  6161  0018C0  362A               	rlcf	___lwdiv@quotient,f,c
  6162  0018C2  362B               	rlcf	___lwdiv@quotient+1,f,c
  6163  0018C4  5028               	movf	___lwdiv@divisor,w,c
  6164  0018C6  5C26               	subwf	___lwdiv@dividend,w,c
  6165  0018C8  5029               	movf	___lwdiv@divisor+1,w,c
  6166  0018CA  5827               	subwfb	___lwdiv@dividend+1,w,c
  6167  0018CC  A0D8               	btfss	status,0,c
  6168  0018CE  D005               	goto	l2245
  6169  0018D0  5028               	movf	___lwdiv@divisor,w,c
  6170  0018D2  5E26               	subwf	___lwdiv@dividend,f,c
  6171  0018D4  5029               	movf	___lwdiv@divisor+1,w,c
  6172  0018D6  5A27               	subwfb	___lwdiv@dividend+1,f,c
  6173  0018D8  802A               	bsf	___lwdiv@quotient,0,c
  6174  0018DA                     l2245:
  6175  0018DA  90D8               	bcf	status,0,c
  6176  0018DC  3229               	rrcf	___lwdiv@divisor+1,f,c
  6177  0018DE  3228               	rrcf	___lwdiv@divisor,f,c
  6178  0018E0  2E2C               	decfsz	___lwdiv@counter,f,c
  6179  0018E2  D7ED               	goto	l2237
  6180  0018E4                     l819:
  6181  0018E4  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  6182  0018E8  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6183  0018EC  0012               	return		;funcret
  6184  0018EE                     __end_of___lwdiv:
  6185                           	opt stack 0
  6186                           tosu	equ	0xFFF
  6187                           tosh	equ	0xFFE
  6188                           tosl	equ	0xFFD
  6189                           pclath	equ	0xFFA
  6190                           tblptru	equ	0xFF8
  6191                           tblptrh	equ	0xFF7
  6192                           tblptrl	equ	0xFF6
  6193                           tablat	equ	0xFF5
  6194                           prodh	equ	0xFF4
  6195                           prodl	equ	0xFF3
  6196                           intcon	equ	0xFF2
  6197                           postinc0	equ	0xFEE
  6198                           wreg	equ	0xFE8
  6199                           indf1	equ	0xFE7
  6200                           postdec1	equ	0xFE5
  6201                           fsr1h	equ	0xFE2
  6202                           fsr1l	equ	0xFE1
  6203                           indf2	equ	0xFDF
  6204                           postinc2	equ	0xFDE
  6205                           postdec2	equ	0xFDD
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function ___awmod *****************
  6211 ;; Defined at:
  6212 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  dividend        2    8[BANK0 ] int 
  6215 ;;  divisor         2   10[BANK0 ] int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  sign            1   13[BANK0 ] unsigned char 
  6218 ;;  counter         1   12[BANK0 ] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  2    8[BANK0 ] int 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:        6 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    4
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text28
  6243  00144E                     __ptext28:
  6244                           	opt stack 0
  6245  00144E                     ___awmod:
  6246                           	opt stack 26
  6247                           
  6248                           ;incstack = 0
  6249  00144E  0E00               	movlw	0
  6250  001450  0100               	movlb	0	; () banked
  6251  001452  6F6D               	movwf	___awmod@sign& (0+255),b
  6252                           
  6253                           ; BSR set to: 0
  6254  001454  0100               	movlb	0	; () banked
  6255  001456  AF69               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6256  001458  D008               	goto	l3593
  6257                           
  6258                           ; BSR set to: 0
  6259  00145A  0100               	movlb	0	; () banked
  6260  00145C  6D68               	negf	___awmod@dividend& (0+255),b
  6261  00145E  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6262  001460  B0D8               	btfsc	status,0,c
  6263  001462  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6264                           
  6265                           ; BSR set to: 0
  6266  001464  0E01               	movlw	1
  6267  001466  0100               	movlb	0	; () banked
  6268  001468  6F6D               	movwf	___awmod@sign& (0+255),b
  6269  00146A                     l3593:
  6270                           
  6271                           ; BSR set to: 0
  6272  00146A  0100               	movlb	0	; () banked
  6273  00146C  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6274  00146E  D005               	goto	l3597
  6275                           
  6276                           ; BSR set to: 0
  6277  001470  0100               	movlb	0	; () banked
  6278  001472  6D6A               	negf	___awmod@divisor& (0+255),b
  6279  001474  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  6280  001476  B0D8               	btfsc	status,0,c
  6281  001478  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  6282  00147A                     l3597:
  6283                           
  6284                           ; BSR set to: 0
  6285  00147A  0100               	movlb	0	; () banked
  6286  00147C  516A               	movf	___awmod@divisor& (0+255),w,b
  6287  00147E  0100               	movlb	0	; () banked
  6288  001480  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6289  001482  B4D8               	btfsc	status,2,c
  6290  001484  D026               	goto	l3613
  6291                           
  6292                           ; BSR set to: 0
  6293  001486  0E01               	movlw	1
  6294  001488  0100               	movlb	0	; () banked
  6295  00148A  6F6C               	movwf	___awmod@counter& (0+255),b
  6296  00148C  D006               	goto	l3603
  6297  00148E                     l3601:
  6298                           
  6299                           ; BSR set to: 0
  6300  00148E  0100               	movlb	0	; () banked
  6301  001490  90D8               	bcf	status,0,c
  6302  001492  376A               	rlcf	___awmod@divisor& (0+255),f,b
  6303  001494  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6304  001496  0100               	movlb	0	; () banked
  6305  001498  2B6C               	incf	___awmod@counter& (0+255),f,b
  6306  00149A                     l3603:
  6307                           
  6308                           ; BSR set to: 0
  6309  00149A  0100               	movlb	0	; () banked
  6310  00149C  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6311  00149E  D7F7               	goto	l3601
  6312  0014A0                     l3605:
  6313                           
  6314                           ; BSR set to: 0
  6315  0014A0  0100               	movlb	0	; () banked
  6316  0014A2  516A               	movf	___awmod@divisor& (0+255),w,b
  6317  0014A4  0100               	movlb	0	; () banked
  6318  0014A6  5D68               	subwf	___awmod@dividend& (0+255),w,b
  6319  0014A8  0100               	movlb	0	; () banked
  6320  0014AA  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6321  0014AC  0100               	movlb	0	; () banked
  6322  0014AE  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6323  0014B0  A0D8               	btfss	status,0,c
  6324  0014B2  D008               	goto	l3609
  6325                           
  6326                           ; BSR set to: 0
  6327  0014B4  0100               	movlb	0	; () banked
  6328  0014B6  516A               	movf	___awmod@divisor& (0+255),w,b
  6329  0014B8  0100               	movlb	0	; () banked
  6330  0014BA  5F68               	subwf	___awmod@dividend& (0+255),f,b
  6331  0014BC  0100               	movlb	0	; () banked
  6332  0014BE  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6333  0014C0  0100               	movlb	0	; () banked
  6334  0014C2  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6335  0014C4                     l3609:
  6336                           
  6337                           ; BSR set to: 0
  6338  0014C4  0100               	movlb	0	; () banked
  6339  0014C6  90D8               	bcf	status,0,c
  6340  0014C8  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6341  0014CA  336A               	rrcf	___awmod@divisor& (0+255),f,b
  6342                           
  6343                           ; BSR set to: 0
  6344  0014CC  0100               	movlb	0	; () banked
  6345  0014CE  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  6346  0014D0  D7E7               	goto	l3605
  6347  0014D2                     l3613:
  6348                           
  6349                           ; BSR set to: 0
  6350  0014D2  0100               	movlb	0	; () banked
  6351  0014D4  516D               	movf	___awmod@sign& (0+255),w,b
  6352  0014D6  0100               	movlb	0	; () banked
  6353  0014D8  B4D8               	btfsc	status,2,c
  6354  0014DA  D005               	goto	l3617
  6355                           
  6356                           ; BSR set to: 0
  6357  0014DC  0100               	movlb	0	; () banked
  6358  0014DE  6D68               	negf	___awmod@dividend& (0+255),b
  6359  0014E0  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6360  0014E2  B0D8               	btfsc	status,0,c
  6361  0014E4  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6362  0014E6                     l3617:
  6363                           
  6364                           ; BSR set to: 0
  6365  0014E6  C068  F068         	movff	___awmod@dividend,?___awmod
  6366  0014EA  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  6367  0014EE  0012               	return	
  6368  0014F0                     __end_of___awmod:
  6369                           	opt stack 0
  6370                           tosu	equ	0xFFF
  6371                           tosh	equ	0xFFE
  6372                           tosl	equ	0xFFD
  6373                           pclath	equ	0xFFA
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           postinc0	equ	0xFEE
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           postdec1	equ	0xFE5
  6385                           fsr1h	equ	0xFE2
  6386                           fsr1l	equ	0xFE1
  6387                           indf2	equ	0xFDF
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394 ;; *************** function _SYSTEM_Initialize *****************
  6395 ;; Defined at:
  6396 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, status,2, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    6
  6417 ;; This function calls:
  6418 ;;		_EPWM1_Initialize
  6419 ;;		_EUSART1_Initialize
  6420 ;;		_INTERRUPT_Initialize
  6421 ;;		_OSCILLATOR_Initialize
  6422 ;;		_PIN_MANAGER_Initialize
  6423 ;;		_TMR2_Initialize
  6424 ;; This function is called by:
  6425 ;;		_main
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text29
  6430  001C78                     __ptext29:
  6431                           	opt stack 0
  6432  001C78                     _SYSTEM_Initialize:
  6433                           	opt stack 24
  6434                           
  6435                           ;mcc.c: 115: INTERRUPT_Initialize();
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;incstack = 0
  6439  001C78  EC75  F00E         	call	_INTERRUPT_Initialize	;wreg free
  6440                           
  6441                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  6442  001C7C  EC2B  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6443                           
  6444                           ;mcc.c: 117: OSCILLATOR_Initialize();
  6445  001C80  EC63  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  6446                           
  6447                           ;mcc.c: 118: EPWM1_Initialize();
  6448  001C84  EC0E  F00E         	call	_EPWM1_Initialize	;wreg free
  6449                           
  6450                           ;mcc.c: 119: TMR2_Initialize();
  6451  001C88  EC53  F00E         	call	_TMR2_Initialize	;wreg free
  6452                           
  6453                           ;mcc.c: 120: EUSART1_Initialize();
  6454  001C8C  EC45  F00D         	call	_EUSART1_Initialize	;wreg free
  6455  001C90  0012               	return		;funcret
  6456  001C92                     __end_of_SYSTEM_Initialize:
  6457                           	opt stack 0
  6458                           tosu	equ	0xFFF
  6459                           tosh	equ	0xFFE
  6460                           tosl	equ	0xFFD
  6461                           pclath	equ	0xFFA
  6462                           tblptru	equ	0xFF8
  6463                           tblptrh	equ	0xFF7
  6464                           tblptrl	equ	0xFF6
  6465                           tablat	equ	0xFF5
  6466                           prodh	equ	0xFF4
  6467                           prodl	equ	0xFF3
  6468                           intcon	equ	0xFF2
  6469                           postinc0	equ	0xFEE
  6470                           wreg	equ	0xFE8
  6471                           indf1	equ	0xFE7
  6472                           postdec1	equ	0xFE5
  6473                           fsr1h	equ	0xFE2
  6474                           fsr1l	equ	0xFE1
  6475                           indf2	equ	0xFDF
  6476                           postinc2	equ	0xFDE
  6477                           postdec2	equ	0xFDD
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _TMR2_Initialize *****************
  6483 ;; Defined at:
  6484 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    5
  6505 ;; This function calls:
  6506 ;;		_TMR2_StartTimer
  6507 ;; This function is called by:
  6508 ;;		_SYSTEM_Initialize
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text30
  6513  001CA6                     __ptext30:
  6514                           	opt stack 0
  6515  001CA6                     _TMR2_Initialize:
  6516                           	opt stack 24
  6517                           
  6518                           ;tmr2.c: 63: T2CON = 0x00;
  6519                           
  6520                           ;incstack = 0
  6521  001CA6  0E00               	movlw	0
  6522  001CA8  6EBA               	movwf	4026,c	;volatile
  6523                           
  6524                           ;tmr2.c: 66: PR2 = 0xFF;
  6525  001CAA  68BB               	setf	4027,c	;volatile
  6526                           
  6527                           ;tmr2.c: 69: TMR2 = 0x00;
  6528  001CAC  0E00               	movlw	0
  6529  001CAE  6EBC               	movwf	4028,c	;volatile
  6530                           
  6531                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  6532  001CB0  929E               	bcf	3998,1,c	;volatile
  6533                           
  6534                           ;tmr2.c: 75: TMR2_StartTimer();
  6535  001CB2  EC7C  F00E         	call	_TMR2_StartTimer	;wreg free
  6536  001CB6  0012               	return		;funcret
  6537  001CB8                     __end_of_TMR2_Initialize:
  6538                           	opt stack 0
  6539                           tosu	equ	0xFFF
  6540                           tosh	equ	0xFFE
  6541                           tosl	equ	0xFFD
  6542                           pclath	equ	0xFFA
  6543                           tblptru	equ	0xFF8
  6544                           tblptrh	equ	0xFF7
  6545                           tblptrl	equ	0xFF6
  6546                           tablat	equ	0xFF5
  6547                           prodh	equ	0xFF4
  6548                           prodl	equ	0xFF3
  6549                           intcon	equ	0xFF2
  6550                           postinc0	equ	0xFEE
  6551                           wreg	equ	0xFE8
  6552                           indf1	equ	0xFE7
  6553                           postdec1	equ	0xFE5
  6554                           fsr1h	equ	0xFE2
  6555                           fsr1l	equ	0xFE1
  6556                           indf2	equ	0xFDF
  6557                           postinc2	equ	0xFDE
  6558                           postdec2	equ	0xFDD
  6559                           fsr2h	equ	0xFDA
  6560                           fsr2l	equ	0xFD9
  6561                           status	equ	0xFD8
  6562                           
  6563 ;; *************** function _TMR2_StartTimer *****************
  6564 ;; Defined at:
  6565 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		None
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    4
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_TMR2_Initialize
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text31
  6594  001CF8                     __ptext31:
  6595                           	opt stack 0
  6596  001CF8                     _TMR2_StartTimer:
  6597                           	opt stack 24
  6598                           
  6599                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  6600                           
  6601                           ;incstack = 0
  6602  001CF8  84BA               	bsf	4026,2,c	;volatile
  6603  001CFA  0012               	return		;funcret
  6604  001CFC                     __end_of_TMR2_StartTimer:
  6605                           	opt stack 0
  6606                           tosu	equ	0xFFF
  6607                           tosh	equ	0xFFE
  6608                           tosl	equ	0xFFD
  6609                           pclath	equ	0xFFA
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           postinc0	equ	0xFEE
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           postdec1	equ	0xFE5
  6621                           fsr1h	equ	0xFE2
  6622                           fsr1l	equ	0xFE1
  6623                           indf2	equ	0xFDF
  6624                           postinc2	equ	0xFDE
  6625                           postdec2	equ	0xFDD
  6626                           fsr2h	equ	0xFDA
  6627                           fsr2l	equ	0xFD9
  6628                           status	equ	0xFD8
  6629                           
  6630 ;; *************** function _PIN_MANAGER_Initialize *****************
  6631 ;; Defined at:
  6632 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;Total ram usage:        0 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    4
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_SYSTEM_Initialize
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text32
  6661  001A56                     __ptext32:
  6662                           	opt stack 0
  6663  001A56                     _PIN_MANAGER_Initialize:
  6664                           	opt stack 25
  6665                           
  6666                           ;pin_manager.c: 51: LATB = 0x0;
  6667                           
  6668                           ;incstack = 0
  6669  001A56  0E00               	movlw	0
  6670  001A58  6E8A               	movwf	3978,c	;volatile
  6671                           
  6672                           ;pin_manager.c: 52: LATA = 0x0;
  6673  001A5A  0E00               	movlw	0
  6674  001A5C  6E89               	movwf	3977,c	;volatile
  6675                           
  6676                           ;pin_manager.c: 53: LATC = 0x0;
  6677  001A5E  0E00               	movlw	0
  6678  001A60  6E8B               	movwf	3979,c	;volatile
  6679                           
  6680                           ;pin_manager.c: 54: ANSELA = 0x2F;
  6681  001A62  0E2F               	movlw	47
  6682  001A64  010F               	movlb	15	; () banked
  6683  001A66  6F38               	movwf	56,b	;volatile
  6684                           
  6685                           ;pin_manager.c: 55: ANSELB = 0x3E;
  6686  001A68  0E3E               	movlw	62
  6687  001A6A  010F               	movlb	15	; () banked
  6688  001A6C  6F39               	movwf	57,b	;volatile
  6689                           
  6690                           ;pin_manager.c: 56: ANSELC = 0x38;
  6691  001A6E  0E38               	movlw	56
  6692  001A70  010F               	movlb	15	; () banked
  6693  001A72  6F3A               	movwf	58,b	;volatile
  6694                           
  6695                           ;pin_manager.c: 57: TRISB = 0xC8;
  6696  001A74  0EC8               	movlw	200
  6697  001A76  6E93               	movwf	3987,c	;volatile
  6698                           
  6699                           ;pin_manager.c: 58: TRISC = 0xF9;
  6700  001A78  0EF9               	movlw	249
  6701  001A7A  6E94               	movwf	3988,c	;volatile
  6702                           
  6703                           ;pin_manager.c: 59: WPUB = 0xFE;
  6704  001A7C  0EFE               	movlw	254
  6705  001A7E  6E61               	movwf	3937,c	;volatile
  6706                           
  6707                           ;pin_manager.c: 60: TRISA = 0xEF;
  6708  001A80  0EEF               	movlw	239
  6709  001A82  6E92               	movwf	3986,c	;volatile
  6710                           
  6711                           ; BSR set to: 15
  6712                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  6713  001A84  8EF1               	bsf	intcon2,7,c	;volatile
  6714                           
  6715                           ; BSR set to: 15
  6716                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  6717  001A86  96F2               	bcf	intcon,3,c	;volatile
  6718                           
  6719                           ; BSR set to: 15
  6720  001A88  0012               	return		;funcret
  6721  001A8A                     __end_of_PIN_MANAGER_Initialize:
  6722                           	opt stack 0
  6723                           tosu	equ	0xFFF
  6724                           tosh	equ	0xFFE
  6725                           tosl	equ	0xFFD
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf1	equ	0xFE7
  6738                           postdec1	equ	0xFE5
  6739                           fsr1h	equ	0xFE2
  6740                           fsr1l	equ	0xFE1
  6741                           indf2	equ	0xFDF
  6742                           postinc2	equ	0xFDE
  6743                           postdec2	equ	0xFDD
  6744                           fsr2h	equ	0xFDA
  6745                           fsr2l	equ	0xFD9
  6746                           status	equ	0xFD8
  6747                           
  6748 ;; *************** function _OSCILLATOR_Initialize *****************
  6749 ;; Defined at:
  6750 ;;		line 123 in file "mcc_generated_files/mcc.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    4
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_SYSTEM_Initialize
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text33
  6779  001CC6                     __ptext33:
  6780                           	opt stack 0
  6781  001CC6                     _OSCILLATOR_Initialize:
  6782                           	opt stack 25
  6783                           
  6784                           ;mcc.c: 126: OSCCON = 0x70;
  6785                           
  6786                           ; BSR set to: 15
  6787                           ;incstack = 0
  6788  001CC6  0E70               	movlw	112
  6789  001CC8  6ED3               	movwf	4051,c	;volatile
  6790                           
  6791                           ;mcc.c: 128: OSCCON2 = 0x04;
  6792  001CCA  0E04               	movlw	4
  6793  001CCC  6ED2               	movwf	4050,c	;volatile
  6794                           
  6795                           ;mcc.c: 130: OSCTUNE = 0x40;
  6796  001CCE  0E40               	movlw	64
  6797  001CD0  6E9B               	movwf	3995,c	;volatile
  6798  001CD2  0012               	return		;funcret
  6799  001CD4                     __end_of_OSCILLATOR_Initialize:
  6800                           	opt stack 0
  6801                           tosu	equ	0xFFF
  6802                           tosh	equ	0xFFE
  6803                           tosl	equ	0xFFD
  6804                           pclath	equ	0xFFA
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           intcon2	equ	0xFF1
  6813                           postinc0	equ	0xFEE
  6814                           wreg	equ	0xFE8
  6815                           indf1	equ	0xFE7
  6816                           postdec1	equ	0xFE5
  6817                           fsr1h	equ	0xFE2
  6818                           fsr1l	equ	0xFE1
  6819                           indf2	equ	0xFDF
  6820                           postinc2	equ	0xFDE
  6821                           postdec2	equ	0xFDD
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function _INTERRUPT_Initialize *****************
  6827 ;; Defined at:
  6828 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		None
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    4
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_SYSTEM_Initialize
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text34
  6857  001CEA                     __ptext34:
  6858                           	opt stack 0
  6859  001CEA                     _INTERRUPT_Initialize:
  6860                           	opt stack 25
  6861                           
  6862                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  6863                           
  6864                           ;incstack = 0
  6865  001CEA  9ED0               	bcf	4048,7,c	;volatile
  6866                           
  6867                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  6868  001CEC  94F1               	bcf	intcon2,2,c	;volatile
  6869                           
  6870                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  6871  001CEE  989F               	bcf	3999,4,c	;volatile
  6872                           
  6873                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  6874  001CF0  9A9F               	bcf	3999,5,c	;volatile
  6875  001CF2  0012               	return		;funcret
  6876  001CF4                     __end_of_INTERRUPT_Initialize:
  6877                           	opt stack 0
  6878                           tosu	equ	0xFFF
  6879                           tosh	equ	0xFFE
  6880                           tosl	equ	0xFFD
  6881                           pclath	equ	0xFFA
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon	equ	0xFF2
  6889                           intcon2	equ	0xFF1
  6890                           postinc0	equ	0xFEE
  6891                           wreg	equ	0xFE8
  6892                           indf1	equ	0xFE7
  6893                           postdec1	equ	0xFE5
  6894                           fsr1h	equ	0xFE2
  6895                           fsr1l	equ	0xFE1
  6896                           indf2	equ	0xFDF
  6897                           postinc2	equ	0xFDE
  6898                           postdec2	equ	0xFDD
  6899                           fsr2h	equ	0xFDA
  6900                           fsr2l	equ	0xFD9
  6901                           status	equ	0xFD8
  6902                           
  6903 ;; *************** function _EUSART1_Initialize *****************
  6904 ;; Defined at:
  6905 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;Total ram usage:        0 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    4
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_SYSTEM_Initialize
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text35
  6934  001A8A                     __ptext35:
  6935                           	opt stack 0
  6936  001A8A                     _EUSART1_Initialize:
  6937                           	opt stack 25
  6938                           
  6939                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  6940                           
  6941                           ;incstack = 0
  6942  001A8A  9A9D               	bcf	3997,5,c	;volatile
  6943                           
  6944                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  6945  001A8C  989D               	bcf	3997,4,c	;volatile
  6946                           
  6947                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  6948  001A8E  0E00               	movlw	0
  6949  001A90  6EB8               	movwf	4024,c	;volatile
  6950                           
  6951                           ;eusart1.c: 96: RCSTA1 = 0x90;
  6952  001A92  0E90               	movlw	144
  6953  001A94  6EAB               	movwf	4011,c	;volatile
  6954                           
  6955                           ;eusart1.c: 99: TXSTA1 = 0x20;
  6956  001A96  0E20               	movlw	32
  6957  001A98  6EAC               	movwf	4012,c	;volatile
  6958                           
  6959                           ;eusart1.c: 102: SPBRG1 = 0x10;
  6960  001A9A  0E10               	movlw	16
  6961  001A9C  6EAF               	movwf	4015,c	;volatile
  6962                           
  6963                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  6964  001A9E  0E00               	movlw	0
  6965  001AA0  6EB0               	movwf	4016,c	;volatile
  6966                           
  6967                           ;eusart1.c: 109: eusart1TxHead = 0;
  6968  001AA2  0E00               	movlw	0
  6969  001AA4  6E32               	movwf	_eusart1TxHead,c
  6970                           
  6971                           ;eusart1.c: 110: eusart1TxTail = 0;
  6972  001AA6  0E00               	movlw	0
  6973  001AA8  6E33               	movwf	_eusart1TxTail,c
  6974                           
  6975                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  6976  001AAA  0E80               	movlw	128
  6977  001AAC  6E39               	movwf	_eusart1TxBufferRemaining,c	;volatile
  6978                           
  6979                           ;eusart1.c: 113: eusart1RxHead = 0;
  6980  001AAE  0E00               	movlw	0
  6981  001AB0  6E30               	movwf	_eusart1RxHead,c
  6982                           
  6983                           ;eusart1.c: 114: eusart1RxTail = 0;
  6984  001AB2  0E00               	movlw	0
  6985  001AB4  6E31               	movwf	_eusart1RxTail,c
  6986                           
  6987                           ;eusart1.c: 115: eusart1RxCount = 0;
  6988  001AB6  0E00               	movlw	0
  6989  001AB8  6E2F               	movwf	_eusart1RxCount,c	;volatile
  6990                           
  6991                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  6992  001ABA  8A9D               	bsf	3997,5,c	;volatile
  6993  001ABC  0012               	return		;funcret
  6994  001ABE                     __end_of_EUSART1_Initialize:
  6995                           	opt stack 0
  6996                           tosu	equ	0xFFF
  6997                           tosh	equ	0xFFE
  6998                           tosl	equ	0xFFD
  6999                           pclath	equ	0xFFA
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           intcon2	equ	0xFF1
  7008                           postinc0	equ	0xFEE
  7009                           wreg	equ	0xFE8
  7010                           indf1	equ	0xFE7
  7011                           postdec1	equ	0xFE5
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           fsr2h	equ	0xFDA
  7018                           fsr2l	equ	0xFD9
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function _EPWM1_Initialize *****************
  7022 ;; Defined at:
  7023 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    4
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_SYSTEM_Initialize
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text36
  7052  001C1C                     __ptext36:
  7053                           	opt stack 0
  7054  001C1C                     _EPWM1_Initialize:
  7055                           	opt stack 25
  7056                           
  7057                           ;epwm1.c: 69: CCP1CON = 0x0E;
  7058                           
  7059                           ;incstack = 0
  7060  001C1C  0E0E               	movlw	14
  7061  001C1E  6EBD               	movwf	4029,c	;volatile
  7062                           
  7063                           ;epwm1.c: 72: ECCP1AS = 0x00;
  7064  001C20  0E00               	movlw	0
  7065  001C22  6EB6               	movwf	4022,c	;volatile
  7066                           
  7067                           ;epwm1.c: 75: PWM1CON = 0x82;
  7068  001C24  0E82               	movlw	130
  7069  001C26  6EB7               	movwf	4023,c	;volatile
  7070                           
  7071                           ;epwm1.c: 78: PSTR1CON = 0x01;
  7072  001C28  0E01               	movlw	1
  7073  001C2A  6EB9               	movwf	4025,c	;volatile
  7074                           
  7075                           ;epwm1.c: 81: CCPR1L = 0x00;
  7076  001C2C  0E00               	movlw	0
  7077  001C2E  6EBE               	movwf	4030,c	;volatile
  7078                           
  7079                           ;epwm1.c: 84: CCPR1H = 0x00;
  7080  001C30  0E00               	movlw	0
  7081  001C32  6EBF               	movwf	4031,c	;volatile
  7082                           
  7083                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  7084  001C34  0EFC               	movlw	-4
  7085  001C36  010F               	movlb	15	; () banked
  7086  001C38  1749               	andwf	73,f,b	;volatile
  7087                           
  7088                           ; BSR set to: 15
  7089  001C3A  0012               	return		;funcret
  7090  001C3C                     __end_of_EPWM1_Initialize:
  7091                           	opt stack 0
  7092                           tosu	equ	0xFFF
  7093                           tosh	equ	0xFFE
  7094                           tosl	equ	0xFFD
  7095                           pclath	equ	0xFFA
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           intcon2	equ	0xFF1
  7104                           postinc0	equ	0xFEE
  7105                           wreg	equ	0xFE8
  7106                           indf1	equ	0xFE7
  7107                           postdec1	equ	0xFE5
  7108                           fsr1h	equ	0xFE2
  7109                           fsr1l	equ	0xFE1
  7110                           indf2	equ	0xFDF
  7111                           postinc2	equ	0xFDE
  7112                           postdec2	equ	0xFDD
  7113                           fsr2h	equ	0xFDA
  7114                           fsr2l	equ	0xFD9
  7115                           status	equ	0xFD8
  7116                           
  7117 ;; *************** function _EPWM1_LoadDutyValue *****************
  7118 ;; Defined at:
  7119 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  dutyValue       2   37[COMRAM] unsigned int 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;Total ram usage:        4 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    4
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text37
  7148  001AF2                     __ptext37:
  7149                           	opt stack 0
  7150  001AF2                     _EPWM1_LoadDutyValue:
  7151                           	opt stack 26
  7152                           
  7153                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  7154                           
  7155                           ; BSR set to: 15
  7156                           ;incstack = 0
  7157  001AF2  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7158  001AF6  C027  F029         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7159  001AFA  90D8               	bcf	status,0,c
  7160  001AFC  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7161  001AFE  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7162  001B00  90D8               	bcf	status,0,c
  7163  001B02  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7164  001B04  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7165  001B06  5028               	movf	??_EPWM1_LoadDutyValue,w,c
  7166  001B08  6EBE               	movwf	4030,c	;volatile
  7167                           
  7168                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  7169  001B0A  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7170  001B0E  0E03               	movlw	3
  7171  001B10  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7172  001B12  3A28               	swapf	??_EPWM1_LoadDutyValue,f,c
  7173  001B14  0EF0               	movlw	240
  7174  001B16  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7175  001B18  50BD               	movf	4029,w,c	;volatile
  7176  001B1A  0BCF               	andlw	207
  7177  001B1C  1028               	iorwf	??_EPWM1_LoadDutyValue,w,c
  7178  001B1E  6EBD               	movwf	4029,c	;volatile
  7179  001B20  0012               	return		;funcret
  7180  001B22                     __end_of_EPWM1_LoadDutyValue:
  7181                           	opt stack 0
  7182                           tosu	equ	0xFFF
  7183                           tosh	equ	0xFFE
  7184                           tosl	equ	0xFFD
  7185                           pclath	equ	0xFFA
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           intcon2	equ	0xFF1
  7194                           postinc0	equ	0xFEE
  7195                           wreg	equ	0xFE8
  7196                           indf1	equ	0xFE7
  7197                           postdec1	equ	0xFE5
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           fsr2h	equ	0xFDA
  7204                           fsr2l	equ	0xFD9
  7205                           status	equ	0xFD8
  7206                           
  7207 ;; *************** function _INTERRUPT_InterruptManager *****************
  7208 ;; Defined at:
  7209 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;		None
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      void 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;Total ram usage:       14 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    3
  7230 ;; This function calls:
  7231 ;;		_EUSART1_Receive_ISR
  7232 ;;		_EUSART1_Transmit_ISR
  7233 ;; This function is called by:
  7234 ;;		Interrupt level 2
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	intcode
  7239  000008                     __pintcode:
  7240                           	opt stack 0
  7241  000008                     _INTERRUPT_InterruptManager:
  7242                           	opt stack 22
  7243                           
  7244                           ;incstack = 0
  7245  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7246  00000A  CFFA F018          	movff	pclath,??_INTERRUPT_InterruptManager
  7247  00000E  CFFB F019          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7248  000012  CFE9 F01A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7249  000016  CFEA F01B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7250  00001A  CFE1 F01C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7251  00001E  CFE2 F01D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7252  000022  CFD9 F01E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7253  000026  CFDA F01F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7254  00002A  CFF3 F020          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7255  00002E  CFF4 F021          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7256  000032  CFF6 F022          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7257  000036  CFF7 F023          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7258  00003A  CFF8 F024          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7259  00003E  CFF5 F025          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7260                           
  7261                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7262  000042  B89D               	btfsc	3997,4,c	;volatile
  7263  000044  A89E               	btfss	3998,4,c	;volatile
  7264  000046  D003               	goto	i2l20
  7265                           
  7266                           ;interrupt_manager.c: 78: {
  7267                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  7268  000048  ECA8  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7269                           
  7270                           ;interrupt_manager.c: 80: }
  7271  00004C  D005               	goto	i2l24
  7272  00004E                     i2l20:
  7273                           
  7274                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7275  00004E  BA9D               	btfsc	3997,5,c	;volatile
  7276  000050  AA9E               	btfss	3998,5,c	;volatile
  7277  000052  D002               	goto	i2l24
  7278                           
  7279                           ;interrupt_manager.c: 82: {
  7280                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  7281  000054  ECE8  F007         	call	_EUSART1_Receive_ISR	;wreg free
  7282  000058                     i2l24:
  7283  000058  C025  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7284  00005C  C024  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7285  000060  C023  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7286  000064  C022  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7287  000068  C021  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7288  00006C  C020  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7289  000070  C01F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7290  000074  C01E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7291  000078  C01D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7292  00007C  C01C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7293  000080  C01B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7294  000084  C01A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7295  000088  C019  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7296  00008C  C018  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7297  000090  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7298  000092  0011               	retfie		f
  7299  000094                     __end_of_INTERRUPT_InterruptManager:
  7300                           	opt stack 0
  7301                           tosu	equ	0xFFF
  7302                           tosh	equ	0xFFE
  7303                           tosl	equ	0xFFD
  7304                           pclatu	equ	0xFFB
  7305                           pclath	equ	0xFFA
  7306                           tblptru	equ	0xFF8
  7307                           tblptrh	equ	0xFF7
  7308                           tblptrl	equ	0xFF6
  7309                           tablat	equ	0xFF5
  7310                           prodh	equ	0xFF4
  7311                           prodl	equ	0xFF3
  7312                           intcon	equ	0xFF2
  7313                           intcon2	equ	0xFF1
  7314                           postinc0	equ	0xFEE
  7315                           fsr0h	equ	0xFEA
  7316                           fsr0l	equ	0xFE9
  7317                           wreg	equ	0xFE8
  7318                           indf1	equ	0xFE7
  7319                           postdec1	equ	0xFE5
  7320                           fsr1h	equ	0xFE2
  7321                           fsr1l	equ	0xFE1
  7322                           indf2	equ	0xFDF
  7323                           postinc2	equ	0xFDE
  7324                           postdec2	equ	0xFDD
  7325                           fsr2h	equ	0xFDA
  7326                           fsr2l	equ	0xFD9
  7327                           status	equ	0xFD8
  7328                           
  7329 ;; *************** function _EUSART1_Transmit_ISR *****************
  7330 ;; Defined at:
  7331 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;		None
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:        0 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_INTERRUPT_InterruptManager
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text39
  7359  001B50                     __ptext39:
  7360                           	opt stack 0
  7361  001B50                     _EUSART1_Transmit_ISR:
  7362                           	opt stack 24
  7363                           
  7364                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7365                           
  7366                           ;incstack = 0
  7367  001B50  0E80               	movlw	128
  7368  001B52  6039               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7369  001B54  D012               	goto	i2l122
  7370                           
  7371                           ;eusart1.c: 180: {
  7372                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7373  001B56  5033               	movf	_eusart1TxTail,w,c
  7374  001B58  0D01               	mullw	1
  7375  001B5A  0E00               	movlw	low _eusart1TxBuffer
  7376  001B5C  24F3               	addwf	prodl,w,c
  7377  001B5E  6ED9               	movwf	fsr2l,c
  7378  001B60  0E01               	movlw	high _eusart1TxBuffer
  7379  001B62  20F4               	addwfc	prodh,w,c
  7380  001B64  6EDA               	movwf	fsr2h,c
  7381  001B66  50DF               	movf	indf2,w,c
  7382  001B68  6EAD               	movwf	4013,c	;volatile
  7383  001B6A  2A33               	incf	_eusart1TxTail,f,c
  7384                           
  7385                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7386  001B6C  0E7F               	movlw	127
  7387  001B6E  6433               	cpfsgt	_eusart1TxTail,c
  7388  001B70  D002               	goto	i2l2831
  7389                           
  7390                           ;eusart1.c: 183: {
  7391                           ;eusart1.c: 184: eusart1TxTail = 0;
  7392  001B72  0E00               	movlw	0
  7393  001B74  6E33               	movwf	_eusart1TxTail,c
  7394  001B76                     i2l2831:
  7395                           
  7396                           ;eusart1.c: 185: }
  7397                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  7398  001B76  2A39               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7399                           
  7400                           ;eusart1.c: 187: }
  7401  001B78  0012               	return	
  7402  001B7A                     i2l122:
  7403                           
  7404                           ;eusart1.c: 188: else
  7405                           ;eusart1.c: 189: {
  7406                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  7407  001B7A  989D               	bcf	3997,4,c	;volatile
  7408  001B7C  0012               	return	
  7409  001B7E                     __end_of_EUSART1_Transmit_ISR:
  7410                           	opt stack 0
  7411                           tosu	equ	0xFFF
  7412                           tosh	equ	0xFFE
  7413                           tosl	equ	0xFFD
  7414                           pclatu	equ	0xFFB
  7415                           pclath	equ	0xFFA
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           intcon2	equ	0xFF1
  7424                           postinc0	equ	0xFEE
  7425                           fsr0h	equ	0xFEA
  7426                           fsr0l	equ	0xFE9
  7427                           wreg	equ	0xFE8
  7428                           indf1	equ	0xFE7
  7429                           postdec1	equ	0xFE5
  7430                           fsr1h	equ	0xFE2
  7431                           fsr1l	equ	0xFE1
  7432                           indf2	equ	0xFDF
  7433                           postinc2	equ	0xFDE
  7434                           postdec2	equ	0xFDD
  7435                           fsr2h	equ	0xFDA
  7436                           fsr2l	equ	0xFD9
  7437                           status	equ	0xFD8
  7438                           
  7439 ;; *************** function _EUSART1_Receive_ISR *****************
  7440 ;; Defined at:
  7441 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  state           2   21[COMRAM] int 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;Total ram usage:        3 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    2
  7462 ;; This function calls:
  7463 ;;		_EUSART1_Read
  7464 ;;		_strcmp
  7465 ;;		i2_strstr
  7466 ;; This function is called by:
  7467 ;;		_INTERRUPT_InterruptManager
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text40
  7472  000FD0                     __ptext40:
  7473                           	opt stack 0
  7474  000FD0                     _EUSART1_Receive_ISR:
  7475                           	opt stack 22
  7476                           
  7477                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  7478                           
  7479                           ;incstack = 0
  7480  000FD0  A2AB               	btfss	4011,1,c	;volatile
  7481  000FD2  D002               	goto	i2l2837
  7482                           
  7483                           ;eusart1.c: 197: {
  7484                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  7485  000FD4  98AB               	bcf	4011,4,c	;volatile
  7486                           
  7487                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  7488  000FD6  88AB               	bsf	4011,4,c	;volatile
  7489  000FD8                     i2l2837:
  7490                           
  7491                           ;eusart1.c: 202: }
  7492                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7493  000FD8  5030               	movf	_eusart1RxHead,w,c
  7494  000FDA  0D01               	mullw	1
  7495  000FDC  0E00               	movlw	low _eusart1RxBuffer
  7496  000FDE  24F3               	addwf	prodl,w,c
  7497  000FE0  6ED9               	movwf	fsr2l,c
  7498  000FE2  0E02               	movlw	high _eusart1RxBuffer
  7499  000FE4  20F4               	addwfc	prodh,w,c
  7500  000FE6  6EDA               	movwf	fsr2h,c
  7501  000FE8  CFAE FFDF          	movff	4014,indf2	;volatile
  7502  000FEC  2A30               	incf	_eusart1RxHead,f,c
  7503                           
  7504                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7505  000FEE  0E7F               	movlw	127
  7506  000FF0  6430               	cpfsgt	_eusart1RxHead,c
  7507  000FF2  D002               	goto	i2l2845
  7508                           
  7509                           ;eusart1.c: 209: {
  7510                           ;eusart1.c: 210: eusart1RxHead = 0;
  7511  000FF4  0E00               	movlw	0
  7512  000FF6  6E30               	movwf	_eusart1RxHead,c
  7513  000FF8                     i2l2845:
  7514                           
  7515                           ;eusart1.c: 211: }
  7516                           ;eusart1.c: 212: eusart1RxCount++;
  7517  000FF8  2A2F               	incf	_eusart1RxCount,f,c	;volatile
  7518                           
  7519                           ;eusart1.c: 214: int state = 0;
  7520  000FFA  0E00               	movlw	0
  7521  000FFC  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7522  000FFE  0E00               	movlw	0
  7523  001000  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7524                           
  7525                           ;eusart1.c: 216: if(ready)return;
  7526  001002  5034               	movf	_ready,w,c	;volatile
  7527  001004  A4D8               	btfss	status,2,c
  7528  001006  0012               	return	
  7529  001008  D01C               	goto	i2l2861
  7530  00100A                     i2l2853:
  7531                           
  7532                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7533  00100A  EC5F  F00D         	call	_EUSART1_Read	;wreg free
  7534  00100E  6E15               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7535  001010  0E80               	movlw	low _line
  7536  001012  242D               	addwf	_index,w,c
  7537  001014  6ED9               	movwf	fsr2l,c
  7538  001016  0E01               	movlw	high _line
  7539  001018  202E               	addwfc	_index+1,w,c
  7540  00101A  6EDA               	movwf	fsr2h,c
  7541  00101C  C015  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7542                           
  7543                           ;eusart1.c: 220: if (line[index] == '\n'){
  7544  001020  0E80               	movlw	low _line
  7545  001022  242D               	addwf	_index,w,c
  7546  001024  6ED9               	movwf	fsr2l,c
  7547  001026  0E01               	movlw	high _line
  7548  001028  202E               	addwfc	_index+1,w,c
  7549  00102A  6EDA               	movwf	fsr2h,c
  7550  00102C  0E0A               	movlw	10
  7551  00102E  18DE               	xorwf	postinc2,w,c
  7552  001030  A4D8               	btfss	status,2,c
  7553  001032  D005               	goto	i2l2859
  7554                           
  7555                           ;eusart1.c: 221: state=1;
  7556  001034  0E00               	movlw	0
  7557  001036  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7558  001038  0E01               	movlw	1
  7559  00103A  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7560                           
  7561                           ;eusart1.c: 222: break;
  7562  00103C  D005               	goto	i2l2863
  7563  00103E                     i2l2859:
  7564                           
  7565                           ;eusart1.c: 223: }
  7566                           ;eusart1.c: 224: index++;
  7567  00103E  4A2D               	infsnz	_index,f,c
  7568  001040  2A2E               	incf	_index+1,f,c
  7569  001042                     i2l2861:
  7570  001042  502F               	movf	_eusart1RxCount,w,c	;volatile
  7571  001044  A4D8               	btfss	status,2,c
  7572  001046  D7E1               	goto	i2l2853
  7573  001048                     i2l2863:
  7574                           
  7575                           ;eusart1.c: 225: }
  7576                           ;eusart1.c: 227: if(state==1){
  7577  001048  0416               	decf	EUSART1_Receive_ISR@state,w,c
  7578  00104A  1017               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7579  00104C  A4D8               	btfss	status,2,c
  7580  00104E  0012               	return	
  7581                           
  7582                           ;eusart1.c: 228: line[--index] = '\0';
  7583  001050  062D               	decf	_index,f,c
  7584  001052  A0D8               	btfss	status,0,c
  7585  001054  062E               	decf	_index+1,f,c
  7586  001056  0E80               	movlw	low _line
  7587  001058  242D               	addwf	_index,w,c
  7588  00105A  6ED9               	movwf	fsr2l,c
  7589  00105C  0E01               	movlw	high _line
  7590  00105E  202E               	addwfc	_index+1,w,c
  7591  001060  6EDA               	movwf	fsr2h,c
  7592  001062  0E00               	movlw	0
  7593  001064  6EDF               	movwf	indf2,c
  7594                           
  7595                           ;eusart1.c: 229: uartState=0;
  7596  001066  0E00               	movlw	0
  7597  001068  0100               	movlb	0	; () banked
  7598  00106A  6F99               	movwf	_uartState& (0+255),b	;volatile
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7602  00106C  0EDF               	movlw	low STR_1
  7603  00106E  6E01               	movwf	strcmp@s1,c
  7604  001070  0EFF               	movlw	high STR_1
  7605  001072  6E02               	movwf	strcmp@s1+1,c
  7606  001074  0E80               	movlw	low _line
  7607  001076  6E03               	movwf	strcmp@s2,c
  7608  001078  0E01               	movlw	high _line
  7609  00107A  6E04               	movwf	strcmp@s2+1,c
  7610  00107C  ECC7  F00A         	call	_strcmp	;wreg free
  7611  001080  5001               	movf	?_strcmp,w,c
  7612  001082  1002               	iorwf	?_strcmp+1,w,c
  7613  001084  A4D8               	btfss	status,2,c
  7614  001086  D002               	goto	i2l2873
  7615                           
  7616                           ;eusart1.c: 231: uartState=5;
  7617  001088  0E05               	movlw	5
  7618  00108A  D02B               	goto	L3
  7619  00108C                     i2l2873:
  7620  00108C  0E80               	movlw	low _line
  7621  00108E  6E10               	movwf	i2strstr@s1,c
  7622  001090  0E01               	movlw	high _line
  7623  001092  6E11               	movwf	i2strstr@s1+1,c
  7624  001094  0EE9               	movlw	low STR_2
  7625  001096  6E12               	movwf	i2strstr@s2,c
  7626  001098  0EFF               	movlw	high STR_2
  7627  00109A  6E13               	movwf	i2strstr@s2+1,c
  7628  00109C  EC78  F00A         	call	i2_strstr	;wreg free
  7629  0010A0  5010               	movf	?i2_strstr,w,c
  7630  0010A2  1011               	iorwf	?i2_strstr+1,w,c
  7631  0010A4  B4D8               	btfsc	status,2,c
  7632  0010A6  D00E               	goto	i2l2883
  7633                           
  7634                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7635  0010A8  0E34               	movlw	52
  7636  0010AA  0101               	movlb	1	; () banked
  7637  0010AC  198A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7638  0010AE  A4D8               	btfss	status,2,c
  7639  0010B0  D007               	goto	i2l2881
  7640                           
  7641                           ; BSR set to: 1
  7642  0010B2  0E33               	movlw	51
  7643  0010B4  0101               	movlb	1	; () banked
  7644  0010B6  198B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7645  0010B8  A4D8               	btfss	status,2,c
  7646  0010BA  D002               	goto	i2l2881
  7647                           
  7648                           ; BSR set to: 1
  7649                           ;eusart1.c: 234: uartState=4;
  7650  0010BC  0E04               	movlw	4
  7651  0010BE  D011               	goto	L3
  7652  0010C0                     i2l2881:
  7653                           
  7654                           ;eusart1.c: 236: uartState=3;
  7655  0010C0  0E03               	movlw	3
  7656  0010C2  D00F               	goto	L3
  7657  0010C4                     i2l2883:
  7658  0010C4  0E80               	movlw	low _line
  7659  0010C6  6E01               	movwf	strcmp@s1,c
  7660  0010C8  0E01               	movlw	high _line
  7661  0010CA  6E02               	movwf	strcmp@s1+1,c
  7662  0010CC  0ED3               	movlw	low STR_3
  7663  0010CE  6E03               	movwf	strcmp@s2,c
  7664  0010D0  0EFF               	movlw	high STR_3
  7665  0010D2  6E04               	movwf	strcmp@s2+1,c
  7666  0010D4  ECC7  F00A         	call	_strcmp	;wreg free
  7667  0010D8  5001               	movf	?_strcmp,w,c
  7668  0010DA  1002               	iorwf	?_strcmp+1,w,c
  7669  0010DC  A4D8               	btfss	status,2,c
  7670  0010DE  D004               	goto	i2l2887
  7671  0010E0  D011               	goto	i2l2889
  7672  0010E2                     L3:
  7673  0010E2  0100               	movlb	0	; () banked
  7674  0010E4  6F99               	movwf	_uartState& (0+255),b	;volatile
  7675                           
  7676                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7677  0010E6  D010               	goto	i2l138
  7678  0010E8                     i2l2887:
  7679  0010E8  0E80               	movlw	low _line
  7680  0010EA  6E01               	movwf	strcmp@s1,c
  7681  0010EC  0E01               	movlw	high _line
  7682  0010EE  6E02               	movwf	strcmp@s1+1,c
  7683  0010F0  0EDC               	movlw	low (STR_3+9)
  7684  0010F2  6E03               	movwf	strcmp@s2,c
  7685  0010F4  0EFF               	movlw	high (STR_3+9)
  7686  0010F6  6E04               	movwf	strcmp@s2+1,c
  7687  0010F8  ECC7  F00A         	call	_strcmp	;wreg free
  7688  0010FC  5001               	movf	?_strcmp,w,c
  7689  0010FE  1002               	iorwf	?_strcmp+1,w,c
  7690  001100  A4D8               	btfss	status,2,c
  7691  001102  D002               	goto	i2l138
  7692  001104                     i2l2889:
  7693                           
  7694                           ;eusart1.c: 241: uartState=1;
  7695  001104  0E01               	movlw	1
  7696  001106  D7ED               	goto	L3
  7697  001108                     i2l138:
  7698                           
  7699                           ;eusart1.c: 242: }
  7700                           ;eusart1.c: 243: index=0;
  7701  001108  0E00               	movlw	0
  7702  00110A  6E2E               	movwf	_index+1,c
  7703  00110C  0E00               	movlw	0
  7704  00110E  6E2D               	movwf	_index,c
  7705                           
  7706                           ;eusart1.c: 244: ready=1;
  7707  001110  0E01               	movlw	1
  7708  001112  6E34               	movwf	_ready,c	;volatile
  7709  001114  0012               	return	
  7710  001116                     __end_of_EUSART1_Receive_ISR:
  7711                           	opt stack 0
  7712                           tosu	equ	0xFFF
  7713                           tosh	equ	0xFFE
  7714                           tosl	equ	0xFFD
  7715                           pclatu	equ	0xFFB
  7716                           pclath	equ	0xFFA
  7717                           tblptru	equ	0xFF8
  7718                           tblptrh	equ	0xFF7
  7719                           tblptrl	equ	0xFF6
  7720                           tablat	equ	0xFF5
  7721                           prodh	equ	0xFF4
  7722                           prodl	equ	0xFF3
  7723                           intcon	equ	0xFF2
  7724                           intcon2	equ	0xFF1
  7725                           postinc0	equ	0xFEE
  7726                           fsr0h	equ	0xFEA
  7727                           fsr0l	equ	0xFE9
  7728                           wreg	equ	0xFE8
  7729                           indf1	equ	0xFE7
  7730                           postdec1	equ	0xFE5
  7731                           fsr1h	equ	0xFE2
  7732                           fsr1l	equ	0xFE1
  7733                           indf2	equ	0xFDF
  7734                           postinc2	equ	0xFDE
  7735                           postdec2	equ	0xFDD
  7736                           fsr2h	equ	0xFDA
  7737                           fsr2l	equ	0xFD9
  7738                           status	equ	0xFD8
  7739                           
  7740 ;; *************** function i2_strstr *****************
  7741 ;; Defined at:
  7742 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7745 ;;		 -> NULL(0), line(128), 
  7746 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7747 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  2   15[COMRAM] PTR unsigned char 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;Total ram usage:        5 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    1
  7766 ;; This function calls:
  7767 ;;		i2_strchr
  7768 ;;		i2_strlen
  7769 ;;		i2_strncmp
  7770 ;; This function is called by:
  7771 ;;		_EUSART1_Receive_ISR
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text41
  7776  0014F0                     __ptext41:
  7777                           	opt stack 0
  7778  0014F0                     i2_strstr:
  7779                           	opt stack 22
  7780                           
  7781                           ;incstack = 0
  7782  0014F0  D03E               	goto	i2l2813
  7783  0014F2                     i2l2805:
  7784  0014F2  C010  F007         	movff	i2strstr@s1,i2strncmp@s1
  7785  0014F6  C011  F008         	movff	i2strstr@s1+1,i2strncmp@s1+1
  7786  0014FA  C012  F009         	movff	i2strstr@s2,i2strncmp@s2
  7787  0014FE  C013  F00A         	movff	i2strstr@s2+1,i2strncmp@s2+1
  7788  001502  C012  F001         	movff	i2strstr@s2,i2strlen@s
  7789  001506  C013  F002         	movff	i2strstr@s2+1,i2strlen@s+1
  7790  00150A  ECFB  F00B         	call	i2_strlen	;wreg free
  7791  00150E  C001  F00B         	movff	?i2_strlen,i2strncmp@len
  7792  001512  C002  F00C         	movff	?i2_strlen+1,i2strncmp@len+1
  7793  001516  ECD0  F009         	call	i2_strncmp	;wreg free
  7794  00151A  5007               	movf	?i2_strncmp,w,c
  7795  00151C  1008               	iorwf	?i2_strncmp+1,w,c
  7796  00151E  A4D8               	btfss	status,2,c
  7797  001520  D005               	goto	i2l2811
  7798  001522  C010  F010         	movff	i2strstr@s1,?i2_strstr
  7799  001526  C011  F011         	movff	i2strstr@s1+1,?i2_strstr+1
  7800  00152A  0012               	return	
  7801  00152C                     i2l2811:
  7802  00152C  0E01               	movlw	1
  7803  00152E  2410               	addwf	i2strstr@s1,w,c
  7804  001530  6E01               	movwf	i2strchr@ptr,c
  7805  001532  0E00               	movlw	0
  7806  001534  2011               	addwfc	i2strstr@s1+1,w,c
  7807  001536  6E02               	movwf	i2strchr@ptr+1,c
  7808  001538  C012  FFF6         	movff	i2strstr@s2,tblptrl
  7809  00153C  C013  FFF7         	movff	i2strstr@s2+1,tblptrh
  7810  001540  0E00               	movlw	low (__mediumconst shr (0+16))
  7811  001542  6EF8               	movwf	tblptru,c
  7812  001544  0E0F               	movlw	(high __ramtop+-1)
  7813  001546  64F7               	cpfsgt	tblptrh,c
  7814  001548  D003               	bra	i2u278_47
  7815  00154A  0008               	tblrd		*
  7816  00154C  50F5               	movf	tablat,w,c
  7817  00154E  D005               	bra	i2u278_40
  7818  001550                     i2u278_47:
  7819  001550  CFF6 FFE1          	movff	tblptrl,fsr1l
  7820  001554  CFF7 FFE2          	movff	tblptrh,fsr1h
  7821  001558  50E7               	movf	indf1,w,c
  7822  00155A                     i2u278_40:
  7823  00155A  6E14               	movwf	??i2_strstr& (0+255),c
  7824  00155C  5014               	movf	??i2_strstr,w,c
  7825  00155E  6E03               	movwf	i2strchr@chr,c
  7826  001560  6A04               	clrf	i2strchr@chr+1,c
  7827  001562  ECF6  F00C         	call	i2_strchr	;wreg free
  7828  001566  C001  F010         	movff	?i2_strchr,i2strstr@s1
  7829  00156A  C002  F011         	movff	?i2_strchr+1,i2strstr@s1+1
  7830  00156E                     i2l2813:
  7831  00156E  5010               	movf	i2strstr@s1,w,c
  7832  001570  1011               	iorwf	i2strstr@s1+1,w,c
  7833  001572  B4D8               	btfsc	status,2,c
  7834  001574  D007               	goto	i2l2817
  7835  001576  C010  FFD9         	movff	i2strstr@s1,fsr2l
  7836  00157A  C011  FFDA         	movff	i2strstr@s1+1,fsr2h
  7837  00157E  50DF               	movf	indf2,w,c
  7838  001580  A4D8               	btfss	status,2,c
  7839  001582  D7B7               	goto	i2l2805
  7840  001584                     i2l2817:
  7841  001584  0E00               	movlw	0
  7842  001586  6E10               	movwf	?i2_strstr,c
  7843  001588  0E00               	movlw	0
  7844  00158A  6E11               	movwf	?i2_strstr+1,c
  7845  00158C  0012               	return	
  7846  00158E                     __end_ofi2_strstr:
  7847                           	opt stack 0
  7848                           tosu	equ	0xFFF
  7849                           tosh	equ	0xFFE
  7850                           tosl	equ	0xFFD
  7851                           pclatu	equ	0xFFB
  7852                           pclath	equ	0xFFA
  7853                           tblptru	equ	0xFF8
  7854                           tblptrh	equ	0xFF7
  7855                           tblptrl	equ	0xFF6
  7856                           tablat	equ	0xFF5
  7857                           prodh	equ	0xFF4
  7858                           prodl	equ	0xFF3
  7859                           intcon	equ	0xFF2
  7860                           intcon2	equ	0xFF1
  7861                           postinc0	equ	0xFEE
  7862                           fsr0h	equ	0xFEA
  7863                           fsr0l	equ	0xFE9
  7864                           wreg	equ	0xFE8
  7865                           indf1	equ	0xFE7
  7866                           postdec1	equ	0xFE5
  7867                           fsr1h	equ	0xFE2
  7868                           fsr1l	equ	0xFE1
  7869                           indf2	equ	0xFDF
  7870                           postinc2	equ	0xFDE
  7871                           postdec2	equ	0xFDD
  7872                           fsr2h	equ	0xFDA
  7873                           fsr2l	equ	0xFD9
  7874                           status	equ	0xFD8
  7875                           
  7876 ;; *************** function i2_strncmp *****************
  7877 ;; Defined at:
  7878 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7881 ;;		 -> NULL(0), line(128), 
  7882 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7883 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7884 ;;  len             2   10[COMRAM] unsigned int 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;		None
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  2    6[COMRAM] int 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;Total ram usage:        9 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		i2_strstr
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text42
  7910  0013A0                     __ptext42:
  7911                           	opt stack 0
  7912  0013A0                     i2_strncmp:
  7913                           	opt stack 22
  7914                           
  7915                           ;incstack = 0
  7916  0013A0  D049               	goto	i2l2615
  7917  0013A2                     i2l2605:
  7918  0013A2  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7919  0013A6  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7920  0013AA  50DF               	movf	indf2,w,c
  7921  0013AC  B4D8               	btfsc	status,2,c
  7922  0013AE  D01A               	goto	i2l2609
  7923  0013B0  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7924  0013B4  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7925  0013B8  50DF               	movf	indf2,w,c
  7926  0013BA  6E0D               	movwf	??i2_strncmp& (0+255),c
  7927  0013BC  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7928  0013C0  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7929  0013C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7930  0013C6  6EF8               	movwf	tblptru,c
  7931  0013C8  0E0F               	movlw	(high __ramtop+-1)
  7932  0013CA  64F7               	cpfsgt	tblptrh,c
  7933  0013CC  D003               	bra	i2u245_47
  7934  0013CE  0008               	tblrd		*
  7935  0013D0  50F5               	movf	tablat,w,c
  7936  0013D2  D005               	bra	i2u245_40
  7937  0013D4                     i2u245_47:
  7938  0013D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7939  0013D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7940  0013DC  50E7               	movf	indf1,w,c
  7941  0013DE                     i2u245_40:
  7942  0013DE  180D               	xorwf	??i2_strncmp,w,c
  7943  0013E0  B4D8               	btfsc	status,2,c
  7944  0013E2  D024               	goto	i2l2613
  7945  0013E4                     i2l2609:
  7946  0013E4  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7947  0013E8  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7948  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
  7949  0013EE  6EF8               	movwf	tblptru,c
  7950  0013F0  0E0F               	movlw	(high __ramtop+-1)
  7951  0013F2  64F7               	cpfsgt	tblptrh,c
  7952  0013F4  D003               	bra	i2u247_47
  7953  0013F6  0008               	tblrd		*
  7954  0013F8  50F5               	movf	tablat,w,c
  7955  0013FA  D005               	bra	i2u247_40
  7956  0013FC                     i2u247_47:
  7957  0013FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7958  001400  CFF7 FFE2          	movff	tblptrh,fsr1h
  7959  001404  50E7               	movf	indf1,w,c
  7960  001406                     i2u247_40:
  7961  001406  6E0D               	movwf	??i2_strncmp& (0+255),c
  7962  001408  6A0E               	clrf	(??i2_strncmp+1)& (0+255),c
  7963  00140A  1E0D               	comf	??i2_strncmp,f,c
  7964  00140C  1E0E               	comf	??i2_strncmp+1,f,c
  7965  00140E  4A0D               	infsnz	??i2_strncmp,f,c
  7966  001410  2A0E               	incf	??i2_strncmp+1,f,c
  7967  001412  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7968  001416  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7969  00141A  50DF               	movf	indf2,w,c
  7970  00141C  6E0F               	movwf	(??i2_strncmp+2)& (0+255),c
  7971  00141E  500F               	movf	??i2_strncmp+2,w,c
  7972  001420  240D               	addwf	??i2_strncmp,w,c
  7973  001422  6E07               	movwf	?i2_strncmp,c
  7974  001424  0E00               	movlw	0
  7975  001426  200E               	addwfc	??i2_strncmp+1,w,c
  7976  001428  6E08               	movwf	?i2_strncmp+1,c
  7977  00142A  0012               	return	
  7978  00142C                     i2l2613:
  7979  00142C  4A07               	infsnz	i2strncmp@s1,f,c
  7980  00142E  2A08               	incf	i2strncmp@s1+1,f,c
  7981  001430  4A09               	infsnz	i2strncmp@s2,f,c
  7982  001432  2A0A               	incf	i2strncmp@s2+1,f,c
  7983  001434                     i2l2615:
  7984  001434  060B               	decf	i2strncmp@len,f,c
  7985  001436  A0D8               	btfss	status,0,c
  7986  001438  060C               	decf	i2strncmp@len+1,f,c
  7987  00143A  280B               	incf	i2strncmp@len,w,c
  7988  00143C  E1B2               	bnz	i2l2605
  7989  00143E  280C               	incf	i2strncmp@len+1,w,c
  7990  001440  A4D8               	btfss	status,2,c
  7991  001442  D7AF               	goto	i2l2605
  7992  001444  0E00               	movlw	0
  7993  001446  6E08               	movwf	?i2_strncmp+1,c
  7994  001448  0E00               	movlw	0
  7995  00144A  6E07               	movwf	?i2_strncmp,c
  7996  00144C  0012               	return	
  7997  00144E                     __end_ofi2_strncmp:
  7998                           	opt stack 0
  7999                           tosu	equ	0xFFF
  8000                           tosh	equ	0xFFE
  8001                           tosl	equ	0xFFD
  8002                           pclatu	equ	0xFFB
  8003                           pclath	equ	0xFFA
  8004                           tblptru	equ	0xFF8
  8005                           tblptrh	equ	0xFF7
  8006                           tblptrl	equ	0xFF6
  8007                           tablat	equ	0xFF5
  8008                           prodh	equ	0xFF4
  8009                           prodl	equ	0xFF3
  8010                           intcon	equ	0xFF2
  8011                           intcon2	equ	0xFF1
  8012                           postinc0	equ	0xFEE
  8013                           fsr0h	equ	0xFEA
  8014                           fsr0l	equ	0xFE9
  8015                           wreg	equ	0xFE8
  8016                           indf1	equ	0xFE7
  8017                           postdec1	equ	0xFE5
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           indf2	equ	0xFDF
  8021                           postinc2	equ	0xFDE
  8022                           postdec2	equ	0xFDD
  8023                           fsr2h	equ	0xFDA
  8024                           fsr2l	equ	0xFD9
  8025                           status	equ	0xFD8
  8026                           
  8027 ;; *************** function i2_strlen *****************
  8028 ;; Defined at:
  8029 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8032 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  8035 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  2    0[COMRAM] unsigned int 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;Total ram usage:        6 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		i2_strstr
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text43
  8059  0017F6                     __ptext43:
  8060                           	opt stack 0
  8061  0017F6                     i2_strlen:
  8062                           	opt stack 22
  8063                           
  8064                           ;incstack = 0
  8065  0017F6  C001  F005         	movff	i2strlen@s,i2strlen@cp
  8066  0017FA  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
  8067  0017FE  D002               	goto	i2l2585
  8068  001800                     i2l2583:
  8069  001800  4A05               	infsnz	i2strlen@cp,f,c
  8070  001802  2A06               	incf	i2strlen@cp+1,f,c
  8071  001804                     i2l2585:
  8072  001804  C005  FFF6         	movff	i2strlen@cp,tblptrl
  8073  001808  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
  8074  00180C  0E00               	movlw	low (__mediumconst shr (0+16))
  8075  00180E  6EF8               	movwf	tblptru,c
  8076  001810  0E0F               	movlw	(high __ramtop+-1)
  8077  001812  64F7               	cpfsgt	tblptrh,c
  8078  001814  D003               	bra	i2u240_47
  8079  001816  0008               	tblrd		*
  8080  001818  50F5               	movf	tablat,w,c
  8081  00181A  D005               	bra	i2u240_40
  8082  00181C                     i2u240_47:
  8083  00181C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8084  001820  CFF7 FFE2          	movff	tblptrh,fsr1h
  8085  001824  50E7               	movf	indf1,w,c
  8086  001826                     i2u240_40:
  8087  001826  0900               	iorlw	0
  8088  001828  A4D8               	btfss	status,2,c
  8089  00182A  D7EA               	goto	i2l2583
  8090  00182C  C001  F003         	movff	i2strlen@s,??i2_strlen
  8091  001830  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
  8092  001834  1E03               	comf	??i2_strlen,f,c
  8093  001836  1E04               	comf	??i2_strlen+1,f,c
  8094  001838  4A03               	infsnz	??i2_strlen,f,c
  8095  00183A  2A04               	incf	??i2_strlen+1,f,c
  8096  00183C  5005               	movf	i2strlen@cp,w,c
  8097  00183E  2403               	addwf	??i2_strlen,w,c
  8098  001840  6E01               	movwf	?i2_strlen,c
  8099  001842  5006               	movf	i2strlen@cp+1,w,c
  8100  001844  2004               	addwfc	??i2_strlen+1,w,c
  8101  001846  6E02               	movwf	?i2_strlen+1,c
  8102  001848  0012               	return	
  8103  00184A                     __end_ofi2_strlen:
  8104                           	opt stack 0
  8105                           tosu	equ	0xFFF
  8106                           tosh	equ	0xFFE
  8107                           tosl	equ	0xFFD
  8108                           pclatu	equ	0xFFB
  8109                           pclath	equ	0xFFA
  8110                           tblptru	equ	0xFF8
  8111                           tblptrh	equ	0xFF7
  8112                           tblptrl	equ	0xFF6
  8113                           tablat	equ	0xFF5
  8114                           prodh	equ	0xFF4
  8115                           prodl	equ	0xFF3
  8116                           intcon	equ	0xFF2
  8117                           intcon2	equ	0xFF1
  8118                           postinc0	equ	0xFEE
  8119                           fsr0h	equ	0xFEA
  8120                           fsr0l	equ	0xFE9
  8121                           wreg	equ	0xFE8
  8122                           indf1	equ	0xFE7
  8123                           postdec1	equ	0xFE5
  8124                           fsr1h	equ	0xFE2
  8125                           fsr1l	equ	0xFE1
  8126                           indf2	equ	0xFDF
  8127                           postinc2	equ	0xFDE
  8128                           postdec2	equ	0xFDD
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function i2_strchr *****************
  8134 ;; Defined at:
  8135 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  8138 ;;		 -> NULL(0), line(128), 
  8139 ;;  chr             2    2[COMRAM] int 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  2    0[COMRAM] PTR unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;Total ram usage:        5 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		i2_strstr
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text44
  8165  0019EC                     __ptext44:
  8166                           	opt stack 0
  8167  0019EC                     i2_strchr:
  8168                           	opt stack 22
  8169  0019EC  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8170  0019F0  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8171  0019F4  5003               	movf	i2strchr@chr,w,c
  8172  0019F6  18DE               	xorwf	postinc2,w,c
  8173  0019F8  A4D8               	btfss	status,2,c
  8174  0019FA  D005               	goto	i2l2597
  8175  0019FC  C001  F001         	movff	i2strchr@ptr,?i2_strchr
  8176  001A00  C002  F002         	movff	i2strchr@ptr+1,?i2_strchr+1
  8177  001A04  0012               	return	
  8178  001A06                     i2l2597:
  8179  001A06  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8180  001A0A  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8181  001A0E  4A01               	infsnz	i2strchr@ptr,f,c
  8182  001A10  2A02               	incf	i2strchr@ptr+1,f,c
  8183  001A12  50DF               	movf	indf2,w,c
  8184  001A14  A4D8               	btfss	status,2,c
  8185  001A16  D7EA               	goto	i2l2591
  8186  001A18  0E00               	movlw	0
  8187  001A1A  6E01               	movwf	?i2_strchr,c
  8188  001A1C  0E00               	movlw	0
  8189  001A1E  6E02               	movwf	?i2_strchr+1,c
  8190  001A20  0012               	return	
  8191  001A22                     __end_ofi2_strchr:
  8192                           	opt stack 0
  8193                           tosu	equ	0xFFF
  8194                           tosh	equ	0xFFE
  8195                           tosl	equ	0xFFD
  8196                           pclatu	equ	0xFFB
  8197                           pclath	equ	0xFFA
  8198                           tblptru	equ	0xFF8
  8199                           tblptrh	equ	0xFF7
  8200                           tblptrl	equ	0xFF6
  8201                           tablat	equ	0xFF5
  8202                           prodh	equ	0xFF4
  8203                           prodl	equ	0xFF3
  8204                           intcon	equ	0xFF2
  8205                           intcon2	equ	0xFF1
  8206                           postinc0	equ	0xFEE
  8207                           fsr0h	equ	0xFEA
  8208                           fsr0l	equ	0xFE9
  8209                           wreg	equ	0xFE8
  8210                           indf1	equ	0xFE7
  8211                           postdec1	equ	0xFE5
  8212                           fsr1h	equ	0xFE2
  8213                           fsr1l	equ	0xFE1
  8214                           indf2	equ	0xFDF
  8215                           postinc2	equ	0xFDE
  8216                           postdec2	equ	0xFDD
  8217                           fsr2h	equ	0xFDA
  8218                           fsr2l	equ	0xFD9
  8219                           status	equ	0xFD8
  8220                           
  8221 ;; *************** function _strcmp *****************
  8222 ;; Defined at:
  8223 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8226 ;;		 -> STR_1(10), line(128), 
  8227 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8228 ;;		 -> STR_4(3), STR_3(12), line(128), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  r               1    5[COMRAM] char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  2    0[COMRAM] int 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;Total ram usage:        6 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_EUSART1_Receive_ISR
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text45
  8254  00158E                     __ptext45:
  8255                           	opt stack 0
  8256  00158E                     _strcmp:
  8257                           	opt stack 23
  8258                           
  8259                           ;incstack = 0
  8260  00158E  D004               	goto	i2l2671
  8261  001590                     i2l2669:
  8262  001590  4A01               	infsnz	strcmp@s1,f,c
  8263  001592  2A02               	incf	strcmp@s1+1,f,c
  8264  001594  4A03               	infsnz	strcmp@s2,f,c
  8265  001596  2A04               	incf	strcmp@s2+1,f,c
  8266  001598                     i2l2671:
  8267  001598  C001  FFF6         	movff	strcmp@s1,tblptrl
  8268  00159C  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8269  0015A0  0E00               	movlw	low (__mediumconst shr (0+16))
  8270  0015A2  6EF8               	movwf	tblptru,c
  8271  0015A4  0E0F               	movlw	(high __ramtop+-1)
  8272  0015A6  64F7               	cpfsgt	tblptrh,c
  8273  0015A8  D003               	bra	i2u251_47
  8274  0015AA  0008               	tblrd		*
  8275  0015AC  50F5               	movf	tablat,w,c
  8276  0015AE  D005               	bra	i2u251_40
  8277  0015B0                     i2u251_47:
  8278  0015B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8279  0015B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8280  0015B8  50E7               	movf	indf1,w,c
  8281  0015BA                     i2u251_40:
  8282  0015BA  6E05               	movwf	??_strcmp& (0+255),c
  8283  0015BC  C003  FFF6         	movff	strcmp@s2,tblptrl
  8284  0015C0  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8285  0015C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8286  0015C6  6EF8               	movwf	tblptru,c
  8287  0015C8  0E0F               	movlw	(high __ramtop+-1)
  8288  0015CA  64F7               	cpfsgt	tblptrh,c
  8289  0015CC  D003               	bra	i2u252_47
  8290  0015CE  0008               	tblrd		*
  8291  0015D0  50F5               	movf	tablat,w,c
  8292  0015D2  D005               	bra	i2u252_40
  8293  0015D4                     i2u252_47:
  8294  0015D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8295  0015D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8296  0015DC  50E7               	movf	indf1,w,c
  8297  0015DE                     i2u252_40:
  8298  0015DE  0800               	sublw	0
  8299  0015E0  2405               	addwf	??_strcmp,w,c
  8300  0015E2  6E06               	movwf	strcmp@r,c
  8301  0015E4  5006               	movf	strcmp@r,w,c
  8302  0015E6  A4D8               	btfss	status,2,c
  8303  0015E8  D014               	goto	i2l2675
  8304  0015EA  C001  FFF6         	movff	strcmp@s1,tblptrl
  8305  0015EE  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8306  0015F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8307  0015F4  6EF8               	movwf	tblptru,c
  8308  0015F6  0E0F               	movlw	(high __ramtop+-1)
  8309  0015F8  64F7               	cpfsgt	tblptrh,c
  8310  0015FA  D003               	bra	i2u254_47
  8311  0015FC  0008               	tblrd		*
  8312  0015FE  50F5               	movf	tablat,w,c
  8313  001600  D005               	bra	i2u254_40
  8314  001602                     i2u254_47:
  8315  001602  CFF6 FFE1          	movff	tblptrl,fsr1l
  8316  001606  CFF7 FFE2          	movff	tblptrh,fsr1h
  8317  00160A  50E7               	movf	indf1,w,c
  8318  00160C                     i2u254_40:
  8319  00160C  0900               	iorlw	0
  8320  00160E  A4D8               	btfss	status,2,c
  8321  001610  D7BF               	goto	i2l2669
  8322  001612                     i2l2675:
  8323  001612  5006               	movf	strcmp@r,w,c
  8324  001614  6E01               	movwf	?_strcmp,c
  8325  001616  6A02               	clrf	?_strcmp+1,c
  8326  001618  BE01               	btfsc	?_strcmp,7,c
  8327  00161A  0602               	decf	?_strcmp+1,f,c
  8328  00161C  0012               	return	
  8329  00161E                     __end_of_strcmp:
  8330                           	opt stack 0
  8331                           tosu	equ	0xFFF
  8332                           tosh	equ	0xFFE
  8333                           tosl	equ	0xFFD
  8334                           pclatu	equ	0xFFB
  8335                           pclath	equ	0xFFA
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           intcon2	equ	0xFF1
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           indf1	equ	0xFE7
  8349                           postdec1	equ	0xFE5
  8350                           fsr1h	equ	0xFE2
  8351                           fsr1l	equ	0xFE1
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           fsr2h	equ	0xFDA
  8356                           fsr2l	equ	0xFD9
  8357                           status	equ	0xFD8
  8358                           
  8359 ;; *************** function _EUSART1_Read *****************
  8360 ;; Defined at:
  8361 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;  readValue       1    0[COMRAM] unsigned char 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      unsigned char 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;Total ram usage:        1 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_EUSART1_Receive_ISR
  8385 ;;		_getch
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text46
  8390  001ABE                     __ptext46:
  8391                           	opt stack 0
  8392  001ABE                     _EUSART1_Read:
  8393                           	opt stack 23
  8394                           
  8395                           ;eusart1.c: 123: uint8_t readValue = 0;
  8396                           
  8397                           ;incstack = 0
  8398  001ABE  0E00               	movlw	0
  8399  001AC0  6E01               	movwf	EUSART1_Read@readValue,c
  8400  001AC2                     i2l2649:
  8401  001AC2  502F               	movf	_eusart1RxCount,w,c	;volatile
  8402  001AC4  B4D8               	btfsc	status,2,c
  8403  001AC6  D7FD               	goto	i2l2649
  8404                           
  8405                           ;eusart1.c: 127: }
  8406                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  8407  001AC8  9A9D               	bcf	3997,5,c	;volatile
  8408                           
  8409                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  8410  001ACA  5031               	movf	_eusart1RxTail,w,c
  8411  001ACC  0D01               	mullw	1
  8412  001ACE  0E00               	movlw	low _eusart1RxBuffer
  8413  001AD0  24F3               	addwf	prodl,w,c
  8414  001AD2  6ED9               	movwf	fsr2l,c
  8415  001AD4  0E02               	movlw	high _eusart1RxBuffer
  8416  001AD6  20F4               	addwfc	prodh,w,c
  8417  001AD8  6EDA               	movwf	fsr2h,c
  8418  001ADA  50DF               	movf	indf2,w,c
  8419  001ADC  6E01               	movwf	EUSART1_Read@readValue,c
  8420  001ADE  2A31               	incf	_eusart1RxTail,f,c
  8421                           
  8422                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8423  001AE0  0E7F               	movlw	127
  8424  001AE2  6431               	cpfsgt	_eusart1RxTail,c
  8425  001AE4  D002               	goto	i2l2659
  8426                           
  8427                           ;eusart1.c: 133: {
  8428                           ;eusart1.c: 134: eusart1RxTail = 0;
  8429  001AE6  0E00               	movlw	0
  8430  001AE8  6E31               	movwf	_eusart1RxTail,c
  8431  001AEA                     i2l2659:
  8432                           
  8433                           ;eusart1.c: 135: }
  8434                           ;eusart1.c: 136: eusart1RxCount--;
  8435  001AEA  062F               	decf	_eusart1RxCount,f,c	;volatile
  8436                           
  8437                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  8438  001AEC  8A9D               	bsf	3997,5,c	;volatile
  8439                           
  8440                           ;eusart1.c: 139: return readValue;
  8441  001AEE  5001               	movf	EUSART1_Read@readValue,w,c
  8442  001AF0  0012               	return	
  8443  001AF2                     __end_of_EUSART1_Read:
  8444                           	opt stack 0
  8445                           tosu	equ	0xFFF
  8446                           tosh	equ	0xFFE
  8447                           tosl	equ	0xFFD
  8448                           pclatu	equ	0xFFB
  8449                           pclath	equ	0xFFA
  8450                           tblptru	equ	0xFF8
  8451                           tblptrh	equ	0xFF7
  8452                           tblptrl	equ	0xFF6
  8453                           tablat	equ	0xFF5
  8454                           prodh	equ	0xFF4
  8455                           prodl	equ	0xFF3
  8456                           intcon	equ	0xFF2
  8457                           intcon2	equ	0xFF1
  8458                           postinc0	equ	0xFEE
  8459                           fsr0h	equ	0xFEA
  8460                           fsr0l	equ	0xFE9
  8461                           wreg	equ	0xFE8
  8462                           indf1	equ	0xFE7
  8463                           postdec1	equ	0xFE5
  8464                           fsr1h	equ	0xFE2
  8465                           fsr1l	equ	0xFE1
  8466                           indf2	equ	0xFDF
  8467                           postinc2	equ	0xFDE
  8468                           postdec2	equ	0xFDD
  8469                           fsr2h	equ	0xFDA
  8470                           fsr2l	equ	0xFD9
  8471                           status	equ	0xFD8
  8472                           tosu	equ	0xFFF
  8473                           tosh	equ	0xFFE
  8474                           tosl	equ	0xFFD
  8475                           pclatu	equ	0xFFB
  8476                           pclath	equ	0xFFA
  8477                           tblptru	equ	0xFF8
  8478                           tblptrh	equ	0xFF7
  8479                           tblptrl	equ	0xFF6
  8480                           tablat	equ	0xFF5
  8481                           prodh	equ	0xFF4
  8482                           prodl	equ	0xFF3
  8483                           intcon	equ	0xFF2
  8484                           intcon2	equ	0xFF1
  8485                           postinc0	equ	0xFEE
  8486                           fsr0h	equ	0xFEA
  8487                           fsr0l	equ	0xFE9
  8488                           wreg	equ	0xFE8
  8489                           indf1	equ	0xFE7
  8490                           postdec1	equ	0xFE5
  8491                           fsr1h	equ	0xFE2
  8492                           fsr1l	equ	0xFE1
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8
  8499                           
  8500                           	psect	text47
  8501  000000                     __ptext47:
  8502                           	opt stack 0
  8503                           tosu	equ	0xFFF
  8504                           tosh	equ	0xFFE
  8505                           tosl	equ	0xFFD
  8506                           pclatu	equ	0xFFB
  8507                           pclath	equ	0xFFA
  8508                           tblptru	equ	0xFF8
  8509                           tblptrh	equ	0xFF7
  8510                           tblptrl	equ	0xFF6
  8511                           tablat	equ	0xFF5
  8512                           prodh	equ	0xFF4
  8513                           prodl	equ	0xFF3
  8514                           intcon	equ	0xFF2
  8515                           intcon2	equ	0xFF1
  8516                           postinc0	equ	0xFEE
  8517                           fsr0h	equ	0xFEA
  8518                           fsr0l	equ	0xFE9
  8519                           wreg	equ	0xFE8
  8520                           indf1	equ	0xFE7
  8521                           postdec1	equ	0xFE5
  8522                           fsr1h	equ	0xFE2
  8523                           fsr1l	equ	0xFE1
  8524                           indf2	equ	0xFDF
  8525                           postinc2	equ	0xFDE
  8526                           postdec2	equ	0xFDD
  8527                           fsr2h	equ	0xFDA
  8528                           fsr2l	equ	0xFD9
  8529                           status	equ	0xFD8
  8530                           
  8531                           	psect	rparam
  8532  0000                     tosu	equ	0xFFF
  8533                           tosh	equ	0xFFE
  8534                           tosl	equ	0xFFD
  8535                           pclatu	equ	0xFFB
  8536                           pclath	equ	0xFFA
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           intcon2	equ	0xFF1
  8545                           postinc0	equ	0xFEE
  8546                           fsr0h	equ	0xFEA
  8547                           fsr0l	equ	0xFE9
  8548                           wreg	equ	0xFE8
  8549                           indf1	equ	0xFE7
  8550                           postdec1	equ	0xFE5
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           
  8560                           	psect	temp
  8561  00003A                     btemp:
  8562                           	opt stack 0
  8563  00003A                     	ds	1
  8564  0000                     int$flags	set	btemp
  8565                           tosu	equ	0xFFF
  8566                           tosh	equ	0xFFE
  8567                           tosl	equ	0xFFD
  8568                           pclatu	equ	0xFFB
  8569                           pclath	equ	0xFFA
  8570                           tblptru	equ	0xFF8
  8571                           tblptrh	equ	0xFF7
  8572                           tblptrl	equ	0xFF6
  8573                           tablat	equ	0xFF5
  8574                           prodh	equ	0xFF4
  8575                           prodl	equ	0xFF3
  8576                           intcon	equ	0xFF2
  8577                           intcon2	equ	0xFF1
  8578                           postinc0	equ	0xFEE
  8579                           fsr0h	equ	0xFEA
  8580                           fsr0l	equ	0xFE9
  8581                           wreg	equ	0xFE8
  8582                           indf1	equ	0xFE7
  8583                           postdec1	equ	0xFE5
  8584                           fsr1h	equ	0xFE2
  8585                           fsr1l	equ	0xFE1
  8586                           indf2	equ	0xFDF
  8587                           postinc2	equ	0xFDE
  8588                           postdec2	equ	0xFDD
  8589                           fsr2h	equ	0xFDA
  8590                           fsr2l	equ	0xFD9
  8591                           status	equ	0xFD8


Data Sizes:
    Strings     393
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     56      99
    BANK1           256      0     256
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK1[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK1[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[28]), STR_24(CODE[19]), 
		 -> STR_23(CODE[28]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_28(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[28]), STR_24(CODE[19]), 
		 -> STR_23(CODE[28]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[5]), STR_5(CODE[16]), 

    S772__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S772__prbuf$ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main->_wait_1ms
    _wait_1ms->_rand
    _rand->___lmul
    _process_message->_strstr
    _strtol->_isalpha
    _isalpha->_isupper
    _strstr->_strlen
    _strncmp->_strlen
    __doprnt->___lwdiv
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->i2_strstr
    i2_strstr->i2_strncmp
    i2_strncmp->i2_strlen

Critical Paths under _main in BANK0

    _main->_process_message
    _wait_1ms->___awmod
    _srand->_strtol
    _rand->___lmul
    _process_message->_sprintf
    _strtol->___lmul
    _strstr->_strncmp
    _sprintf->__doprnt
    _getUUID->_printf
    _printf->__doprnt
    __doprnt->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   27526
                                             49 BANK0      7     7      0
                _EPWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awmod
                            _getUUID
                             _printf
                    _process_message
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_1ms
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     174
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _wait_1ms                                             6     4      2     145
                                             43 COMRAM     1     1      0
                                             14 BANK0      5     3      2
                            ___awmod (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     108
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             41 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _process_message                                      8     6      2    9435
                                             41 BANK0      8     6      2
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2396
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             40 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             37 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     1      4    1500
                                             43 COMRAM     1     1      0
                                              9 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     423
                                              0 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     218
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     216
                                             37 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     6      8    5138
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    6728
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     6      8    6525
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             26    20      6    4628
                                              5 BANK0     22    16      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             38 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1049
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     108
                                             37 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0    1220
                                             23 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  3     3      0    1220
                                             20 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                           i2_strstr
 ---------------------------------------------------------------------------------
 (8) i2_strstr                                             5     1      4     697
                                             15 COMRAM     5     1      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (9) i2_strncmp                                            9     3      6     212
                                              6 COMRAM     9     3      6
                           i2_strlen (ARG)
 ---------------------------------------------------------------------------------
 (9) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_strchr                                             5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _read_line
     _strcpy
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
         _EUSART1_Write
   _process_message
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_1ms
     ___awmod (ARG)
       _rand (ARG)
         ___lmul
     _rand (ARG)
       ___lmul
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     i2_strstr
       i2_strchr
       i2_strlen
       i2_strncmp
         i2_strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      12        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar 15 09:26:09 2016

           _eusart1TxBufferRemaining 0039                  ___wmul@multiplicand 0028  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 198E                                  l344 0494  
                                l280 1A3A                                  l286 1952  
                                l819 18E4                                  l829 1744  
                       __CFG_CPB$OFF 000000                                  _PR2 000FBB  
                       __CFG_CPD$OFF 000000                                  _inc 0098  
                                _val 009A                         ___awmod@sign 006D  
                    _TMR2_Initialize 1CA6                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l1053 0FBE  
                               l2203 19B0                                 l2205 19B2  
                               l2233 18B2                                 l2217 1C70  
                               l2235 18BA                                 l2245 18DA  
                               l2237 18BE                                 l3221 022E  
                               l3213 01E8                                 l3205 016E  
                               l2191 197E                                 l3231 02A6  
                               l3223 023A                                 l3215 01EE  
                               l3321 05FE                                 l3233 02B2  
                               l3241 0322                                 l3225 0240  
                               l2281 17AC                                 l3401 164C  
                               l2273 1C52                                 l3171 170C  
                               l3315 05BC                                 l3307 0588  
                               l3243 033A                                 l3227 0280  
                               l2531 19B6                                 l2283 17B0  
                               l3411 126C                                 l3173 1712  
                               l3333 0682                                 l3309 059A  
                               l3237 02F8                                 l3501 0E78  
                               l3351 075A                                 l3343 06FE  
                               l3319 05F4                                 l3247 03A0  
                               l3255 03F8                                 l3183 009C  
                               l3415 12C4                                 l3407 1226  
                               l3431 1332                                 l2551 1BEA  
                               l3601 148E                                 l3177 1736  
                               l3169 1700                                 l3329 0658  
                               l3345 0708                                 l3257 0410  
                               l3249 03A8                                 l3265 044E  
                               l3193 011E                                 l2713 1B2C  
                               l2537 19D0                                 l3417 12D0  
                               l3425 12F4                                 l3433 1378  
                               l2553 1BEE                                 l3513 0EBC  
                               l3505 0E8E                                 l3603 149A  
                               l3371 086E                                 l3363 07EC  
                               l3355 0784                                 l3347 0714  
                               l3339 06D4                                 l3291 0546  
                               l3275 04DA                                 l3259 0436  
                               l3195 0130                                 l2715 1B34  
                               l2563 1BBA                                 l3523 0F4E  
                               l3605 14A0                                 l3613 14D2  
                               l3357 0798                                 l3293 054C  
                               l3277 0504                                 l3189 00F0  
                               l3437 1392                                 l3509 0EAA  
                               l3383 0920                                 l3367 0816  
                               l3279 050A                                 l3391 0976  
                               l3199 013A                                 l2567 1BC8  
                               l3527 0F7E                                 l3471 0DDC  
                               l3455 0D8A                                 l3551 1138  
                               l3535 193E                                 l3617 14E6  
                               l3609 14C4                                 l3369 081C  
                               l3377 08C6                                 l2577 1CA2  
                               l3473 0DE6                                 l3561 119E  
                               l3379 08D8                                 l3387 094A  
                               l3491 0E42                                 l3571 1218  
                               l2907 1A28                                 l3715 0BC6  
                               l3389 0956                                 l3397 162E  
                               l3477 0DF6                                 l3469 0DD4  
                               l3557 1170                                 l3741 0CD8  
                               l3487 0E2E                                 l3593 146A  
                               l3497 0E62                                 l3737 0CB2  
                               l2699 1CD4                                 l3597 147A  
                               l3759 0D6E                                 l3697 0B40  
                               STR_1 FFDF                                 STR_2 FFE9  
                               STR_3 FFD3                                 STR_4 FFDC  
                               STR_5 FF53                                 STR_6 FF42  
                               STR_7 FFF9                                 STR_8 FFC7  
                               STR_9 FFA0                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u4000 11B2                                 u1740 17D2  
                               u3370 039E                                 u3338 02E2  
                               u3290 027A                                 u3258 00D8  
                               u1747 17C8                                 u3380 03E2  
                               u4157 0B48                                 u4167 1A2E  
                               u3368 036A                                 u3377 0394  
                               u3297 0270                                 u4177 1946  
                               u3618 0744                                 u3730 1264  
                               u3387 03D8                                 u3548 0642  
                               u3750 128E                                 u3737 125A  
                               u3658 07D6                                 u3578 06BE  
                               i2l20 004E                                 u3780 1364  
                               u3757 1284                                 u3678 0908  
                               i2l24 0058                                 u3787 135A  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 197C                                 _main 0982  
                               _line 0180                                 _rand 174E  
                      ?_EUSART1_Read 0001                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 003A  
                               _uuid 009B                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0094  
                      __CFG_IESO$OFF 000000                ??_EPWM1_LoadDutyValue 0028  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 1CD4                                ?_main 0001  
                              ?_rand 002A                                STR_10 FF73  
                              STR_11 FF91                                STR_12 FF82  
                              STR_20 FF0C                                STR_13 FF1F  
                              STR_21 FEF9                                STR_22 FFAE  
                              STR_14 FF63                                STR_15 FFBB  
                              STR_23 FE91                                STR_24 FEF9  
                              STR_16 FEC0                                STR_17 FEAD  
                              STR_25 FE75                                STR_26 FEF9  
                              STR_18 FED3                                STR_27 FFAE  
                              STR_19 FEE6                                STR_28 FFF2  
                    __end_of___awmod 14F0                                STR_29 FF31  
                              _T2CON 000FBA                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 18EE                      __end_of___lwmod 174E  
                              i2l122 1B7A                                i2l138 1108  
                    __end_of__doprnt 0982                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                    __end_of_getUUID 1BA8                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                ___lmul@multiplicand 0064                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1B50                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_dpowers FE6D                                _index 002D  
                    __end_of_isalpha 1BD0                                _ready 0034  
                    __end_of_isdigit 1C78                                _randx 0035  
                 __CFG_MCLRE$EXTMCLR 000000                                _srand 1CB8  
                              _putch 1CE0                                main@q 0094  
                    __end_of_isspace 1BF6                       ?_EUSART1_Write 0001  
                    __end_of_isupper 1C5A                                pclath 000FFA  
                              tablat 000FF5                       ??_EUSART1_Read 0001  
                              status 000FD8                      __end_of_sprintf 189C  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 1CF8  
                    __end_of_strncmp 12F2                      __end_of_toupper 1CA6  
                     __CFG_PBADEN$ON 000000                     __end_ofi2_strchr 1A22  
                   __end_ofi2_strlen 184A                     __end_ofi2_strstr 158E  
                    __initialization 168A           __end_of_EUSART1_Initialize 1ABE  
                       __end_of_main 0D8A                         __end_of_rand 17A2  
            __end_of_TMR2_Initialize 1CB8          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0091                               ??_rand 002C  
                      __activetblptr 000003                   __size_ofi2_strncmp 00AE  
              ?_EUSART1_Transmit_ISR 0001                           i2strlen@cp 0005  
                         i2strstr@s1 0010                           i2strstr@s2 0012  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                             ?_srand 0078                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l2613 142C  
                             i2l2605 13A2                       __CFG_WDTEN$OFF 000000  
                             i2l2615 1434                               i2l2609 13E4  
                             i2l2811 152C                               i2l2805 14F2  
                             i2l2813 156E                               i2l2671 1598  
                             i2l2591 19EC                               i2l2583 1800  
                             i2l2831 1B76                               i2l2649 1AC2  
                             i2l2585 1804                               i2l2817 1584  
                             i2l2659 1AEA                               i2l2675 1612  
                             i2l2669 1590                               i2l2597 1A06  
                             i2l2853 100A                               i2l2861 1042  
                             i2l2845 0FF8                               i2l2837 0FD8  
                             i2l2863 1048                               i2l2881 10C0  
                             i2l2873 108C                               i2l2883 10C4  
                             i2l2859 103E                               i2l2887 10E8  
                             i2l2889 1104                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                               ___lmul 161E  
                             ___wmul 1BF6                       __CFG_STVREN$ON 000000  
                          ??___awmod 002C                            ??___lwdiv 002A  
                          ??___lwmod 002D                            ??__doprnt 006B  
                             clear_0 1690                               clear_1 169E  
                             clear_2 16B0                               clear_3 16BC  
                    ___awmod@divisor 006A                            ??_getUUID 002D  
                       __doprnt@flag 0077                      ___awmod@counter 006C  
                             _printf 18EE                         __doprnt@prec 0070  
                             _strchr 19B6                               _strcmp 158E  
                             _strcpy 1B22                               _strlen 17A2  
                             _strtol 0D8A                               _strstr 12F2  
                   __end_of_wait_1ms 197C                     __end_of_wait_5ms 1A56  
                       __pdataCOMRAM 0035                            ??_isalpha 0029  
                          ??_isdigit 0026                         __mediumconst FE62  
                          ??_isspace 0026                               tblptrh 000FF7  
                          ??_isupper 0026                               tblptrl 000FF6  
                             tblptru 000FF8                               srand@x 0078  
                    ??_EUSART1_Write 0026              __end_of_TMR2_StartTimer 1CFC  
                          ??_sprintf 002D                      _eusart1RxBuffer 0200  
                          ??_strncmp 0066                            ??_toupper 0026  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0100  
                  _SYSTEM_Initialize 1C78                           __accesstop 0060  
            __end_of__initialization 16E2                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    __end_ofi2_strncmp 144E  
                  ?_EPWM1_Initialize 0001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0026                   ??_EPWM1_Initialize 0026  
                      __end_of_srand 1CC6                        __end_of_putch 1CEA  
                   ?_TMR2_Initialize 0001                 __end_of_EUSART1_Read 1AF2  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 1116  
           __size_of_process_message 010E                            ?i2_strchr 0001  
                          ?i2_strlen 0001                           __doprnt@ap 0069  
                         __doprnt@cp 0073                           __doprnt@pb 0065  
                          ?i2_strstr 0010            __end_of_SYSTEM_Initialize 1C92  
                            ??_srand 002C                              ??_putch 0027  
                      _eusart1RxHead 0030                        _eusart1TxHead 0032  
                      _eusart1RxTail 0031                           __pbssBANK0 0098  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0033                      __CFG_PLLCFG$OFF 000000  
                        i2strchr@chr 0003                          i2strchr@ptr 0001  
                         __pnvCOMRAM 0039                   __size_of_read_line 000C  
                        i2strncmp@s1 0007                          i2strncmp@s2 0009  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 0060  
                            ?___wmul 0026                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                     ___lmul@product 0026                              ?_printf 007B  
                            ?_strchr 0026                              ?_strcmp 0001  
                            ?_strcpy 0026                              ?_strlen 0026  
                            ?_strtol 0068                              ?_strstr 0069  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7                              _SPBRGH1 000FB0  
                         ??i2_strchr 0005                           ??i2_strlen 0003  
                         ??i2_strstr 0014                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 1B22                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          ?_wait_1ms 006E                            ?_wait_5ms 0026  
                    __size_of___lmul 006C                              ___awmod 144E  
                    __size_of___wmul 0026                              ___lwdiv 189C  
                            ___lwmod 16EC                              __doprnt 0098  
                            __pcinit 168A                              _getUUID 1B7E  
                            __ramtop 1000                process_message@hexval 008D  
                            __ptext0 0982                              __ptext1 1A22  
                            __ptext2 1938                              __ptext3 1CB8  
                            __ptext4 174E                              __ptext5 1116  
                            __ptext6 0D8A                              __ptext7 1C92  
                            __ptext8 1BD0                              __ptext9 1BA8  
                    __size_of_printf 004A                      __size_of_strchr 0036  
                    __size_of_strcmp 0090                      __size_of_strcpy 002E  
                    __size_of_strlen 0054                    __end_of_hexpowers FE75  
                    __size_of_strtol 0246                      __size_of_strstr 00AE  
                            _dpowers FE63                _OSCILLATOR_Initialize 1CC6  
                          _T2CONbits 000FBA                              _isalpha 1BA8  
                            _isdigit 1C5A                     ___awmod@dividend 0068  
                  __end_of_read_line 1CE0                   _EUSART1_Initialize 1A8A  
           ??_PIN_MANAGER_Initialize 0026                              _isspace 1BD0  
                            _isupper 1C3C           __size_of_SYSTEM_Initialize 001A  
                            _sprintf 184A                        __doprnt@width 0078  
                            _strncmp 1224                              _toupper 1C92  
               end_of_initialization 16E2                  ?_EUSART1_Initialize 0001  
                  ??_process_message 002D                           ??_wait_1ms 0070  
                         ??_wait_5ms 0028                              printf@f 007B  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0026  
                            strcmp@r 0006                              strlen@s 0026  
                            strtol@a 0073                              strtol@c 0077  
                            strtol@s 0068                         strtol@endptr 006A  
                EUSART1_Write@txData 0026                         _EUSART1_Read 1ABE  
       __end_of_INTERRUPT_Initialize 1CF4                            i2_strncmp 13A0  
                     __end_of___lmul 168A                       __end_of___wmul 1C1C  
                      __pidataCOMRAM 1CF4               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 1938                       __end_of_strchr 19EC  
                     __end_of_strcmp 161E                       __end_of_strcpy 1B50  
                     __end_of_strlen 17F6                       __end_of_strtol 0FD0  
                     __end_of_strstr 13A0                  start_initialization 168A  
          __size_of_EPWM1_Initialize 0020      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0027         EPWM1_LoadDutyValue@dutyValue 0026  
              __end_of_EUSART1_Write 19B6                    __size_ofi2_strchr 0036  
                  __size_ofi2_strlen 0054                            i2strlen@s 0001  
                  __size_ofi2_strstr 009E                             ??___lmul 0026  
                           ??___wmul 002A                           ?i2_strncmp 0007  
                        __doprnt@idx 006F                          __doprnt@len 0071  
                        __doprnt@val 0075                             ??_printf 002D  
                           ??_strchr 002A                             ??_strcmp 0005  
                           ??_strcpy 002A                             ??_strlen 0028  
                           ??_strtol 006E                       _eusart1RxCount 002F  
                           ??_strstr 002C                          __pbssCOMRAM 002D  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 0060  
                       _isalpha$1312 002A             __size_of_TMR2_Initialize 0012  
                       _isdigit$1032 0027         __size_of_EUSART1_Receive_ISR 0146  
                          __doprnt@c 007A                            __doprnt@f 0067  
                       i2strncmp@len 000B                     ___lwdiv@dividend 0026  
             _PIN_MANAGER_Initialize 1A56                            __pintcode 0008  
                      __pmediumconst FE62                             ?___awmod 0068  
                  __size_of_wait_1ms 0044                    __size_of_wait_5ms 0034  
                           ?___lwdiv 0026                             ?___lwmod 0060  
                           ?__doprnt 0065                             ?_getUUID 0001  
       ??_INTERRUPT_InterruptManager 0018                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isalpha 0001  
                           ?_isdigit 0001                      _process_message 1116  
                           ?_isspace 0001                             ?_isupper 0001  
           EUSART1_Receive_ISR@state 0016                            _hexpowers FE6D  
                   ___lwdiv@quotient 002A                             ?_sprintf 007B  
                           ?_strncmp 0060                            _read_line 1CD4  
                           ?_toupper 0001                       __size_of_srand 000E  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 1CEA  
                     ___wmul@product 002A                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
__size_of_INTERRUPT_InterruptManager 008C                             i2u240_40 1826  
                           i2u240_47 181C                             i2u251_40 15BA  
                           i2u251_47 15B0                             i2u252_40 15DE  
                           i2u252_47 15D4                             i2u245_40 13DE  
                           i2u245_47 13D4                             i2u254_40 160C  
                           i2u254_47 1602                             i2u247_40 1406  
                           i2u247_47 13FC                             _PIR1bits 000F9E  
                           i2u278_40 155A                             i2u278_47 1550  
       __size_of_EPWM1_LoadDutyValue 0030                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0099  
                           _PSTR1CON 000FB9                          ??i2_strncmp 000D  
                  ___wmul@multiplier 0026                            main@delay 0096  
                   _EPWM1_Initialize 1C1C                         _isspace$1315 0027  
                           i2_strchr 19EC                             i2_strlen 17F6  
                           i2_strstr 14F0                    ___lmul@multiplier 0060  
                        _INTCON2bits 000FF1                           ?_read_line 0001  
                          copy_data0 16D6                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0026                EUSART1_Read@readValue 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                   process_message@res 008B  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0026  
                   __size_of___awmod 00A2          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 0052              __end_of_process_message 1224  
                   __size_of___lwmod 0062                     __size_of__doprnt 08EA  
                   __size_of_getUUID 002A                         _isupper$1318 0027  
                   __size_of_isalpha 0028                     __size_of_isdigit 001E  
                    ___lwdiv@divisor 0028                     __size_of_isspace 0026  
                    ___lwdiv@counter 002C                             __ptext10 1C3C  
                           __ptext11 161E                             __ptext20 18EE  
                           __ptext12 12F2                             __ptext21 0098  
                           __ptext13 1224                             __ptext30 1CA6  
                           __ptext22 1CE0                             __ptext14 17A2  
                           __ptext31 1CF8                             __ptext23 197C  
                           __ptext15 19B6                             __ptext40 0FD0  
                           __ptext32 1A56                             __ptext24 1C5A  
                           __ptext16 184A                             __ptext41 14F0  
                           __ptext33 1CC6                             __ptext25 1BF6  
                           __ptext17 1B7E                             __ptext42 13A0  
                           __ptext34 1CEA                             __ptext26 16EC  
                           __ptext18 1B22                             __ptext43 17F6  
                           __ptext35 1A8A                             __ptext27 189C  
                           __ptext19 1CD4                             __ptext44 19EC  
                           __ptext36 1C1C                             __ptext28 144E  
                           __ptext45 158E                             __ptext37 1AF2  
                           __ptext29 1C78                             __ptext46 1ABE  
                           __ptext47 0000                             __ptext39 1B50  
                   __size_of_isupper 001E                     __size_of_sprintf 0052  
                   __size_of_strncmp 00CE                     __size_of_toupper 0014  
                         strcpy@from 0028                            wait_1ms@i 002C  
                          wait_1ms@j 006E                        __size_of_main 0408  
                      __size_of_rand 0054                            wait_5ms@i 002B  
                          wait_5ms@j 0026                           strncmp@len 0064  
                           _wait_1ms 1938                             _wait_5ms 1A22  
                           int$flags 003A                           strtol@base 006C  
                         strtol@sign 0072                    ??_TMR2_StartTimer 0026  
 __end_of_INTERRUPT_InterruptManager 0094           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 0FD0                           _INTCONbits 000FF2  
                           isalpha@c 002B                             isdigit@c 0028  
             ??_INTERRUPT_Initialize 0026                          ??_read_line 0026  
                           intlevel2 0000                            sprintf@ap 0083  
                          sprintf@pb 0085                            sprintf@wh 007B  
               ?_EUSART1_Receive_ISR 0001                            strchr@chr 0028  
                   ___lwmod@dividend 0060                            strchr@ptr 0026  
                           isspace@c 0028              ?_PIN_MANAGER_Initialize 0001  
                         _RCSTA1bits 000FAB                             isupper@c 0028  
       __end_of_EUSART1_Transmit_ISR 1B7E                            strncmp@s1 0060  
                          strncmp@s2 0062                             printf@ap 0083  
                           printf@pb 0085                     ?_process_message 0089  
             __size_of_EUSART1_Write 003A                             sprintf@f 007D  
                           strcmp@s1 0001                             strcmp@s2 0003  
                    ___lwmod@divisor 0062                             strcpy@cp 002A  
                           strlen@cp 002A                             strcpy@to 0026  
                    ___lwmod@counter 0064                             toupper@c 0026  
                  __CFG_T3CMX$PORTC0 000000                  _EPWM1_LoadDutyValue 1AF2  
                           strstr@s1 0069                             strstr@s2 006B  
              ??_EUSART1_Receive_ISR 0015       __end_of_PIN_MANAGER_Initialize 1A8A  
                  __CFG_FOSC$INTIO67 000000             __end_of_EPWM1_Initialize 1C3C  
               ?_EPWM1_LoadDutyValue 0026  
