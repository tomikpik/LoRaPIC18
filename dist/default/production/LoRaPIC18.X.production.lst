

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Mar 06 22:54:20 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	mediumconst
    42  00FEDE                     __pmediumconst:
    43                           	opt stack 0
    44  00FEDE  00                 	db	0
    45  00FEDF                     _dpowers:
    46                           	opt stack 0
    47  00FEDF  0001               	dw	1
    48  00FEE1  000A               	dw	10
    49  00FEE3  0064               	dw	100
    50  00FEE5  03E8               	dw	1000
    51  00FEE7  2710               	dw	10000
    52  00FEE9                     __end_of_dpowers:
    53                           	opt stack 0
    54  00FEE9                     _hexpowers:
    55                           	opt stack 0
    56  00FEE9  0001               	dw	1
    57  00FEEB  0010               	dw	16
    58  00FEED  0100               	dw	256
    59  00FEEF  1000               	dw	4096
    60  00FEF1                     __end_of_hexpowers:
    61                           	opt stack 0
    62  00FEF1                     STR_14:
    63  00FEF1  72                 	db	114	;'r'
    64  00FEF2  61                 	db	97	;'a'
    65  00FEF3  64                 	db	100	;'d'
    66  00FEF4  69                 	db	105	;'i'
    67  00FEF5  6F                 	db	111	;'o'
    68  00FEF6  20                 	db	32
    69  00FEF7  74                 	db	116	;'t'
    70  00FEF8  78                 	db	120	;'x'
    71  00FEF9  20                 	db	32
    72  00FEFA  31                 	db	49	;'1'
    73  00FEFB  30                 	db	48	;'0'
    74  00FEFC  30                 	db	48	;'0'
    75  00FEFD  30                 	db	48	;'0'
    76  00FEFE  30                 	db	48	;'0'
    77  00FEFF  30                 	db	48	;'0'
    78  00FF00  30                 	db	48	;'0'
    79  00FF01  30                 	db	48	;'0'
    80  00FF02  30                 	db	48	;'0'
    81  00FF03  30                 	db	48	;'0'
    82  00FF04  30                 	db	48	;'0'
    83  00FF05  30                 	db	48	;'0'
    84  00FF06  30                 	db	48	;'0'
    85  00FF07  30                 	db	48	;'0'
    86  00FF08  30                 	db	48	;'0'
    87  00FF09  30                 	db	48	;'0'
    88  00FF0A  30                 	db	48	;'0'
    89  00FF0B  30                 	db	48	;'0'
    90  00FF0C  30                 	db	48	;'0'
    91  00FF0D  30                 	db	48	;'0'
    92  00FF0E  30                 	db	48	;'0'
    93  00FF0F  30                 	db	48	;'0'
    94  00FF10  25                 	db	37
    95  00FF11  30                 	db	48	;'0'
    96  00FF12  34                 	db	52	;'4'
    97  00FF13  58                 	db	88	;'X'
    98  00FF14  25                 	db	37
    99  00FF15  64                 	db	100	;'d'
   100  00FF16  0D                 	db	13
   101  00FF17  0A                 	db	10
   102  00FF18  00                 	db	0
   103  00FF19                     STR_10:
   104  00FF19  72                 	db	114	;'r'
   105  00FF1A  61                 	db	97	;'a'
   106  00FF1B  64                 	db	100	;'d'
   107  00FF1C  69                 	db	105	;'i'
   108  00FF1D  6F                 	db	111	;'o'
   109  00FF1E  20                 	db	32
   110  00FF1F  73                 	db	115	;'s'
   111  00FF20  65                 	db	101	;'e'
   112  00FF21  74                 	db	116	;'t'
   113  00FF22  20                 	db	32
   114  00FF23  62                 	db	98	;'b'
   115  00FF24  77                 	db	119	;'w'
   116  00FF25  20                 	db	32
   117  00FF26  35                 	db	53	;'5'
   118  00FF27  30                 	db	48	;'0'
   119  00FF28  30                 	db	48	;'0'
   120  00FF29  0D                 	db	13
   121  00FF2A  0A                 	db	10
   122  00FF2B  00                 	db	0
   123  00FF2C                     STR_9:
   124  00FF2C  72                 	db	114	;'r'
   125  00FF2D  61                 	db	97	;'a'
   126  00FF2E  64                 	db	100	;'d'
   127  00FF2F  69                 	db	105	;'i'
   128  00FF30  6F                 	db	111	;'o'
   129  00FF31  20                 	db	32
   130  00FF32  73                 	db	115	;'s'
   131  00FF33  65                 	db	101	;'e'
   132  00FF34  74                 	db	116	;'t'
   133  00FF35  20                 	db	32
   134  00FF36  70                 	db	112	;'p'
   135  00FF37  77                 	db	119	;'w'
   136  00FF38  72                 	db	114	;'r'
   137  00FF39  20                 	db	32
   138  00FF3A  2D                 	db	45
   139  00FF3B  33                 	db	51	;'3'
   140  00FF3C  0D                 	db	13
   141  00FF3D  0A                 	db	10
   142  00FF3E  00                 	db	0
   143  00FF3F                     STR_12:
   144  00FF3F  72                 	db	114	;'r'
   145  00FF40  61                 	db	97	;'a'
   146  00FF41  64                 	db	100	;'d'
   147  00FF42  69                 	db	105	;'i'
   148  00FF43  6F                 	db	111	;'o'
   149  00FF44  20                 	db	32
   150  00FF45  73                 	db	115	;'s'
   151  00FF46  65                 	db	101	;'e'
   152  00FF47  74                 	db	116	;'t'
   153  00FF48  20                 	db	32
   154  00FF49  63                 	db	99	;'c'
   155  00FF4A  72                 	db	114	;'r'
   156  00FF4B  20                 	db	32
   157  00FF4C  34                 	db	52	;'4'
   158  00FF4D  2F                 	db	47
   159  00FF4E  35                 	db	53	;'5'
   160  00FF4F  0D                 	db	13
   161  00FF50  0A                 	db	10
   162  00FF51  00                 	db	0
   163  00FF52                     STR_11:
   164  00FF52  72                 	db	114	;'r'
   165  00FF53  61                 	db	97	;'a'
   166  00FF54  64                 	db	100	;'d'
   167  00FF55  69                 	db	105	;'i'
   168  00FF56  6F                 	db	111	;'o'
   169  00FF57  20                 	db	32
   170  00FF58  73                 	db	115	;'s'
   171  00FF59  65                 	db	101	;'e'
   172  00FF5A  74                 	db	116	;'t'
   173  00FF5B  20                 	db	32
   174  00FF5C  73                 	db	115	;'s'
   175  00FF5D  66                 	db	102	;'f'
   176  00FF5E  20                 	db	32
   177  00FF5F  73                 	db	115	;'s'
   178  00FF60  66                 	db	102	;'f'
   179  00FF61  37                 	db	55	;'7'
   180  00FF62  0D                 	db	13
   181  00FF63  0A                 	db	10
   182  00FF64  00                 	db	0
   183  00FF65                     STR_13:
   184  00FF65  72                 	db	114	;'r'
   185  00FF66  61                 	db	97	;'a'
   186  00FF67  64                 	db	100	;'d'
   187  00FF68  69                 	db	105	;'i'
   188  00FF69  6F                 	db	111	;'o'
   189  00FF6A  20                 	db	32
   190  00FF6B  73                 	db	115	;'s'
   191  00FF6C  65                 	db	101	;'e'
   192  00FF6D  74                 	db	116	;'t'
   193  00FF6E  20                 	db	32
   194  00FF6F  63                 	db	99	;'c'
   195  00FF70  72                 	db	114	;'r'
   196  00FF71  63                 	db	99	;'c'
   197  00FF72  20                 	db	32
   198  00FF73  6F                 	db	111	;'o'
   199  00FF74  6E                 	db	110	;'n'
   200  00FF75  0D                 	db	13
   201  00FF76  0A                 	db	10
   202  00FF77  00                 	db	0
   203  00FF78                     STR_6:
   204  00FF78  72                 	db	114	;'r'
   205  00FF79  61                 	db	97	;'a'
   206  00FF7A  64                 	db	100	;'d'
   207  00FF7B  69                 	db	105	;'i'
   208  00FF7C  6F                 	db	111	;'o'
   209  00FF7D  20                 	db	32
   210  00FF7E  67                 	db	103	;'g'
   211  00FF7F  65                 	db	101	;'e'
   212  00FF80  74                 	db	116	;'t'
   213  00FF81  20                 	db	32
   214  00FF82  70                 	db	112	;'p'
   215  00FF83  72                 	db	114	;'r'
   216  00FF84  6C                 	db	108	;'l'
   217  00FF85  65                 	db	101	;'e'
   218  00FF86  6E                 	db	110	;'n'
   219  00FF87  0D                 	db	13
   220  00FF88  0A                 	db	10
   221  00FF89  00                 	db	0
   222  00FF8A                     STR_15:
   223  00FF8A  30                 	db	48	;'0'
   224  00FF8B  31                 	db	49	;'1'
   225  00FF8C  32                 	db	50	;'2'
   226  00FF8D  33                 	db	51	;'3'
   227  00FF8E  34                 	db	52	;'4'
   228  00FF8F  35                 	db	53	;'5'
   229  00FF90  36                 	db	54	;'6'
   230  00FF91  37                 	db	55	;'7'
   231  00FF92  38                 	db	56	;'8'
   232  00FF93  39                 	db	57	;'9'
   233  00FF94  41                 	db	65	;'A'
   234  00FF95  42                 	db	66	;'B'
   235  00FF96  43                 	db	67	;'C'
   236  00FF97  44                 	db	68	;'D'
   237  00FF98  45                 	db	69	;'E'
   238  00FF99  46                 	db	70	;'F'
   239  00FF9A  00                 	db	0
   240  00FF9B                     STR_7:
   241  00FF9B  72                 	db	114	;'r'
   242  00FF9C  61                 	db	97	;'a'
   243  00FF9D  64                 	db	100	;'d'
   244  00FF9E  69                 	db	105	;'i'
   245  00FF9F  6F                 	db	111	;'o'
   246  00FFA0  20                 	db	32
   247  00FFA1  67                 	db	103	;'g'
   248  00FFA2  65                 	db	101	;'e'
   249  00FFA3  74                 	db	116	;'t'
   250  00FFA4  20                 	db	32
   251  00FFA5  70                 	db	112	;'p'
   252  00FFA6  77                 	db	119	;'w'
   253  00FFA7  72                 	db	114	;'r'
   254  00FFA8  0D                 	db	13
   255  00FFA9  0A                 	db	10
   256  00FFAA  00                 	db	0
   257  00FFAB                     STR_3:
   258  00FFAB  72                 	db	114	;'r'
   259  00FFAC  61                 	db	97	;'a'
   260  00FFAD  64                 	db	100	;'d'
   261  00FFAE  69                 	db	105	;'i'
   262  00FFAF  6F                 	db	111	;'o'
   263  00FFB0  20                 	db	32
   264  00FFB1  67                 	db	103	;'g'
   265  00FFB2  65                 	db	101	;'e'
   266  00FFB3  74                 	db	116	;'t'
   267  00FFB4  20                 	db	32
   268  00FFB5  73                 	db	115	;'s'
   269  00FFB6  66                 	db	102	;'f'
   270  00FFB7  0D                 	db	13
   271  00FFB8  0A                 	db	10
   272  00FFB9  00                 	db	0
   273  00FFBA                     STR_5:
   274  00FFBA  72                 	db	114	;'r'
   275  00FFBB  61                 	db	97	;'a'
   276  00FFBC  64                 	db	100	;'d'
   277  00FFBD  69                 	db	105	;'i'
   278  00FFBE  6F                 	db	111	;'o'
   279  00FFBF  20                 	db	32
   280  00FFC0  67                 	db	103	;'g'
   281  00FFC1  65                 	db	101	;'e'
   282  00FFC2  74                 	db	116	;'t'
   283  00FFC3  20                 	db	32
   284  00FFC4  63                 	db	99	;'c'
   285  00FFC5  72                 	db	114	;'r'
   286  00FFC6  0D                 	db	13
   287  00FFC7  0A                 	db	10
   288  00FFC8  00                 	db	0
   289  00FFC9                     STR_4:
   290  00FFC9  72                 	db	114	;'r'
   291  00FFCA  61                 	db	97	;'a'
   292  00FFCB  64                 	db	100	;'d'
   293  00FFCC  69                 	db	105	;'i'
   294  00FFCD  6F                 	db	111	;'o'
   295  00FFCE  20                 	db	32
   296  00FFCF  67                 	db	103	;'g'
   297  00FFD0  65                 	db	101	;'e'
   298  00FFD1  74                 	db	116	;'t'
   299  00FFD2  20                 	db	32
   300  00FFD3  62                 	db	98	;'b'
   301  00FFD4  77                 	db	119	;'w'
   302  00FFD5  0D                 	db	13
   303  00FFD6  0A                 	db	10
   304  00FFD7  00                 	db	0
   305  00FFD8                     STR_2:
   306  00FFD8  73                 	db	115	;'s'
   307  00FFD9  79                 	db	121	;'y'
   308  00FFDA  73                 	db	115	;'s'
   309  00FFDB  20                 	db	32
   310  00FFDC  67                 	db	103	;'g'
   311  00FFDD  65                 	db	101	;'e'
   312  00FFDE  74                 	db	116	;'t'
   313  00FFDF  20                 	db	32
   314  00FFE0  76                 	db	118	;'v'
   315  00FFE1  65                 	db	101	;'e'
   316  00FFE2  72                 	db	114	;'r'
   317  00FFE3  0D                 	db	13
   318  00FFE4  0A                 	db	10
   319  00FFE5  00                 	db	0
   320  00FFE6                     STR_8:
   321  00FFE6  6D                 	db	109	;'m'
   322  00FFE7  61                 	db	97	;'a'
   323  00FFE8  63                 	db	99	;'c'
   324  00FFE9  20                 	db	32
   325  00FFEA  70                 	db	112	;'p'
   326  00FFEB  61                 	db	97	;'a'
   327  00FFEC  75                 	db	117	;'u'
   328  00FFED  73                 	db	115	;'s'
   329  00FFEE  65                 	db	101	;'e'
   330  00FFEF  0D                 	db	13
   331  00FFF0  0A                 	db	10
   332  00FFF1  00                 	db	0
   333  00FFF2                     STR_1:
   334  00FFF2  73                 	db	115	;'s'
   335  00FFF3  79                 	db	121	;'y'
   336  00FFF4  73                 	db	115	;'s'
   337  00FFF5  20                 	db	32
   338  00FFF6  72                 	db	114	;'r'
   339  00FFF7  65                 	db	101	;'e'
   340  00FFF8  73                 	db	115	;'s'
   341  00FFF9  65                 	db	101	;'e'
   342  00FFFA  74                 	db	116	;'t'
   343  00FFFB  0D                 	db	13
   344  00FFFC  0A                 	db	10
   345  00FFFD  00                 	db	0
   346                           
   347                           ; #config settings
   348  00FFFE  00                 	db	0	; dummy byte at the end
   349  0000                     
   350                           	psect	nvCOMRAM
   351  00003B                     __pnvCOMRAM:
   352                           	opt stack 0
   353  00003B                     _eusart1TxBufferRemaining:
   354                           	opt stack 0
   355  00003B                     	ds	1
   356  00003C                     _timer0ReloadVal8bit:
   357                           	opt stack 0
   358  00003C                     	ds	1
   359  0000                     _ANSELA	set	3896
   360  0000                     _ANSELB	set	3897
   361  0000                     _ANSELC	set	3898
   362  0000                     _CCPTMRS0bits	set	3913
   363  0000                     _BAUDCON1	set	4024
   364  0000                     _CCP1CON	set	4029
   365  0000                     _CCPR1H	set	4031
   366  0000                     _CCPR1L	set	4030
   367  0000                     _ECCP1AS	set	4022
   368  0000                     _INTCON2bits	set	4081
   369  0000                     _INTCONbits	set	4082
   370  0000                     _IPR1bits	set	3999
   371  0000                     _LATA	set	3977
   372  0000                     _LATB	set	3978
   373  0000                     _LATC	set	3979
   374  0000                     _OSCCON	set	4051
   375  0000                     _OSCCON2	set	4050
   376  0000                     _OSCTUNE	set	3995
   377  0000                     _PIE1bits	set	3997
   378  0000                     _PIR1bits	set	3998
   379  0000                     _PR2	set	4027
   380  0000                     _PSTR1CON	set	4025
   381  0000                     _PWM1CON	set	4023
   382  0000                     _RCONbits	set	4048
   383  0000                     _RCREG1	set	4014
   384  0000                     _RCSTA1	set	4011
   385  0000                     _RCSTA1bits	set	4011
   386  0000                     _SPBRG1	set	4015
   387  0000                     _SPBRGH1	set	4016
   388  0000                     _T0CON	set	4053
   389  0000                     _T0CONbits	set	4053
   390  0000                     _T2CON	set	4026
   391  0000                     _T2CONbits	set	4026
   392  0000                     _TMR0H	set	4055
   393  0000                     _TMR0L	set	4054
   394  0000                     _TMR2	set	4028
   395  0000                     _TRISA	set	3986
   396  0000                     _TRISB	set	3987
   397  0000                     _TRISC	set	3988
   398  0000                     _TXREG1	set	4013
   399  0000                     _TXSTA1	set	4012
   400  0000                     _WPUB	set	3937
   401                           
   402                           	psect	cinit
   403  0007F8                     __pcinit:
   404                           	opt stack 0
   405  0007F8                     start_initialization:
   406                           	opt stack 0
   407  0007F8                     __initialization:
   408                           	opt stack 0
   409                           
   410                           ; Clear objects allocated to BANK1 (128 bytes)
   411  0007F8  EE01  F000         	lfsr	0,__pbssBANK1
   412  0007FC  0E80               	movlw	128
   413  0007FE                     clear_0:
   414  0007FE  6AEE               	clrf	postinc0,c
   415  000800  06E8               	decf	wreg,f,c
   416  000802  E1FD               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BANK0 (128 bytes)
   419  000804  EE00  F060         	lfsr	0,__pbssBANK0
   420  000808  0E80               	movlw	128
   421  00080A                     clear_1:
   422  00080A  6AEE               	clrf	postinc0,c
   423  00080C  06E8               	decf	wreg,f,c
   424  00080E  E1FD               	bnz	clear_1
   425                           
   426                           ; Clear objects allocated to COMRAM (7 bytes)
   427  000810  EE00  F034         	lfsr	0,__pbssCOMRAM
   428  000814  0E07               	movlw	7
   429  000816                     clear_2:
   430  000816  6AEE               	clrf	postinc0,c
   431  000818  06E8               	decf	wreg,f,c
   432  00081A  E1FD               	bnz	clear_2
   433  00081C                     end_of_initialization:
   434                           	opt stack 0
   435  00081C                     __end_of__initialization:
   436                           	opt stack 0
   437  00081C  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   438  00081E  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439  000820  0E00               	movlw	low (__Lmediumconst shr (0+16))
   440  000822  6EF8               	movwf	tblptru,c
   441  000824  0100               	movlb	0
   442  000826  EFDB  F001         	goto	_main	;jump to C main() function
   443                           tblptru	equ	0xFF8
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447                           	psect	bssCOMRAM
   448  000034                     __pbssCOMRAM:
   449                           	opt stack 0
   450  000034                     _eusart1RxCount:
   451                           	opt stack 0
   452  000034                     	ds	1
   453  000035                     _eusart1RxHead:
   454                           	opt stack 0
   455  000035                     	ds	1
   456  000036                     _eusart1RxTail:
   457                           	opt stack 0
   458  000036                     	ds	1
   459  000037                     _eusart1TxHead:
   460                           	opt stack 0
   461  000037                     	ds	1
   462  000038                     _eusart1TxTail:
   463                           	opt stack 0
   464  000038                     	ds	1
   465  000039                     _uartState:
   466                           	opt stack 0
   467  000039                     	ds	1
   468  00003A                     _val:
   469                           	opt stack 0
   470  00003A                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           
   475                           	psect	bssBANK0
   476  000060                     __pbssBANK0:
   477                           	opt stack 0
   478  000060                     _eusart1TxBuffer:
   479                           	opt stack 0
   480  000060                     	ds	128
   481                           tblptru	equ	0xFF8
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           	psect	bssBANK1
   486  000100                     __pbssBANK1:
   487                           	opt stack 0
   488  000100                     _eusart1RxBuffer:
   489                           	opt stack 0
   490  000100                     	ds	128
   491                           tblptru	equ	0xFF8
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495                           	psect	cstackBANK0
   496  0000E0                     __pcstackBANK0:
   497                           	opt stack 0
   498  0000E0                     main@sleep:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x0
   502  0000E0                     	ds	2
   503  0000E2                     main@a:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2
   507  0000E2                     	ds	2
   508  0000E4                     main@val:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x4
   512  0000E4                     	ds	2
   513  0000E6                     main@i:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x6
   517  0000E6                     	ds	1
   518  0000E7                     main@i_707:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x7
   522  0000E7                     	ds	1
   523  0000E8                     main@i_709:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x8
   527  0000E8                     	ds	1
   528  0000E9                     main@i_711:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x9
   532  0000E9                     	ds	1
   533  0000EA                     main@i_713:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0xA
   537  0000EA                     	ds	1
   538  0000EB                     main@i_715:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0xB
   542  0000EB                     	ds	1
   543  0000EC                     main@i_717:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0xC
   547  0000EC                     	ds	1
   548  0000ED                     main@i_719:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0xD
   552  0000ED                     	ds	1
   553  0000EE                     main@i_721:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0xE
   557  0000EE                     	ds	1
   558  0000EF                     main@i_723:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0xF
   562  0000EF                     	ds	1
   563  0000F0                     main@i_725:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x10
   567  0000F0                     	ds	1
   568  0000F1                     main@i_727:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x11
   572  0000F1                     	ds	1
   573  0000F2                     main@i_729:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x12
   577  0000F2                     	ds	1
   578                           tblptru	equ	0xFF8
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	opt stack 0
   585  000001                     EPWM1_LoadDutyValue@dutyValue:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x0
   589  000001                     	ds	2
   590  000003                     ??_EPWM1_LoadDutyValue:
   591                           
   592                           ; 1 bytes @ 0x2
   593  000003                     	ds	2
   594  000005                     ??_INTERRUPT_InterruptManager:
   595                           
   596                           ; 1 bytes @ 0x4
   597  000005                     	ds	14
   598  000013                     ??_isdigit:
   599  000013                     ?___wmul:
   600                           	opt stack 0
   601  000013                     ?___lwdiv:
   602                           	opt stack 0
   603  000013                     EUSART1_Write@txData:
   604                           	opt stack 0
   605  000013                     ___wmul@multiplier:
   606                           	opt stack 0
   607  000013                     ___lwdiv@dividend:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x12
   611  000013                     	ds	1
   612  000014                     putch@txData:
   613                           	opt stack 0
   614  000014                     _isdigit$1067:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x13
   618  000014                     	ds	1
   619  000015                     isdigit@c:
   620                           	opt stack 0
   621  000015                     ___wmul@multiplicand:
   622                           	opt stack 0
   623  000015                     ___lwdiv@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x14
   627  000015                     	ds	2
   628  000017                     ___lwdiv@counter:
   629                           	opt stack 0
   630  000017                     ___wmul@product:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x16
   634  000017                     	ds	1
   635  000018                     ___lwdiv@quotient:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x17
   639  000018                     	ds	2
   640  00001A                     ?___lwmod:
   641                           	opt stack 0
   642  00001A                     ___lwmod@dividend:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x19
   646  00001A                     	ds	2
   647  00001C                     ___lwmod@divisor:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x1B
   651  00001C                     	ds	2
   652  00001E                     ___lwmod@counter:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x1D
   656  00001E                     	ds	1
   657  00001F                     ?_printf:
   658                           	opt stack 0
   659  00001F                     printf@f:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x1E
   663  00001F                     	ds	6
   664  000025                     ??_printf:
   665                           
   666                           ; 1 bytes @ 0x24
   667  000025                     	ds	4
   668  000029                     printf@idx:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x28
   672  000029                     	ds	1
   673  00002A                     printf@ap:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x29
   677  00002A                     	ds	2
   678  00002C                     printf@prec:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x2B
   682  00002C                     	ds	1
   683  00002D                     printf@val:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x2C
   687  00002D                     	ds	2
   688  00002F                     printf@flag:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x2E
   692  00002F                     	ds	1
   693  000030                     printf@width:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x2F
   697  000030                     	ds	2
   698  000032                     printf@c:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x31
   702  000032                     	ds	1
   703  000033                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x32
   706  000033                     	ds	1
   707                           tblptru	equ	0xFF8
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 28 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  i               1   18[BANK0 ] unsigned char 
   721 ;;  i               1   17[BANK0 ] unsigned char 
   722 ;;  i               1   16[BANK0 ] unsigned char 
   723 ;;  i               1   15[BANK0 ] unsigned char 
   724 ;;  i               1   14[BANK0 ] unsigned char 
   725 ;;  i               1   13[BANK0 ] unsigned char 
   726 ;;  i               1   12[BANK0 ] unsigned char 
   727 ;;  i               1   11[BANK0 ] unsigned char 
   728 ;;  i               1   10[BANK0 ] unsigned char 
   729 ;;  i               1    9[BANK0 ] unsigned char 
   730 ;;  i               1    8[BANK0 ] unsigned char 
   731 ;;  i               1    7[BANK0 ] unsigned char 
   732 ;;  i               1    6[BANK0 ] unsigned char 
   733 ;;  val             2    4[BANK0 ] unsigned int 
   734 ;;  a               2    2[BANK0 ] int 
   735 ;;  sleep           2    0[BANK0 ] unsigned int 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         1      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:       20 bytes
   750 ;; Hardware stack levels required when called:    7
   751 ;; This function calls:
   752 ;;		_SYSTEM_Initialize
   753 ;;		_printf
   754 ;; This function is called by:
   755 ;;		Startup code after reset
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text0
   760  0003B6                     __ptext0:
   761                           	opt stack 0
   762  0003B6                     _main:
   763                           	opt stack 24
   764                           
   765                           ;main.c: 29: SYSTEM_Initialize();
   766                           
   767                           ;incstack = 0
   768  0003B6  EC8C  F004         	call	_SYSTEM_Initialize	;wreg free
   769                           
   770                           ;main.c: 31: (INTCONbits.GIE = 1);
   771  0003BA  8EF2               	bsf	intcon,7,c	;volatile
   772                           
   773                           ;main.c: 34: (INTCONbits.PEIE = 1);
   774  0003BC  8CF2               	bsf	intcon,6,c	;volatile
   775                           
   776                           ;main.c: 36: _delay((unsigned long)((10)*(64000000/4000.0)));
   777  0003BE  0ED0               	movlw	208
   778  0003C0  6E33               	movwf	??_main& (0+255),c
   779  0003C2  0ECA               	movlw	202
   780  0003C4                     u2017:
   781  0003C4  2EE8               	decfsz	wreg,f,c
   782  0003C6  D7FE               	goto	u2017
   783  0003C8  2E33               	decfsz	??_main& (0+255),f,c
   784  0003CA  D7FC               	goto	u2017
   785                           
   786                           ;main.c: 38: printf("sys reset\r\n");
   787  0003CC  0EF2               	movlw	low STR_1
   788  0003CE  6E1F               	movwf	printf@f,c
   789  0003D0  0EFF               	movlw	high STR_1
   790  0003D2  6E20               	movwf	printf@f+1,c
   791  0003D4  EC52  F000         	call	_printf	;wreg free
   792                           
   793                           ;main.c: 39: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   794  0003D8  0E00               	movlw	0
   795  0003DA  0100               	movlb	0	; () banked
   796  0003DC  6FE6               	movwf	main@i& (0+255),b
   797  0003DE                     l2228:
   798                           
   799                           ; BSR set to: 0
   800  0003DE  0E09               	movlw	9
   801  0003E0  0100               	movlb	0	; () banked
   802  0003E2  65E6               	cpfsgt	main@i& (0+255),b
   803  0003E4  D001               	goto	l2232
   804  0003E6  D00A               	goto	l2236
   805  0003E8                     l2232:
   806                           
   807                           ; BSR set to: 0
   808  0003E8  0ED0               	movlw	208
   809  0003EA  6E33               	movwf	??_main& (0+255),c
   810  0003EC  0ECA               	movlw	202
   811  0003EE                     u2027:
   812  0003EE  2EE8               	decfsz	wreg,f,c
   813  0003F0  D7FE               	goto	u2027
   814  0003F2  2E33               	decfsz	??_main& (0+255),f,c
   815  0003F4  D7FC               	goto	u2027
   816  0003F6  0100               	movlb	0	; () banked
   817  0003F8  2BE6               	incf	main@i& (0+255),f,b
   818  0003FA  D7F1               	goto	l2228
   819  0003FC                     l2236:
   820                           
   821                           ; BSR set to: 0
   822                           ;main.c: 40: printf("sys get ver\r\n");
   823  0003FC  0ED8               	movlw	low STR_2
   824  0003FE  6E1F               	movwf	printf@f,c
   825  000400  0EFF               	movlw	high STR_2
   826  000402  6E20               	movwf	printf@f+1,c
   827  000404  EC52  F000         	call	_printf	;wreg free
   828                           
   829                           ;main.c: 41: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   830  000408  0E00               	movlw	0
   831  00040A  0100               	movlb	0	; () banked
   832  00040C  6FE7               	movwf	main@i_707& (0+255),b
   833  00040E                     l2240:
   834                           
   835                           ; BSR set to: 0
   836  00040E  0E09               	movlw	9
   837  000410  0100               	movlb	0	; () banked
   838  000412  65E7               	cpfsgt	main@i_707& (0+255),b
   839  000414  D001               	goto	l2244
   840  000416  D00A               	goto	l2248
   841  000418                     l2244:
   842                           
   843                           ; BSR set to: 0
   844  000418  0ED0               	movlw	208
   845  00041A  6E33               	movwf	??_main& (0+255),c
   846  00041C  0ECA               	movlw	202
   847  00041E                     u2037:
   848  00041E  2EE8               	decfsz	wreg,f,c
   849  000420  D7FE               	goto	u2037
   850  000422  2E33               	decfsz	??_main& (0+255),f,c
   851  000424  D7FC               	goto	u2037
   852  000426  0100               	movlb	0	; () banked
   853  000428  2BE7               	incf	main@i_707& (0+255),f,b
   854  00042A  D7F1               	goto	l2240
   855  00042C                     l2248:
   856                           
   857                           ; BSR set to: 0
   858                           ;main.c: 42: printf("radio get sf\r\n");
   859  00042C  0EAB               	movlw	low STR_3
   860  00042E  6E1F               	movwf	printf@f,c
   861  000430  0EFF               	movlw	high STR_3
   862  000432  6E20               	movwf	printf@f+1,c
   863  000434  EC52  F000         	call	_printf	;wreg free
   864                           
   865                           ;main.c: 43: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   866  000438  0E00               	movlw	0
   867  00043A  0100               	movlb	0	; () banked
   868  00043C  6FE8               	movwf	main@i_709& (0+255),b
   869  00043E                     l2252:
   870                           
   871                           ; BSR set to: 0
   872  00043E  0E09               	movlw	9
   873  000440  0100               	movlb	0	; () banked
   874  000442  65E8               	cpfsgt	main@i_709& (0+255),b
   875  000444  D001               	goto	l2256
   876  000446  D00A               	goto	l2260
   877  000448                     l2256:
   878                           
   879                           ; BSR set to: 0
   880  000448  0ED0               	movlw	208
   881  00044A  6E33               	movwf	??_main& (0+255),c
   882  00044C  0ECA               	movlw	202
   883  00044E                     u2047:
   884  00044E  2EE8               	decfsz	wreg,f,c
   885  000450  D7FE               	goto	u2047
   886  000452  2E33               	decfsz	??_main& (0+255),f,c
   887  000454  D7FC               	goto	u2047
   888  000456  0100               	movlb	0	; () banked
   889  000458  2BE8               	incf	main@i_709& (0+255),f,b
   890  00045A  D7F1               	goto	l2252
   891  00045C                     l2260:
   892                           
   893                           ; BSR set to: 0
   894                           ;main.c: 44: printf("radio get bw\r\n");
   895  00045C  0EC9               	movlw	low STR_4
   896  00045E  6E1F               	movwf	printf@f,c
   897  000460  0EFF               	movlw	high STR_4
   898  000462  6E20               	movwf	printf@f+1,c
   899  000464  EC52  F000         	call	_printf	;wreg free
   900                           
   901                           ;main.c: 45: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   902  000468  0E00               	movlw	0
   903  00046A  0100               	movlb	0	; () banked
   904  00046C  6FE9               	movwf	main@i_711& (0+255),b
   905  00046E                     l2264:
   906                           
   907                           ; BSR set to: 0
   908  00046E  0E09               	movlw	9
   909  000470  0100               	movlb	0	; () banked
   910  000472  65E9               	cpfsgt	main@i_711& (0+255),b
   911  000474  D001               	goto	l2268
   912  000476  D00A               	goto	l2272
   913  000478                     l2268:
   914                           
   915                           ; BSR set to: 0
   916  000478  0ED0               	movlw	208
   917  00047A  6E33               	movwf	??_main& (0+255),c
   918  00047C  0ECA               	movlw	202
   919  00047E                     u2057:
   920  00047E  2EE8               	decfsz	wreg,f,c
   921  000480  D7FE               	goto	u2057
   922  000482  2E33               	decfsz	??_main& (0+255),f,c
   923  000484  D7FC               	goto	u2057
   924  000486  0100               	movlb	0	; () banked
   925  000488  2BE9               	incf	main@i_711& (0+255),f,b
   926  00048A  D7F1               	goto	l2264
   927  00048C                     l2272:
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 46: printf("radio get cr\r\n");
   931  00048C  0EBA               	movlw	low STR_5
   932  00048E  6E1F               	movwf	printf@f,c
   933  000490  0EFF               	movlw	high STR_5
   934  000492  6E20               	movwf	printf@f+1,c
   935  000494  EC52  F000         	call	_printf	;wreg free
   936                           
   937                           ;main.c: 47: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   938  000498  0E00               	movlw	0
   939  00049A  0100               	movlb	0	; () banked
   940  00049C  6FEA               	movwf	main@i_713& (0+255),b
   941  00049E                     l2276:
   942                           
   943                           ; BSR set to: 0
   944  00049E  0E09               	movlw	9
   945  0004A0  0100               	movlb	0	; () banked
   946  0004A2  65EA               	cpfsgt	main@i_713& (0+255),b
   947  0004A4  D001               	goto	l2280
   948  0004A6  D00A               	goto	l2284
   949  0004A8                     l2280:
   950                           
   951                           ; BSR set to: 0
   952  0004A8  0ED0               	movlw	208
   953  0004AA  6E33               	movwf	??_main& (0+255),c
   954  0004AC  0ECA               	movlw	202
   955  0004AE                     u2067:
   956  0004AE  2EE8               	decfsz	wreg,f,c
   957  0004B0  D7FE               	goto	u2067
   958  0004B2  2E33               	decfsz	??_main& (0+255),f,c
   959  0004B4  D7FC               	goto	u2067
   960  0004B6  0100               	movlb	0	; () banked
   961  0004B8  2BEA               	incf	main@i_713& (0+255),f,b
   962  0004BA  D7F1               	goto	l2276
   963  0004BC                     l2284:
   964                           
   965                           ; BSR set to: 0
   966                           ;main.c: 48: printf("radio get prlen\r\n");
   967  0004BC  0E78               	movlw	low STR_6
   968  0004BE  6E1F               	movwf	printf@f,c
   969  0004C0  0EFF               	movlw	high STR_6
   970  0004C2  6E20               	movwf	printf@f+1,c
   971  0004C4  EC52  F000         	call	_printf	;wreg free
   972                           
   973                           ;main.c: 49: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   974  0004C8  0E00               	movlw	0
   975  0004CA  0100               	movlb	0	; () banked
   976  0004CC  6FEB               	movwf	main@i_715& (0+255),b
   977  0004CE                     l2288:
   978                           
   979                           ; BSR set to: 0
   980  0004CE  0E09               	movlw	9
   981  0004D0  0100               	movlb	0	; () banked
   982  0004D2  65EB               	cpfsgt	main@i_715& (0+255),b
   983  0004D4  D001               	goto	l2292
   984  0004D6  D00A               	goto	l2296
   985  0004D8                     l2292:
   986                           
   987                           ; BSR set to: 0
   988  0004D8  0ED0               	movlw	208
   989  0004DA  6E33               	movwf	??_main& (0+255),c
   990  0004DC  0ECA               	movlw	202
   991  0004DE                     u2077:
   992  0004DE  2EE8               	decfsz	wreg,f,c
   993  0004E0  D7FE               	goto	u2077
   994  0004E2  2E33               	decfsz	??_main& (0+255),f,c
   995  0004E4  D7FC               	goto	u2077
   996  0004E6  0100               	movlb	0	; () banked
   997  0004E8  2BEB               	incf	main@i_715& (0+255),f,b
   998  0004EA  D7F1               	goto	l2288
   999  0004EC                     l2296:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 50: printf("radio get pwr\r\n");
  1003  0004EC  0E9B               	movlw	low STR_7
  1004  0004EE  6E1F               	movwf	printf@f,c
  1005  0004F0  0EFF               	movlw	high STR_7
  1006  0004F2  6E20               	movwf	printf@f+1,c
  1007  0004F4  EC52  F000         	call	_printf	;wreg free
  1008                           
  1009                           ;main.c: 51: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1010  0004F8  0E00               	movlw	0
  1011  0004FA  0100               	movlb	0	; () banked
  1012  0004FC  6FEC               	movwf	main@i_717& (0+255),b
  1013  0004FE                     l2300:
  1014                           
  1015                           ; BSR set to: 0
  1016  0004FE  0E09               	movlw	9
  1017  000500  0100               	movlb	0	; () banked
  1018  000502  65EC               	cpfsgt	main@i_717& (0+255),b
  1019  000504  D001               	goto	l2304
  1020  000506  D00A               	goto	l2308
  1021  000508                     l2304:
  1022                           
  1023                           ; BSR set to: 0
  1024  000508  0ED0               	movlw	208
  1025  00050A  6E33               	movwf	??_main& (0+255),c
  1026  00050C  0ECA               	movlw	202
  1027  00050E                     u2087:
  1028  00050E  2EE8               	decfsz	wreg,f,c
  1029  000510  D7FE               	goto	u2087
  1030  000512  2E33               	decfsz	??_main& (0+255),f,c
  1031  000514  D7FC               	goto	u2087
  1032  000516  0100               	movlb	0	; () banked
  1033  000518  2BEC               	incf	main@i_717& (0+255),f,b
  1034  00051A  D7F1               	goto	l2300
  1035  00051C                     l2308:
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;main.c: 53: printf("mac pause\r\n");
  1039  00051C  0EE6               	movlw	low STR_8
  1040  00051E  6E1F               	movwf	printf@f,c
  1041  000520  0EFF               	movlw	high STR_8
  1042  000522  6E20               	movwf	printf@f+1,c
  1043  000524  EC52  F000         	call	_printf	;wreg free
  1044                           
  1045                           ;main.c: 54: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1046  000528  0E00               	movlw	0
  1047  00052A  0100               	movlb	0	; () banked
  1048  00052C  6FED               	movwf	main@i_719& (0+255),b
  1049  00052E                     l2312:
  1050                           
  1051                           ; BSR set to: 0
  1052  00052E  0E09               	movlw	9
  1053  000530  0100               	movlb	0	; () banked
  1054  000532  65ED               	cpfsgt	main@i_719& (0+255),b
  1055  000534  D001               	goto	l2316
  1056  000536  D00A               	goto	l2320
  1057  000538                     l2316:
  1058                           
  1059                           ; BSR set to: 0
  1060  000538  0ED0               	movlw	208
  1061  00053A  6E33               	movwf	??_main& (0+255),c
  1062  00053C  0ECA               	movlw	202
  1063  00053E                     u2097:
  1064  00053E  2EE8               	decfsz	wreg,f,c
  1065  000540  D7FE               	goto	u2097
  1066  000542  2E33               	decfsz	??_main& (0+255),f,c
  1067  000544  D7FC               	goto	u2097
  1068  000546  0100               	movlb	0	; () banked
  1069  000548  2BED               	incf	main@i_719& (0+255),f,b
  1070  00054A  D7F1               	goto	l2312
  1071  00054C                     l2320:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;main.c: 56: printf("radio set pwr -3\r\n");
  1075  00054C  0E2C               	movlw	low STR_9
  1076  00054E  6E1F               	movwf	printf@f,c
  1077  000550  0EFF               	movlw	high STR_9
  1078  000552  6E20               	movwf	printf@f+1,c
  1079  000554  EC52  F000         	call	_printf	;wreg free
  1080                           
  1081                           ;main.c: 57: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1082  000558  0E00               	movlw	0
  1083  00055A  0100               	movlb	0	; () banked
  1084  00055C  6FEE               	movwf	main@i_721& (0+255),b
  1085  00055E                     l2324:
  1086                           
  1087                           ; BSR set to: 0
  1088  00055E  0E09               	movlw	9
  1089  000560  0100               	movlb	0	; () banked
  1090  000562  65EE               	cpfsgt	main@i_721& (0+255),b
  1091  000564  D001               	goto	l2328
  1092  000566  D00A               	goto	l2332
  1093  000568                     l2328:
  1094                           
  1095                           ; BSR set to: 0
  1096  000568  0ED0               	movlw	208
  1097  00056A  6E33               	movwf	??_main& (0+255),c
  1098  00056C  0ECA               	movlw	202
  1099  00056E                     u2107:
  1100  00056E  2EE8               	decfsz	wreg,f,c
  1101  000570  D7FE               	goto	u2107
  1102  000572  2E33               	decfsz	??_main& (0+255),f,c
  1103  000574  D7FC               	goto	u2107
  1104  000576  0100               	movlb	0	; () banked
  1105  000578  2BEE               	incf	main@i_721& (0+255),f,b
  1106  00057A  D7F1               	goto	l2324
  1107  00057C                     l2332:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;main.c: 58: printf("radio set bw 500\r\n");
  1111  00057C  0E19               	movlw	low STR_10
  1112  00057E  6E1F               	movwf	printf@f,c
  1113  000580  0EFF               	movlw	high STR_10
  1114  000582  6E20               	movwf	printf@f+1,c
  1115  000584  EC52  F000         	call	_printf	;wreg free
  1116                           
  1117                           ;main.c: 59: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1118  000588  0E00               	movlw	0
  1119  00058A  0100               	movlb	0	; () banked
  1120  00058C  6FEF               	movwf	main@i_723& (0+255),b
  1121  00058E                     l2336:
  1122                           
  1123                           ; BSR set to: 0
  1124  00058E  0E09               	movlw	9
  1125  000590  0100               	movlb	0	; () banked
  1126  000592  65EF               	cpfsgt	main@i_723& (0+255),b
  1127  000594  D001               	goto	l2340
  1128  000596  D00A               	goto	l2344
  1129  000598                     l2340:
  1130                           
  1131                           ; BSR set to: 0
  1132  000598  0ED0               	movlw	208
  1133  00059A  6E33               	movwf	??_main& (0+255),c
  1134  00059C  0ECA               	movlw	202
  1135  00059E                     u2117:
  1136  00059E  2EE8               	decfsz	wreg,f,c
  1137  0005A0  D7FE               	goto	u2117
  1138  0005A2  2E33               	decfsz	??_main& (0+255),f,c
  1139  0005A4  D7FC               	goto	u2117
  1140  0005A6  0100               	movlb	0	; () banked
  1141  0005A8  2BEF               	incf	main@i_723& (0+255),f,b
  1142  0005AA  D7F1               	goto	l2336
  1143  0005AC                     l2344:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main.c: 60: printf("radio set sf sf7\r\n");
  1147  0005AC  0E52               	movlw	low STR_11
  1148  0005AE  6E1F               	movwf	printf@f,c
  1149  0005B0  0EFF               	movlw	high STR_11
  1150  0005B2  6E20               	movwf	printf@f+1,c
  1151  0005B4  EC52  F000         	call	_printf	;wreg free
  1152                           
  1153                           ;main.c: 61: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1154  0005B8  0E00               	movlw	0
  1155  0005BA  0100               	movlb	0	; () banked
  1156  0005BC  6FF0               	movwf	main@i_725& (0+255),b
  1157  0005BE                     l2348:
  1158                           
  1159                           ; BSR set to: 0
  1160  0005BE  0E09               	movlw	9
  1161  0005C0  0100               	movlb	0	; () banked
  1162  0005C2  65F0               	cpfsgt	main@i_725& (0+255),b
  1163  0005C4  D001               	goto	l2352
  1164  0005C6  D00A               	goto	l2356
  1165  0005C8                     l2352:
  1166                           
  1167                           ; BSR set to: 0
  1168  0005C8  0ED0               	movlw	208
  1169  0005CA  6E33               	movwf	??_main& (0+255),c
  1170  0005CC  0ECA               	movlw	202
  1171  0005CE                     u2127:
  1172  0005CE  2EE8               	decfsz	wreg,f,c
  1173  0005D0  D7FE               	goto	u2127
  1174  0005D2  2E33               	decfsz	??_main& (0+255),f,c
  1175  0005D4  D7FC               	goto	u2127
  1176  0005D6  0100               	movlb	0	; () banked
  1177  0005D8  2BF0               	incf	main@i_725& (0+255),f,b
  1178  0005DA  D7F1               	goto	l2348
  1179  0005DC                     l2356:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 62: printf("radio set cr 4/5\r\n");
  1183  0005DC  0E3F               	movlw	low STR_12
  1184  0005DE  6E1F               	movwf	printf@f,c
  1185  0005E0  0EFF               	movlw	high STR_12
  1186  0005E2  6E20               	movwf	printf@f+1,c
  1187  0005E4  EC52  F000         	call	_printf	;wreg free
  1188                           
  1189                           ;main.c: 63: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1190  0005E8  0E00               	movlw	0
  1191  0005EA  0100               	movlb	0	; () banked
  1192  0005EC  6FF1               	movwf	main@i_727& (0+255),b
  1193  0005EE                     l2360:
  1194                           
  1195                           ; BSR set to: 0
  1196  0005EE  0E09               	movlw	9
  1197  0005F0  0100               	movlb	0	; () banked
  1198  0005F2  65F1               	cpfsgt	main@i_727& (0+255),b
  1199  0005F4  D001               	goto	l2364
  1200  0005F6  D00A               	goto	l2368
  1201  0005F8                     l2364:
  1202                           
  1203                           ; BSR set to: 0
  1204  0005F8  0ED0               	movlw	208
  1205  0005FA  6E33               	movwf	??_main& (0+255),c
  1206  0005FC  0ECA               	movlw	202
  1207  0005FE                     u2137:
  1208  0005FE  2EE8               	decfsz	wreg,f,c
  1209  000600  D7FE               	goto	u2137
  1210  000602  2E33               	decfsz	??_main& (0+255),f,c
  1211  000604  D7FC               	goto	u2137
  1212  000606  0100               	movlb	0	; () banked
  1213  000608  2BF1               	incf	main@i_727& (0+255),f,b
  1214  00060A  D7F1               	goto	l2360
  1215  00060C                     l2368:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;main.c: 64: printf("radio set crc on\r\n");
  1219  00060C  0E65               	movlw	low STR_13
  1220  00060E  6E1F               	movwf	printf@f,c
  1221  000610  0EFF               	movlw	high STR_13
  1222  000612  6E20               	movwf	printf@f+1,c
  1223  000614  EC52  F000         	call	_printf	;wreg free
  1224                           
  1225                           ;main.c: 65: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1226  000618  0E00               	movlw	0
  1227  00061A  0100               	movlb	0	; () banked
  1228  00061C  6FF2               	movwf	main@i_729& (0+255),b
  1229  00061E                     l2372:
  1230                           
  1231                           ; BSR set to: 0
  1232  00061E  0E09               	movlw	9
  1233  000620  0100               	movlb	0	; () banked
  1234  000622  65F2               	cpfsgt	main@i_729& (0+255),b
  1235  000624  D001               	goto	l2376
  1236  000626  D00A               	goto	l2380
  1237  000628                     l2376:
  1238                           
  1239                           ; BSR set to: 0
  1240  000628  0ED0               	movlw	208
  1241  00062A  6E33               	movwf	??_main& (0+255),c
  1242  00062C  0ECA               	movlw	202
  1243  00062E                     u2147:
  1244  00062E  2EE8               	decfsz	wreg,f,c
  1245  000630  D7FE               	goto	u2147
  1246  000632  2E33               	decfsz	??_main& (0+255),f,c
  1247  000634  D7FC               	goto	u2147
  1248  000636  0100               	movlb	0	; () banked
  1249  000638  2BF2               	incf	main@i_729& (0+255),f,b
  1250  00063A  D7F1               	goto	l2372
  1251  00063C                     l2380:
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;main.c: 78: uint16_t val=0;
  1255  00063C  0E00               	movlw	0
  1256  00063E  0100               	movlb	0	; () banked
  1257  000640  6FE5               	movwf	(main@val+1)& (0+255),b
  1258  000642  0E00               	movlw	0
  1259  000644  6FE4               	movwf	main@val& (0+255),b
  1260                           
  1261                           ;main.c: 79: uint16_t sleep=0;
  1262  000646  0E00               	movlw	0
  1263  000648  0100               	movlb	0	; () banked
  1264  00064A  6FE1               	movwf	(main@sleep+1)& (0+255),b
  1265  00064C  0E00               	movlw	0
  1266  00064E  6FE0               	movwf	main@sleep& (0+255),b
  1267                           
  1268                           ;main.c: 80: int a =0;
  1269  000650  0E00               	movlw	0
  1270  000652  0100               	movlb	0	; () banked
  1271  000654  6FE3               	movwf	(main@a+1)& (0+255),b
  1272  000656  0E00               	movlw	0
  1273  000658  6FE2               	movwf	main@a& (0+255),b
  1274  00065A                     l2382:
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;main.c: 94: _delay((unsigned long)((10)*(64000000/4000.0)));
  1278  00065A  0ED0               	movlw	208
  1279  00065C  6E33               	movwf	??_main& (0+255),c
  1280  00065E  0ECA               	movlw	202
  1281  000660                     u2157:
  1282  000660  2EE8               	decfsz	wreg,f,c
  1283  000662  D7FE               	goto	u2157
  1284  000664  2E33               	decfsz	??_main& (0+255),f,c
  1285  000666  D7FC               	goto	u2157
  1286                           
  1287                           ;main.c: 95: _delay((unsigned long)((10)*(64000000/4000.0)));
  1288  000668  0ED0               	movlw	208
  1289  00066A  6E33               	movwf	??_main& (0+255),c
  1290  00066C  0ECA               	movlw	202
  1291  00066E                     u2167:
  1292  00066E  2EE8               	decfsz	wreg,f,c
  1293  000670  D7FE               	goto	u2167
  1294  000672  2E33               	decfsz	??_main& (0+255),f,c
  1295  000674  D7FC               	goto	u2167
  1296                           
  1297                           ;main.c: 96: _delay((unsigned long)((10)*(64000000/4000.0)));
  1298  000676  0ED0               	movlw	208
  1299  000678  6E33               	movwf	??_main& (0+255),c
  1300  00067A  0ECA               	movlw	202
  1301  00067C                     u2177:
  1302  00067C  2EE8               	decfsz	wreg,f,c
  1303  00067E  D7FE               	goto	u2177
  1304  000680  2E33               	decfsz	??_main& (0+255),f,c
  1305  000682  D7FC               	goto	u2177
  1306                           
  1307                           ;main.c: 97: _delay((unsigned long)((10)*(64000000/4000.0)));
  1308  000684  0ED0               	movlw	208
  1309  000686  6E33               	movwf	??_main& (0+255),c
  1310  000688  0ECA               	movlw	202
  1311  00068A                     u2187:
  1312  00068A  2EE8               	decfsz	wreg,f,c
  1313  00068C  D7FE               	goto	u2187
  1314  00068E  2E33               	decfsz	??_main& (0+255),f,c
  1315  000690  D7FC               	goto	u2187
  1316                           
  1317                           ;main.c: 98: _delay((unsigned long)((10)*(64000000/4000.0)));
  1318  000692  0ED0               	movlw	208
  1319  000694  6E33               	movwf	??_main& (0+255),c
  1320  000696  0ECA               	movlw	202
  1321  000698                     u2197:
  1322  000698  2EE8               	decfsz	wreg,f,c
  1323  00069A  D7FE               	goto	u2197
  1324  00069C  2E33               	decfsz	??_main& (0+255),f,c
  1325  00069E  D7FC               	goto	u2197
  1326                           
  1327                           ;main.c: 99: printf("radio tx 1000000000000000000000%04X%d\r\n",val++,uartState);
  1328  0006A0  0EF1               	movlw	low STR_14
  1329  0006A2  6E1F               	movwf	printf@f,c
  1330  0006A4  0EFE               	movlw	high STR_14
  1331  0006A6  6E20               	movwf	printf@f+1,c
  1332  0006A8  C0E4  F021         	movff	main@val,?_printf+2
  1333  0006AC  C0E5  F022         	movff	main@val+1,?_printf+3
  1334  0006B0  C039  F023         	movff	_uartState,?_printf+4	;volatile
  1335  0006B4  6A24               	clrf	?_printf+5,c
  1336  0006B6  EC52  F000         	call	_printf	;wreg free
  1337  0006BA  0100               	movlb	0	; () banked
  1338  0006BC  4BE4               	infsnz	main@val& (0+255),f,b
  1339  0006BE  2BE5               	incf	(main@val+1)& (0+255),f,b
  1340                           
  1341                           ; BSR set to: 0
  1342  0006C0  D7CC               	goto	l2382
  1343  0006C2                     __end_of_main:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           
  1350 ;; *************** function _printf *****************
  1351 ;; Defined at:
  1352 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  f               2   30[COMRAM] PTR const unsigned char 
  1355 ;;		 -> STR_14(40), STR_13(19), STR_12(19), STR_11(19), 
  1356 ;;		 -> STR_10(19), STR_9(19), STR_8(12), STR_7(16), 
  1357 ;;		 -> STR_6(18), STR_5(15), STR_4(15), STR_3(15), 
  1358 ;;		 -> STR_2(14), STR_1(12), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  idx             1   40[COMRAM] unsigned char 
  1361 ;;  tmpval          4    0        struct .
  1362 ;;  cp              3    0        PTR const unsigned char 
  1363 ;;  width           2   47[COMRAM] int 
  1364 ;;  val             2   44[COMRAM] unsigned int 
  1365 ;;  ap              2   41[COMRAM] PTR void [1]
  1366 ;;		 -> ?_printf(2), 
  1367 ;;  len             2    0        unsigned int 
  1368 ;;  c               1   49[COMRAM] char 
  1369 ;;  flag            1   46[COMRAM] unsigned char 
  1370 ;;  prec            1   43[COMRAM] char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2   30[COMRAM] int 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1380 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;Total ram usage:       20 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    6
  1387 ;; This function calls:
  1388 ;;		___lwdiv
  1389 ;;		___lwmod
  1390 ;;		___wmul
  1391 ;;		_isdigit
  1392 ;;		_putch
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text1
  1399  0000A4                     __ptext1:
  1400                           	opt stack 0
  1401  0000A4                     _printf:
  1402                           	opt stack 24
  1403                           
  1404                           ;doprnt.c: 466: va_list ap;
  1405                           ;doprnt.c: 499: signed char c;
  1406                           ;doprnt.c: 501: int width;
  1407                           ;doprnt.c: 506: signed char prec;
  1408                           ;doprnt.c: 508: unsigned char flag;
  1409                           ;doprnt.c: 523: union {
  1410                           ;doprnt.c: 524: unsigned long vd;
  1411                           ;doprnt.c: 525: double integ;
  1412                           ;doprnt.c: 526: } tmpval;
  1413                           ;doprnt.c: 528: unsigned int val;
  1414                           ;doprnt.c: 529: unsigned len;
  1415                           ;doprnt.c: 530: const char * cp;
  1416                           ;doprnt.c: 533: *ap = __va_start();
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;incstack = 0
  1420  0000A4  0E21               	movlw	low (?_printf+2)
  1421  0000A6  6E2A               	movwf	printf@ap,c
  1422  0000A8  0E00               	movlw	high (?_printf+2)
  1423  0000AA  6E2B               	movwf	printf@ap+1,c
  1424                           
  1425                           ;doprnt.c: 536: while(c = *f++) {
  1426  0000AC  D177               	goto	l2214
  1427  0000AE                     l2088:
  1428                           
  1429                           ;doprnt.c: 538: if(c != '%')
  1430  0000AE  0E25               	movlw	37
  1431  0000B0  1832               	xorwf	printf@c,w,c
  1432  0000B2  B4D8               	btfsc	status,2,c
  1433  0000B4  D004               	goto	l2092
  1434                           
  1435                           ;doprnt.c: 540: {
  1436                           ;doprnt.c: 541: (putch(c) );
  1437  0000B6  5032               	movf	printf@c,w,c
  1438  0000B8  ECC8  F004         	call	_putch
  1439                           
  1440                           ;doprnt.c: 542: continue;
  1441  0000BC  D16F               	goto	l2214
  1442  0000BE                     l2092:
  1443                           
  1444                           ;doprnt.c: 543: }
  1445                           ;doprnt.c: 546: width = 0;
  1446  0000BE  0E00               	movlw	0
  1447  0000C0  6E31               	movwf	printf@width+1,c
  1448  0000C2  0E00               	movlw	0
  1449  0000C4  6E30               	movwf	printf@width,c
  1450                           
  1451                           ;doprnt.c: 548: flag = 0;
  1452  0000C6  0E00               	movlw	0
  1453  0000C8  6E2F               	movwf	printf@flag,c
  1454                           
  1455                           ;doprnt.c: 551: switch(*f) {
  1456                           
  1457                           ;doprnt.c: 550: for(;;) {
  1458  0000CA  D003               	goto	l2098
  1459  0000CC                     l2094:
  1460                           
  1461                           ;doprnt.c: 580: flag |= 0x04;
  1462  0000CC  842F               	bsf	printf@flag,2,c
  1463                           
  1464                           ;doprnt.c: 581: f++;
  1465  0000CE  4A1F               	infsnz	printf@f,f,c
  1466  0000D0  2A20               	incf	printf@f+1,f,c
  1467  0000D2                     l2098:
  1468  0000D2  C01F  FFF6         	movff	printf@f,tblptrl
  1469  0000D6  C020  FFF7         	movff	printf@f+1,tblptrh
  1470  0000DA                     	if	0	;tblptru may be non-zero
  1471  0000DA                     	endif
  1472  0000DA                     	if	0	;tblptru may be non-zero
  1473  0000DA                     	endif
  1474  0000DA  0008               	tblrd		*
  1475  0000DC  50F5               	movf	tablat,w,c
  1476                           
  1477                           ; Switch size 1, requested type "space"
  1478                           ; Number of cases is 1, Range of values is 48 to 48
  1479                           ; switch strategies available:
  1480                           ; Name         Instructions Cycles
  1481                           ; simple_byte            4     3 (average)
  1482                           ;	Chosen strategy is simple_byte
  1483  0000DE  0A30               	xorlw	48	; case 48
  1484  0000E0  B4D8               	btfsc	status,2,c
  1485  0000E2  D7F4               	goto	l2094
  1486                           
  1487                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1488                           
  1489                           ;doprnt.c: 586: }
  1490                           
  1491                           ;doprnt.c: 585: break;
  1492  0000E4  C01F  FFF6         	movff	printf@f,tblptrl
  1493  0000E8  C020  FFF7         	movff	printf@f+1,tblptrh
  1494  0000EC                     	if	0	;tblptru may be non-zero
  1495  0000EC                     	endif
  1496  0000EC                     	if	0	;tblptru may be non-zero
  1497  0000EC                     	endif
  1498  0000EC  0008               	tblrd		*
  1499  0000EE  50F5               	movf	tablat,w,c
  1500  0000F0  EC7D  F004         	call	_isdigit
  1501  0000F4  A0D8               	btfss	status,0,c
  1502  0000F6  D035               	goto	l2116
  1503                           
  1504                           ;doprnt.c: 598: width = 0;
  1505  0000F8  0E00               	movlw	0
  1506  0000FA  6E31               	movwf	printf@width+1,c
  1507  0000FC  0E00               	movlw	0
  1508  0000FE  6E30               	movwf	printf@width,c
  1509  000100                     l2104:
  1510                           
  1511                           ;doprnt.c: 600: width *= 10;
  1512  000100  C030  F013         	movff	printf@width,___wmul@multiplier
  1513  000104  C031  F014         	movff	printf@width+1,___wmul@multiplier+1
  1514  000108  0E00               	movlw	0
  1515  00010A  6E16               	movwf	___wmul@multiplicand+1,c
  1516  00010C  0E0A               	movlw	10
  1517  00010E  6E15               	movwf	___wmul@multiplicand,c
  1518  000110  EC5A  F004         	call	___wmul	;wreg free
  1519  000114  C013  F030         	movff	?___wmul,printf@width
  1520  000118  C014  F031         	movff	?___wmul+1,printf@width+1
  1521                           
  1522                           ;doprnt.c: 601: width += *f++ - '0';
  1523  00011C  0ED0               	movlw	208
  1524  00011E  6E25               	movwf	??_printf& (0+255),c
  1525  000120  0EFF               	movlw	255
  1526  000122  6E26               	movwf	(??_printf+1)& (0+255),c
  1527  000124  C01F  FFF6         	movff	printf@f,tblptrl
  1528  000128  C020  FFF7         	movff	printf@f+1,tblptrh
  1529  00012C                     	if	0	;tblptru may be non-zero
  1530  00012C                     	endif
  1531  00012C                     	if	0	;tblptru may be non-zero
  1532  00012C                     	endif
  1533  00012C  0008               	tblrd		*
  1534  00012E  50F5               	movf	tablat,w,c
  1535  000130  6E27               	movwf	(??_printf+2)& (0+255),c
  1536  000132  6A28               	clrf	(??_printf+3)& (0+255),c
  1537  000134  5025               	movf	??_printf,w,c
  1538  000136  2627               	addwf	??_printf+2,f,c
  1539  000138  5026               	movf	??_printf+1,w,c
  1540  00013A  2228               	addwfc	??_printf+3,f,c
  1541  00013C  5027               	movf	??_printf+2,w,c
  1542  00013E  2630               	addwf	printf@width,f,c
  1543  000140  5028               	movf	??_printf+3,w,c
  1544  000142  2231               	addwfc	printf@width+1,f,c
  1545  000144  4A1F               	infsnz	printf@f,f,c
  1546  000146  2A20               	incf	printf@f+1,f,c
  1547                           
  1548                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1549  000148  C01F  FFF6         	movff	printf@f,tblptrl
  1550  00014C  C020  FFF7         	movff	printf@f+1,tblptrh
  1551  000150                     	if	0	;tblptru may be non-zero
  1552  000150                     	endif
  1553  000150                     	if	0	;tblptru may be non-zero
  1554  000150                     	endif
  1555  000150  0008               	tblrd		*
  1556  000152  50F5               	movf	tablat,w,c
  1557  000154  EC7D  F004         	call	_isdigit
  1558  000158  A0D8               	btfss	status,0,c
  1559  00015A  D003               	goto	l2116
  1560  00015C  D7D1               	goto	l2104
  1561  00015E                     l2112:
  1562                           
  1563                           ;doprnt.c: 718: case 'x':
  1564                           ;doprnt.c: 721: flag |= 0x80;
  1565  00015E  8E2F               	bsf	printf@flag,7,c
  1566                           
  1567                           ;doprnt.c: 723: break;
  1568  000160  D01A               	goto	l335
  1569  000162                     l2116:
  1570  000162  C01F  FFF6         	movff	printf@f,tblptrl
  1571  000166  C020  FFF7         	movff	printf@f+1,tblptrh
  1572  00016A  4A1F               	infsnz	printf@f,f,c
  1573  00016C  2A20               	incf	printf@f+1,f,c
  1574  00016E                     	if	0	;tblptru may be non-zero
  1575  00016E                     	endif
  1576  00016E                     	if	0	;tblptru may be non-zero
  1577  00016E                     	endif
  1578  00016E  0008               	tblrd		*
  1579  000170  CFF5 F032          	movff	tablat,printf@c
  1580  000174  5032               	movf	printf@c,w,c
  1581                           
  1582                           ; Switch size 1, requested type "space"
  1583                           ; Number of cases is 5, Range of values is 0 to 120
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte           16     9 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588  000176  0A00               	xorlw	0	; case 0
  1589  000178  B4D8               	btfsc	status,2,c
  1590  00017A  0012               	return	
  1591  00017C  0A58               	xorlw	88	; case 88
  1592  00017E  B4D8               	btfsc	status,2,c
  1593  000180  D7EE               	goto	l2112
  1594  000182  0A3C               	xorlw	60	; case 100
  1595  000184  B4D8               	btfsc	status,2,c
  1596  000186  D007               	goto	l335
  1597  000188  0A0D               	xorlw	13	; case 105
  1598  00018A  B4D8               	btfsc	status,2,c
  1599  00018C  D004               	goto	l335
  1600  00018E  0A11               	xorlw	17	; case 120
  1601  000190  B4D8               	btfsc	status,2,c
  1602  000192  D7E5               	goto	l2112
  1603  000194  D103               	goto	l2214
  1604  000196                     l335:
  1605                           
  1606                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1607  000196  BE2F               	btfsc	printf@flag,7,c
  1608  000198  D015               	goto	l2128
  1609                           
  1610                           ;doprnt.c: 1253: {
  1611                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1612  00019A  C02A  FFD9         	movff	printf@ap,fsr2l
  1613  00019E  C02B  FFDA         	movff	printf@ap+1,fsr2h
  1614  0001A2  CFDE F02D          	movff	postinc2,printf@val
  1615  0001A6  CFDD F02E          	movff	postdec2,printf@val+1
  1616  0001AA  0E02               	movlw	2
  1617  0001AC  262A               	addwf	printf@ap,f,c
  1618  0001AE  0E00               	movlw	0
  1619  0001B0  222B               	addwfc	printf@ap+1,f,c
  1620                           
  1621                           ;doprnt.c: 1261: if((int)val < 0) {
  1622  0001B2  AE2E               	btfss	printf@val+1,7,c
  1623  0001B4  D044               	goto	l2162
  1624                           
  1625                           ;doprnt.c: 1262: flag |= 0x03;
  1626  0001B6  0E03               	movlw	3
  1627  0001B8  122F               	iorwf	printf@flag,f,c
  1628                           
  1629                           ;doprnt.c: 1263: val = -val;
  1630  0001BA  6C2D               	negf	printf@val,c
  1631  0001BC  1E2E               	comf	printf@val+1,f,c
  1632  0001BE  B0D8               	btfsc	status,0,c
  1633  0001C0  2A2E               	incf	printf@val+1,f,c
  1634                           
  1635                           ;doprnt.c: 1264: }
  1636                           ;doprnt.c: 1266: }
  1637  0001C2  D03D               	goto	l2162
  1638  0001C4                     l2128:
  1639                           
  1640                           ;doprnt.c: 1268: else
  1641                           ;doprnt.c: 1273: {
  1642                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1643  0001C4  C02A  FFD9         	movff	printf@ap,fsr2l
  1644  0001C8  C02B  FFDA         	movff	printf@ap+1,fsr2h
  1645  0001CC  CFDE F02D          	movff	postinc2,printf@val
  1646  0001D0  CFDD F02E          	movff	postdec2,printf@val+1
  1647  0001D4  0E02               	movlw	2
  1648  0001D6  262A               	addwf	printf@ap,f,c
  1649  0001D8  0E00               	movlw	0
  1650  0001DA  222B               	addwfc	printf@ap+1,f,c
  1651                           
  1652                           ;doprnt.c: 1287: }
  1653                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1654  0001DC  D030               	goto	l2162
  1655  0001DE                     l2132:
  1656                           
  1657                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1658  0001DE  0E01               	movlw	1
  1659  0001E0  6E32               	movwf	printf@c,c
  1660  0001E2                     l2134:
  1661  0001E2  0E05               	movlw	5
  1662  0001E4  1832               	xorwf	printf@c,w,c
  1663  0001E6  B4D8               	btfsc	status,2,c
  1664  0001E8  D032               	goto	l2164
  1665                           
  1666                           ;doprnt.c: 1306: if(val < dpowers[c])
  1667  0001EA  5032               	movf	printf@c,w,c
  1668  0001EC  0D02               	mullw	2
  1669  0001EE  0EDF               	movlw	low _dpowers
  1670  0001F0  24F3               	addwf	prodl,w,c
  1671  0001F2  6EF6               	movwf	tblptrl,c
  1672  0001F4  0EFE               	movlw	high _dpowers
  1673  0001F6  20F4               	addwfc	prodh,w,c
  1674  0001F8  6EF7               	movwf	tblptrh,c
  1675  0001FA                     	if	0	;There are less than 3 active tblptr bytes
  1676  0001FA                     	endif
  1677  0001FA  0009               	tblrd		*+
  1678  0001FC  50F5               	movf	tablat,w,c
  1679  0001FE  5C2D               	subwf	printf@val,w,c
  1680  000200  0009               	tblrd		*+
  1681  000202  50F5               	movf	tablat,w,c
  1682  000204  582E               	subwfb	printf@val+1,w,c
  1683  000206  A0D8               	btfss	status,0,c
  1684  000208  D022               	goto	l2164
  1685                           
  1686                           ;doprnt.c: 1307: break;
  1687  00020A  2A32               	incf	printf@c,f,c
  1688  00020C  D7EA               	goto	l2134
  1689  00020E                     l2146:
  1690                           
  1691                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1692  00020E  0E01               	movlw	1
  1693  000210  6E32               	movwf	printf@c,c
  1694  000212                     l2148:
  1695  000212  0E04               	movlw	4
  1696  000214  1832               	xorwf	printf@c,w,c
  1697  000216  B4D8               	btfsc	status,2,c
  1698  000218  D01A               	goto	l2164
  1699                           
  1700                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1701  00021A  5032               	movf	printf@c,w,c
  1702  00021C  0D02               	mullw	2
  1703  00021E  0EE9               	movlw	low _hexpowers
  1704  000220  24F3               	addwf	prodl,w,c
  1705  000222  6EF6               	movwf	tblptrl,c
  1706  000224  0EFE               	movlw	high _hexpowers
  1707  000226  20F4               	addwfc	prodh,w,c
  1708  000228  6EF7               	movwf	tblptrh,c
  1709  00022A                     	if	0	;There are less than 3 active tblptr bytes
  1710  00022A                     	endif
  1711  00022A  0009               	tblrd		*+
  1712  00022C  50F5               	movf	tablat,w,c
  1713  00022E  5C2D               	subwf	printf@val,w,c
  1714  000230  0009               	tblrd		*+
  1715  000232  50F5               	movf	tablat,w,c
  1716  000234  582E               	subwfb	printf@val+1,w,c
  1717  000236  A0D8               	btfss	status,0,c
  1718  000238  D00A               	goto	l2164
  1719                           
  1720                           ;doprnt.c: 1318: break;
  1721  00023A  2A32               	incf	printf@c,f,c
  1722  00023C  D7EA               	goto	l2148
  1723  00023E                     l2162:
  1724  00023E  502F               	movf	printf@flag,w,c
  1725  000240  0B80               	andlw	128
  1726                           
  1727                           ; Switch size 1, requested type "space"
  1728                           ; Number of cases is 2, Range of values is 0 to 128
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte            7     4 (average)
  1732                           ;	Chosen strategy is simple_byte
  1733  000242  0A00               	xorlw	0	; case 0
  1734  000244  B4D8               	btfsc	status,2,c
  1735  000246  D7CB               	goto	l2132
  1736  000248  0A80               	xorlw	128	; case 128
  1737  00024A  B4D8               	btfsc	status,2,c
  1738  00024C  D7E0               	goto	l2146
  1739  00024E                     l2164:
  1740                           
  1741                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1742  00024E  5030               	movf	printf@width,w,c
  1743  000250  1031               	iorwf	printf@width+1,w,c
  1744  000252  B4D8               	btfsc	status,2,c
  1745  000254  D009               	goto	l2170
  1746  000256  C02F  F025         	movff	printf@flag,??_printf
  1747  00025A  0E03               	movlw	3
  1748  00025C  1625               	andwf	??_printf,f,c
  1749  00025E  B4D8               	btfsc	status,2,c
  1750  000260  D003               	goto	l2170
  1751                           
  1752                           ;doprnt.c: 1346: width--;
  1753  000262  0630               	decf	printf@width,f,c
  1754  000264  A0D8               	btfss	status,0,c
  1755  000266  0631               	decf	printf@width+1,f,c
  1756  000268                     l2170:
  1757                           
  1758                           ;doprnt.c: 1381: if(width > c)
  1759  000268  0E80               	movlw	128
  1760  00026A  BE32               	btfsc	printf@c,7,c
  1761  00026C  0E7F               	movlw	127
  1762  00026E  6E25               	movwf	??_printf& (0+255),c
  1763  000270  5030               	movf	printf@width,w,c
  1764  000272  5C32               	subwf	printf@c,w,c
  1765  000274  5031               	movf	printf@width+1,w,c
  1766  000276  0A80               	xorlw	128
  1767  000278  5825               	subwfb	??_printf& (0+255),w,c
  1768  00027A  B0D8               	btfsc	status,0,c
  1769  00027C  D007               	goto	l2174
  1770                           
  1771                           ;doprnt.c: 1382: width -= c;
  1772  00027E  5032               	movf	printf@c,w,c
  1773  000280  5E30               	subwf	printf@width,f,c
  1774  000282  0E00               	movlw	0
  1775  000284  BE32               	btfsc	printf@c,7,c
  1776  000286  0EFF               	movlw	255
  1777  000288  5A31               	subwfb	printf@width+1,f,c
  1778  00028A  D004               	goto	l2176
  1779  00028C                     l2174:
  1780                           
  1781                           ;doprnt.c: 1383: else
  1782                           ;doprnt.c: 1384: width = 0;
  1783  00028C  0E00               	movlw	0
  1784  00028E  6E31               	movwf	printf@width+1,c
  1785  000290  0E00               	movlw	0
  1786  000292  6E30               	movwf	printf@width,c
  1787  000294                     l2176:
  1788                           
  1789                           ;doprnt.c: 1387: if(flag & 0x04) {
  1790  000294  A42F               	btfss	printf@flag,2,c
  1791  000296  D014               	goto	l2188
  1792                           
  1793                           ;doprnt.c: 1392: if(flag & 0x03)
  1794  000298  C02F  F025         	movff	printf@flag,??_printf
  1795  00029C  0E03               	movlw	3
  1796  00029E  1625               	andwf	??_printf,f,c
  1797  0002A0  B4D8               	btfsc	status,2,c
  1798  0002A2  D003               	goto	l2182
  1799                           
  1800                           ;doprnt.c: 1393: (putch('-') );
  1801  0002A4  0E2D               	movlw	45
  1802  0002A6  ECC8  F004         	call	_putch
  1803  0002AA                     l2182:
  1804                           
  1805                           ;doprnt.c: 1415: if(width)
  1806  0002AA  5030               	movf	printf@width,w,c
  1807  0002AC  1031               	iorwf	printf@width+1,w,c
  1808  0002AE  B4D8               	btfsc	status,2,c
  1809  0002B0  D01E               	goto	l2198
  1810                           
  1811                           ;doprnt.c: 1417: (putch('0') );
  1812                           
  1813                           ;doprnt.c: 1416: do
  1814  0002B2  0E30               	movlw	48
  1815  0002B4  ECC8  F004         	call	_putch
  1816                           
  1817                           ;doprnt.c: 1418: while(--width);
  1818  0002B8  0630               	decf	printf@width,f,c
  1819  0002BA  A0D8               	btfss	status,0,c
  1820  0002BC  0631               	decf	printf@width+1,f,c
  1821  0002BE  D7F5               	goto	l2182
  1822  0002C0                     l2188:
  1823                           
  1824                           ;doprnt.c: 1422: {
  1825                           ;doprnt.c: 1424: if(width
  1826                           ;doprnt.c: 1428: )
  1827  0002C0  5030               	movf	printf@width,w,c
  1828  0002C2  1031               	iorwf	printf@width+1,w,c
  1829  0002C4  B4D8               	btfsc	status,2,c
  1830  0002C6  D00A               	goto	l2194
  1831  0002C8                     l2190:
  1832                           
  1833                           ;doprnt.c: 1430: (putch(' ') );
  1834  0002C8  0E20               	movlw	32
  1835  0002CA  ECC8  F004         	call	_putch
  1836                           
  1837                           ;doprnt.c: 1431: while(--width);
  1838  0002CE  0630               	decf	printf@width,f,c
  1839  0002D0  A0D8               	btfss	status,0,c
  1840  0002D2  0631               	decf	printf@width+1,f,c
  1841  0002D4  5030               	movf	printf@width,w,c
  1842  0002D6  1031               	iorwf	printf@width+1,w,c
  1843  0002D8  A4D8               	btfss	status,2,c
  1844  0002DA  D7F6               	goto	l2190
  1845  0002DC                     l2194:
  1846                           
  1847                           ;doprnt.c: 1438: if(flag & 0x03)
  1848  0002DC  C02F  F025         	movff	printf@flag,??_printf
  1849  0002E0  0E03               	movlw	3
  1850  0002E2  1625               	andwf	??_printf,f,c
  1851  0002E4  B4D8               	btfsc	status,2,c
  1852  0002E6  D003               	goto	l2198
  1853                           
  1854                           ;doprnt.c: 1439: (putch('-') );
  1855  0002E8  0E2D               	movlw	45
  1856  0002EA  ECC8  F004         	call	_putch
  1857  0002EE                     l2198:
  1858                           
  1859                           ;doprnt.c: 1469: }
  1860                           ;doprnt.c: 1472: prec = c;
  1861  0002EE  C032  F02C         	movff	printf@c,printf@prec
  1862                           
  1863                           ;doprnt.c: 1474: while(prec--) {
  1864  0002F2  D050               	goto	l2212
  1865  0002F4                     l2200:
  1866                           
  1867                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1868  0002F4  502C               	movf	printf@prec,w,c
  1869  0002F6  0D02               	mullw	2
  1870  0002F8  0EDF               	movlw	low _dpowers
  1871  0002FA  24F3               	addwf	prodl,w,c
  1872  0002FC  6EF6               	movwf	tblptrl,c
  1873  0002FE  0EFE               	movlw	high _dpowers
  1874  000300  20F4               	addwfc	prodh,w,c
  1875  000302  6EF7               	movwf	tblptrh,c
  1876  000304                     	if	0	;There are less than 3 active tblptr bytes
  1877  000304                     	endif
  1878  000304  0009               	tblrd		*+
  1879  000306  CFF5 F015          	movff	tablat,___lwdiv@divisor
  1880  00030A  000A               	tblrd		*-
  1881  00030C  CFF5 F016          	movff	tablat,___lwdiv@divisor+1
  1882  000310  C02D  F013         	movff	printf@val,___lwdiv@dividend
  1883  000314  C02E  F014         	movff	printf@val+1,___lwdiv@dividend+1
  1884  000318  EC61  F003         	call	___lwdiv	;wreg free
  1885  00031C  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
  1886  000320  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
  1887  000324  0E00               	movlw	0
  1888  000326  6E1D               	movwf	___lwmod@divisor+1,c
  1889  000328  0E0A               	movlw	10
  1890  00032A  6E1C               	movwf	___lwmod@divisor,c
  1891  00032C  EC8A  F003         	call	___lwmod	;wreg free
  1892  000330  501A               	movf	?___lwmod,w,c
  1893  000332  0F30               	addlw	48
  1894  000334  6E32               	movwf	printf@c,c
  1895                           
  1896                           ;doprnt.c: 1491: break;
  1897  000336  D02B               	goto	l2210
  1898  000338                     l2202:
  1899                           
  1900                           ;doprnt.c: 1499: {
  1901                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1902  000338  C02D  F013         	movff	printf@val,___lwdiv@dividend
  1903  00033C  C02E  F014         	movff	printf@val+1,___lwdiv@dividend+1
  1904  000340  502C               	movf	printf@prec,w,c
  1905  000342  0D02               	mullw	2
  1906  000344  0EE9               	movlw	low _hexpowers
  1907  000346  24F3               	addwf	prodl,w,c
  1908  000348  6EF6               	movwf	tblptrl,c
  1909  00034A  0EFE               	movlw	high _hexpowers
  1910  00034C  20F4               	addwfc	prodh,w,c
  1911  00034E  6EF7               	movwf	tblptrh,c
  1912  000350                     	if	0	;There are less than 3 active tblptr bytes
  1913  000350                     	endif
  1914  000350  0009               	tblrd		*+
  1915  000352  CFF5 F015          	movff	tablat,___lwdiv@divisor
  1916  000356  000A               	tblrd		*-
  1917  000358  CFF5 F016          	movff	tablat,___lwdiv@divisor+1
  1918  00035C  EC61  F003         	call	___lwdiv	;wreg free
  1919  000360  5013               	movf	?___lwdiv,w,c
  1920  000362  0B0F               	andlw	15
  1921  000364  6E29               	movwf	printf@idx,c
  1922                           
  1923                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  1924  000366  5029               	movf	printf@idx,w,c
  1925  000368  0D01               	mullw	1
  1926  00036A  0E8A               	movlw	low STR_15
  1927  00036C  24F3               	addwf	prodl,w,c
  1928  00036E  6EF6               	movwf	tblptrl,c
  1929  000370  0EFF               	movlw	high STR_15
  1930  000372  20F4               	addwfc	prodh,w,c
  1931  000374  6EF7               	movwf	tblptrh,c
  1932  000376                     	if	0	;There are less than 3 active tblptr bytes
  1933  000376                     	endif
  1934  000376  0008               	tblrd		*
  1935  000378  CFF5 F032          	movff	tablat,printf@c
  1936                           
  1937                           ;doprnt.c: 1523: }
  1938                           
  1939                           ;doprnt.c: 1508: }
  1940                           ;doprnt.c: 1510: break;
  1941  00037C  D008               	goto	l2210
  1942  00037E                     l2208:
  1943  00037E  502F               	movf	printf@flag,w,c
  1944  000380  0B80               	andlw	128
  1945                           
  1946                           ; Switch size 1, requested type "space"
  1947                           ; Number of cases is 2, Range of values is 0 to 128
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            7     4 (average)
  1951                           ;	Chosen strategy is simple_byte
  1952  000382  0A00               	xorlw	0	; case 0
  1953  000384  B4D8               	btfsc	status,2,c
  1954  000386  D7B6               	goto	l2200
  1955  000388  0A80               	xorlw	128	; case 128
  1956  00038A  B4D8               	btfsc	status,2,c
  1957  00038C  D7D5               	goto	l2202
  1958  00038E                     l2210:
  1959                           
  1960                           ;doprnt.c: 1524: (putch(c) );
  1961  00038E  5032               	movf	printf@c,w,c
  1962  000390  ECC8  F004         	call	_putch
  1963  000394                     l2212:
  1964  000394  062C               	decf	printf@prec,f,c
  1965  000396  282C               	incf	printf@prec,w,c
  1966  000398  A4D8               	btfss	status,2,c
  1967  00039A  D7F1               	goto	l2208
  1968  00039C                     l2214:
  1969  00039C  C01F  FFF6         	movff	printf@f,tblptrl
  1970  0003A0  C020  FFF7         	movff	printf@f+1,tblptrh
  1971  0003A4  4A1F               	infsnz	printf@f,f,c
  1972  0003A6  2A20               	incf	printf@f+1,f,c
  1973  0003A8                     	if	0	;tblptru may be non-zero
  1974  0003A8                     	endif
  1975  0003A8                     	if	0	;tblptru may be non-zero
  1976  0003A8                     	endif
  1977  0003A8  0008               	tblrd		*
  1978  0003AA  CFF5 F032          	movff	tablat,printf@c
  1979  0003AE  5032               	movf	printf@c,w,c
  1980  0003B0  B4D8               	btfsc	status,2,c
  1981  0003B2  0012               	return	
  1982  0003B4  D67C               	goto	l2088
  1983  0003B6                     __end_of_printf:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodh	equ	0xFF4
  1990                           prodl	equ	0xFF3
  1991                           intcon	equ	0xFF2
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           postinc2	equ	0xFDE
  1995                           postdec2	equ	0xFDD
  1996                           fsr2h	equ	0xFDA
  1997                           fsr2l	equ	0xFD9
  1998                           status	equ	0xFD8
  1999                           
  2000 ;; *************** function _putch *****************
  2001 ;; Defined at:
  2002 ;;		line 164 in file "mcc_generated_files/eusart1.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  txData          1    wreg     unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  txData          1   19[COMRAM] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    5
  2023 ;; This function calls:
  2024 ;;		_EUSART1_Write
  2025 ;; This function is called by:
  2026 ;;		_printf
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text2
  2031  000990                     __ptext2:
  2032                           	opt stack 0
  2033  000990                     _putch:
  2034                           	opt stack 24
  2035                           
  2036                           ;incstack = 0
  2037                           ;putch@txData stored from wreg
  2038  000990  6E14               	movwf	putch@txData,c
  2039                           
  2040                           ;eusart1.c: 166: EUSART1_Write(txData);
  2041  000992  5014               	movf	putch@txData,w,c
  2042  000994  ECAB  F003         	call	_EUSART1_Write
  2043  000998  0012               	return		;funcret
  2044  00099A                     __end_of_putch:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           intcon	equ	0xFF2
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postinc2	equ	0xFDE
  2056                           postdec2	equ	0xFDD
  2057                           fsr2h	equ	0xFDA
  2058                           fsr2l	equ	0xFD9
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _EUSART1_Write *****************
  2062 ;; Defined at:
  2063 ;;		line 136 in file "mcc_generated_files/eusart1.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  txData          1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  txData          1   18[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    4
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_putch
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text3
  2092  000756                     __ptext3:
  2093                           	opt stack 0
  2094  000756                     _EUSART1_Write:
  2095                           	opt stack 24
  2096                           
  2097                           ;incstack = 0
  2098                           ;EUSART1_Write@txData stored from wreg
  2099  000756  6E13               	movwf	EUSART1_Write@txData,c
  2100  000758                     l1960:
  2101  000758  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  2102  00075A  B4D8               	btfsc	status,2,c
  2103  00075C  D7FD               	goto	l1960
  2104                           
  2105                           ;eusart1.c: 140: }
  2106                           ;eusart1.c: 142: if(0 == PIE1bits.TX1IE)
  2107  00075E  B89D               	btfsc	3997,4,c	;volatile
  2108  000760  D003               	goto	l112
  2109                           
  2110                           ;eusart1.c: 143: {
  2111                           ;eusart1.c: 144: TXREG1 = txData;
  2112  000762  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2113                           
  2114                           ;eusart1.c: 145: }
  2115  000766  D012               	goto	l1974
  2116  000768                     l112:
  2117                           
  2118                           ;eusart1.c: 146: else
  2119                           ;eusart1.c: 147: {
  2120                           ;eusart1.c: 148: PIE1bits.TX1IE = 0;
  2121  000768  989D               	bcf	3997,4,c	;volatile
  2122                           
  2123                           ;eusart1.c: 149: eusart1TxBuffer[eusart1TxHead++] = txData;
  2124  00076A  5037               	movf	_eusart1TxHead,w,c
  2125  00076C  0D01               	mullw	1
  2126  00076E  0E60               	movlw	low _eusart1TxBuffer
  2127  000770  24F3               	addwf	prodl,w,c
  2128  000772  6ED9               	movwf	fsr2l,c
  2129  000774  0E00               	movlw	high _eusart1TxBuffer
  2130  000776  20F4               	addwfc	prodh,w,c
  2131  000778  6EDA               	movwf	fsr2h,c
  2132  00077A  C013  FFDF         	movff	EUSART1_Write@txData,indf2
  2133  00077E  2A37               	incf	_eusart1TxHead,f,c
  2134                           
  2135                           ;eusart1.c: 150: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  2136  000780  0E7F               	movlw	127
  2137  000782  6437               	cpfsgt	_eusart1TxHead,c
  2138  000784  D002               	goto	l1972
  2139                           
  2140                           ;eusart1.c: 151: {
  2141                           ;eusart1.c: 152: eusart1TxHead = 0;
  2142  000786  0E00               	movlw	0
  2143  000788  6E37               	movwf	_eusart1TxHead,c
  2144  00078A                     l1972:
  2145                           
  2146                           ;eusart1.c: 153: }
  2147                           ;eusart1.c: 154: eusart1TxBufferRemaining--;
  2148  00078A  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  2149  00078C                     l1974:
  2150                           
  2151                           ;eusart1.c: 155: }
  2152                           ;eusart1.c: 156: PIE1bits.TX1IE = 1;
  2153  00078C  889D               	bsf	3997,4,c	;volatile
  2154  00078E  0012               	return		;funcret
  2155  000790                     __end_of_EUSART1_Write:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           indf2	equ	0xFDF
  2167                           postinc2	equ	0xFDE
  2168                           postdec2	equ	0xFDD
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _isdigit *****************
  2174 ;; Defined at:
  2175 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  c               1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  c               1   20[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;Total ram usage:        3 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    4
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_printf
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text4
  2204  0008FA                     __ptext4:
  2205                           	opt stack 0
  2206  0008FA                     _isdigit:
  2207                           	opt stack 25
  2208                           
  2209                           ;incstack = 0
  2210                           ;isdigit@c stored from wreg
  2211  0008FA  6E15               	movwf	isdigit@c,c
  2212  0008FC  0E00               	movlw	0
  2213  0008FE  6E14               	movwf	_isdigit$1067,c
  2214  000900  0E3A               	movlw	58
  2215  000902  6015               	cpfslt	isdigit@c,c
  2216  000904  D005               	goto	l2024
  2217  000906  0E2F               	movlw	47
  2218  000908  6415               	cpfsgt	isdigit@c,c
  2219  00090A  D002               	goto	l2024
  2220  00090C  0E01               	movlw	1
  2221  00090E  6E14               	movwf	_isdigit$1067,c
  2222  000910                     l2024:
  2223  000910  C014  F013         	movff	_isdigit$1067,??_isdigit
  2224  000914  3013               	rrcf	??_isdigit,w,c
  2225  000916  0012               	return	
  2226  000918                     __end_of_isdigit:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           prodh	equ	0xFF4
  2233                           prodl	equ	0xFF3
  2234                           intcon	equ	0xFF2
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           indf2	equ	0xFDF
  2238                           postinc2	equ	0xFDE
  2239                           postdec2	equ	0xFDD
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function ___wmul *****************
  2245 ;; Defined at:
  2246 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  multiplier      2   18[COMRAM] unsigned int 
  2249 ;;  multiplicand    2   20[COMRAM] unsigned int 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  product         2   22[COMRAM] unsigned int 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2   18[COMRAM] unsigned int 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, prodl, prodh
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:        6 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    4
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_printf
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text5
  2276  0008B4                     __ptext5:
  2277                           	opt stack 0
  2278  0008B4                     ___wmul:
  2279                           	opt stack 25
  2280                           
  2281                           ;incstack = 0
  2282  0008B4  5013               	movf	___wmul@multiplier,w,c
  2283  0008B6  0215               	mulwf	___wmul@multiplicand,c
  2284  0008B8  CFF3 F017          	movff	prodl,___wmul@product
  2285  0008BC  CFF4 F018          	movff	prodh,___wmul@product+1
  2286  0008C0  5013               	movf	___wmul@multiplier,w,c
  2287  0008C2  0216               	mulwf	___wmul@multiplicand+1,c
  2288  0008C4  50F3               	movf	prodl,w,c
  2289  0008C6  2618               	addwf	___wmul@product+1,f,c
  2290  0008C8  5014               	movf	___wmul@multiplier+1,w,c
  2291  0008CA  0215               	mulwf	___wmul@multiplicand,c
  2292  0008CC  50F3               	movf	prodl,w,c
  2293  0008CE  2618               	addwf	___wmul@product+1,f,c
  2294  0008D0  C017  F013         	movff	___wmul@product,?___wmul
  2295  0008D4  C018  F014         	movff	___wmul@product+1,?___wmul+1
  2296  0008D8  0012               	return	
  2297  0008DA                     __end_of___wmul:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           prodh	equ	0xFF4
  2304                           prodl	equ	0xFF3
  2305                           intcon	equ	0xFF2
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           indf2	equ	0xFDF
  2309                           postinc2	equ	0xFDE
  2310                           postdec2	equ	0xFDD
  2311                           fsr2h	equ	0xFDA
  2312                           fsr2l	equ	0xFD9
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function ___lwmod *****************
  2316 ;; Defined at:
  2317 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  dividend        2   25[COMRAM] unsigned int 
  2320 ;;  divisor         2   27[COMRAM] unsigned int 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  counter         1   29[COMRAM] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   25[COMRAM] unsigned int 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:        5 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    4
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_printf
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text6
  2347  000714                     __ptext6:
  2348                           	opt stack 0
  2349  000714                     ___lwmod:
  2350                           	opt stack 25
  2351                           
  2352                           ;incstack = 0
  2353  000714  501C               	movf	___lwmod@divisor,w,c
  2354  000716  101D               	iorwf	___lwmod@divisor+1,w,c
  2355  000718  B4D8               	btfsc	status,2,c
  2356  00071A  D018               	goto	l791
  2357  00071C  0E01               	movlw	1
  2358  00071E  6E1E               	movwf	___lwmod@counter,c
  2359  000720  D004               	goto	l2062
  2360  000722                     l2060:
  2361  000722  90D8               	bcf	status,0,c
  2362  000724  361C               	rlcf	___lwmod@divisor,f,c
  2363  000726  361D               	rlcf	___lwmod@divisor+1,f,c
  2364  000728  2A1E               	incf	___lwmod@counter,f,c
  2365  00072A                     l2062:
  2366  00072A  AE1D               	btfss	___lwmod@divisor+1,7,c
  2367  00072C  D7FA               	goto	l2060
  2368  00072E                     l2064:
  2369  00072E  501C               	movf	___lwmod@divisor,w,c
  2370  000730  5C1A               	subwf	___lwmod@dividend,w,c
  2371  000732  501D               	movf	___lwmod@divisor+1,w,c
  2372  000734  581B               	subwfb	___lwmod@dividend+1,w,c
  2373  000736  A0D8               	btfss	status,0,c
  2374  000738  D004               	goto	l2068
  2375  00073A  501C               	movf	___lwmod@divisor,w,c
  2376  00073C  5E1A               	subwf	___lwmod@dividend,f,c
  2377  00073E  501D               	movf	___lwmod@divisor+1,w,c
  2378  000740  5A1B               	subwfb	___lwmod@dividend+1,f,c
  2379  000742                     l2068:
  2380  000742  90D8               	bcf	status,0,c
  2381  000744  321D               	rrcf	___lwmod@divisor+1,f,c
  2382  000746  321C               	rrcf	___lwmod@divisor,f,c
  2383  000748  2E1E               	decfsz	___lwmod@counter,f,c
  2384  00074A  D7F1               	goto	l2064
  2385  00074C                     l791:
  2386  00074C  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  2387  000750  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  2388  000754  0012               	return		;funcret
  2389  000756                     __end_of___lwmod:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function ___lwdiv *****************
  2408 ;; Defined at:
  2409 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  dividend        2   18[COMRAM] unsigned int 
  2412 ;;  divisor         2   20[COMRAM] unsigned int 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  quotient        2   23[COMRAM] unsigned int 
  2415 ;;  counter         1   22[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2   18[COMRAM] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        7 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    4
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_printf
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text7
  2440  0006C2                     __ptext7:
  2441                           	opt stack 0
  2442  0006C2                     ___lwdiv:
  2443                           	opt stack 25
  2444                           
  2445                           ;incstack = 0
  2446  0006C2  0E00               	movlw	0
  2447  0006C4  6E19               	movwf	___lwdiv@quotient+1,c
  2448  0006C6  0E00               	movlw	0
  2449  0006C8  6E18               	movwf	___lwdiv@quotient,c
  2450  0006CA  5015               	movf	___lwdiv@divisor,w,c
  2451  0006CC  1016               	iorwf	___lwdiv@divisor+1,w,c
  2452  0006CE  B4D8               	btfsc	status,2,c
  2453  0006D0  D01C               	goto	l781
  2454  0006D2  0E01               	movlw	1
  2455  0006D4  6E17               	movwf	___lwdiv@counter,c
  2456  0006D6  D004               	goto	l2042
  2457  0006D8                     l2040:
  2458  0006D8  90D8               	bcf	status,0,c
  2459  0006DA  3615               	rlcf	___lwdiv@divisor,f,c
  2460  0006DC  3616               	rlcf	___lwdiv@divisor+1,f,c
  2461  0006DE  2A17               	incf	___lwdiv@counter,f,c
  2462  0006E0                     l2042:
  2463  0006E0  AE16               	btfss	___lwdiv@divisor+1,7,c
  2464  0006E2  D7FA               	goto	l2040
  2465  0006E4                     l2044:
  2466  0006E4  90D8               	bcf	status,0,c
  2467  0006E6  3618               	rlcf	___lwdiv@quotient,f,c
  2468  0006E8  3619               	rlcf	___lwdiv@quotient+1,f,c
  2469  0006EA  5015               	movf	___lwdiv@divisor,w,c
  2470  0006EC  5C13               	subwf	___lwdiv@dividend,w,c
  2471  0006EE  5016               	movf	___lwdiv@divisor+1,w,c
  2472  0006F0  5814               	subwfb	___lwdiv@dividend+1,w,c
  2473  0006F2  A0D8               	btfss	status,0,c
  2474  0006F4  D005               	goto	l2052
  2475  0006F6  5015               	movf	___lwdiv@divisor,w,c
  2476  0006F8  5E13               	subwf	___lwdiv@dividend,f,c
  2477  0006FA  5016               	movf	___lwdiv@divisor+1,w,c
  2478  0006FC  5A14               	subwfb	___lwdiv@dividend+1,f,c
  2479  0006FE  8018               	bsf	___lwdiv@quotient,0,c
  2480  000700                     l2052:
  2481  000700  90D8               	bcf	status,0,c
  2482  000702  3216               	rrcf	___lwdiv@divisor+1,f,c
  2483  000704  3215               	rrcf	___lwdiv@divisor,f,c
  2484  000706  2E17               	decfsz	___lwdiv@counter,f,c
  2485  000708  D7ED               	goto	l2044
  2486  00070A                     l781:
  2487  00070A  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  2488  00070E  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2489  000712  0012               	return		;funcret
  2490  000714                     __end_of___lwdiv:
  2491                           	opt stack 0
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           prodh	equ	0xFF4
  2497                           prodl	equ	0xFF3
  2498                           intcon	equ	0xFF2
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           indf2	equ	0xFDF
  2502                           postinc2	equ	0xFDE
  2503                           postdec2	equ	0xFDD
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _SYSTEM_Initialize *****************
  2509 ;; Defined at:
  2510 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    6
  2531 ;; This function calls:
  2532 ;;		_EPWM1_Initialize
  2533 ;;		_EUSART1_Initialize
  2534 ;;		_INTERRUPT_Initialize
  2535 ;;		_OSCILLATOR_Initialize
  2536 ;;		_PIN_MANAGER_Initialize
  2537 ;;		_TMR0_Initialize
  2538 ;;		_TMR2_Initialize
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text8
  2545  000918                     __ptext8:
  2546                           	opt stack 0
  2547  000918                     _SYSTEM_Initialize:
  2548                           	opt stack 24
  2549                           
  2550                           ;mcc.c: 115: INTERRUPT_Initialize();
  2551                           
  2552                           ;incstack = 0
  2553  000918  ECCD  F004         	call	_INTERRUPT_Initialize	;wreg free
  2554                           
  2555                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  2556  00091C  ECC8  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  2557                           
  2558                           ;mcc.c: 117: OSCILLATOR_Initialize();
  2559  000920  ECBB  F004         	call	_OSCILLATOR_Initialize	;wreg free
  2560                           
  2561                           ;mcc.c: 118: EPWM1_Initialize();
  2562  000924  EC6D  F004         	call	_EPWM1_Initialize	;wreg free
  2563                           
  2564                           ;mcc.c: 119: TMR2_Initialize();
  2565  000928  ECAA  F004         	call	_TMR2_Initialize	;wreg free
  2566                           
  2567                           ;mcc.c: 120: TMR0_Initialize();
  2568  00092C  EC9B  F004         	call	_TMR0_Initialize	;wreg free
  2569                           
  2570                           ;mcc.c: 121: EUSART1_Initialize();
  2571  000930  ECE2  F003         	call	_EUSART1_Initialize	;wreg free
  2572  000934  0012               	return		;funcret
  2573  000936                     __end_of_SYSTEM_Initialize:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           prodh	equ	0xFF4
  2580                           prodl	equ	0xFF3
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           postdec2	equ	0xFDD
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _TMR2_Initialize *****************
  2592 ;; Defined at:
  2593 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    5
  2614 ;; This function calls:
  2615 ;;		_TMR2_StartTimer
  2616 ;; This function is called by:
  2617 ;;		_SYSTEM_Initialize
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text9
  2622  000954                     __ptext9:
  2623                           	opt stack 0
  2624  000954                     _TMR2_Initialize:
  2625                           	opt stack 24
  2626                           
  2627                           ;tmr2.c: 63: T2CON = 0x00;
  2628                           
  2629                           ;incstack = 0
  2630  000954  0E00               	movlw	0
  2631  000956  6EBA               	movwf	4026,c	;volatile
  2632                           
  2633                           ;tmr2.c: 66: PR2 = 0xFF;
  2634  000958  68BB               	setf	4027,c	;volatile
  2635                           
  2636                           ;tmr2.c: 69: TMR2 = 0x00;
  2637  00095A  0E00               	movlw	0
  2638  00095C  6EBC               	movwf	4028,c	;volatile
  2639                           
  2640                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2641  00095E  929E               	bcf	3998,1,c	;volatile
  2642                           
  2643                           ;tmr2.c: 75: TMR2_StartTimer();
  2644  000960  ECD2  F004         	call	_TMR2_StartTimer	;wreg free
  2645  000964  0012               	return		;funcret
  2646  000966                     __end_of_TMR2_Initialize:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           indf2	equ	0xFDF
  2658                           postinc2	equ	0xFDE
  2659                           postdec2	equ	0xFDD
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _TMR2_StartTimer *****************
  2665 ;; Defined at:
  2666 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		None
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_TMR2_Initialize
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text10
  2695  0009A4                     __ptext10:
  2696                           	opt stack 0
  2697  0009A4                     _TMR2_StartTimer:
  2698                           	opt stack 24
  2699                           
  2700                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  2701                           
  2702                           ;incstack = 0
  2703  0009A4  84BA               	bsf	4026,2,c	;volatile
  2704  0009A6  0012               	return		;funcret
  2705  0009A8                     __end_of_TMR2_StartTimer:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           indf2	equ	0xFDF
  2717                           postinc2	equ	0xFDE
  2718                           postdec2	equ	0xFDD
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _TMR0_Initialize *****************
  2724 ;; Defined at:
  2725 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  2   44[None  ] int 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    5
  2746 ;; This function calls:
  2747 ;;		_TMR0_StartTimer
  2748 ;; This function is called by:
  2749 ;;		_SYSTEM_Initialize
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text11
  2754  000936                     __ptext11:
  2755                           	opt stack 0
  2756  000936                     _TMR0_Initialize:
  2757                           	opt stack 24
  2758                           
  2759                           ;tmr0.c: 68: val=0;
  2760                           
  2761                           ;incstack = 0
  2762  000936  0E00               	movlw	0
  2763  000938  6E3A               	movwf	_val,c	;volatile
  2764                           
  2765                           ;tmr0.c: 72: T0CON = 0xD7;
  2766  00093A  0ED7               	movlw	215
  2767  00093C  6ED5               	movwf	4053,c	;volatile
  2768                           
  2769                           ;tmr0.c: 75: TMR0H = 0x0B;
  2770  00093E  0E0B               	movlw	11
  2771  000940  6ED7               	movwf	4055,c	;volatile
  2772                           
  2773                           ;tmr0.c: 78: TMR0L = 0xDC;
  2774  000942  0EDC               	movlw	220
  2775  000944  6ED6               	movwf	4054,c	;volatile
  2776                           
  2777                           ;tmr0.c: 81: timer0ReloadVal8bit = 220;
  2778  000946  0EDC               	movlw	220
  2779  000948  6E3C               	movwf	_timer0ReloadVal8bit,c	;volatile
  2780                           
  2781                           ;tmr0.c: 84: INTCONbits.TMR0IF = 0;
  2782  00094A  94F2               	bcf	intcon,2,c	;volatile
  2783                           
  2784                           ;tmr0.c: 87: INTCONbits.TMR0IE = 1;
  2785  00094C  8AF2               	bsf	intcon,5,c	;volatile
  2786                           
  2787                           ;tmr0.c: 90: TMR0_StartTimer();
  2788  00094E  ECD4  F004         	call	_TMR0_StartTimer	;wreg free
  2789  000952  0012               	return		;funcret
  2790  000954                     __end_of_TMR0_Initialize:
  2791                           	opt stack 0
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           prodh	equ	0xFF4
  2797                           prodl	equ	0xFF3
  2798                           intcon	equ	0xFF2
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           indf2	equ	0xFDF
  2802                           postinc2	equ	0xFDE
  2803                           postdec2	equ	0xFDD
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _TMR0_StartTimer *****************
  2809 ;; Defined at:
  2810 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		None
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    4
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_TMR0_Initialize
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text12
  2839  0009A8                     __ptext12:
  2840                           	opt stack 0
  2841  0009A8                     _TMR0_StartTimer:
  2842                           	opt stack 24
  2843                           
  2844                           ;tmr0.c: 96: T0CONbits.TMR0ON = 1;
  2845                           
  2846                           ;incstack = 0
  2847  0009A8  8ED5               	bsf	4053,7,c	;volatile
  2848  0009AA  0012               	return		;funcret
  2849  0009AC                     __end_of_TMR0_StartTimer:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           intcon	equ	0xFF2
  2858                           postinc0	equ	0xFEE
  2859                           wreg	equ	0xFE8
  2860                           indf2	equ	0xFDF
  2861                           postinc2	equ	0xFDE
  2862                           postdec2	equ	0xFDD
  2863                           fsr2h	equ	0xFDA
  2864                           fsr2l	equ	0xFD9
  2865                           status	equ	0xFD8
  2866                           
  2867 ;; *************** function _PIN_MANAGER_Initialize *****************
  2868 ;; Defined at:
  2869 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    4
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_SYSTEM_Initialize
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text13
  2898  000790                     __ptext13:
  2899                           	opt stack 0
  2900  000790                     _PIN_MANAGER_Initialize:
  2901                           	opt stack 25
  2902                           
  2903                           ;pin_manager.c: 51: LATB = 0x0;
  2904                           
  2905                           ;incstack = 0
  2906  000790  0E00               	movlw	0
  2907  000792  6E8A               	movwf	3978,c	;volatile
  2908                           
  2909                           ;pin_manager.c: 52: LATA = 0x0;
  2910  000794  0E00               	movlw	0
  2911  000796  6E89               	movwf	3977,c	;volatile
  2912                           
  2913                           ;pin_manager.c: 53: LATC = 0x0;
  2914  000798  0E00               	movlw	0
  2915  00079A  6E8B               	movwf	3979,c	;volatile
  2916                           
  2917                           ;pin_manager.c: 54: ANSELA = 0x2F;
  2918  00079C  0E2F               	movlw	47
  2919  00079E  010F               	movlb	15	; () banked
  2920  0007A0  6F38               	movwf	56,b	;volatile
  2921                           
  2922                           ;pin_manager.c: 55: ANSELB = 0x3E;
  2923  0007A2  0E3E               	movlw	62
  2924  0007A4  010F               	movlb	15	; () banked
  2925  0007A6  6F39               	movwf	57,b	;volatile
  2926                           
  2927                           ;pin_manager.c: 56: ANSELC = 0x38;
  2928  0007A8  0E38               	movlw	56
  2929  0007AA  010F               	movlb	15	; () banked
  2930  0007AC  6F3A               	movwf	58,b	;volatile
  2931                           
  2932                           ;pin_manager.c: 57: TRISB = 0xC8;
  2933  0007AE  0EC8               	movlw	200
  2934  0007B0  6E93               	movwf	3987,c	;volatile
  2935                           
  2936                           ;pin_manager.c: 58: TRISC = 0xF9;
  2937  0007B2  0EF9               	movlw	249
  2938  0007B4  6E94               	movwf	3988,c	;volatile
  2939                           
  2940                           ;pin_manager.c: 59: WPUB = 0xFE;
  2941  0007B6  0EFE               	movlw	254
  2942  0007B8  6E61               	movwf	3937,c	;volatile
  2943                           
  2944                           ;pin_manager.c: 60: TRISA = 0xEF;
  2945  0007BA  0EEF               	movlw	239
  2946  0007BC  6E92               	movwf	3986,c	;volatile
  2947                           
  2948                           ; BSR set to: 15
  2949                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  2950  0007BE  8EF1               	bsf	intcon2,7,c	;volatile
  2951                           
  2952                           ; BSR set to: 15
  2953                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  2954  0007C0  96F2               	bcf	intcon,3,c	;volatile
  2955                           
  2956                           ; BSR set to: 15
  2957  0007C2  0012               	return		;funcret
  2958  0007C4                     __end_of_PIN_MANAGER_Initialize:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           intcon	equ	0xFF2
  2967                           intcon2	equ	0xFF1
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           indf2	equ	0xFDF
  2971                           postinc2	equ	0xFDE
  2972                           postdec2	equ	0xFDD
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _OSCILLATOR_Initialize *****************
  2978 ;; Defined at:
  2979 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    4
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_SYSTEM_Initialize
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text14
  3008  000976                     __ptext14:
  3009                           	opt stack 0
  3010  000976                     _OSCILLATOR_Initialize:
  3011                           	opt stack 25
  3012                           
  3013                           ;mcc.c: 127: OSCCON = 0x70;
  3014                           
  3015                           ; BSR set to: 15
  3016                           ;incstack = 0
  3017  000976  0E70               	movlw	112
  3018  000978  6ED3               	movwf	4051,c	;volatile
  3019                           
  3020                           ;mcc.c: 129: OSCCON2 = 0x04;
  3021  00097A  0E04               	movlw	4
  3022  00097C  6ED2               	movwf	4050,c	;volatile
  3023                           
  3024                           ;mcc.c: 131: OSCTUNE = 0x40;
  3025  00097E  0E40               	movlw	64
  3026  000980  6E9B               	movwf	3995,c	;volatile
  3027  000982  0012               	return		;funcret
  3028  000984                     __end_of_OSCILLATOR_Initialize:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           intcon	equ	0xFF2
  3037                           intcon2	equ	0xFF1
  3038                           postinc0	equ	0xFEE
  3039                           wreg	equ	0xFE8
  3040                           indf2	equ	0xFDF
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _INTERRUPT_Initialize *****************
  3048 ;; Defined at:
  3049 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		None
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    4
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_SYSTEM_Initialize
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text15
  3078  00099A                     __ptext15:
  3079                           	opt stack 0
  3080  00099A                     _INTERRUPT_Initialize:
  3081                           	opt stack 25
  3082                           
  3083                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  3084                           
  3085                           ;incstack = 0
  3086  00099A  9ED0               	bcf	4048,7,c	;volatile
  3087                           
  3088                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  3089  00099C  94F1               	bcf	intcon2,2,c	;volatile
  3090                           
  3091                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  3092  00099E  989F               	bcf	3999,4,c	;volatile
  3093                           
  3094                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  3095  0009A0  9A9F               	bcf	3999,5,c	;volatile
  3096  0009A2  0012               	return		;funcret
  3097  0009A4                     __end_of_INTERRUPT_Initialize:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           intcon2	equ	0xFF1
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           indf2	equ	0xFDF
  3110                           postinc2	equ	0xFDE
  3111                           postdec2	equ	0xFDD
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _EUSART1_Initialize *****************
  3117 ;; Defined at:
  3118 ;;		line 78 in file "mcc_generated_files/eusart1.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    4
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_SYSTEM_Initialize
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text16
  3147  0007C4                     __ptext16:
  3148                           	opt stack 0
  3149  0007C4                     _EUSART1_Initialize:
  3150                           	opt stack 25
  3151                           
  3152                           ;eusart1.c: 81: PIE1bits.RC1IE = 0;
  3153                           
  3154                           ;incstack = 0
  3155  0007C4  9A9D               	bcf	3997,5,c	;volatile
  3156                           
  3157                           ;eusart1.c: 82: PIE1bits.TX1IE = 0;
  3158  0007C6  989D               	bcf	3997,4,c	;volatile
  3159                           
  3160                           ;eusart1.c: 87: BAUDCON1 = 0x00;
  3161  0007C8  0E00               	movlw	0
  3162  0007CA  6EB8               	movwf	4024,c	;volatile
  3163                           
  3164                           ;eusart1.c: 90: RCSTA1 = 0x90;
  3165  0007CC  0E90               	movlw	144
  3166  0007CE  6EAB               	movwf	4011,c	;volatile
  3167                           
  3168                           ;eusart1.c: 93: TXSTA1 = 0x20;
  3169  0007D0  0E20               	movlw	32
  3170  0007D2  6EAC               	movwf	4012,c	;volatile
  3171                           
  3172                           ;eusart1.c: 96: SPBRG1 = 0x10;
  3173  0007D4  0E10               	movlw	16
  3174  0007D6  6EAF               	movwf	4015,c	;volatile
  3175                           
  3176                           ;eusart1.c: 99: SPBRGH1 = 0x00;
  3177  0007D8  0E00               	movlw	0
  3178  0007DA  6EB0               	movwf	4016,c	;volatile
  3179                           
  3180                           ;eusart1.c: 103: eusart1TxHead = 0;
  3181  0007DC  0E00               	movlw	0
  3182  0007DE  6E37               	movwf	_eusart1TxHead,c
  3183                           
  3184                           ;eusart1.c: 104: eusart1TxTail = 0;
  3185  0007E0  0E00               	movlw	0
  3186  0007E2  6E38               	movwf	_eusart1TxTail,c
  3187                           
  3188                           ;eusart1.c: 105: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3189  0007E4  0E80               	movlw	128
  3190  0007E6  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  3191                           
  3192                           ;eusart1.c: 107: eusart1RxHead = 0;
  3193  0007E8  0E00               	movlw	0
  3194  0007EA  6E35               	movwf	_eusart1RxHead,c
  3195                           
  3196                           ;eusart1.c: 108: eusart1RxTail = 0;
  3197  0007EC  0E00               	movlw	0
  3198  0007EE  6E36               	movwf	_eusart1RxTail,c
  3199                           
  3200                           ;eusart1.c: 109: eusart1RxCount = 0;
  3201  0007F0  0E00               	movlw	0
  3202  0007F2  6E34               	movwf	_eusart1RxCount,c	;volatile
  3203                           
  3204                           ;eusart1.c: 112: PIE1bits.RC1IE = 1;
  3205  0007F4  8A9D               	bsf	3997,5,c	;volatile
  3206  0007F6  0012               	return		;funcret
  3207  0007F8                     __end_of_EUSART1_Initialize:
  3208                           	opt stack 0
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           intcon2	equ	0xFF1
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           indf2	equ	0xFDF
  3220                           postinc2	equ	0xFDE
  3221                           postdec2	equ	0xFDD
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function _EPWM1_Initialize *****************
  3227 ;; Defined at:
  3228 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    4
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_SYSTEM_Initialize
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text17
  3257  0008DA                     __ptext17:
  3258                           	opt stack 0
  3259  0008DA                     _EPWM1_Initialize:
  3260                           	opt stack 25
  3261                           
  3262                           ;epwm1.c: 69: CCP1CON = 0x0E;
  3263                           
  3264                           ;incstack = 0
  3265  0008DA  0E0E               	movlw	14
  3266  0008DC  6EBD               	movwf	4029,c	;volatile
  3267                           
  3268                           ;epwm1.c: 72: ECCP1AS = 0x00;
  3269  0008DE  0E00               	movlw	0
  3270  0008E0  6EB6               	movwf	4022,c	;volatile
  3271                           
  3272                           ;epwm1.c: 75: PWM1CON = 0x82;
  3273  0008E2  0E82               	movlw	130
  3274  0008E4  6EB7               	movwf	4023,c	;volatile
  3275                           
  3276                           ;epwm1.c: 78: PSTR1CON = 0x01;
  3277  0008E6  0E01               	movlw	1
  3278  0008E8  6EB9               	movwf	4025,c	;volatile
  3279                           
  3280                           ;epwm1.c: 81: CCPR1L = 0x00;
  3281  0008EA  0E00               	movlw	0
  3282  0008EC  6EBE               	movwf	4030,c	;volatile
  3283                           
  3284                           ;epwm1.c: 84: CCPR1H = 0x00;
  3285  0008EE  0E00               	movlw	0
  3286  0008F0  6EBF               	movwf	4031,c	;volatile
  3287                           
  3288                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  3289  0008F2  0EFC               	movlw	-4
  3290  0008F4  010F               	movlb	15	; () banked
  3291  0008F6  1749               	andwf	73,f,b	;volatile
  3292                           
  3293                           ; BSR set to: 15
  3294  0008F8  0012               	return		;funcret
  3295  0008FA                     __end_of_EPWM1_Initialize:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           intcon	equ	0xFF2
  3304                           intcon2	equ	0xFF1
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _INTERRUPT_InterruptManager *****************
  3315 ;; Defined at:
  3316 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:       14 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    3
  3337 ;; This function calls:
  3338 ;;		_EUSART1_Receive_ISR
  3339 ;;		_EUSART1_Transmit_ISR
  3340 ;;		_TMR0_ISR
  3341 ;; This function is called by:
  3342 ;;		Interrupt level 2
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	intcode
  3347  000008                     __pintcode:
  3348                           	opt stack 0
  3349  000008                     _INTERRUPT_InterruptManager:
  3350                           	opt stack 24
  3351                           
  3352                           ; BSR set to: 15
  3353                           ;incstack = 0
  3354  000008  823D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3355  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  3356  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3357  000012  CFE9 F007          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3358  000016  CFEA F008          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3359  00001A  CFE1 F009          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3360  00001E  CFE2 F00A          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3361  000022  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3362  000026  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3363  00002A  CFF3 F00D          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3364  00002E  CFF4 F00E          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3365  000032  CFF6 F00F          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3366  000036  CFF7 F010          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3367  00003A  CFF8 F011          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3368  00003E  CFF5 F012          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3369                           
  3370                           ;interrupt_manager.c: 70: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  3371  000042  BAF2               	btfsc	intcon,5,c	;volatile
  3372  000044  A4F2               	btfss	intcon,2,c	;volatile
  3373  000046  D003               	goto	i2l26
  3374                           
  3375                           ;interrupt_manager.c: 71: {
  3376                           ;interrupt_manager.c: 72: TMR0_ISR();
  3377  000048  ECC2  F004         	call	_TMR0_ISR	;wreg free
  3378                           
  3379                           ;interrupt_manager.c: 73: }
  3380  00004C  D00B               	goto	i2l32
  3381  00004E                     i2l26:
  3382                           
  3383                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3384  00004E  B89D               	btfsc	3997,4,c	;volatile
  3385  000050  A89E               	btfss	3998,4,c	;volatile
  3386  000052  D003               	goto	i2l28
  3387                           
  3388                           ;interrupt_manager.c: 75: {
  3389                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  3390  000054  EC2D  F004         	call	_EUSART1_Transmit_ISR	;wreg free
  3391                           
  3392                           ;interrupt_manager.c: 77: }
  3393  000058  D005               	goto	i2l32
  3394  00005A                     i2l28:
  3395                           
  3396                           ;interrupt_manager.c: 78: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3397  00005A  BA9D               	btfsc	3997,5,c	;volatile
  3398  00005C  AA9E               	btfss	3998,5,c	;volatile
  3399  00005E  D002               	goto	i2l32
  3400                           
  3401                           ;interrupt_manager.c: 79: {
  3402                           ;interrupt_manager.c: 80: EUSART1_Receive_ISR();
  3403  000060  EC44  F004         	call	_EUSART1_Receive_ISR	;wreg free
  3404  000064                     i2l32:
  3405  000064  C012  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3406  000068  C011  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3407  00006C  C010  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3408  000070  C00F  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3409  000074  C00E  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3410  000078  C00D  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3411  00007C  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3412  000080  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3413  000084  C00A  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3414  000088  C009  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3415  00008C  C008  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3416  000090  C007  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3417  000094  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3418  000098  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3419  00009C  923D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3420  00009E  0011               	retfie		f
  3421  0000A0                     __end_of_INTERRUPT_InterruptManager:
  3422                           	opt stack 0
  3423                           pclatu	equ	0xFFB
  3424                           pclath	equ	0xFFA
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           prodh	equ	0xFF4
  3430                           prodl	equ	0xFF3
  3431                           intcon	equ	0xFF2
  3432                           intcon2	equ	0xFF1
  3433                           postinc0	equ	0xFEE
  3434                           fsr0h	equ	0xFEA
  3435                           fsr0l	equ	0xFE9
  3436                           wreg	equ	0xFE8
  3437                           fsr1h	equ	0xFE2
  3438                           fsr1l	equ	0xFE1
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           postdec2	equ	0xFDD
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _TMR0_ISR *****************
  3447 ;; Defined at:
  3448 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  2   10[None  ] int 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		_TMR0_CallBack
  3471 ;; This function is called by:
  3472 ;;		_INTERRUPT_InterruptManager
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text19
  3477  000984                     __ptext19:
  3478                           	opt stack 0
  3479  000984                     _TMR0_ISR:
  3480                           	opt stack 24
  3481                           
  3482                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  3483                           
  3484                           ;incstack = 0
  3485  000984  94F2               	bcf	intcon,2,c	;volatile
  3486                           
  3487                           ;tmr0.c: 136: TMR0L = timer0ReloadVal8bit;
  3488  000986  C03C  FFD6         	movff	_timer0ReloadVal8bit,4054	;volatile
  3489                           
  3490                           ;tmr0.c: 140: TMR0_CallBack();
  3491  00098A  ECB3  F004         	call	_TMR0_CallBack	;wreg free
  3492  00098E  0012               	return		;funcret
  3493  000990                     __end_of_TMR0_ISR:
  3494                           	opt stack 0
  3495                           pclatu	equ	0xFFB
  3496                           pclath	equ	0xFFA
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           intcon	equ	0xFF2
  3504                           intcon2	equ	0xFF1
  3505                           postinc0	equ	0xFEE
  3506                           fsr0h	equ	0xFEA
  3507                           fsr0l	equ	0xFE9
  3508                           wreg	equ	0xFE8
  3509                           fsr1h	equ	0xFE2
  3510                           fsr1l	equ	0xFE1
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           postdec2	equ	0xFDD
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _TMR0_CallBack *****************
  3519 ;; Defined at:
  3520 ;;		line 145 in file "mcc_generated_files/tmr0.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		_EPWM1_LoadDutyValue
  3543 ;; This function is called by:
  3544 ;;		_TMR0_ISR
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text20
  3549  000966                     __ptext20:
  3550                           	opt stack 0
  3551  000966                     _TMR0_CallBack:
  3552                           	opt stack 24
  3553                           
  3554                           ;tmr0.c: 149: val+=100;
  3555                           
  3556                           ;incstack = 0
  3557  000966  0E64               	movlw	100
  3558  000968  263A               	addwf	_val,f,c	;volatile
  3559                           
  3560                           ;tmr0.c: 151: EPWM1_LoadDutyValue((uint16_t) val);
  3561                           
  3562                           ;tmr0.c: 150: if(val>1000)val=0;
  3563  00096A  C03A  F001         	movff	_val,EPWM1_LoadDutyValue@dutyValue	;volatile
  3564  00096E  6A02               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3565  000970  EC15  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3566  000974  0012               	return		;funcret
  3567  000976                     __end_of_TMR0_CallBack:
  3568                           	opt stack 0
  3569                           pclatu	equ	0xFFB
  3570                           pclath	equ	0xFFA
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           intcon	equ	0xFF2
  3578                           intcon2	equ	0xFF1
  3579                           postinc0	equ	0xFEE
  3580                           fsr0h	equ	0xFEA
  3581                           fsr0l	equ	0xFE9
  3582                           wreg	equ	0xFE8
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _EPWM1_LoadDutyValue *****************
  3593 ;; Defined at:
  3594 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  dutyValue       2    0[COMRAM] unsigned int 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;Total ram usage:        4 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_TMR0_CallBack
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text21
  3622  00082A                     __ptext21:
  3623                           	opt stack 0
  3624  00082A                     _EPWM1_LoadDutyValue:
  3625                           	opt stack 24
  3626                           
  3627                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3628                           
  3629                           ;incstack = 0
  3630  00082A  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3631  00082E  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3632  000832  90D8               	bcf	status,0,c
  3633  000834  3204               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3634  000836  3203               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3635  000838  90D8               	bcf	status,0,c
  3636  00083A  3204               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3637  00083C  3203               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3638  00083E  5003               	movf	??_EPWM1_LoadDutyValue,w,c
  3639  000840  6EBE               	movwf	4030,c	;volatile
  3640                           
  3641                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3642  000842  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3643  000846  0E03               	movlw	3
  3644  000848  1603               	andwf	??_EPWM1_LoadDutyValue,f,c
  3645  00084A  3A03               	swapf	??_EPWM1_LoadDutyValue,f,c
  3646  00084C  0EF0               	movlw	240
  3647  00084E  1603               	andwf	??_EPWM1_LoadDutyValue,f,c
  3648  000850  50BD               	movf	4029,w,c	;volatile
  3649  000852  0BCF               	andlw	207
  3650  000854  1003               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3651  000856  6EBD               	movwf	4029,c	;volatile
  3652  000858  0012               	return		;funcret
  3653  00085A                     __end_of_EPWM1_LoadDutyValue:
  3654                           	opt stack 0
  3655                           pclatu	equ	0xFFB
  3656                           pclath	equ	0xFFA
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           intcon2	equ	0xFF1
  3665                           postinc0	equ	0xFEE
  3666                           fsr0h	equ	0xFEA
  3667                           fsr0l	equ	0xFE9
  3668                           wreg	equ	0xFE8
  3669                           fsr1h	equ	0xFE2
  3670                           fsr1l	equ	0xFE1
  3671                           indf2	equ	0xFDF
  3672                           postinc2	equ	0xFDE
  3673                           postdec2	equ	0xFDD
  3674                           fsr2h	equ	0xFDA
  3675                           fsr2l	equ	0xFD9
  3676                           status	equ	0xFD8
  3677                           
  3678 ;; *************** function _EUSART1_Transmit_ISR *****************
  3679 ;; Defined at:
  3680 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_INTERRUPT_InterruptManager
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text22
  3708  00085A                     __ptext22:
  3709                           	opt stack 0
  3710  00085A                     _EUSART1_Transmit_ISR:
  3711                           	opt stack 26
  3712                           
  3713                           ;eusart1.c: 173: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3714                           
  3715                           ;incstack = 0
  3716  00085A  0E80               	movlw	128
  3717  00085C  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3718  00085E  D012               	goto	i2l124
  3719                           
  3720                           ;eusart1.c: 174: {
  3721                           ;eusart1.c: 175: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  3722  000860  5038               	movf	_eusart1TxTail,w,c
  3723  000862  0D01               	mullw	1
  3724  000864  0E60               	movlw	low _eusart1TxBuffer
  3725  000866  24F3               	addwf	prodl,w,c
  3726  000868  6ED9               	movwf	fsr2l,c
  3727  00086A  0E00               	movlw	high _eusart1TxBuffer
  3728  00086C  20F4               	addwfc	prodh,w,c
  3729  00086E  6EDA               	movwf	fsr2h,c
  3730  000870  50DF               	movf	indf2,w,c
  3731  000872  6EAD               	movwf	4013,c	;volatile
  3732  000874  2A38               	incf	_eusart1TxTail,f,c
  3733                           
  3734                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3735  000876  0E7F               	movlw	127
  3736  000878  6438               	cpfsgt	_eusart1TxTail,c
  3737  00087A  D002               	goto	i2l1128
  3738                           
  3739                           ;eusart1.c: 177: {
  3740                           ;eusart1.c: 178: eusart1TxTail = 0;
  3741  00087C  0E00               	movlw	0
  3742  00087E  6E38               	movwf	_eusart1TxTail,c
  3743  000880                     i2l1128:
  3744                           
  3745                           ;eusart1.c: 179: }
  3746                           ;eusart1.c: 180: eusart1TxBufferRemaining++;
  3747  000880  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3748                           
  3749                           ;eusart1.c: 181: }
  3750  000882  0012               	return	
  3751  000884                     i2l124:
  3752                           
  3753                           ;eusart1.c: 182: else
  3754                           ;eusart1.c: 183: {
  3755                           ;eusart1.c: 184: PIE1bits.TX1IE = 0;
  3756  000884  989D               	bcf	3997,4,c	;volatile
  3757  000886  0012               	return	
  3758  000888                     __end_of_EUSART1_Transmit_ISR:
  3759                           	opt stack 0
  3760                           pclatu	equ	0xFFB
  3761                           pclath	equ	0xFFA
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           postinc0	equ	0xFEE
  3771                           fsr0h	equ	0xFEA
  3772                           fsr0l	equ	0xFE9
  3773                           wreg	equ	0xFE8
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           postdec2	equ	0xFDD
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _EUSART1_Receive_ISR *****************
  3784 ;; Defined at:
  3785 ;;		line 188 in file "mcc_generated_files/eusart1.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_INTERRUPT_InterruptManager
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text23
  3813  000888                     __ptext23:
  3814                           	opt stack 0
  3815  000888                     _EUSART1_Receive_ISR:
  3816                           	opt stack 26
  3817                           
  3818                           ;eusart1.c: 190: if(1 == RCSTA1bits.OERR)
  3819                           
  3820                           ;incstack = 0
  3821  000888  A2AB               	btfss	4011,1,c	;volatile
  3822  00088A  D002               	goto	i2l1600
  3823                           
  3824                           ;eusart1.c: 191: {
  3825                           ;eusart1.c: 194: RCSTA1bits.CREN = 0;
  3826  00088C  98AB               	bcf	4011,4,c	;volatile
  3827                           
  3828                           ;eusart1.c: 195: RCSTA1bits.CREN = 1;
  3829  00088E  88AB               	bsf	4011,4,c	;volatile
  3830  000890                     i2l1600:
  3831                           
  3832                           ;eusart1.c: 196: }
  3833                           ;eusart1.c: 201: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3834  000890  5035               	movf	_eusart1RxHead,w,c
  3835  000892  0D01               	mullw	1
  3836  000894  0E00               	movlw	low _eusart1RxBuffer
  3837  000896  24F3               	addwf	prodl,w,c
  3838  000898  6ED9               	movwf	fsr2l,c
  3839  00089A  0E01               	movlw	high _eusart1RxBuffer
  3840  00089C  20F4               	addwfc	prodh,w,c
  3841  00089E  6EDA               	movwf	fsr2h,c
  3842  0008A0  CFAE FFDF          	movff	4014,indf2	;volatile
  3843  0008A4  2A35               	incf	_eusart1RxHead,f,c
  3844                           
  3845                           ;eusart1.c: 202: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3846  0008A6  0E7F               	movlw	127
  3847  0008A8  6435               	cpfsgt	_eusart1RxHead,c
  3848  0008AA  D002               	goto	i2l1608
  3849                           
  3850                           ;eusart1.c: 203: {
  3851                           ;eusart1.c: 204: eusart1RxHead = 0;
  3852  0008AC  0E00               	movlw	0
  3853  0008AE  6E35               	movwf	_eusart1RxHead,c
  3854  0008B0                     i2l1608:
  3855                           
  3856                           ;eusart1.c: 205: }
  3857                           ;eusart1.c: 206: eusart1RxCount++;
  3858  0008B0  2A34               	incf	_eusart1RxCount,f,c	;volatile
  3859  0008B2  0012               	return		;funcret
  3860  0008B4                     __end_of_EUSART1_Receive_ISR:
  3861                           	opt stack 0
  3862                           pclatu	equ	0xFFB
  3863                           pclath	equ	0xFFA
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           intcon	equ	0xFF2
  3871                           intcon2	equ	0xFF1
  3872                           postinc0	equ	0xFEE
  3873                           fsr0h	equ	0xFEA
  3874                           fsr0l	equ	0xFE9
  3875                           wreg	equ	0xFE8
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           postdec2	equ	0xFDD
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           pclatu	equ	0xFFB
  3885                           pclath	equ	0xFFA
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           prodh	equ	0xFF4
  3891                           prodl	equ	0xFF3
  3892                           intcon	equ	0xFF2
  3893                           intcon2	equ	0xFF1
  3894                           postinc0	equ	0xFEE
  3895                           fsr0h	equ	0xFEA
  3896                           fsr0l	equ	0xFE9
  3897                           wreg	equ	0xFE8
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           indf2	equ	0xFDF
  3901                           postinc2	equ	0xFDE
  3902                           postdec2	equ	0xFDD
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907                           	psect	rparam
  3908  0000                     pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           intcon2	equ	0xFF1
  3918                           postinc0	equ	0xFEE
  3919                           fsr0h	equ	0xFEA
  3920                           fsr0l	equ	0xFE9
  3921                           wreg	equ	0xFE8
  3922                           fsr1h	equ	0xFE2
  3923                           fsr1l	equ	0xFE1
  3924                           indf2	equ	0xFDF
  3925                           postinc2	equ	0xFDE
  3926                           postdec2	equ	0xFDD
  3927                           fsr2h	equ	0xFDA
  3928                           fsr2l	equ	0xFD9
  3929                           status	equ	0xFD8
  3930                           
  3931                           	psect	temp
  3932  00003D                     btemp:
  3933                           	opt stack 0
  3934  00003D                     	ds	1
  3935  0000                     int$flags	set	btemp
  3936                           pclatu	equ	0xFFB
  3937                           pclath	equ	0xFFA
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           intcon2	equ	0xFF1
  3946                           postinc0	equ	0xFEE
  3947                           fsr0h	equ	0xFEA
  3948                           fsr0l	equ	0xFE9
  3949                           wreg	equ	0xFE8
  3950                           fsr1h	equ	0xFE2
  3951                           fsr1l	equ	0xFE1
  3952                           indf2	equ	0xFDF
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8


Data Sizes:
    Strings     269
    Constant    18
    Data        0
    BSS         263
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      60
    BANK0           160     19     147
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_14(CODE[40]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[18]), STR_5(CODE[15]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[14]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_CallBack->_EPWM1_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    4942
                                             50 COMRAM     1     1      0
                                              0 BANK0     19    19      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    4015
                                             30 COMRAM    20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             25 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     549
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0     108
                                              4 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     108
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     108
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) _EPWM1_LoadDutyValue                                  4     2      2     108
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
       _EPWM1_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      3C       1       63.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14F      12        0.0%
DATA                 0      0     14F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Mar 06 22:54:20 2016

           _eusart1TxBufferRemaining 003B                  ___wmul@multiplicand 0015  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l112 0768                                  l335 0196  
                                l781 070A                                  l791 074C  
                       __CFG_CPB$OFF 000000                                  _PR2 000FBB  
                       __CFG_CPD$OFF 000000                                  _val 003A  
                    _TMR2_Initialize 0954                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l2040 06D8                                 l2024 0910  
                               l2200 02F4                                 l2112 015E  
                               l2104 0100                                 l2042 06E0  
                               l2202 0338                                 l2210 038E  
                               l2052 0700                                 l2044 06E4  
                               l2060 0722                                 l2212 0394  
                               l2132 01DE                                 l2116 0162  
                               l2300 04FE                                 l2062 072A  
                               l2134 01E2                                 l2214 039C  
                               l2064 072E                                 l2208 037E  
                               l2128 01C4                                 l2320 054C  
                               l2312 052E                                 l2304 0508  
                               l2240 040E                                 l2232 03E8  
                               l2170 0268                                 l2146 020E  
                               l2162 023E                                 l2068 0742  
                               l2148 0212                                 l2164 024E  
                               l2092 00BE                                 l2340 0598  
                               l2332 057C                                 l2324 055E  
                               l2316 0538                                 l2308 051C  
                               l2260 045C                                 l2252 043E  
                               l2244 0418                                 l2236 03FC  
                               l2228 03DE                                 l2190 02C8  
                               l2182 02AA                                 l2174 028C  
                               l2094 00CC                                 l2176 0294  
                               l2088 00AE                                 l2360 05EE  
                               l2352 05C8                                 l2344 05AC  
                               l2336 058E                                 l2328 0568  
                               l2280 04A8                                 l2272 048C  
                               l2264 046E                                 l2256 0448  
                               l2248 042C                                 l2194 02DC  
                               l2098 00D2                                 l2188 02C0  
                               l2380 063C                                 l2372 061E  
                               l2364 05F8                                 l2356 05DC  
                               l2348 05BE                                 l2292 04D8  
                               l2284 04BC                                 l2276 049E  
                               l2268 0478                                 l2198 02EE  
                               l2382 065A                                 l2376 0628  
                               l2368 060C                                 l2296 04EC  
                               l2288 04CE                                 l1960 0758  
                               l1972 078A                                 l1974 078C  
                               STR_1 FFF2                                 STR_2 FFD8  
                               STR_3 FFAB                                 STR_4 FFC9  
                               STR_5 FFBA                                 STR_6 FF78  
                               STR_7 FF9B                                 STR_8 FFE6  
                               STR_9 FF2C                                 u2017 03C4  
                               u2107 056E                                 u2027 03EE  
                               u2117 059E                                 u2037 041E  
                               _LATA 000F89                                 _LATB 000F8A  
                               u2127 05CE                                 u2047 044E  
                               _LATC 000F8B                                 u2137 05FE  
                               u2057 047E                                 u2147 062E  
                               u2067 04AE                                 u2157 0660  
                               u2077 04DE                                 u2167 066E  
                               u2087 050E                                 u2177 067C  
                               u2097 053E                                 u2187 068A  
                               u2197 0698                                 i2l32 0064  
                               i2l26 004E                                 i2l28 005A  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 0756                                 _main 03B6  
                    _TMR0_StartTimer 09A8                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 003D                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00A0  
                      __CFG_IESO$OFF 000000                ??_EPWM1_LoadDutyValue 0003  
                       ___param_bank 000010              __end_of_TMR0_Initialize 0954  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0984  
                              ?_main 0001                                STR_10 FF19  
                              STR_11 FF52                                STR_12 FF3F  
                              STR_13 FF65                                STR_14 FEF1  
                              STR_15 FF8A                                _T0CON 000FD5  
                              _T2CON 000FBA                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 0714                      __end_of___lwmod 0756  
                              i2l124 0884                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 085A                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   __end_of_TMR0_ISR 0990                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FEE9  
                    __end_of_isdigit 0918                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 0990                                main@a 00E2  
                              main@i 00E6                       ?_EUSART1_Write 0001  
                              tablat 000FF5                                status 000FD8  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 09A4  
                     __CFG_PBADEN$ON 000000                      __initialization 07F8  
         __end_of_EUSART1_Initialize 07F8                         __end_of_main 06C2  
            __end_of_TMR2_Initialize 0966          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 0033                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0001              __end_of_TMR0_StartTimer 09AC  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             i2l1128 0880                               i2l1600 0890  
                             i2l1608 08B0                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                         _CCPTMRS0bits 000F49  
                             ___wmul 08B4                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0017                            ??___lwmod 001E  
                   ?_TMR0_Initialize 0001                               clear_0 07FE  
                             clear_1 080A                               clear_2 0816  
                             _printf 00A4                            ??_isdigit 0013  
                       __mediumconst FEDE                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
              __end_of_TMR0_CallBack 0976                      ??_EUSART1_Write 0013  
            __end_of_TMR2_StartTimer 09A8                      _eusart1RxBuffer 0100  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0060  
                  _SYSTEM_Initialize 0918                           __accesstop 0060  
            __end_of__initialization 081C                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  _timer0ReloadVal8bit 003C  
                ??_SYSTEM_Initialize 0013                            ?_TMR0_ISR 0001  
                 ??_EPWM1_Initialize 0013                        __end_of_putch 099A  
                   ?_TMR2_Initialize 0001               ??_EUSART1_Transmit_ISR 0001  
        __end_of_EUSART1_Receive_ISR 08B4                     ?_TMR0_StartTimer 0001  
          __end_of_SYSTEM_Initialize 0936                              ??_putch 0014  
                      _eusart1RxHead 0035                        _eusart1TxHead 0037  
                      _eusart1RxTail 0036                           __pbssBANK0 0060  
                         __pbssBANK1 0100                        _eusart1TxTail 0038  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 003B  
                 __CFG_CCP2MX$PORTC1 000000                              ?___wmul 0013  
                         ??_TMR0_ISR 0005                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                            ?_printf 001F                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                            _SPBRGH1 000FB0                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 085A                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                    __size_of___wmul 0026                              ___lwdiv 06C2  
                            ___lwmod 0714                              __pcinit 07F8  
                            __ramtop 1000                              __ptext0 03B6  
                            __ptext1 00A4                              __ptext2 0990  
                            __ptext3 0756                              __ptext4 08FA  
                            __ptext5 08B4                              __ptext6 0714  
                            __ptext7 06C2                              __ptext8 0918  
                            __ptext9 0954                      __size_of_printf 0312  
                          _T0CONbits 000FD5                    __end_of_hexpowers FEF1  
                            _dpowers FEDF                _OSCILLATOR_Initialize 0976  
                          _T2CONbits 000FBA                              _isdigit 08FA  
                 _EUSART1_Initialize 07C4             ??_PIN_MANAGER_Initialize 0013  
         __size_of_SYSTEM_Initialize 001E                              main@val 00E4  
               end_of_initialization 081C                  ?_EUSART1_Initialize 0001  
                      __Lmediumconst FEDE                              printf@c 0032  
                            printf@f 001F                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
               ??_EUSART1_Initialize 0013                  EUSART1_Write@txData 0013  
                        printf@width 0030         __end_of_INTERRUPT_Initialize 09A4  
                     __end_of___wmul 08DA                    __size_of_TMR0_ISR 000C  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 03B6  
                start_initialization 07F8            __size_of_EPWM1_Initialize 0020  
           __size_of_TMR0_Initialize 001E      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0014         EPWM1_LoadDutyValue@dutyValue 0001  
              __end_of_EUSART1_Write 0790                             ??___wmul 0017  
             __size_of_TMR0_CallBack 0010                             ??_printf 0025  
                     _eusart1RxCount 0034                          __pbssCOMRAM 0034  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 00E0  
           __size_of_TMR2_Initialize 0012                         _isdigit$1067 0014  
       __size_of_EUSART1_Receive_ISR 002C             __size_of_TMR0_StartTimer 0004  
                   ___lwdiv@dividend 0013               _PIN_MANAGER_Initialize 0790  
                          __pintcode 0008                        __pmediumconst FEDE  
                           ?___lwdiv 0013                             ?___lwmod 001A  
       ??_INTERRUPT_InterruptManager 0005                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isdigit 0001  
                          _hexpowers FEE9                     ___lwdiv@quotient 0018  
                      _TMR0_CallBack 0966                       __size_of_putch 000A  
               _INTERRUPT_Initialize 099A                    ??_TMR0_Initialize 0013  
                     ___wmul@product 0017                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
__size_of_INTERRUPT_InterruptManager 0098                             _PIR1bits 000F9E  
       __size_of_EPWM1_LoadDutyValue 0030                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0039  
                           _TMR0_ISR 0984                             _PSTR1CON 000FB9  
                          main@i_711 00E9                            main@i_721 00EE  
                          main@i_713 00EA                            main@i_723 00EF  
                          main@i_715 00EB                            main@i_707 00E7  
                          main@i_725 00F0                            main@i_717 00EC  
                          main@i_709 00E8                            main@i_727 00F1  
                          main@i_719 00ED                            main@i_729 00F2  
                  ___wmul@multiplier 0013                           printf@flag 002F  
                         printf@prec 002C                     _EPWM1_Initialize 08DA  
                          main@sleep 00E0                       ?_TMR0_CallBack 0001  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0013                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTB5 000000              ??_OSCILLATOR_Initialize 0013  
                  ??_TMR0_StartTimer 0013          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 0052                     __size_of___lwmod 0042  
                   __size_of_isdigit 001E                      ___lwdiv@divisor 0015  
                    ___lwdiv@counter 0017                             __ptext10 09A4  
                           __ptext11 0936                             __ptext20 0966  
                           __ptext12 09A8                             __ptext21 082A  
                           __ptext13 0790                             __ptext22 085A  
                           __ptext14 0976                             __ptext23 0888  
                           __ptext15 099A                             __ptext16 07C4  
                           __ptext17 08DA                             __ptext19 0984  
                      __size_of_main 030C                             int$flags 003D  
                  ??_TMR2_StartTimer 0013   __end_of_INTERRUPT_InterruptManager 00A0  
         _INTERRUPT_InterruptManager 0008                            printf@idx 0029  
                          printf@val 002D                  _EUSART1_Receive_ISR 0888  
                         _INTCONbits 000FF2                      ??_TMR0_CallBack 0005  
                           isdigit@c 0015               ??_INTERRUPT_Initialize 0013  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
                   ___lwmod@dividend 001A              ?_PIN_MANAGER_Initialize 0001  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 0888  
                           printf@ap 002A               __size_of_EUSART1_Write 003A  
                    ___lwmod@divisor 001C                      _TMR0_Initialize 0936  
                    ___lwmod@counter 001E                    __CFG_T3CMX$PORTC0 000000  
                _EPWM1_LoadDutyValue 082A                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 07C4                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 08FA                 ?_EPWM1_LoadDutyValue 0001  
