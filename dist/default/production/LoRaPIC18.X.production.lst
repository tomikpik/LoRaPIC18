

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Mar 21 10:21:04 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           	psect	idataCOMRAM
    68  001C7E                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _randx
    72  001C7E  0001               	dw	1
    73  001C80  0000               	dw	0
    74                           
    75                           	psect	mediumconst
    76  00FE5A                     __pmediumconst:
    77                           	opt stack 0
    78  00FE5A  00                 	db	0
    79  00FE5B                     _dpowers:
    80                           	opt stack 0
    81  00FE5B  0001               	dw	1
    82  00FE5D  000A               	dw	10
    83  00FE5F  0064               	dw	100
    84  00FE61  03E8               	dw	1000
    85  00FE63  2710               	dw	10000
    86  00FE65                     __end_of_dpowers:
    87                           	opt stack 0
    88  00FE65                     _hexpowers:
    89                           	opt stack 0
    90  00FE65  0001               	dw	1
    91  00FE67  0010               	dw	16
    92  00FE69  0100               	dw	256
    93  00FE6B  1000               	dw	4096
    94  00FE6D                     __end_of_hexpowers:
    95                           	opt stack 0
    96  00FE6D                     STR_25:
    97  00FE6D  72                 	db	114	;'r'
    98  00FE6E  61                 	db	97	;'a'
    99  00FE6F  64                 	db	100	;'d'
   100  00FE70  69                 	db	105	;'i'
   101  00FE71  6F                 	db	111	;'o'
   102  00FE72  20                 	db	32
   103  00FE73  74                 	db	116	;'t'
   104  00FE74  78                 	db	120	;'x'
   105  00FE75  20                 	db	32
   106  00FE76  34                 	db	52	;'4'
   107  00FE77  32                 	db	50	;'2'
   108  00FE78  25                 	db	37
   109  00FE79  73                 	db	115	;'s'
   110  00FE7A  25                 	db	37
   111  00FE7B  30                 	db	48	;'0'
   112  00FE7C  32                 	db	50	;'2'
   113  00FE7D  58                 	db	88	;'X'
   114  00FE7E  25                 	db	37
   115  00FE7F  30                 	db	48	;'0'
   116  00FE80  32                 	db	50	;'2'
   117  00FE81  58                 	db	88	;'X'
   118  00FE82  30                 	db	48	;'0'
   119  00FE83  30                 	db	48	;'0'
   120  00FE84  30                 	db	48	;'0'
   121  00FE85  30                 	db	48	;'0'
   122  00FE86  30                 	db	48	;'0'
   123  00FE87  30                 	db	48	;'0'
   124  00FE88  30                 	db	48	;'0'
   125  00FE89  30                 	db	48	;'0'
   126  00FE8A  0D                 	db	13
   127  00FE8B  0A                 	db	10
   128  00FE8C  00                 	db	0
   129  00FE8D                     STR_23:
   130  00FE8D  72                 	db	114	;'r'
   131  00FE8E  61                 	db	97	;'a'
   132  00FE8F  64                 	db	100	;'d'
   133  00FE90  69                 	db	105	;'i'
   134  00FE91  6F                 	db	111	;'o'
   135  00FE92  20                 	db	32
   136  00FE93  74                 	db	116	;'t'
   137  00FE94  78                 	db	120	;'x'
   138  00FE95  20                 	db	32
   139  00FE96  34                 	db	52	;'4'
   140  00FE97  32                 	db	50	;'2'
   141  00FE98  25                 	db	37
   142  00FE99  73                 	db	115	;'s'
   143  00FE9A  25                 	db	37
   144  00FE9B  30                 	db	48	;'0'
   145  00FE9C  32                 	db	50	;'2'
   146  00FE9D  58                 	db	88	;'X'
   147  00FE9E  25                 	db	37
   148  00FE9F  30                 	db	48	;'0'
   149  00FEA0  32                 	db	50	;'2'
   150  00FEA1  58                 	db	88	;'X'
   151  00FEA2  30                 	db	48	;'0'
   152  00FEA3  30                 	db	48	;'0'
   153  00FEA4  30                 	db	48	;'0'
   154  00FEA5  30                 	db	48	;'0'
   155  00FEA6  30                 	db	48	;'0'
   156  00FEA7  30                 	db	48	;'0'
   157  00FEA8  30                 	db	48	;'0'
   158  00FEA9  31                 	db	49	;'1'
   159  00FEAA  0D                 	db	13
   160  00FEAB  0A                 	db	10
   161  00FEAC  00                 	db	0
   162  00FEAD                     STR_17:
   163  00FEAD  72                 	db	114	;'r'
   164  00FEAE  61                 	db	97	;'a'
   165  00FEAF  64                 	db	100	;'d'
   166  00FEB0  69                 	db	105	;'i'
   167  00FEB1  6F                 	db	111	;'o'
   168  00FEB2  20                 	db	32
   169  00FEB3  73                 	db	115	;'s'
   170  00FEB4  65                 	db	101	;'e'
   171  00FEB5  74                 	db	116	;'t'
   172  00FEB6  20                 	db	32
   173  00FEB7  62                 	db	98	;'b'
   174  00FEB8  77                 	db	119	;'w'
   175  00FEB9  20                 	db	32
   176  00FEBA  35                 	db	53	;'5'
   177  00FEBB  30                 	db	48	;'0'
   178  00FEBC  30                 	db	48	;'0'
   179  00FEBD  0D                 	db	13
   180  00FEBE  0A                 	db	10
   181  00FEBF  00                 	db	0
   182  00FEC0                     STR_16:
   183  00FEC0  72                 	db	114	;'r'
   184  00FEC1  61                 	db	97	;'a'
   185  00FEC2  64                 	db	100	;'d'
   186  00FEC3  69                 	db	105	;'i'
   187  00FEC4  6F                 	db	111	;'o'
   188  00FEC5  20                 	db	32
   189  00FEC6  73                 	db	115	;'s'
   190  00FEC7  65                 	db	101	;'e'
   191  00FEC8  74                 	db	116	;'t'
   192  00FEC9  20                 	db	32
   193  00FECA  70                 	db	112	;'p'
   194  00FECB  77                 	db	119	;'w'
   195  00FECC  72                 	db	114	;'r'
   196  00FECD  20                 	db	32
   197  00FECE  2D                 	db	45
   198  00FECF  32                 	db	50	;'2'
   199  00FED0  0D                 	db	13
   200  00FED1  0A                 	db	10
   201  00FED2  00                 	db	0
   202  00FED3                     STR_18:
   203  00FED3  72                 	db	114	;'r'
   204  00FED4  61                 	db	97	;'a'
   205  00FED5  64                 	db	100	;'d'
   206  00FED6  69                 	db	105	;'i'
   207  00FED7  6F                 	db	111	;'o'
   208  00FED8  20                 	db	32
   209  00FED9  73                 	db	115	;'s'
   210  00FEDA  65                 	db	101	;'e'
   211  00FEDB  74                 	db	116	;'t'
   212  00FEDC  20                 	db	32
   213  00FEDD  73                 	db	115	;'s'
   214  00FEDE  66                 	db	102	;'f'
   215  00FEDF  20                 	db	32
   216  00FEE0  73                 	db	115	;'s'
   217  00FEE1  66                 	db	102	;'f'
   218  00FEE2  37                 	db	55	;'7'
   219  00FEE3  0D                 	db	13
   220  00FEE4  0A                 	db	10
   221  00FEE5  00                 	db	0
   222  00FEE6                     STR_19:
   223  00FEE6  72                 	db	114	;'r'
   224  00FEE7  61                 	db	97	;'a'
   225  00FEE8  64                 	db	100	;'d'
   226  00FEE9  69                 	db	105	;'i'
   227  00FEEA  6F                 	db	111	;'o'
   228  00FEEB  20                 	db	32
   229  00FEEC  73                 	db	115	;'s'
   230  00FEED  65                 	db	101	;'e'
   231  00FEEE  74                 	db	116	;'t'
   232  00FEEF  20                 	db	32
   233  00FEF0  63                 	db	99	;'c'
   234  00FEF1  72                 	db	114	;'r'
   235  00FEF2  20                 	db	32
   236  00FEF3  34                 	db	52	;'4'
   237  00FEF4  2F                 	db	47
   238  00FEF5  38                 	db	56	;'8'
   239  00FEF6  0D                 	db	13
   240  00FEF7  0A                 	db	10
   241  00FEF8  00                 	db	0
   242  00FEF9                     STR_21:
   243  00FEF9  72                 	db	114	;'r'
   244  00FEFA  61                 	db	97	;'a'
   245  00FEFB  64                 	db	100	;'d'
   246  00FEFC  69                 	db	105	;'i'
   247  00FEFD  6F                 	db	111	;'o'
   248  00FEFE  20                 	db	32
   249  00FEFF  73                 	db	115	;'s'
   250  00FF00  65                 	db	101	;'e'
   251  00FF01  74                 	db	116	;'t'
   252  00FF02  20                 	db	32
   253  00FF03  77                 	db	119	;'w'
   254  00FF04  64                 	db	100	;'d'
   255  00FF05  74                 	db	116	;'t'
   256  00FF06  20                 	db	32
   257  00FF07  25                 	db	37
   258  00FF08  64                 	db	100	;'d'
   259  00FF09  0D                 	db	13
   260  00FF0A  0A                 	db	10
   261  00FF0B  00                 	db	0
   262  00FF0C                     STR_20:
   263  00FF0C  72                 	db	114	;'r'
   264  00FF0D  61                 	db	97	;'a'
   265  00FF0E  64                 	db	100	;'d'
   266  00FF0F  69                 	db	105	;'i'
   267  00FF10  6F                 	db	111	;'o'
   268  00FF11  20                 	db	32
   269  00FF12  73                 	db	115	;'s'
   270  00FF13  65                 	db	101	;'e'
   271  00FF14  74                 	db	116	;'t'
   272  00FF15  20                 	db	32
   273  00FF16  63                 	db	99	;'c'
   274  00FF17  72                 	db	114	;'r'
   275  00FF18  63                 	db	99	;'c'
   276  00FF19  20                 	db	32
   277  00FF1A  6F                 	db	111	;'o'
   278  00FF1B  6E                 	db	110	;'n'
   279  00FF1C  0D                 	db	13
   280  00FF1D  0A                 	db	10
   281  00FF1E  00                 	db	0
   282  00FF1F                     STR_13:
   283  00FF1F  72                 	db	114	;'r'
   284  00FF20  61                 	db	97	;'a'
   285  00FF21  64                 	db	100	;'d'
   286  00FF22  69                 	db	105	;'i'
   287  00FF23  6F                 	db	111	;'o'
   288  00FF24  20                 	db	32
   289  00FF25  67                 	db	103	;'g'
   290  00FF26  65                 	db	101	;'e'
   291  00FF27  74                 	db	116	;'t'
   292  00FF28  20                 	db	32
   293  00FF29  70                 	db	112	;'p'
   294  00FF2A  72                 	db	114	;'r'
   295  00FF2B  6C                 	db	108	;'l'
   296  00FF2C  65                 	db	101	;'e'
   297  00FF2D  6E                 	db	110	;'n'
   298  00FF2E  0D                 	db	13
   299  00FF2F  0A                 	db	10
   300  00FF30  00                 	db	0
   301  00FF31                     STR_29:
   302  00FF31  30                 	db	48	;'0'
   303  00FF32  31                 	db	49	;'1'
   304  00FF33  32                 	db	50	;'2'
   305  00FF34  33                 	db	51	;'3'
   306  00FF35  34                 	db	52	;'4'
   307  00FF36  35                 	db	53	;'5'
   308  00FF37  36                 	db	54	;'6'
   309  00FF38  37                 	db	55	;'7'
   310  00FF39  38                 	db	56	;'8'
   311  00FF3A  39                 	db	57	;'9'
   312  00FF3B  41                 	db	65	;'A'
   313  00FF3C  42                 	db	66	;'B'
   314  00FF3D  43                 	db	67	;'C'
   315  00FF3E  44                 	db	68	;'D'
   316  00FF3F  45                 	db	69	;'E'
   317  00FF40  46                 	db	70	;'F'
   318  00FF41  00                 	db	0
   319  00FF42                     STR_6:
   320  00FF42  46                 	db	70	;'F'
   321  00FF43  46                 	db	70	;'F'
   322  00FF44  46                 	db	70	;'F'
   323  00FF45  46                 	db	70	;'F'
   324  00FF46  46                 	db	70	;'F'
   325  00FF47  46                 	db	70	;'F'
   326  00FF48  46                 	db	70	;'F'
   327  00FF49  46                 	db	70	;'F'
   328  00FF4A  46                 	db	70	;'F'
   329  00FF4B  46                 	db	70	;'F'
   330  00FF4C  46                 	db	70	;'F'
   331  00FF4D  46                 	db	70	;'F'
   332  00FF4E  46                 	db	70	;'F'
   333  00FF4F  46                 	db	70	;'F'
   334  00FF50  46                 	db	70	;'F'
   335  00FF51  46                 	db	70	;'F'
   336  00FF52  00                 	db	0
   337  00FF53                     STR_5:
   338  00FF53  73                 	db	115	;'s'
   339  00FF54  79                 	db	121	;'y'
   340  00FF55  73                 	db	115	;'s'
   341  00FF56  20                 	db	32
   342  00FF57  67                 	db	103	;'g'
   343  00FF58  65                 	db	101	;'e'
   344  00FF59  74                 	db	116	;'t'
   345  00FF5A  20                 	db	32
   346  00FF5B  68                 	db	104	;'h'
   347  00FF5C  77                 	db	119	;'w'
   348  00FF5D  65                 	db	101	;'e'
   349  00FF5E  75                 	db	117	;'u'
   350  00FF5F  69                 	db	105	;'i'
   351  00FF60  0D                 	db	13
   352  00FF61  0A                 	db	10
   353  00FF62  00                 	db	0
   354  00FF63                     STR_14:
   355  00FF63  72                 	db	114	;'r'
   356  00FF64  61                 	db	97	;'a'
   357  00FF65  64                 	db	100	;'d'
   358  00FF66  69                 	db	105	;'i'
   359  00FF67  6F                 	db	111	;'o'
   360  00FF68  20                 	db	32
   361  00FF69  67                 	db	103	;'g'
   362  00FF6A  65                 	db	101	;'e'
   363  00FF6B  74                 	db	116	;'t'
   364  00FF6C  20                 	db	32
   365  00FF6D  70                 	db	112	;'p'
   366  00FF6E  77                 	db	119	;'w'
   367  00FF6F  72                 	db	114	;'r'
   368  00FF70  0D                 	db	13
   369  00FF71  0A                 	db	10
   370  00FF72  00                 	db	0
   371  00FF73                     STR_10:
   372  00FF73  72                 	db	114	;'r'
   373  00FF74  61                 	db	97	;'a'
   374  00FF75  64                 	db	100	;'d'
   375  00FF76  69                 	db	105	;'i'
   376  00FF77  6F                 	db	111	;'o'
   377  00FF78  20                 	db	32
   378  00FF79  67                 	db	103	;'g'
   379  00FF7A  65                 	db	101	;'e'
   380  00FF7B  74                 	db	116	;'t'
   381  00FF7C  20                 	db	32
   382  00FF7D  73                 	db	115	;'s'
   383  00FF7E  66                 	db	102	;'f'
   384  00FF7F  0D                 	db	13
   385  00FF80  0A                 	db	10
   386  00FF81  00                 	db	0
   387  00FF82                     STR_12:
   388  00FF82  72                 	db	114	;'r'
   389  00FF83  61                 	db	97	;'a'
   390  00FF84  64                 	db	100	;'d'
   391  00FF85  69                 	db	105	;'i'
   392  00FF86  6F                 	db	111	;'o'
   393  00FF87  20                 	db	32
   394  00FF88  67                 	db	103	;'g'
   395  00FF89  65                 	db	101	;'e'
   396  00FF8A  74                 	db	116	;'t'
   397  00FF8B  20                 	db	32
   398  00FF8C  63                 	db	99	;'c'
   399  00FF8D  72                 	db	114	;'r'
   400  00FF8E  0D                 	db	13
   401  00FF8F  0A                 	db	10
   402  00FF90  00                 	db	0
   403  00FF91                     STR_11:
   404  00FF91  72                 	db	114	;'r'
   405  00FF92  61                 	db	97	;'a'
   406  00FF93  64                 	db	100	;'d'
   407  00FF94  69                 	db	105	;'i'
   408  00FF95  6F                 	db	111	;'o'
   409  00FF96  20                 	db	32
   410  00FF97  67                 	db	103	;'g'
   411  00FF98  65                 	db	101	;'e'
   412  00FF99  74                 	db	116	;'t'
   413  00FF9A  20                 	db	32
   414  00FF9B  62                 	db	98	;'b'
   415  00FF9C  77                 	db	119	;'w'
   416  00FF9D  0D                 	db	13
   417  00FF9E  0A                 	db	10
   418  00FF9F  00                 	db	0
   419  00FFA0                     STR_9:
   420  00FFA0  73                 	db	115	;'s'
   421  00FFA1  79                 	db	121	;'y'
   422  00FFA2  73                 	db	115	;'s'
   423  00FFA3  20                 	db	32
   424  00FFA4  67                 	db	103	;'g'
   425  00FFA5  65                 	db	101	;'e'
   426  00FFA6  74                 	db	116	;'t'
   427  00FFA7  20                 	db	32
   428  00FFA8  76                 	db	118	;'v'
   429  00FFA9  65                 	db	101	;'e'
   430  00FFAA  72                 	db	114	;'r'
   431  00FFAB  0D                 	db	13
   432  00FFAC  0A                 	db	10
   433  00FFAD  00                 	db	0
   434  00FFAE                     STR_22:
   435  00FFAE  72                 	db	114	;'r'
   436  00FFAF  61                 	db	97	;'a'
   437  00FFB0  64                 	db	100	;'d'
   438  00FFB1  69                 	db	105	;'i'
   439  00FFB2  6F                 	db	111	;'o'
   440  00FFB3  20                 	db	32
   441  00FFB4  72                 	db	114	;'r'
   442  00FFB5  78                 	db	120	;'x'
   443  00FFB6  20                 	db	32
   444  00FFB7  30                 	db	48	;'0'
   445  00FFB8  0D                 	db	13
   446  00FFB9  0A                 	db	10
   447  00FFBA  00                 	db	0
   448  00FFBB                     STR_15:
   449  00FFBB  6D                 	db	109	;'m'
   450  00FFBC  61                 	db	97	;'a'
   451  00FFBD  63                 	db	99	;'c'
   452  00FFBE  20                 	db	32
   453  00FFBF  70                 	db	112	;'p'
   454  00FFC0  61                 	db	97	;'a'
   455  00FFC1  75                 	db	117	;'u'
   456  00FFC2  73                 	db	115	;'s'
   457  00FFC3  65                 	db	101	;'e'
   458  00FFC4  0D                 	db	13
   459  00FFC5  0A                 	db	10
   460  00FFC6  00                 	db	0
   461  00FFC7                     STR_8:
   462  00FFC7  73                 	db	115	;'s'
   463  00FFC8  79                 	db	121	;'y'
   464  00FFC9  73                 	db	115	;'s'
   465  00FFCA  20                 	db	32
   466  00FFCB  72                 	db	114	;'r'
   467  00FFCC  65                 	db	101	;'e'
   468  00FFCD  73                 	db	115	;'s'
   469  00FFCE  65                 	db	101	;'e'
   470  00FFCF  74                 	db	116	;'t'
   471  00FFD0  0D                 	db	13
   472  00FFD1  0A                 	db	10
   473  00FFD2  00                 	db	0
   474  00FFD3                     STR_3:
   475  00FFD3  72                 	db	114	;'r'
   476  00FFD4  61                 	db	97	;'a'
   477  00FFD5  64                 	db	100	;'d'
   478  00FFD6  69                 	db	105	;'i'
   479  00FFD7  6F                 	db	111	;'o'
   480  00FFD8  5F                 	db	95	;'_'
   481  00FFD9  74                 	db	116	;'t'
   482  00FFDA  78                 	db	120	;'x'
   483  00FFDB  5F                 	db	95	;'_'
   484  00FFDC  6F                 	db	111	;'o'
   485  00FFDD  6B                 	db	107	;'k'
   486  00FFDE  00                 	db	0
   487  00FFDF                     STR_1:
   488  00FFDF  72                 	db	114	;'r'
   489  00FFE0  61                 	db	97	;'a'
   490  00FFE1  64                 	db	100	;'d'
   491  00FFE2  69                 	db	105	;'i'
   492  00FFE3  6F                 	db	111	;'o'
   493  00FFE4  5F                 	db	95	;'_'
   494  00FFE5  65                 	db	101	;'e'
   495  00FFE6  72                 	db	114	;'r'
   496  00FFE7  72                 	db	114	;'r'
   497  00FFE8  00                 	db	0
   498  00FFE9                     STR_2:
   499  00FFE9  72                 	db	114	;'r'
   500  00FFEA  61                 	db	97	;'a'
   501  00FFEB  64                 	db	100	;'d'
   502  00FFEC  69                 	db	105	;'i'
   503  00FFED  6F                 	db	111	;'o'
   504  00FFEE  5F                 	db	95	;'_'
   505  00FFEF  72                 	db	114	;'r'
   506  00FFF0  78                 	db	120	;'x'
   507  00FFF1  00                 	db	0
   508  00FFF2                     STR_28:
   509  00FFF2  28                 	db	40
   510  00FFF3  6E                 	db	110	;'n'
   511  00FFF4  75                 	db	117	;'u'
   512  00FFF5  6C                 	db	108	;'l'
   513  00FFF6  6C                 	db	108	;'l'
   514  00FFF7  29                 	db	41
   515  00FFF8  00                 	db	0
   516  00FFF9                     STR_7:
   517  00FFF9  25                 	db	37
   518  00FFFA  63                 	db	99	;'c'
   519  00FFFB  25                 	db	37
   520  00FFFC  63                 	db	99	;'c'
   521  00FFFD  00                 	db	0
   522  0000                     
   523                           ; #config settings
   524  00FFFE  00                 	db	0	; dummy byte at the end
   525  0000                     
   526                           	psect	nvCOMRAM
   527  000039                     __pnvCOMRAM:
   528                           	opt stack 0
   529  000039                     _eusart1TxBufferRemaining:
   530                           	opt stack 0
   531  000039                     	ds	1
   532  0000                     _ANSELA	set	3896
   533  0000                     _ANSELB	set	3897
   534  0000                     _ANSELC	set	3898
   535  0000                     _CCPTMRS0bits	set	3913
   536  0000                     _BAUDCON1	set	4024
   537  0000                     _CCP1CON	set	4029
   538  0000                     _CCPR1H	set	4031
   539  0000                     _CCPR1L	set	4030
   540  0000                     _ECCP1AS	set	4022
   541  0000                     _INTCON2bits	set	4081
   542  0000                     _INTCONbits	set	4082
   543  0000                     _IPR1bits	set	3999
   544  0000                     _LATA	set	3977
   545  0000                     _LATB	set	3978
   546  0000                     _LATC	set	3979
   547  0000                     _OSCCON	set	4051
   548  0000                     _OSCCON2	set	4050
   549  0000                     _OSCTUNE	set	3995
   550  0000                     _PIE1bits	set	3997
   551  0000                     _PIR1bits	set	3998
   552  0000                     _PR2	set	4027
   553  0000                     _PSTR1CON	set	4025
   554  0000                     _PWM1CON	set	4023
   555  0000                     _RCONbits	set	4048
   556  0000                     _RCREG1	set	4014
   557  0000                     _RCSTA1	set	4011
   558  0000                     _RCSTA1bits	set	4011
   559  0000                     _SPBRG1	set	4015
   560  0000                     _SPBRGH1	set	4016
   561  0000                     _T2CON	set	4026
   562  0000                     _T2CONbits	set	4026
   563  0000                     _TMR2	set	4028
   564  0000                     _TRISA	set	3986
   565  0000                     _TRISB	set	3987
   566  0000                     _TRISC	set	3988
   567  0000                     _TXREG1	set	4013
   568  0000                     _TXSTA1	set	4012
   569  0000                     _WPUB	set	3937
   570                           
   571                           	psect	cinit
   572  001658                     __pcinit:
   573                           	opt stack 0
   574  001658                     start_initialization:
   575                           	opt stack 0
   576  001658                     __initialization:
   577                           	opt stack 0
   578                           
   579                           ; Clear objects allocated to BANK2 (128 bytes)
   580  001658  EE02  F000         	lfsr	0,__pbssBANK2
   581  00165C  0E80               	movlw	128
   582  00165E                     clear_0:
   583  00165E  6AEE               	clrf	postinc0,c
   584  001660  06E8               	decf	wreg,f,c
   585  001662  E1FD               	bnz	clear_0
   586                           
   587                           ; Clear objects allocated to BANK1 (256 bytes)
   588  001664  EE01  F000         	lfsr	0,__pbssBANK1
   589  001668  EE11 F000          	lfsr	1,256
   590  00166C                     clear_1:
   591  00166C  6AEE               	clrf	postinc0,c
   592  00166E  50E5               	movf	postdec1,w,c
   593  001670  50E1               	movf	fsr1l,w,c
   594  001672  E1FC               	bnz	clear_1
   595  001674  50E2               	movf	fsr1h,w,c
   596  001676  E1FA               	bnz	clear_1
   597                           
   598                           ; Clear objects allocated to BANK0 (43 bytes)
   599  001678  EE00  F098         	lfsr	0,__pbssBANK0
   600  00167C  0E2B               	movlw	43
   601  00167E                     clear_2:
   602  00167E  6AEE               	clrf	postinc0,c
   603  001680  06E8               	decf	wreg,f,c
   604  001682  E1FD               	bnz	clear_2
   605                           
   606                           ; Clear objects allocated to COMRAM (8 bytes)
   607  001684  EE00  F02D         	lfsr	0,__pbssCOMRAM
   608  001688  0E08               	movlw	8
   609  00168A                     clear_3:
   610  00168A  6AEE               	clrf	postinc0,c
   611  00168C  06E8               	decf	wreg,f,c
   612  00168E  E1FD               	bnz	clear_3
   613                           
   614                           ; Initialize objects allocated to COMRAM (4 bytes)
   615                           ; load TBLPTR registers with __pidataCOMRAM
   616  001690  0E7E               	movlw	low __pidataCOMRAM
   617  001692  6EF6               	movwf	tblptrl,c
   618  001694  0E1C               	movlw	high __pidataCOMRAM
   619  001696  6EF7               	movwf	tblptrh,c
   620  001698  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   621  00169A  6EF8               	movwf	tblptru,c
   622  00169C  EE00  F035         	lfsr	0,__pdataCOMRAM
   623  0016A0  EE10 F004          	lfsr	1,4
   624  0016A4                     copy_data0:
   625  0016A4  0009               	tblrd		*+
   626  0016A6  CFF5 FFEE          	movff	tablat,postinc0
   627  0016AA  50E5               	movf	postdec1,w,c
   628  0016AC  50E1               	movf	fsr1l,w,c
   629  0016AE  E1FA               	bnz	copy_data0
   630  0016B0                     end_of_initialization:
   631                           	opt stack 0
   632  0016B0                     __end_of__initialization:
   633                           	opt stack 0
   634  0016B0  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   635  0016B2  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   636  0016B4  0100               	movlb	0
   637  0016B6  EFC1  F004         	goto	_main	;jump to C main() function
   638                           tblptru	equ	0xFF8
   639                           tblptrh	equ	0xFF7
   640                           tblptrl	equ	0xFF6
   641                           tablat	equ	0xFF5
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           postdec1	equ	0xFE5
   645                           fsr1h	equ	0xFE2
   646                           fsr1l	equ	0xFE1
   647                           
   648                           	psect	bssCOMRAM
   649  00002D                     __pbssCOMRAM:
   650                           	opt stack 0
   651  00002D                     _index:
   652                           	opt stack 0
   653  00002D                     	ds	2
   654  00002F                     _eusart1RxCount:
   655                           	opt stack 0
   656  00002F                     	ds	1
   657  000030                     _eusart1RxHead:
   658                           	opt stack 0
   659  000030                     	ds	1
   660  000031                     _eusart1RxTail:
   661                           	opt stack 0
   662  000031                     	ds	1
   663  000032                     _eusart1TxHead:
   664                           	opt stack 0
   665  000032                     	ds	1
   666  000033                     _eusart1TxTail:
   667                           	opt stack 0
   668  000033                     	ds	1
   669  000034                     _ready:
   670                           	opt stack 0
   671  000034                     	ds	1
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1h	equ	0xFE2
   680                           fsr1l	equ	0xFE1
   681                           
   682                           	psect	dataCOMRAM
   683  000035                     __pdataCOMRAM:
   684                           	opt stack 0
   685  000035                     _randx:
   686                           	opt stack 0
   687  000035                     	ds	4
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postdec1	equ	0xFE5
   695                           fsr1h	equ	0xFE2
   696                           fsr1l	equ	0xFE1
   697                           
   698                           	psect	bssBANK0
   699  000098                     __pbssBANK0:
   700                           	opt stack 0
   701  000098                     _inc:
   702                           	opt stack 0
   703  000098                     	ds	1
   704  000099                     _uartState:
   705                           	opt stack 0
   706  000099                     	ds	1
   707  00009A                     _val:
   708                           	opt stack 0
   709  00009A                     	ds	1
   710  00009B                     _uuid:
   711                           	opt stack 0
   712  00009B                     	ds	40
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1h	equ	0xFE2
   721                           fsr1l	equ	0xFE1
   722                           
   723                           	psect	bssBANK1
   724  000100                     __pbssBANK1:
   725                           	opt stack 0
   726  000100                     _eusart1TxBuffer:
   727                           	opt stack 0
   728  000100                     	ds	128
   729  000180                     _line:
   730                           	opt stack 0
   731  000180                     	ds	128
   732                           tblptru	equ	0xFF8
   733                           tblptrh	equ	0xFF7
   734                           tblptrl	equ	0xFF6
   735                           tablat	equ	0xFF5
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           postdec1	equ	0xFE5
   739                           fsr1h	equ	0xFE2
   740                           fsr1l	equ	0xFE1
   741                           
   742                           	psect	bssBANK2
   743  000200                     __pbssBANK2:
   744                           	opt stack 0
   745  000200                     _eusart1RxBuffer:
   746                           	opt stack 0
   747  000200                     	ds	128
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           postdec1	equ	0xFE5
   755                           fsr1h	equ	0xFE2
   756                           fsr1l	equ	0xFE1
   757                           
   758                           	psect	cstackBANK0
   759  000060                     __pcstackBANK0:
   760                           	opt stack 0
   761  000060                     ?_strncmp:
   762                           	opt stack 0
   763  000060                     ?___lwmod:
   764                           	opt stack 0
   765  000060                     ?___lmul:
   766                           	opt stack 0
   767  000060                     ___lwmod@dividend:
   768                           	opt stack 0
   769  000060                     strncmp@s1:
   770                           	opt stack 0
   771  000060                     ___lmul@multiplier:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x0
   775  000060                     	ds	2
   776  000062                     ___lwmod@divisor:
   777                           	opt stack 0
   778  000062                     strncmp@s2:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x2
   782  000062                     	ds	2
   783  000064                     ___lwmod@counter:
   784                           	opt stack 0
   785  000064                     strncmp@len:
   786                           	opt stack 0
   787  000064                     ___lmul@multiplicand:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x4
   791  000064                     	ds	1
   792  000065                     ?__doprnt:
   793                           	opt stack 0
   794  000065                     __doprnt@pb:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x5
   798  000065                     	ds	1
   799  000066                     ??_strncmp:
   800                           
   801                           ; 1 bytes @ 0x6
   802  000066                     	ds	1
   803  000067                     __doprnt@f:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x7
   807  000067                     	ds	1
   808  000068                     ?___awmod:
   809                           	opt stack 0
   810  000068                     ?_strtol:
   811                           	opt stack 0
   812  000068                     ___awmod@dividend:
   813                           	opt stack 0
   814  000068                     strtol@s:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x8
   818  000068                     	ds	1
   819  000069                     ?_strstr:
   820                           	opt stack 0
   821  000069                     __doprnt@ap:
   822                           	opt stack 0
   823  000069                     strstr@s1:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x9
   827  000069                     	ds	1
   828  00006A                     ___awmod@divisor:
   829                           	opt stack 0
   830  00006A                     strtol@endptr:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0xA
   834  00006A                     	ds	1
   835  00006B                     ??__doprnt:
   836  00006B                     strstr@s2:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0xB
   840  00006B                     	ds	1
   841  00006C                     ___awmod@counter:
   842                           	opt stack 0
   843  00006C                     strtol@base:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0xC
   847  00006C                     	ds	1
   848  00006D                     ___awmod@sign:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0xD
   852  00006D                     	ds	1
   853  00006E                     ??_strtol:
   854                           
   855                           ; 1 bytes @ 0xE
   856  00006E                     	ds	1
   857  00006F                     __doprnt@idx:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0xF
   861  00006F                     	ds	1
   862  000070                     __doprnt@prec:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x10
   866  000070                     	ds	1
   867  000071                     __doprnt@len:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x11
   871  000071                     	ds	1
   872  000072                     strtol@sign:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x12
   876  000072                     	ds	1
   877  000073                     __doprnt@cp:
   878                           	opt stack 0
   879  000073                     strtol@a:
   880                           	opt stack 0
   881                           
   882                           ; 4 bytes @ 0x13
   883  000073                     	ds	2
   884  000075                     __doprnt@val:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x15
   888  000075                     	ds	2
   889  000077                     __doprnt@flag:
   890                           	opt stack 0
   891  000077                     strtol@c:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x17
   895  000077                     	ds	1
   896  000078                     __doprnt@width:
   897                           	opt stack 0
   898  000078                     srand@x:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x18
   902  000078                     	ds	2
   903  00007A                     __doprnt@c:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x1A
   907  00007A                     	ds	1
   908  00007B                     ?_printf:
   909                           	opt stack 0
   910  00007B                     ?_sprintf:
   911                           	opt stack 0
   912  00007B                     printf@f:
   913                           	opt stack 0
   914  00007B                     sprintf@wh:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x1B
   918  00007B                     	ds	2
   919  00007D                     sprintf@f:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x1D
   923  00007D                     	ds	6
   924  000083                     printf@ap:
   925                           	opt stack 0
   926  000083                     sprintf@ap:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x23
   930  000083                     	ds	2
   931  000085                     printf@pb:
   932                           	opt stack 0
   933  000085                     sprintf@pb:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x25
   937  000085                     	ds	4
   938  000089                     ?_process_message:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x29
   942  000089                     	ds	2
   943  00008B                     process_message@res:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x2B
   947  00008B                     	ds	2
   948  00008D                     process_message@hexval:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x2D
   952  00008D                     	ds	4
   953  000091                     ??_main:
   954                           
   955                           ; 1 bytes @ 0x31
   956  000091                     	ds	3
   957  000094                     main@q:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x34
   961  000094                     	ds	2
   962  000096                     main@delay:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x36
   966  000096                     	ds	2
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           postinc0	equ	0xFEE
   972                           wreg	equ	0xFE8
   973                           postdec1	equ	0xFE5
   974                           fsr1h	equ	0xFE2
   975                           fsr1l	equ	0xFE1
   976                           
   977                           	psect	cstackCOMRAM
   978  000001                     __pcstackCOMRAM:
   979                           	opt stack 0
   980  000001                     ?_strcmp:
   981                           	opt stack 0
   982  000001                     ?i2_strlen:
   983                           	opt stack 0
   984  000001                     ?i2_strchr:
   985                           	opt stack 0
   986  000001                     EUSART1_Read@readValue:
   987                           	opt stack 0
   988  000001                     strcmp@s1:
   989                           	opt stack 0
   990  000001                     i2strlen@s:
   991                           	opt stack 0
   992  000001                     i2strchr@ptr:
   993                           	opt stack 0
   994                           
   995                           ; 2 bytes @ 0x0
   996  000001                     	ds	2
   997  000003                     ??i2_strlen:
   998  000003                     strcmp@s2:
   999                           	opt stack 0
  1000  000003                     i2strchr@chr:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x2
  1004  000003                     	ds	2
  1005  000005                     ??_strcmp:
  1006  000005                     i2strlen@cp:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x4
  1010  000005                     	ds	1
  1011  000006                     strcmp@r:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x5
  1015  000006                     	ds	1
  1016  000007                     ?i2_strncmp:
  1017                           	opt stack 0
  1018  000007                     i2strncmp@s1:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x6
  1022  000007                     	ds	2
  1023  000009                     i2strncmp@s2:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x8
  1027  000009                     	ds	2
  1028  00000B                     i2strncmp@len:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0xA
  1032  00000B                     	ds	2
  1033  00000D                     ??i2_strncmp:
  1034                           
  1035                           ; 1 bytes @ 0xC
  1036  00000D                     	ds	3
  1037  000010                     ?i2_strstr:
  1038                           	opt stack 0
  1039  000010                     i2strstr@s1:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0xF
  1043  000010                     	ds	2
  1044  000012                     i2strstr@s2:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x11
  1048  000012                     	ds	2
  1049  000014                     ??i2_strstr:
  1050                           
  1051                           ; 1 bytes @ 0x13
  1052  000014                     	ds	1
  1053  000015                     ??_EUSART1_Receive_ISR:
  1054                           
  1055                           ; 1 bytes @ 0x14
  1056  000015                     	ds	1
  1057  000016                     EUSART1_Receive_ISR@state:
  1058                           	opt stack 0
  1059                           
  1060                           ; 2 bytes @ 0x15
  1061  000016                     	ds	2
  1062  000018                     ??_INTERRUPT_InterruptManager:
  1063                           
  1064                           ; 1 bytes @ 0x17
  1065  000018                     	ds	14
  1066  000026                     ??_isdigit:
  1067  000026                     ??_isspace:
  1068  000026                     ??_isupper:
  1069  000026                     ?_strlen:
  1070                           	opt stack 0
  1071  000026                     ?_strchr:
  1072                           	opt stack 0
  1073  000026                     ?___wmul:
  1074                           	opt stack 0
  1075  000026                     ?___lwdiv:
  1076                           	opt stack 0
  1077  000026                     EUSART1_Write@txData:
  1078                           	opt stack 0
  1079  000026                     toupper@c:
  1080                           	opt stack 0
  1081  000026                     EPWM1_LoadDutyValue@dutyValue:
  1082                           	opt stack 0
  1083  000026                     wait_5ms@j:
  1084                           	opt stack 0
  1085  000026                     ___wmul@multiplier:
  1086                           	opt stack 0
  1087  000026                     ___lwdiv@dividend:
  1088                           	opt stack 0
  1089  000026                     strcpy@to:
  1090                           	opt stack 0
  1091  000026                     strlen@s:
  1092                           	opt stack 0
  1093  000026                     strchr@ptr:
  1094                           	opt stack 0
  1095  000026                     ___lmul@product:
  1096                           	opt stack 0
  1097                           
  1098                           ; 4 bytes @ 0x25
  1099  000026                     	ds	1
  1100  000027                     putch@txData:
  1101                           	opt stack 0
  1102  000027                     _isdigit$1031:
  1103                           	opt stack 0
  1104  000027                     _isspace$1314:
  1105                           	opt stack 0
  1106  000027                     _isupper$1317:
  1107                           	opt stack 0
  1108                           
  1109                           ; 1 bytes @ 0x26
  1110  000027                     	ds	1
  1111  000028                     ??_strlen:
  1112  000028                     ??_EPWM1_LoadDutyValue:
  1113  000028                     ??_wait_5ms:
  1114  000028                     isdigit@c:
  1115                           	opt stack 0
  1116  000028                     isspace@c:
  1117                           	opt stack 0
  1118  000028                     isupper@c:
  1119                           	opt stack 0
  1120  000028                     ___wmul@multiplicand:
  1121                           	opt stack 0
  1122  000028                     ___lwdiv@divisor:
  1123                           	opt stack 0
  1124  000028                     strcpy@from:
  1125                           	opt stack 0
  1126  000028                     strchr@chr:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x27
  1130  000028                     	ds	1
  1131  000029                     ??_isalpha:
  1132                           
  1133                           ; 1 bytes @ 0x28
  1134  000029                     	ds	1
  1135  00002A                     ?_rand:
  1136                           	opt stack 0
  1137  00002A                     _isalpha$1311:
  1138                           	opt stack 0
  1139  00002A                     ___wmul@product:
  1140                           	opt stack 0
  1141  00002A                     ___lwdiv@quotient:
  1142                           	opt stack 0
  1143  00002A                     strcpy@cp:
  1144                           	opt stack 0
  1145  00002A                     strlen@cp:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x29
  1149  00002A                     	ds	1
  1150  00002B                     wait_5ms@i:
  1151                           	opt stack 0
  1152  00002B                     isalpha@c:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x2A
  1156  00002B                     	ds	1
  1157  00002C                     ??_strstr:
  1158  00002C                     ___lwdiv@counter:
  1159                           	opt stack 0
  1160                           
  1161                           ; 1 bytes @ 0x2B
  1162  00002C                     	ds	1
  1163  00002D                     tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec1	equ	0xFE5
  1170                           fsr1h	equ	0xFE2
  1171                           fsr1l	equ	0xFE1
  1172                           
  1173                           ; 1 bytes @ 0x2C
  1174 ;;
  1175 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1176 ;;
  1177 ;; *************** function _main *****************
  1178 ;; Defined at:
  1179 ;;		line 78 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  delay           2   54[BANK0 ] int 
  1184 ;;  q               2   52[BANK0 ] int 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:        7 bytes
  1199 ;; Hardware stack levels required when called:    9
  1200 ;; This function calls:
  1201 ;;		_EPWM1_LoadDutyValue
  1202 ;;		_SYSTEM_Initialize
  1203 ;;		___awmod
  1204 ;;		_getUUID
  1205 ;;		_printf
  1206 ;;		_process_message
  1207 ;;		_rand
  1208 ;;		_read_line
  1209 ;;		_srand
  1210 ;;		_strtol
  1211 ;;		_wait_5ms
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text0
  1218  000982                     __ptext0:
  1219                           	opt stack 0
  1220  000982                     _main:
  1221                           	opt stack 22
  1222                           
  1223                           ;main.c: 79: SYSTEM_Initialize();
  1224                           
  1225                           ;incstack = 0
  1226  000982  EC01  F00E         	call	_SYSTEM_Initialize	;wreg free
  1227                           
  1228                           ;main.c: 80: (INTCONbits.GIE = 1);
  1229  000986  8EF2               	bsf	intcon,7,c	;volatile
  1230                           
  1231                           ;main.c: 81: (INTCONbits.PEIE = 1);
  1232  000988  8CF2               	bsf	intcon,6,c	;volatile
  1233                           
  1234                           ;main.c: 84: wait_5ms(5);
  1235  00098A  0E00               	movlw	0
  1236  00098C  6E27               	movwf	wait_5ms@j+1,c
  1237  00098E  0E05               	movlw	5
  1238  000990  6E26               	movwf	wait_5ms@j,c
  1239  000992  ECD6  F00C         	call	_wait_5ms	;wreg free
  1240                           
  1241                           ;main.c: 85: printf("sys reset\r\n");
  1242  000996  0EC7               	movlw	low STR_8
  1243  000998  0100               	movlb	0	; () banked
  1244  00099A  6F7B               	movwf	printf@f& (0+255),b
  1245  00099C  0EFF               	movlw	high STR_8
  1246  00099E  0100               	movlb	0	; () banked
  1247  0009A0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1248  0009A2  EC5E  F00C         	call	_printf	;wreg free
  1249                           
  1250                           ;main.c: 86: wait_5ms(5);
  1251  0009A6  0E00               	movlw	0
  1252  0009A8  6E27               	movwf	wait_5ms@j+1,c
  1253  0009AA  0E05               	movlw	5
  1254  0009AC  6E26               	movwf	wait_5ms@j,c
  1255  0009AE  ECD6  F00C         	call	_wait_5ms	;wreg free
  1256                           
  1257                           ;main.c: 87: printf("sys get ver\r\n");
  1258  0009B2  0EA0               	movlw	low STR_9
  1259  0009B4  0100               	movlb	0	; () banked
  1260  0009B6  6F7B               	movwf	printf@f& (0+255),b
  1261  0009B8  0EFF               	movlw	high STR_9
  1262  0009BA  0100               	movlb	0	; () banked
  1263  0009BC  6F7C               	movwf	(printf@f+1)& (0+255),b
  1264  0009BE  EC5E  F00C         	call	_printf	;wreg free
  1265                           
  1266                           ;main.c: 88: read_line();
  1267  0009C2  EC2F  F00E         	call	_read_line	;wreg free
  1268                           
  1269                           ;main.c: 89: printf("radio get sf\r\n");
  1270  0009C6  0E73               	movlw	low STR_10
  1271  0009C8  0100               	movlb	0	; () banked
  1272  0009CA  6F7B               	movwf	printf@f& (0+255),b
  1273  0009CC  0EFF               	movlw	high STR_10
  1274  0009CE  0100               	movlb	0	; () banked
  1275  0009D0  6F7C               	movwf	(printf@f+1)& (0+255),b
  1276  0009D2  EC5E  F00C         	call	_printf	;wreg free
  1277                           
  1278                           ;main.c: 90: read_line();
  1279  0009D6  EC2F  F00E         	call	_read_line	;wreg free
  1280                           
  1281                           ;main.c: 91: printf("radio get bw\r\n");
  1282  0009DA  0E91               	movlw	low STR_11
  1283  0009DC  0100               	movlb	0	; () banked
  1284  0009DE  6F7B               	movwf	printf@f& (0+255),b
  1285  0009E0  0EFF               	movlw	high STR_11
  1286  0009E2  0100               	movlb	0	; () banked
  1287  0009E4  6F7C               	movwf	(printf@f+1)& (0+255),b
  1288  0009E6  EC5E  F00C         	call	_printf	;wreg free
  1289                           
  1290                           ;main.c: 92: read_line();
  1291  0009EA  EC2F  F00E         	call	_read_line	;wreg free
  1292                           
  1293                           ;main.c: 93: printf("radio get cr\r\n");
  1294  0009EE  0E82               	movlw	low STR_12
  1295  0009F0  0100               	movlb	0	; () banked
  1296  0009F2  6F7B               	movwf	printf@f& (0+255),b
  1297  0009F4  0EFF               	movlw	high STR_12
  1298  0009F6  0100               	movlb	0	; () banked
  1299  0009F8  6F7C               	movwf	(printf@f+1)& (0+255),b
  1300  0009FA  EC5E  F00C         	call	_printf	;wreg free
  1301                           
  1302                           ;main.c: 94: read_line();
  1303  0009FE  EC2F  F00E         	call	_read_line	;wreg free
  1304                           
  1305                           ;main.c: 95: printf("radio get prlen\r\n");
  1306  000A02  0E1F               	movlw	low STR_13
  1307  000A04  0100               	movlb	0	; () banked
  1308  000A06  6F7B               	movwf	printf@f& (0+255),b
  1309  000A08  0EFF               	movlw	high STR_13
  1310  000A0A  0100               	movlb	0	; () banked
  1311  000A0C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1312  000A0E  EC5E  F00C         	call	_printf	;wreg free
  1313                           
  1314                           ;main.c: 96: read_line();
  1315  000A12  EC2F  F00E         	call	_read_line	;wreg free
  1316                           
  1317                           ;main.c: 97: printf("radio get pwr\r\n");
  1318  000A16  0E63               	movlw	low STR_14
  1319  000A18  0100               	movlb	0	; () banked
  1320  000A1A  6F7B               	movwf	printf@f& (0+255),b
  1321  000A1C  0EFF               	movlw	high STR_14
  1322  000A1E  0100               	movlb	0	; () banked
  1323  000A20  6F7C               	movwf	(printf@f+1)& (0+255),b
  1324  000A22  EC5E  F00C         	call	_printf	;wreg free
  1325                           
  1326                           ;main.c: 98: read_line();
  1327  000A26  EC2F  F00E         	call	_read_line	;wreg free
  1328                           
  1329                           ;main.c: 99: printf("mac pause\r\n");
  1330  000A2A  0EBB               	movlw	low STR_15
  1331  000A2C  0100               	movlb	0	; () banked
  1332  000A2E  6F7B               	movwf	printf@f& (0+255),b
  1333  000A30  0EFF               	movlw	high STR_15
  1334  000A32  0100               	movlb	0	; () banked
  1335  000A34  6F7C               	movwf	(printf@f+1)& (0+255),b
  1336  000A36  EC5E  F00C         	call	_printf	;wreg free
  1337                           
  1338                           ;main.c: 100: read_line();
  1339  000A3A  EC2F  F00E         	call	_read_line	;wreg free
  1340                           
  1341                           ;main.c: 102: printf("radio set pwr -2\r\n");
  1342  000A3E  0EC0               	movlw	low STR_16
  1343  000A40  0100               	movlb	0	; () banked
  1344  000A42  6F7B               	movwf	printf@f& (0+255),b
  1345  000A44  0EFE               	movlw	high STR_16
  1346  000A46  0100               	movlb	0	; () banked
  1347  000A48  6F7C               	movwf	(printf@f+1)& (0+255),b
  1348  000A4A  EC5E  F00C         	call	_printf	;wreg free
  1349                           
  1350                           ;main.c: 103: read_line();
  1351  000A4E  EC2F  F00E         	call	_read_line	;wreg free
  1352                           
  1353                           ;main.c: 104: printf("radio set bw 500\r\n");
  1354  000A52  0EAD               	movlw	low STR_17
  1355  000A54  0100               	movlb	0	; () banked
  1356  000A56  6F7B               	movwf	printf@f& (0+255),b
  1357  000A58  0EFE               	movlw	high STR_17
  1358  000A5A  0100               	movlb	0	; () banked
  1359  000A5C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1360  000A5E  EC5E  F00C         	call	_printf	;wreg free
  1361                           
  1362                           ;main.c: 105: read_line();
  1363  000A62  EC2F  F00E         	call	_read_line	;wreg free
  1364                           
  1365                           ;main.c: 106: printf("radio set sf sf7\r\n");
  1366  000A66  0ED3               	movlw	low STR_18
  1367  000A68  0100               	movlb	0	; () banked
  1368  000A6A  6F7B               	movwf	printf@f& (0+255),b
  1369  000A6C  0EFE               	movlw	high STR_18
  1370  000A6E  0100               	movlb	0	; () banked
  1371  000A70  6F7C               	movwf	(printf@f+1)& (0+255),b
  1372  000A72  EC5E  F00C         	call	_printf	;wreg free
  1373                           
  1374                           ;main.c: 107: read_line();
  1375  000A76  EC2F  F00E         	call	_read_line	;wreg free
  1376                           
  1377                           ;main.c: 108: printf("radio set cr 4/8\r\n");
  1378  000A7A  0EE6               	movlw	low STR_19
  1379  000A7C  0100               	movlb	0	; () banked
  1380  000A7E  6F7B               	movwf	printf@f& (0+255),b
  1381  000A80  0EFE               	movlw	high STR_19
  1382  000A82  0100               	movlb	0	; () banked
  1383  000A84  6F7C               	movwf	(printf@f+1)& (0+255),b
  1384  000A86  EC5E  F00C         	call	_printf	;wreg free
  1385                           
  1386                           ;main.c: 109: read_line();
  1387  000A8A  EC2F  F00E         	call	_read_line	;wreg free
  1388                           
  1389                           ;main.c: 110: printf("radio set crc on\r\n");
  1390  000A8E  0E0C               	movlw	low STR_20
  1391  000A90  0100               	movlb	0	; () banked
  1392  000A92  6F7B               	movwf	printf@f& (0+255),b
  1393  000A94  0EFF               	movlw	high STR_20
  1394  000A96  0100               	movlb	0	; () banked
  1395  000A98  6F7C               	movwf	(printf@f+1)& (0+255),b
  1396  000A9A  EC5E  F00C         	call	_printf	;wreg free
  1397                           
  1398                           ;main.c: 111: read_line();
  1399  000A9E  EC2F  F00E         	call	_read_line	;wreg free
  1400                           
  1401                           ;main.c: 113: getUUID();
  1402  000AA2  EC84  F00D         	call	_getUUID	;wreg free
  1403                           
  1404                           ;main.c: 115: srand((int)strtol(uuid, (0), 0));
  1405  000AA6  0E9B               	movlw	low _uuid
  1406  000AA8  0100               	movlb	0	; () banked
  1407  000AAA  6F68               	movwf	strtol@s& (0+255),b
  1408  000AAC  0E00               	movlw	high _uuid
  1409  000AAE  0100               	movlb	0	; () banked
  1410  000AB0  6F69               	movwf	(strtol@s+1)& (0+255),b
  1411  000AB2  0E00               	movlw	0
  1412  000AB4  0100               	movlb	0	; () banked
  1413  000AB6  6F6A               	movwf	strtol@endptr& (0+255),b
  1414  000AB8  0E00               	movlw	0
  1415  000ABA  0100               	movlb	0	; () banked
  1416  000ABC  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  1417  000ABE  0E00               	movlw	0
  1418  000AC0  0100               	movlb	0	; () banked
  1419  000AC2  6F6D               	movwf	(strtol@base+1)& (0+255),b
  1420  000AC4  0E00               	movlw	0
  1421  000AC6  6F6C               	movwf	strtol@base& (0+255),b
  1422  000AC8  ECAC  F006         	call	_strtol	;wreg free
  1423  000ACC  C068  F078         	movff	?_strtol,srand@x
  1424  000AD0  C069  F079         	movff	?_strtol+1,srand@x+1
  1425  000AD4  EC21  F00E         	call	_srand	;wreg free
  1426                           
  1427                           ;main.c: 116: int delay = 2000+(rand()%1000);
  1428  000AD8  EC8E  F00B         	call	_rand	;wreg free
  1429  000ADC  C02A  F068         	movff	?_rand,___awmod@dividend
  1430  000AE0  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1431  000AE4  0E03               	movlw	3
  1432  000AE6  0100               	movlb	0	; () banked
  1433  000AE8  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1434  000AEA  0EE8               	movlw	232
  1435  000AEC  6F6A               	movwf	___awmod@divisor& (0+255),b
  1436  000AEE  EC0E  F00A         	call	___awmod	;wreg free
  1437  000AF2  0ED0               	movlw	208
  1438  000AF4  0100               	movlb	0	; () banked
  1439  000AF6  2568               	addwf	?___awmod& (0+255),w,b
  1440  000AF8  0100               	movlb	0	; () banked
  1441  000AFA  6F96               	movwf	main@delay& (0+255),b
  1442  000AFC  0E07               	movlw	7
  1443  000AFE  0100               	movlb	0	; () banked
  1444  000B00  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1445  000B02  0100               	movlb	0	; () banked
  1446  000B04  6F97               	movwf	(main@delay+1)& (0+255),b
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 117: printf("radio set wdt %d\r\n",delay);
  1450  000B06  0EF9               	movlw	low STR_21
  1451  000B08  0100               	movlb	0	; () banked
  1452  000B0A  6F7B               	movwf	printf@f& (0+255),b
  1453  000B0C  0EFE               	movlw	high STR_21
  1454  000B0E  0100               	movlb	0	; () banked
  1455  000B10  6F7C               	movwf	(printf@f+1)& (0+255),b
  1456  000B12  C096  F07D         	movff	main@delay,?_printf+2
  1457  000B16  C097  F07E         	movff	main@delay+1,?_printf+3
  1458  000B1A  EC5E  F00C         	call	_printf	;wreg free
  1459                           
  1460                           ;main.c: 118: read_line();
  1461  000B1E  EC2F  F00E         	call	_read_line	;wreg free
  1462                           
  1463                           ;main.c: 132: printf("radio rx 0\r\n");
  1464  000B22  0EAE               	movlw	low STR_22
  1465  000B24  0100               	movlb	0	; () banked
  1466  000B26  6F7B               	movwf	printf@f& (0+255),b
  1467  000B28  0EFF               	movlw	high STR_22
  1468  000B2A  0100               	movlb	0	; () banked
  1469  000B2C  6F7C               	movwf	(printf@f+1)& (0+255),b
  1470  000B2E  EC5E  F00C         	call	_printf	;wreg free
  1471                           
  1472                           ;main.c: 133: read_line();
  1473  000B32  EC2F  F00E         	call	_read_line	;wreg free
  1474                           
  1475                           ;main.c: 136: int q=0;
  1476  000B36  0E00               	movlw	0
  1477  000B38  0100               	movlb	0	; () banked
  1478  000B3A  6F95               	movwf	(main@q+1)& (0+255),b
  1479  000B3C  0E00               	movlw	0
  1480  000B3E  6F94               	movwf	main@q& (0+255),b
  1481  000B40                     l3685:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;main.c: 139: _delay((unsigned long)((1)*(64000000/4000.0)));
  1485  000B40  0E15               	movlw	21
  1486  000B42  0100               	movlb	0	; () banked
  1487  000B44  6F91               	movwf	??_main& (0+255),b
  1488  000B46  0EC6               	movlw	198
  1489  000B48                     u4137:
  1490  000B48  2EE8               	decfsz	wreg,f,c
  1491  000B4A  D7FE               	goto	u4137
  1492  000B4C  2F91               	decfsz	??_main& (0+255),f,b
  1493  000B4E  D7FC               	goto	u4137
  1494  000B50  D000               	nop2	
  1495                           
  1496                           ;main.c: 140: q++;
  1497  000B52  0100               	movlb	0	; () banked
  1498  000B54  4B94               	infsnz	main@q& (0+255),f,b
  1499  000B56  2B95               	incf	(main@q+1)& (0+255),f,b
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 146: if(q>(2*delay)){
  1503  000B58  C096  F091         	movff	main@delay,??_main
  1504  000B5C  C097  F092         	movff	main@delay+1,??_main+1
  1505  000B60  90D8               	bcf	status,0,c
  1506  000B62  0100               	movlb	0	; () banked
  1507  000B64  3791               	rlcf	??_main& (0+255),f,b
  1508  000B66  3792               	rlcf	(??_main+1)& (0+255),f,b
  1509  000B68  0100               	movlb	0	; () banked
  1510  000B6A  5194               	movf	main@q& (0+255),w,b
  1511  000B6C  0100               	movlb	0	; () banked
  1512  000B6E  5D91               	subwf	??_main& (0+255),w,b
  1513  000B70  0100               	movlb	0	; () banked
  1514  000B72  5192               	movf	(??_main+1)& (0+255),w,b
  1515  000B74  0A80               	xorlw	128
  1516  000B76  0100               	movlb	0	; () banked
  1517  000B78  6F93               	movwf	(??_main+2)& (0+255),b
  1518  000B7A  0100               	movlb	0	; () banked
  1519  000B7C  5195               	movf	(main@q+1)& (0+255),w,b
  1520  000B7E  0A80               	xorlw	128
  1521  000B80  0100               	movlb	0	; () banked
  1522  000B82  5993               	subwfb	(??_main+2)& (0+255),w,b
  1523  000B84  A0D8               	btfss	status,0,c
  1524  000B86  EF4A  F000         	goto	start
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 148: }
  1528                           ;main.c: 153: if(uartState>2){
  1529                           
  1530                           ; BSR set to: 0
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 147: break;
  1534  000B8A  0E02               	movlw	2
  1535  000B8C  0100               	movlb	0	; () banked
  1536  000B8E  6599               	cpfsgt	_uartState& (0+255),b	;volatile
  1537  000B90  D7D7               	goto	l3685
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;main.c: 154: read_line();
  1541  000B92  EC2F  F00E         	call	_read_line	;wreg free
  1542                           
  1543                           ;main.c: 157: if(uartState==3){
  1544  000B96  0E03               	movlw	3
  1545  000B98  0100               	movlb	0	; () banked
  1546  000B9A  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1547  000B9C  A4D8               	btfss	status,2,c
  1548  000B9E  D013               	goto	l3703
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 158: if(q>delay){
  1552  000BA0  0100               	movlb	0	; () banked
  1553  000BA2  5194               	movf	main@q& (0+255),w,b
  1554  000BA4  0100               	movlb	0	; () banked
  1555  000BA6  5D96               	subwf	main@delay& (0+255),w,b
  1556  000BA8  0100               	movlb	0	; () banked
  1557  000BAA  5197               	movf	(main@delay+1)& (0+255),w,b
  1558  000BAC  0A80               	xorlw	128
  1559  000BAE  0100               	movlb	0	; () banked
  1560  000BB0  6F91               	movwf	??_main& (0+255),b
  1561  000BB2  0100               	movlb	0	; () banked
  1562  000BB4  5195               	movf	(main@q+1)& (0+255),w,b
  1563  000BB6  0A80               	xorlw	128
  1564  000BB8  0100               	movlb	0	; () banked
  1565  000BBA  5991               	subwfb	??_main& (0+255),w,b
  1566  000BBC  B0D8               	btfsc	status,0,c
  1567  000BBE  D003               	goto	l3703
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 159: uartState=5;
  1571  000BC0  0E05               	movlw	5
  1572  000BC2  0100               	movlb	0	; () banked
  1573  000BC4  6F99               	movwf	_uartState& (0+255),b	;volatile
  1574  000BC6                     l3703:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 160: }
  1578                           ;main.c: 161: }
  1579                           ;main.c: 165: if(uartState==4){
  1580  000BC6  0E04               	movlw	4
  1581  000BC8  0100               	movlb	0	; () banked
  1582  000BCA  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1583  000BCC  A4D8               	btfss	status,2,c
  1584  000BCE  D06B               	goto	l3729
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 167: if(process_message()){
  1588  000BD0  EC72  F008         	call	_process_message	;wreg free
  1589  000BD4  0100               	movlb	0	; () banked
  1590  000BD6  5189               	movf	?_process_message& (0+255),w,b
  1591  000BD8  0100               	movlb	0	; () banked
  1592  000BDA  118A               	iorwf	(?_process_message+1)& (0+255),w,b
  1593  000BDC  B4D8               	btfsc	status,2,c
  1594  000BDE  D050               	goto	l3725
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;main.c: 168: delay = 2000+(rand()%1000);
  1598  000BE0  EC8E  F00B         	call	_rand	;wreg free
  1599  000BE4  C02A  F068         	movff	?_rand,___awmod@dividend
  1600  000BE8  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1601  000BEC  0E03               	movlw	3
  1602  000BEE  0100               	movlb	0	; () banked
  1603  000BF0  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1604  000BF2  0EE8               	movlw	232
  1605  000BF4  6F6A               	movwf	___awmod@divisor& (0+255),b
  1606  000BF6  EC0E  F00A         	call	___awmod	;wreg free
  1607  000BFA  0ED0               	movlw	208
  1608  000BFC  0100               	movlb	0	; () banked
  1609  000BFE  2568               	addwf	?___awmod& (0+255),w,b
  1610  000C00  0100               	movlb	0	; () banked
  1611  000C02  6F96               	movwf	main@delay& (0+255),b
  1612  000C04  0E07               	movlw	7
  1613  000C06  0100               	movlb	0	; () banked
  1614  000C08  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1615  000C0A  0100               	movlb	0	; () banked
  1616  000C0C  6F97               	movwf	(main@delay+1)& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 169: printf("radio tx 42%s%02X%02X00000001\r\n",uuid,inc++,val);
  1620  000C0E  0E8D               	movlw	low STR_23
  1621  000C10  0100               	movlb	0	; () banked
  1622  000C12  6F7B               	movwf	printf@f& (0+255),b
  1623  000C14  0EFE               	movlw	high STR_23
  1624  000C16  0100               	movlb	0	; () banked
  1625  000C18  6F7C               	movwf	(printf@f+1)& (0+255),b
  1626  000C1A  0E9B               	movlw	low _uuid
  1627  000C1C  0100               	movlb	0	; () banked
  1628  000C1E  6F7D               	movwf	(?_printf+2)& (0+255),b
  1629  000C20  0E00               	movlw	high _uuid
  1630  000C22  0100               	movlb	0	; () banked
  1631  000C24  6F7E               	movwf	(?_printf+3)& (0+255),b
  1632  000C26  C098  F07F         	movff	_inc,?_printf+4
  1633  000C2A  0100               	movlb	0	; () banked
  1634  000C2C  6B80               	clrf	(?_printf+5)& (0+255),b
  1635  000C2E  C09A  F081         	movff	_val,?_printf+6
  1636  000C32  0100               	movlb	0	; () banked
  1637  000C34  6B82               	clrf	(?_printf+7)& (0+255),b
  1638  000C36  EC5E  F00C         	call	_printf	;wreg free
  1639  000C3A  0100               	movlb	0	; () banked
  1640  000C3C  2B98               	incf	_inc& (0+255),f,b
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;main.c: 170: read_line();
  1644  000C3E  EC2F  F00E         	call	_read_line	;wreg free
  1645                           
  1646                           ;main.c: 171: read_line();
  1647  000C42  EC2F  F00E         	call	_read_line	;wreg free
  1648                           
  1649                           ;main.c: 172: printf("radio set wdt %d\r\n",delay);
  1650  000C46  0EF9               	movlw	low STR_21
  1651  000C48  0100               	movlb	0	; () banked
  1652  000C4A  6F7B               	movwf	printf@f& (0+255),b
  1653  000C4C  0EFE               	movlw	high STR_21
  1654  000C4E  0100               	movlb	0	; () banked
  1655  000C50  6F7C               	movwf	(printf@f+1)& (0+255),b
  1656  000C52  C096  F07D         	movff	main@delay,?_printf+2
  1657  000C56  C097  F07E         	movff	main@delay+1,?_printf+3
  1658  000C5A  EC5E  F00C         	call	_printf	;wreg free
  1659                           
  1660                           ;main.c: 173: read_line();
  1661  000C5E  EC2F  F00E         	call	_read_line	;wreg free
  1662                           
  1663                           ;main.c: 175: EPWM1_LoadDutyValue((uint16_t) val*4);
  1664  000C62  0100               	movlb	0	; () banked
  1665  000C64  519A               	movf	_val& (0+255),w,b
  1666  000C66  0D04               	mullw	4
  1667  000C68  CFF3 F026          	movff	prodl,EPWM1_LoadDutyValue@dutyValue
  1668  000C6C  CFF4 F027          	movff	prodh,EPWM1_LoadDutyValue@dutyValue+1
  1669  000C70  EC3E  F00D         	call	_EPWM1_LoadDutyValue	;wreg free
  1670                           
  1671                           ;main.c: 176: q=0;
  1672  000C74  0E00               	movlw	0
  1673  000C76  0100               	movlb	0	; () banked
  1674  000C78  6F95               	movwf	(main@q+1)& (0+255),b
  1675  000C7A  0E00               	movlw	0
  1676  000C7C  6F94               	movwf	main@q& (0+255),b
  1677                           
  1678                           ;main.c: 177: } else {
  1679  000C7E  D013               	goto	l3729
  1680  000C80                     l3725:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;main.c: 178: if(q>delay){
  1684  000C80  0100               	movlb	0	; () banked
  1685  000C82  5194               	movf	main@q& (0+255),w,b
  1686  000C84  0100               	movlb	0	; () banked
  1687  000C86  5D96               	subwf	main@delay& (0+255),w,b
  1688  000C88  0100               	movlb	0	; () banked
  1689  000C8A  5197               	movf	(main@delay+1)& (0+255),w,b
  1690  000C8C  0A80               	xorlw	128
  1691  000C8E  0100               	movlb	0	; () banked
  1692  000C90  6F91               	movwf	??_main& (0+255),b
  1693  000C92  0100               	movlb	0	; () banked
  1694  000C94  5195               	movf	(main@q+1)& (0+255),w,b
  1695  000C96  0A80               	xorlw	128
  1696  000C98  0100               	movlb	0	; () banked
  1697  000C9A  5991               	subwfb	??_main& (0+255),w,b
  1698  000C9C  B0D8               	btfsc	status,0,c
  1699  000C9E  D003               	goto	l3729
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main.c: 179: uartState=5;
  1703  000CA0  0E05               	movlw	5
  1704  000CA2  0100               	movlb	0	; () banked
  1705  000CA4  6F99               	movwf	_uartState& (0+255),b	;volatile
  1706  000CA6                     l3729:
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;main.c: 180: }
  1710                           ;main.c: 181: }
  1711                           ;main.c: 182: }
  1712                           ;main.c: 184: if(uartState==5){
  1713  000CA6  0E05               	movlw	5
  1714  000CA8  0100               	movlb	0	; () banked
  1715  000CAA  1999               	xorwf	_uartState& (0+255),w,b	;volatile
  1716  000CAC  A4D8               	btfss	status,2,c
  1717  000CAE  D046               	goto	l3747
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 185: delay = 2000+(rand()%1000);
  1721  000CB0  EC8E  F00B         	call	_rand	;wreg free
  1722  000CB4  C02A  F068         	movff	?_rand,___awmod@dividend
  1723  000CB8  C02B  F069         	movff	?_rand+1,___awmod@dividend+1
  1724  000CBC  0E03               	movlw	3
  1725  000CBE  0100               	movlb	0	; () banked
  1726  000CC0  6F6B               	movwf	(___awmod@divisor+1)& (0+255),b
  1727  000CC2  0EE8               	movlw	232
  1728  000CC4  6F6A               	movwf	___awmod@divisor& (0+255),b
  1729  000CC6  EC0E  F00A         	call	___awmod	;wreg free
  1730  000CCA  0ED0               	movlw	208
  1731  000CCC  0100               	movlb	0	; () banked
  1732  000CCE  2568               	addwf	?___awmod& (0+255),w,b
  1733  000CD0  0100               	movlb	0	; () banked
  1734  000CD2  6F96               	movwf	main@delay& (0+255),b
  1735  000CD4  0E07               	movlw	7
  1736  000CD6  0100               	movlb	0	; () banked
  1737  000CD8  2169               	addwfc	(?___awmod+1)& (0+255),w,b
  1738  000CDA  0100               	movlb	0	; () banked
  1739  000CDC  6F97               	movwf	(main@delay+1)& (0+255),b
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 186: printf("radio tx 42%s%02X%02X00000000\r\n",uuid,inc++,val);
  1743  000CDE  0E6D               	movlw	low STR_25
  1744  000CE0  0100               	movlb	0	; () banked
  1745  000CE2  6F7B               	movwf	printf@f& (0+255),b
  1746  000CE4  0EFE               	movlw	high STR_25
  1747  000CE6  0100               	movlb	0	; () banked
  1748  000CE8  6F7C               	movwf	(printf@f+1)& (0+255),b
  1749  000CEA  0E9B               	movlw	low _uuid
  1750  000CEC  0100               	movlb	0	; () banked
  1751  000CEE  6F7D               	movwf	(?_printf+2)& (0+255),b
  1752  000CF0  0E00               	movlw	high _uuid
  1753  000CF2  0100               	movlb	0	; () banked
  1754  000CF4  6F7E               	movwf	(?_printf+3)& (0+255),b
  1755  000CF6  C098  F07F         	movff	_inc,?_printf+4
  1756  000CFA  0100               	movlb	0	; () banked
  1757  000CFC  6B80               	clrf	(?_printf+5)& (0+255),b
  1758  000CFE  C09A  F081         	movff	_val,?_printf+6
  1759  000D02  0100               	movlb	0	; () banked
  1760  000D04  6B82               	clrf	(?_printf+7)& (0+255),b
  1761  000D06  EC5E  F00C         	call	_printf	;wreg free
  1762  000D0A  0100               	movlb	0	; () banked
  1763  000D0C  2B98               	incf	_inc& (0+255),f,b
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;main.c: 187: read_line();
  1767  000D0E  EC2F  F00E         	call	_read_line	;wreg free
  1768                           
  1769                           ;main.c: 188: read_line();
  1770  000D12  EC2F  F00E         	call	_read_line	;wreg free
  1771                           
  1772                           ;main.c: 189: printf("radio set wdt %d\r\n",delay);
  1773  000D16  0EF9               	movlw	low STR_21
  1774  000D18  0100               	movlb	0	; () banked
  1775  000D1A  6F7B               	movwf	printf@f& (0+255),b
  1776  000D1C  0EFE               	movlw	high STR_21
  1777  000D1E  0100               	movlb	0	; () banked
  1778  000D20  6F7C               	movwf	(printf@f+1)& (0+255),b
  1779  000D22  C096  F07D         	movff	main@delay,?_printf+2
  1780  000D26  C097  F07E         	movff	main@delay+1,?_printf+3
  1781  000D2A  EC5E  F00C         	call	_printf	;wreg free
  1782                           
  1783                           ;main.c: 190: read_line();
  1784  000D2E  EC2F  F00E         	call	_read_line	;wreg free
  1785                           
  1786                           ;main.c: 191: q=0;
  1787  000D32  0E00               	movlw	0
  1788  000D34  0100               	movlb	0	; () banked
  1789  000D36  6F95               	movwf	(main@q+1)& (0+255),b
  1790  000D38  0E00               	movlw	0
  1791  000D3A  6F94               	movwf	main@q& (0+255),b
  1792  000D3C                     l3747:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 192: }
  1796                           ;main.c: 194: printf("radio rx 0\r\n");
  1797  000D3C  0EAE               	movlw	low STR_22
  1798  000D3E  0100               	movlb	0	; () banked
  1799  000D40  6F7B               	movwf	printf@f& (0+255),b
  1800  000D42  0EFF               	movlw	high STR_22
  1801  000D44  0100               	movlb	0	; () banked
  1802  000D46  6F7C               	movwf	(printf@f+1)& (0+255),b
  1803  000D48  EC5E  F00C         	call	_printf	;wreg free
  1804                           
  1805                           ;main.c: 195: read_line();
  1806  000D4C  EC2F  F00E         	call	_read_line	;wreg free
  1807                           
  1808                           ;main.c: 196: uartState=0;
  1809  000D50  0E00               	movlw	0
  1810  000D52  0100               	movlb	0	; () banked
  1811  000D54  6F99               	movwf	_uartState& (0+255),b	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814                           
  1815                           ; BSR set to: 0
  1816  000D56  D6F4               	goto	l3685
  1817  000D58                     __end_of_main:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           postdec1	equ	0xFE5
  1829                           fsr1h	equ	0xFE2
  1830                           fsr1l	equ	0xFE1
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function _wait_5ms *****************
  1834 ;; Defined at:
  1835 ;;		line 40 in file "main.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  j               2   37[COMRAM] int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  i               1   42[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        6 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    4
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text1
  1864  0019AC                     __ptext1:
  1865                           	opt stack 0
  1866  0019AC                     _wait_5ms:
  1867                           	opt stack 26
  1868                           
  1869                           ;main.c: 41: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;incstack = 0
  1873  0019AC  0E00               	movlw	0
  1874  0019AE  6E2B               	movwf	wait_5ms@i,c
  1875  0019B0  D009               	goto	l280
  1876  0019B2                     l2907:
  1877  0019B2  0E68               	movlw	104
  1878  0019B4  6E28               	movwf	??_wait_5ms& (0+255),c
  1879  0019B6  0EE4               	movlw	228
  1880  0019B8                     u4147:
  1881  0019B8  2EE8               	decfsz	wreg,f,c
  1882  0019BA  D7FE               	goto	u4147
  1883  0019BC  2E28               	decfsz	??_wait_5ms& (0+255),f,c
  1884  0019BE  D7FC               	goto	u4147
  1885  0019C0  D000               	nop2	
  1886  0019C2  2A2B               	incf	wait_5ms@i,f,c
  1887  0019C4                     l280:
  1888  0019C4  502B               	movf	wait_5ms@i,w,c
  1889  0019C6  6E28               	movwf	??_wait_5ms& (0+255),c
  1890  0019C8  6A29               	clrf	(??_wait_5ms+1)& (0+255),c
  1891  0019CA  5026               	movf	wait_5ms@j,w,c
  1892  0019CC  5C28               	subwf	??_wait_5ms,w,c
  1893  0019CE  5029               	movf	??_wait_5ms+1,w,c
  1894  0019D0  0A80               	xorlw	128
  1895  0019D2  6E2A               	movwf	(??_wait_5ms+2)& (0+255),c
  1896  0019D4  5027               	movf	wait_5ms@j+1,w,c
  1897  0019D6  0A80               	xorlw	128
  1898  0019D8  582A               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  1899  0019DA  B0D8               	btfsc	status,0,c
  1900  0019DC  0012               	return	
  1901  0019DE  D7E9               	goto	l2907
  1902  0019E0                     __end_of_wait_5ms:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           prodh	equ	0xFF4
  1909                           prodl	equ	0xFF3
  1910                           intcon	equ	0xFF2
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _srand *****************
  1919 ;; Defined at:
  1920 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  x               2   24[BANK0 ] unsigned int 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    4
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text2
  1949  001C42                     __ptext2:
  1950                           	opt stack 0
  1951  001C42                     _srand:
  1952                           	opt stack 26
  1953                           
  1954                           ;incstack = 0
  1955  001C42  C078  F035         	movff	srand@x,_randx
  1956  001C46  C079  F036         	movff	srand@x+1,_randx+1
  1957  001C4A  6A37               	clrf	_randx+2,c
  1958  001C4C  6A38               	clrf	_randx+3,c
  1959  001C4E  0012               	return		;funcret
  1960  001C50                     __end_of_srand:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           prodh	equ	0xFF4
  1967                           prodl	equ	0xFF3
  1968                           intcon	equ	0xFF2
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           status	equ	0xFD8
  1975                           
  1976 ;; *************** function _rand *****************
  1977 ;; Defined at:
  1978 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2   41[COMRAM] int 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    5
  1999 ;; This function calls:
  2000 ;;		___lmul
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text3
  2007  00171C                     __ptext3:
  2008                           	opt stack 0
  2009  00171C                     _rand:
  2010                           	opt stack 25
  2011                           
  2012                           ;incstack = 0
  2013  00171C  C035  F060         	movff	_randx,___lmul@multiplier
  2014  001720  C036  F061         	movff	_randx+1,___lmul@multiplier+1
  2015  001724  C037  F062         	movff	_randx+2,___lmul@multiplier+2
  2016  001728  C038  F063         	movff	_randx+3,___lmul@multiplier+3
  2017  00172C  0E6D               	movlw	109
  2018  00172E  0100               	movlb	0	; () banked
  2019  001730  6F64               	movwf	___lmul@multiplicand& (0+255),b
  2020  001732  0E4E               	movlw	78
  2021  001734  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2022  001736  0EC6               	movlw	198
  2023  001738  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2024  00173A  0E41               	movlw	65
  2025  00173C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2026  00173E  ECF6  F00A         	call	___lmul	;wreg free
  2027  001742  C060  F035         	movff	?___lmul,_randx
  2028  001746  C061  F036         	movff	?___lmul+1,_randx+1
  2029  00174A  C062  F037         	movff	?___lmul+2,_randx+2
  2030  00174E  C063  F038         	movff	?___lmul+3,_randx+3
  2031  001752  0E39               	movlw	57
  2032  001754  2635               	addwf	_randx,f,c
  2033  001756  0E30               	movlw	48
  2034  001758  2236               	addwfc	_randx+1,f,c
  2035  00175A  0E00               	movlw	0
  2036  00175C  2237               	addwfc	_randx+2,f,c
  2037  00175E  0E00               	movlw	0
  2038  001760  2238               	addwfc	_randx+3,f,c
  2039  001762  0EFF               	movlw	255
  2040  001764  1437               	andwf	_randx+2,w,c
  2041  001766  6E2A               	movwf	?_rand,c
  2042  001768  0E7F               	movlw	127
  2043  00176A  1438               	andwf	_randx+3,w,c
  2044  00176C  6E2B               	movwf	?_rand+1,c
  2045  00176E  0012               	return	
  2046  001770                     __end_of_rand:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           postdec1	equ	0xFE5
  2058                           fsr1h	equ	0xFE2
  2059                           fsr1l	equ	0xFE1
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _process_message *****************
  2063 ;; Defined at:
  2064 ;;		line 54 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  hexval          4   45[BANK0 ] unsigned char [4]
  2069 ;;  res             2   43[BANK0 ] int 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   41[BANK0 ] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        8 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    8
  2086 ;; This function calls:
  2087 ;;		_sprintf
  2088 ;;		_strlen
  2089 ;;		_strstr
  2090 ;;		_strtol
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text4
  2097  0010E4                     __ptext4:
  2098                           	opt stack 0
  2099  0010E4                     _process_message:
  2100                           	opt stack 22
  2101                           
  2102                           ;main.c: 56: if(strlen(line)!=32)return 0;
  2103                           
  2104                           ;incstack = 0
  2105  0010E4  0E80               	movlw	low _line
  2106  0010E6  6E26               	movwf	strlen@s,c
  2107  0010E8  0E01               	movlw	high _line
  2108  0010EA  6E27               	movwf	strlen@s+1,c
  2109  0010EC  ECB8  F00B         	call	_strlen	;wreg free
  2110  0010F0  0E20               	movlw	32
  2111  0010F2  1826               	xorwf	?_strlen,w,c
  2112  0010F4  1027               	iorwf	?_strlen+1,w,c
  2113  0010F6  B4D8               	btfsc	status,2,c
  2114  0010F8  D006               	goto	l3539
  2115  0010FA  0E00               	movlw	0
  2116  0010FC  0100               	movlb	0	; () banked
  2117  0010FE  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2118  001100  0E00               	movlw	0
  2119  001102  6F89               	movwf	?_process_message& (0+255),b
  2120                           
  2121                           ; BSR set to: 0
  2122  001104  0012               	return	
  2123  001106                     l3539:
  2124                           
  2125                           ;main.c: 58: int res = 0;
  2126  001106  0E00               	movlw	0
  2127  001108  0100               	movlb	0	; () banked
  2128  00110A  6F8C               	movwf	(process_message@res+1)& (0+255),b
  2129  00110C  0E00               	movlw	0
  2130  00110E  6F8B               	movwf	process_message@res& (0+255),b
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;main.c: 60: if(strstr(line,uuid)!=0)res++;
  2134  001110  0E80               	movlw	low _line
  2135  001112  0100               	movlb	0	; () banked
  2136  001114  6F69               	movwf	strstr@s1& (0+255),b
  2137  001116  0E01               	movlw	high _line
  2138  001118  0100               	movlb	0	; () banked
  2139  00111A  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2140  00111C  0E9B               	movlw	low _uuid
  2141  00111E  0100               	movlb	0	; () banked
  2142  001120  6F6B               	movwf	strstr@s2& (0+255),b
  2143  001122  0E00               	movlw	high _uuid
  2144  001124  0100               	movlb	0	; () banked
  2145  001126  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2146  001128  EC60  F009         	call	_strstr	;wreg free
  2147  00112C  0100               	movlb	0	; () banked
  2148  00112E  5169               	movf	?_strstr& (0+255),w,b
  2149  001130  0100               	movlb	0	; () banked
  2150  001132  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2151  001134  B4D8               	btfsc	status,2,c
  2152  001136  D003               	goto	l3545
  2153                           
  2154                           ; BSR set to: 0
  2155  001138  0100               	movlb	0	; () banked
  2156  00113A  4B8B               	infsnz	process_message@res& (0+255),f,b
  2157  00113C  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2158  00113E                     l3545:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;main.c: 62: if(strstr(line,"FFFFFFFFFFFFFFFF")!=0)res++;
  2162  00113E  0E80               	movlw	low _line
  2163  001140  0100               	movlb	0	; () banked
  2164  001142  6F69               	movwf	strstr@s1& (0+255),b
  2165  001144  0E01               	movlw	high _line
  2166  001146  0100               	movlb	0	; () banked
  2167  001148  6F6A               	movwf	(strstr@s1+1)& (0+255),b
  2168  00114A  0E42               	movlw	low STR_6
  2169  00114C  0100               	movlb	0	; () banked
  2170  00114E  6F6B               	movwf	strstr@s2& (0+255),b
  2171  001150  0EFF               	movlw	high STR_6
  2172  001152  0100               	movlb	0	; () banked
  2173  001154  6F6C               	movwf	(strstr@s2+1)& (0+255),b
  2174  001156  EC60  F009         	call	_strstr	;wreg free
  2175  00115A  0100               	movlb	0	; () banked
  2176  00115C  5169               	movf	?_strstr& (0+255),w,b
  2177  00115E  0100               	movlb	0	; () banked
  2178  001160  116A               	iorwf	(?_strstr+1)& (0+255),w,b
  2179  001162  B4D8               	btfsc	status,2,c
  2180  001164  D003               	goto	l3549
  2181                           
  2182                           ; BSR set to: 0
  2183  001166  0100               	movlb	0	; () banked
  2184  001168  4B8B               	infsnz	process_message@res& (0+255),f,b
  2185  00116A  2B8C               	incf	(process_message@res+1)& (0+255),f,b
  2186  00116C                     l3549:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 64: if(res>0){
  2190  00116C  0100               	movlb	0	; () banked
  2191  00116E  BF8C               	btfsc	(process_message@res+1)& (0+255),7,b
  2192  001170  D03A               	goto	l3559
  2193  001172  0100               	movlb	0	; () banked
  2194  001174  518C               	movf	(process_message@res+1)& (0+255),w,b
  2195  001176  E104               	bnz	u3980
  2196  001178  0100               	movlb	0	; () banked
  2197  00117A  058B               	decf	process_message@res& (0+255),w,b
  2198  00117C  A0D8               	btfss	status,0,c
  2199  00117E  D033               	goto	l3559
  2200  001180                     u3980:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;main.c: 66: char hexval[4];
  2204                           ;main.c: 67: sprintf(hexval,"%c%c",line[28],line[29]);
  2205  001180  0E8D               	movlw	low process_message@hexval
  2206  001182  0100               	movlb	0	; () banked
  2207  001184  6F7B               	movwf	sprintf@wh& (0+255),b
  2208  001186  0E00               	movlw	high process_message@hexval
  2209  001188  0100               	movlb	0	; () banked
  2210  00118A  6F7C               	movwf	(sprintf@wh+1)& (0+255),b
  2211  00118C  0EF9               	movlw	low STR_7
  2212  00118E  0100               	movlb	0	; () banked
  2213  001190  6F7D               	movwf	sprintf@f& (0+255),b
  2214  001192  0EFF               	movlw	high STR_7
  2215  001194  0100               	movlb	0	; () banked
  2216  001196  6F7E               	movwf	(sprintf@f+1)& (0+255),b
  2217  001198  C19C  F07F         	movff	_line+28,?_sprintf+4	;volatile
  2218  00119C  0100               	movlb	0	; () banked
  2219  00119E  6B80               	clrf	(?_sprintf+5)& (0+255),b
  2220  0011A0  C19D  F081         	movff	_line+29,?_sprintf+6	;volatile
  2221  0011A4  0100               	movlb	0	; () banked
  2222  0011A6  6B82               	clrf	(?_sprintf+7)& (0+255),b
  2223  0011A8  EC0C  F00C         	call	_sprintf	;wreg free
  2224                           
  2225                           ;main.c: 68: val = (int)strtol(hexval, (0), 16);
  2226  0011AC  0E8D               	movlw	low process_message@hexval
  2227  0011AE  0100               	movlb	0	; () banked
  2228  0011B0  6F68               	movwf	strtol@s& (0+255),b
  2229  0011B2  0E00               	movlw	high process_message@hexval
  2230  0011B4  0100               	movlb	0	; () banked
  2231  0011B6  6F69               	movwf	(strtol@s+1)& (0+255),b
  2232  0011B8  0E00               	movlw	0
  2233  0011BA  0100               	movlb	0	; () banked
  2234  0011BC  6F6A               	movwf	strtol@endptr& (0+255),b
  2235  0011BE  0E00               	movlw	0
  2236  0011C0  0100               	movlb	0	; () banked
  2237  0011C2  6F6B               	movwf	(strtol@endptr+1)& (0+255),b
  2238  0011C4  0E00               	movlw	0
  2239  0011C6  0100               	movlb	0	; () banked
  2240  0011C8  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2241  0011CA  0E10               	movlw	16
  2242  0011CC  6F6C               	movwf	strtol@base& (0+255),b
  2243  0011CE  ECAC  F006         	call	_strtol	;wreg free
  2244  0011D2  0100               	movlb	0	; () banked
  2245  0011D4  5168               	movf	?_strtol& (0+255),w,b
  2246  0011D6  0100               	movlb	0	; () banked
  2247  0011D8  6F9A               	movwf	_val& (0+255),b
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;main.c: 70: return 1;
  2251  0011DA  0E00               	movlw	0
  2252  0011DC  0100               	movlb	0	; () banked
  2253  0011DE  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2254  0011E0  0E01               	movlw	1
  2255  0011E2  6F89               	movwf	?_process_message& (0+255),b
  2256                           
  2257                           ; BSR set to: 0
  2258  0011E4  0012               	return	
  2259  0011E6                     l3559:
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;main.c: 71: }
  2263                           ;main.c: 73: return 0;
  2264  0011E6  0E00               	movlw	0
  2265  0011E8  0100               	movlb	0	; () banked
  2266  0011EA  6F8A               	movwf	(?_process_message+1)& (0+255),b
  2267  0011EC  0E00               	movlw	0
  2268  0011EE  6F89               	movwf	?_process_message& (0+255),b
  2269  0011F0  0012               	return	
  2270  0011F2                     __end_of_process_message:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postdec1	equ	0xFE5
  2282                           fsr1h	equ	0xFE2
  2283                           fsr1l	equ	0xFE1
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _strtol *****************
  2287 ;; Defined at:
  2288 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2291 ;;		 -> process_message@hexval(4), uuid(40), 
  2292 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2293 ;;		 -> NULL(0), 
  2294 ;;  base            2   12[BANK0 ] int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  a               4   19[BANK0 ] long 
  2297 ;;  c               1   23[BANK0 ] unsigned char 
  2298 ;;  sign            1   18[BANK0 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  4    8[BANK0 ] long 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2308 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;Total ram usage:       16 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    6
  2315 ;; This function calls:
  2316 ;;		___lmul
  2317 ;;		_isalpha
  2318 ;;		_isdigit
  2319 ;;		_isspace
  2320 ;;		_toupper
  2321 ;; This function is called by:
  2322 ;;		_process_message
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text5
  2328  000D58                     __ptext5:
  2329                           	opt stack 0
  2330  000D58                     _strtol:
  2331                           	opt stack 24
  2332  000D58  C068  FFD9         	movff	strtol@s,fsr2l
  2333  000D5C  C069  FFDA         	movff	strtol@s+1,fsr2h
  2334  000D60  50DF               	movf	indf2,w,c
  2335  000D62  0100               	movlb	0	; () banked
  2336  000D64  6F77               	movwf	strtol@c& (0+255),b
  2337                           
  2338                           ; BSR set to: 0
  2339  000D66  0100               	movlb	0	; () banked
  2340  000D68  4B68               	infsnz	strtol@s& (0+255),f,b
  2341  000D6A  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2342                           
  2343                           ; BSR set to: 0
  2344  000D6C  0100               	movlb	0	; () banked
  2345  000D6E  5177               	movf	strtol@c& (0+255),w,b
  2346  000D70  ECAD  F00D         	call	_isspace
  2347  000D74  B0D8               	btfsc	status,0,c
  2348  000D76  D7F0               	goto	l3449
  2349  000D78  0E00               	movlw	0
  2350  000D7A  0100               	movlb	0	; () banked
  2351  000D7C  6F73               	movwf	strtol@a& (0+255),b
  2352  000D7E  0E00               	movlw	0
  2353  000D80  6F74               	movwf	(strtol@a+1)& (0+255),b
  2354  000D82  0E00               	movlw	0
  2355  000D84  6F75               	movwf	(strtol@a+2)& (0+255),b
  2356  000D86  0E00               	movlw	0
  2357  000D88  6F76               	movwf	(strtol@a+3)& (0+255),b
  2358  000D8A  0E00               	movlw	0
  2359  000D8C  0100               	movlb	0	; () banked
  2360  000D8E  6F72               	movwf	strtol@sign& (0+255),b
  2361                           
  2362                           ; BSR set to: 0
  2363  000D90  0E2D               	movlw	45
  2364  000D92  0100               	movlb	0	; () banked
  2365  000D94  1977               	xorwf	strtol@c& (0+255),w,b
  2366  000D96  A4D8               	btfss	status,2,c
  2367  000D98  D008               	goto	l3465
  2368                           
  2369                           ; BSR set to: 0
  2370  000D9A  0E01               	movlw	1
  2371  000D9C  0100               	movlb	0	; () banked
  2372  000D9E  6F72               	movwf	strtol@sign& (0+255),b
  2373  000DA0  D009               	goto	l3467
  2374  000DA2                     l3463:
  2375                           
  2376                           ; BSR set to: 0
  2377  000DA2  0100               	movlb	0	; () banked
  2378  000DA4  4B68               	infsnz	strtol@s& (0+255),f,b
  2379  000DA6  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2380  000DA8  D00D               	goto	l3471
  2381  000DAA                     l3465:
  2382                           
  2383                           ; BSR set to: 0
  2384  000DAA  0E2B               	movlw	43
  2385  000DAC  0100               	movlb	0	; () banked
  2386  000DAE  1977               	xorwf	strtol@c& (0+255),w,b
  2387  000DB0  A4D8               	btfss	status,2,c
  2388  000DB2  D008               	goto	l3471
  2389  000DB4                     l3467:
  2390                           
  2391                           ; BSR set to: 0
  2392  000DB4  C068  FFD9         	movff	strtol@s,fsr2l
  2393  000DB8  C069  FFDA         	movff	strtol@s+1,fsr2h
  2394  000DBC  50DF               	movf	indf2,w,c
  2395  000DBE  0100               	movlb	0	; () banked
  2396  000DC0  6F77               	movwf	strtol@c& (0+255),b
  2397  000DC2  D7EF               	goto	l3463
  2398  000DC4                     l3471:
  2399                           
  2400                           ; BSR set to: 0
  2401  000DC4  0E30               	movlw	48
  2402  000DC6  0100               	movlb	0	; () banked
  2403  000DC8  1977               	xorwf	strtol@c& (0+255),w,b
  2404  000DCA  A4D8               	btfss	status,2,c
  2405  000DCC  D03C               	goto	l3495
  2406                           
  2407                           ; BSR set to: 0
  2408  000DCE  C068  FFD9         	movff	strtol@s,fsr2l
  2409  000DD2  C069  FFDA         	movff	strtol@s+1,fsr2h
  2410  000DD6  50DF               	movf	indf2,w,c
  2411  000DD8  0100               	movlb	0	; () banked
  2412  000DDA  6F77               	movwf	strtol@c& (0+255),b
  2413                           
  2414                           ; BSR set to: 0
  2415  000DDC  0100               	movlb	0	; () banked
  2416  000DDE  4B68               	infsnz	strtol@s& (0+255),f,b
  2417  000DE0  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2418                           
  2419                           ; BSR set to: 0
  2420  000DE2  0100               	movlb	0	; () banked
  2421  000DE4  516C               	movf	strtol@base& (0+255),w,b
  2422  000DE6  0100               	movlb	0	; () banked
  2423  000DE8  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2424  000DEA  B4D8               	btfsc	status,2,c
  2425  000DEC  D007               	goto	l3481
  2426                           
  2427                           ; BSR set to: 0
  2428  000DEE  0E10               	movlw	16
  2429  000DF0  0100               	movlb	0	; () banked
  2430  000DF2  196C               	xorwf	strtol@base& (0+255),w,b
  2431  000DF4  0100               	movlb	0	; () banked
  2432  000DF6  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2433  000DF8  A4D8               	btfss	status,2,c
  2434  000DFA  D01A               	goto	l3491
  2435  000DFC                     l3481:
  2436                           
  2437                           ; BSR set to: 0
  2438  000DFC  0E78               	movlw	120
  2439  000DFE  0100               	movlb	0	; () banked
  2440  000E00  1977               	xorwf	strtol@c& (0+255),w,b
  2441  000E02  B4D8               	btfsc	status,2,c
  2442  000E04  D005               	goto	l3485
  2443                           
  2444                           ; BSR set to: 0
  2445  000E06  0E58               	movlw	88
  2446  000E08  0100               	movlb	0	; () banked
  2447  000E0A  1977               	xorwf	strtol@c& (0+255),w,b
  2448  000E0C  A4D8               	btfss	status,2,c
  2449  000E0E  D010               	goto	l3491
  2450  000E10                     l3485:
  2451                           
  2452                           ; BSR set to: 0
  2453  000E10  0E00               	movlw	0
  2454  000E12  0100               	movlb	0	; () banked
  2455  000E14  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2456  000E16  0E10               	movlw	16
  2457  000E18  6F6C               	movwf	strtol@base& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460  000E1A  C068  FFD9         	movff	strtol@s,fsr2l
  2461  000E1E  C069  FFDA         	movff	strtol@s+1,fsr2h
  2462  000E22  50DF               	movf	indf2,w,c
  2463  000E24  0100               	movlb	0	; () banked
  2464  000E26  6F77               	movwf	strtol@c& (0+255),b
  2465                           
  2466                           ; BSR set to: 0
  2467  000E28  0100               	movlb	0	; () banked
  2468  000E2A  4B68               	infsnz	strtol@s& (0+255),f,b
  2469  000E2C  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2470  000E2E  D00B               	goto	l3495
  2471  000E30                     l3491:
  2472                           
  2473                           ; BSR set to: 0
  2474  000E30  0100               	movlb	0	; () banked
  2475  000E32  516C               	movf	strtol@base& (0+255),w,b
  2476  000E34  0100               	movlb	0	; () banked
  2477  000E36  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2478  000E38  A4D8               	btfss	status,2,c
  2479  000E3A  D005               	goto	l3495
  2480                           
  2481                           ; BSR set to: 0
  2482  000E3C  0E00               	movlw	0
  2483  000E3E  0100               	movlb	0	; () banked
  2484  000E40  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2485  000E42  0E08               	movlw	8
  2486  000E44  6F6C               	movwf	strtol@base& (0+255),b
  2487  000E46                     l3495:
  2488                           
  2489                           ; BSR set to: 0
  2490  000E46  0100               	movlb	0	; () banked
  2491  000E48  516C               	movf	strtol@base& (0+255),w,b
  2492  000E4A  0100               	movlb	0	; () banked
  2493  000E4C  116D               	iorwf	(strtol@base+1)& (0+255),w,b
  2494  000E4E  A4D8               	btfss	status,2,c
  2495  000E50  D005               	goto	l3499
  2496                           
  2497                           ; BSR set to: 0
  2498  000E52  0E00               	movlw	0
  2499  000E54  0100               	movlb	0	; () banked
  2500  000E56  6F6D               	movwf	(strtol@base+1)& (0+255),b
  2501  000E58  0E0A               	movlw	10
  2502  000E5A  6F6C               	movwf	strtol@base& (0+255),b
  2503  000E5C                     l3499:
  2504                           
  2505                           ; BSR set to: 0
  2506  000E5C  0100               	movlb	0	; () banked
  2507  000E5E  5177               	movf	strtol@c& (0+255),w,b
  2508  000E60  EC99  F00D         	call	_isalpha
  2509  000E64  A0D8               	btfss	status,0,c
  2510  000E66  D008               	goto	l3503
  2511  000E68  0100               	movlb	0	; () banked
  2512  000E6A  5177               	movf	strtol@c& (0+255),w,b
  2513  000E6C  EC0E  F00E         	call	_toupper
  2514  000E70  0FC9               	addlw	201
  2515  000E72  0100               	movlb	0	; () banked
  2516  000E74  6F77               	movwf	strtol@c& (0+255),b
  2517  000E76  D009               	goto	l3507
  2518  000E78                     l3503:
  2519  000E78  0100               	movlb	0	; () banked
  2520  000E7A  5177               	movf	strtol@c& (0+255),w,b
  2521  000E7C  ECF2  F00D         	call	_isdigit
  2522  000E80  A0D8               	btfss	status,0,c
  2523  000E82  D04C               	goto	l3517
  2524  000E84  0E30               	movlw	48
  2525  000E86  0100               	movlb	0	; () banked
  2526  000E88  5F77               	subwf	strtol@c& (0+255),f,b
  2527  000E8A                     l3507:
  2528                           
  2529                           ; BSR set to: 0
  2530  000E8A  0100               	movlb	0	; () banked
  2531  000E8C  5177               	movf	strtol@c& (0+255),w,b
  2532  000E8E  0100               	movlb	0	; () banked
  2533  000E90  6F6E               	movwf	??_strtol& (0+255),b
  2534  000E92  6B6F               	clrf	(??_strtol+1)& (0+255),b
  2535  000E94  0100               	movlb	0	; () banked
  2536  000E96  516C               	movf	strtol@base& (0+255),w,b
  2537  000E98  0100               	movlb	0	; () banked
  2538  000E9A  5D6E               	subwf	??_strtol& (0+255),w,b
  2539  000E9C  0100               	movlb	0	; () banked
  2540  000E9E  516F               	movf	(??_strtol+1)& (0+255),w,b
  2541  000EA0  0A80               	xorlw	128
  2542  000EA2  0100               	movlb	0	; () banked
  2543  000EA4  6F70               	movwf	(??_strtol+2)& (0+255),b
  2544  000EA6  0100               	movlb	0	; () banked
  2545  000EA8  516D               	movf	(strtol@base+1)& (0+255),w,b
  2546  000EAA  0A80               	xorlw	128
  2547  000EAC  0100               	movlb	0	; () banked
  2548  000EAE  5970               	subwfb	(??_strtol+2)& (0+255),w,b
  2549  000EB0  B0D8               	btfsc	status,0,c
  2550  000EB2  D034               	goto	l3517
  2551                           
  2552                           ; BSR set to: 0
  2553                           
  2554                           ; BSR set to: 0
  2555                           
  2556                           ; BSR set to: 0
  2557  000EB4  C06C  F060         	movff	strtol@base,___lmul@multiplier
  2558  000EB8  C06D  F061         	movff	strtol@base+1,___lmul@multiplier+1
  2559  000EBC  0100               	movlb	0	; () banked
  2560  000EBE  0E00               	movlw	0
  2561  000EC0  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2562  000EC2  0EFF               	movlw	-1
  2563  000EC4  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
  2564  000EC6  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
  2565  000EC8  C073  F064         	movff	strtol@a,___lmul@multiplicand
  2566  000ECC  C074  F065         	movff	strtol@a+1,___lmul@multiplicand+1
  2567  000ED0  C075  F066         	movff	strtol@a+2,___lmul@multiplicand+2
  2568  000ED4  C076  F067         	movff	strtol@a+3,___lmul@multiplicand+3
  2569  000ED8  ECF6  F00A         	call	___lmul	;wreg free
  2570  000EDC  0100               	movlb	0	; () banked
  2571  000EDE  5177               	movf	strtol@c& (0+255),w,b
  2572  000EE0  0100               	movlb	0	; () banked
  2573  000EE2  2560               	addwf	?___lmul& (0+255),w,b
  2574  000EE4  0100               	movlb	0	; () banked
  2575  000EE6  6F73               	movwf	strtol@a& (0+255),b
  2576  000EE8  0E00               	movlw	0
  2577  000EEA  0100               	movlb	0	; () banked
  2578  000EEC  2161               	addwfc	(?___lmul+1)& (0+255),w,b
  2579  000EEE  0100               	movlb	0	; () banked
  2580  000EF0  6F74               	movwf	(strtol@a+1)& (0+255),b
  2581  000EF2  0E00               	movlw	0
  2582  000EF4  0100               	movlb	0	; () banked
  2583  000EF6  2162               	addwfc	(?___lmul+2)& (0+255),w,b
  2584  000EF8  0100               	movlb	0	; () banked
  2585  000EFA  6F75               	movwf	(strtol@a+2)& (0+255),b
  2586  000EFC  0E00               	movlw	0
  2587  000EFE  0100               	movlb	0	; () banked
  2588  000F00  2163               	addwfc	(?___lmul+3)& (0+255),w,b
  2589  000F02  0100               	movlb	0	; () banked
  2590  000F04  6F76               	movwf	(strtol@a+3)& (0+255),b
  2591                           
  2592                           ; BSR set to: 0
  2593  000F06  C068  FFD9         	movff	strtol@s,fsr2l
  2594  000F0A  C069  FFDA         	movff	strtol@s+1,fsr2h
  2595  000F0E  50DF               	movf	indf2,w,c
  2596  000F10  0100               	movlb	0	; () banked
  2597  000F12  6F77               	movwf	strtol@c& (0+255),b
  2598                           
  2599                           ; BSR set to: 0
  2600  000F14  0100               	movlb	0	; () banked
  2601  000F16  4B68               	infsnz	strtol@s& (0+255),f,b
  2602  000F18  2B69               	incf	(strtol@s+1)& (0+255),f,b
  2603  000F1A  D7A0               	goto	l3499
  2604  000F1C                     l3517:
  2605  000F1C  0100               	movlb	0	; () banked
  2606  000F1E  516A               	movf	strtol@endptr& (0+255),w,b
  2607  000F20  0100               	movlb	0	; () banked
  2608  000F22  116B               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2609  000F24  B4D8               	btfsc	status,2,c
  2610  000F26  D012               	goto	l3521
  2611                           
  2612                           ; BSR set to: 0
  2613  000F28  0EFF               	movlw	255
  2614  000F2A  0100               	movlb	0	; () banked
  2615  000F2C  2568               	addwf	strtol@s& (0+255),w,b
  2616  000F2E  0100               	movlb	0	; () banked
  2617  000F30  6F6E               	movwf	??_strtol& (0+255),b
  2618  000F32  0EFF               	movlw	255
  2619  000F34  0100               	movlb	0	; () banked
  2620  000F36  2169               	addwfc	(strtol@s+1)& (0+255),w,b
  2621  000F38  0100               	movlb	0	; () banked
  2622  000F3A  6F6F               	movwf	(??_strtol+1)& (0+255),b
  2623  000F3C  C06A  FFD9         	movff	strtol@endptr,fsr2l
  2624  000F40  C06B  FFDA         	movff	strtol@endptr+1,fsr2h
  2625  000F44  C06E  FFDE         	movff	??_strtol,postinc2
  2626  000F48  C06F  FFDD         	movff	??_strtol+1,postdec2
  2627  000F4C                     l3521:
  2628                           
  2629                           ; BSR set to: 0
  2630  000F4C  0100               	movlb	0	; () banked
  2631  000F4E  5172               	movf	strtol@sign& (0+255),w,b
  2632  000F50  0100               	movlb	0	; () banked
  2633  000F52  B4D8               	btfsc	status,2,c
  2634  000F54  D01B               	goto	l1053
  2635                           
  2636                           ; BSR set to: 0
  2637  000F56  C073  F06E         	movff	strtol@a,??_strtol
  2638  000F5A  C074  F06F         	movff	strtol@a+1,??_strtol+1
  2639  000F5E  C075  F070         	movff	strtol@a+2,??_strtol+2
  2640  000F62  C076  F071         	movff	strtol@a+3,??_strtol+3
  2641  000F66  0100               	movlb	0	; () banked
  2642  000F68  1F6E               	comf	??_strtol& (0+255),f,b
  2643  000F6A  1F6F               	comf	(??_strtol+1)& (0+255),f,b
  2644  000F6C  1F70               	comf	(??_strtol+2)& (0+255),f,b
  2645  000F6E  1F71               	comf	(??_strtol+3)& (0+255),f,b
  2646  000F70  2B6E               	incf	??_strtol& (0+255),f,b
  2647  000F72  0E00               	movlw	0
  2648  000F74  236F               	addwfc	(??_strtol+1)& (0+255),f,b
  2649  000F76  2370               	addwfc	(??_strtol+2)& (0+255),f,b
  2650  000F78  2371               	addwfc	(??_strtol+3)& (0+255),f,b
  2651  000F7A  C06E  F068         	movff	??_strtol,?_strtol
  2652  000F7E  C06F  F069         	movff	??_strtol+1,?_strtol+1
  2653  000F82  C070  F06A         	movff	??_strtol+2,?_strtol+2
  2654  000F86  C071  F06B         	movff	??_strtol+3,?_strtol+3
  2655                           
  2656                           ; BSR set to: 0
  2657  000F8A  0012               	return	
  2658  000F8C                     l1053:
  2659                           
  2660                           ; BSR set to: 0
  2661  000F8C  C073  F068         	movff	strtol@a,?_strtol
  2662  000F90  C074  F069         	movff	strtol@a+1,?_strtol+1
  2663  000F94  C075  F06A         	movff	strtol@a+2,?_strtol+2
  2664  000F98  C076  F06B         	movff	strtol@a+3,?_strtol+3
  2665                           
  2666                           ; BSR set to: 0
  2667  000F9C  0012               	return		;funcret
  2668  000F9E                     __end_of_strtol:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           indf2	equ	0xFDF
  2683                           postinc2	equ	0xFDE
  2684                           postdec2	equ	0xFDD
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _toupper *****************
  2690 ;; Defined at:
  2691 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  c               1    wreg     unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  c               1   37[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      unsigned char 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    4
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_strtol
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text6
  2720  001C1C                     __ptext6:
  2721                           	opt stack 0
  2722  001C1C                     _toupper:
  2723                           	opt stack 25
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;incstack = 0
  2727                           ;toupper@c stored from wreg
  2728  001C1C  6E26               	movwf	toupper@c,c
  2729  001C1E  0E7B               	movlw	123
  2730  001C20  6026               	cpfslt	toupper@c,c
  2731  001C22  D004               	goto	l2577
  2732  001C24  0E60               	movlw	96
  2733  001C26  6426               	cpfsgt	toupper@c,c
  2734  001C28  D001               	goto	l2577
  2735  001C2A  9A26               	bcf	toupper@c,5,c
  2736  001C2C                     l2577:
  2737  001C2C  5026               	movf	toupper@c,w,c
  2738  001C2E  0012               	return	
  2739  001C30                     __end_of_toupper:
  2740                           	opt stack 0
  2741                           tblptru	equ	0xFF8
  2742                           tblptrh	equ	0xFF7
  2743                           tblptrl	equ	0xFF6
  2744                           tablat	equ	0xFF5
  2745                           prodh	equ	0xFF4
  2746                           prodl	equ	0xFF3
  2747                           intcon	equ	0xFF2
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           postdec1	equ	0xFE5
  2751                           fsr1h	equ	0xFE2
  2752                           fsr1l	equ	0xFE1
  2753                           indf2	equ	0xFDF
  2754                           postinc2	equ	0xFDE
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _isspace *****************
  2761 ;; Defined at:
  2762 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  c               1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  c               1   39[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;Total ram usage:        3 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    4
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_strtol
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text7
  2791  001B5A                     __ptext7:
  2792                           	opt stack 0
  2793  001B5A                     _isspace:
  2794                           	opt stack 25
  2795                           
  2796                           ;incstack = 0
  2797                           ;isspace@c stored from wreg
  2798  001B5A  6E28               	movwf	isspace@c,c
  2799  001B5C  0E01               	movlw	1
  2800  001B5E  6E27               	movwf	_isspace$1314,c
  2801  001B60  0E20               	movlw	32
  2802  001B62  1828               	xorwf	isspace@c,w,c
  2803  001B64  B4D8               	btfsc	status,2,c
  2804  001B66  D008               	goto	l2553
  2805  001B68  0E0E               	movlw	14
  2806  001B6A  6028               	cpfslt	isspace@c,c
  2807  001B6C  D003               	goto	l2551
  2808  001B6E  0E09               	movlw	9
  2809  001B70  6028               	cpfslt	isspace@c,c
  2810  001B72  D002               	goto	l2553
  2811  001B74                     l2551:
  2812  001B74  0E00               	movlw	0
  2813  001B76  6E27               	movwf	_isspace$1314,c
  2814  001B78                     l2553:
  2815  001B78  C027  F026         	movff	_isspace$1314,??_isspace
  2816  001B7C  3026               	rrcf	??_isspace,w,c
  2817  001B7E  0012               	return	
  2818  001B80                     __end_of_isspace:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           prodh	equ	0xFF4
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1h	equ	0xFE2
  2831                           fsr1l	equ	0xFE1
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _isalpha *****************
  2840 ;; Defined at:
  2841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  c               1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  c               1   42[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:        3 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    5
  2862 ;; This function calls:
  2863 ;;		_isupper
  2864 ;; This function is called by:
  2865 ;;		_strtol
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text8
  2870  001B32                     __ptext8:
  2871                           	opt stack 0
  2872  001B32                     _isalpha:
  2873                           	opt stack 24
  2874                           
  2875                           ;incstack = 0
  2876                           ;isalpha@c stored from wreg
  2877  001B32  6E2B               	movwf	isalpha@c,c
  2878  001B34  0E01               	movlw	1
  2879  001B36  6E2A               	movwf	_isalpha$1311,c
  2880  001B38  0E7B               	movlw	123
  2881  001B3A  602B               	cpfslt	isalpha@c,c
  2882  001B3C  D003               	goto	l2563
  2883  001B3E  0E61               	movlw	97
  2884  001B40  602B               	cpfslt	isalpha@c,c
  2885  001B42  D007               	goto	l2567
  2886  001B44                     l2563:
  2887  001B44  502B               	movf	isalpha@c,w,c
  2888  001B46  ECE3  F00D         	call	_isupper
  2889  001B4A  B0D8               	btfsc	status,0,c
  2890  001B4C  D002               	goto	l2567
  2891  001B4E  0E00               	movlw	0
  2892  001B50  6E2A               	movwf	_isalpha$1311,c
  2893  001B52                     l2567:
  2894  001B52  C02A  F029         	movff	_isalpha$1311,??_isalpha
  2895  001B56  3029               	rrcf	??_isalpha,w,c
  2896  001B58  0012               	return	
  2897  001B5A                     __end_of_isalpha:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           prodh	equ	0xFF4
  2904                           prodl	equ	0xFF3
  2905                           intcon	equ	0xFF2
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           postdec2	equ	0xFDD
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _isupper *****************
  2919 ;; Defined at:
  2920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  c               1    wreg     unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  c               1   39[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;		None               void
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    4
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_isalpha
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text9
  2949  001BC6                     __ptext9:
  2950                           	opt stack 0
  2951  001BC6                     _isupper:
  2952                           	opt stack 24
  2953                           
  2954                           ;incstack = 0
  2955                           ;isupper@c stored from wreg
  2956  001BC6  6E28               	movwf	isupper@c,c
  2957  001BC8  0E00               	movlw	0
  2958  001BCA  6E27               	movwf	_isupper$1317,c
  2959  001BCC  0E5B               	movlw	91
  2960  001BCE  6028               	cpfslt	isupper@c,c
  2961  001BD0  D005               	goto	l2273
  2962  001BD2  0E40               	movlw	64
  2963  001BD4  6428               	cpfsgt	isupper@c,c
  2964  001BD6  D002               	goto	l2273
  2965  001BD8  0E01               	movlw	1
  2966  001BDA  6E27               	movwf	_isupper$1317,c
  2967  001BDC                     l2273:
  2968  001BDC  C027  F026         	movff	_isupper$1317,??_isupper
  2969  001BE0  3026               	rrcf	??_isupper,w,c
  2970  001BE2  0012               	return	
  2971  001BE4                     __end_of_isupper:
  2972                           	opt stack 0
  2973                           tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           prodh	equ	0xFF4
  2978                           prodl	equ	0xFF3
  2979                           intcon	equ	0xFF2
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           postdec1	equ	0xFE5
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function ___lmul *****************
  2993 ;; Defined at:
  2994 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2997 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  product         4   37[COMRAM] unsigned long 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  4    0[BANK0 ] unsigned long 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:       12 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    4
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_rand
  3020 ;;		_strtol
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text10
  3025  0015EC                     __ptext10:
  3026                           	opt stack 0
  3027  0015EC                     ___lmul:
  3028                           	opt stack 25
  3029                           
  3030                           ;incstack = 0
  3031  0015EC  0E00               	movlw	0
  3032  0015EE  6E26               	movwf	___lmul@product,c
  3033  0015F0  0E00               	movlw	0
  3034  0015F2  6E27               	movwf	___lmul@product+1,c
  3035  0015F4  0E00               	movlw	0
  3036  0015F6  6E28               	movwf	___lmul@product+2,c
  3037  0015F8  0E00               	movlw	0
  3038  0015FA  6E29               	movwf	___lmul@product+3,c
  3039  0015FC                     l3391:
  3040  0015FC  0100               	movlb	0	; () banked
  3041  0015FE  A160               	btfss	___lmul@multiplier& (0+255),0,b
  3042  001600  D00C               	goto	l3395
  3043                           
  3044                           ; BSR set to: 0
  3045  001602  0100               	movlb	0	; () banked
  3046  001604  5164               	movf	___lmul@multiplicand& (0+255),w,b
  3047  001606  2626               	addwf	___lmul@product,f,c
  3048  001608  0100               	movlb	0	; () banked
  3049  00160A  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3050  00160C  2227               	addwfc	___lmul@product+1,f,c
  3051  00160E  0100               	movlb	0	; () banked
  3052  001610  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3053  001612  2228               	addwfc	___lmul@product+2,f,c
  3054  001614  0100               	movlb	0	; () banked
  3055  001616  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3056  001618  2229               	addwfc	___lmul@product+3,f,c
  3057  00161A                     l3395:
  3058                           
  3059                           ; BSR set to: 0
  3060  00161A  0100               	movlb	0	; () banked
  3061  00161C  90D8               	bcf	status,0,c
  3062  00161E  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  3063  001620  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3064  001622  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3065  001624  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3066                           
  3067                           ; BSR set to: 0
  3068  001626  0100               	movlb	0	; () banked
  3069  001628  90D8               	bcf	status,0,c
  3070  00162A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3071  00162C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3072  00162E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3073  001630  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  3074  001632  0100               	movlb	0	; () banked
  3075  001634  5160               	movf	___lmul@multiplier& (0+255),w,b
  3076  001636  0100               	movlb	0	; () banked
  3077  001638  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3078  00163A  0100               	movlb	0	; () banked
  3079  00163C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3080  00163E  0100               	movlb	0	; () banked
  3081  001640  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3082  001642  A4D8               	btfss	status,2,c
  3083  001644  D7DB               	goto	l3391
  3084                           
  3085                           ; BSR set to: 0
  3086  001646  C026  F060         	movff	___lmul@product,?___lmul
  3087  00164A  C027  F061         	movff	___lmul@product+1,?___lmul+1
  3088  00164E  C028  F062         	movff	___lmul@product+2,?___lmul+2
  3089  001652  C029  F063         	movff	___lmul@product+3,?___lmul+3
  3090                           
  3091                           ; BSR set to: 0
  3092  001656  0012               	return		;funcret
  3093  001658                     __end_of___lmul:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodh	equ	0xFF4
  3100                           prodl	equ	0xFF3
  3101                           intcon	equ	0xFF2
  3102                           postinc0	equ	0xFEE
  3103                           wreg	equ	0xFE8
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           postdec2	equ	0xFDD
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _strstr *****************
  3115 ;; Defined at:
  3116 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  s1              2    9[BANK0 ] PTR const unsigned char 
  3119 ;;		 -> NULL(0), line(128), 
  3120 ;;  s2              2   11[BANK0 ] PTR const unsigned char 
  3121 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2    9[BANK0 ] PTR unsigned char 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        5 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    5
  3140 ;; This function calls:
  3141 ;;		_strchr
  3142 ;;		_strlen
  3143 ;;		_strncmp
  3144 ;; This function is called by:
  3145 ;;		_process_message
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text11
  3150  0012C0                     __ptext11:
  3151                           	opt stack 0
  3152  0012C0                     _strstr:
  3153                           	opt stack 24
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;incstack = 0
  3157  0012C0  D042               	goto	l3427
  3158  0012C2                     l3419:
  3159  0012C2  C069  F060         	movff	strstr@s1,strncmp@s1
  3160  0012C6  C06A  F061         	movff	strstr@s1+1,strncmp@s1+1
  3161  0012CA  C06B  F062         	movff	strstr@s2,strncmp@s2
  3162  0012CE  C06C  F063         	movff	strstr@s2+1,strncmp@s2+1
  3163  0012D2  C06B  F026         	movff	strstr@s2,strlen@s
  3164  0012D6  C06C  F027         	movff	strstr@s2+1,strlen@s+1
  3165  0012DA  ECB8  F00B         	call	_strlen	;wreg free
  3166  0012DE  C026  F064         	movff	?_strlen,strncmp@len
  3167  0012E2  C027  F065         	movff	?_strlen+1,strncmp@len+1
  3168  0012E6  ECF9  F008         	call	_strncmp	;wreg free
  3169  0012EA  0100               	movlb	0	; () banked
  3170  0012EC  5160               	movf	?_strncmp& (0+255),w,b
  3171  0012EE  0100               	movlb	0	; () banked
  3172  0012F0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  3173  0012F2  A4D8               	btfss	status,2,c
  3174  0012F4  D005               	goto	l3425
  3175                           
  3176                           ; BSR set to: 0
  3177  0012F6  C069  F069         	movff	strstr@s1,?_strstr
  3178  0012FA  C06A  F06A         	movff	strstr@s1+1,?_strstr+1
  3179                           
  3180                           ; BSR set to: 0
  3181  0012FE  0012               	return	
  3182  001300                     l3425:
  3183                           
  3184                           ; BSR set to: 0
  3185  001300  0E01               	movlw	1
  3186  001302  0100               	movlb	0	; () banked
  3187  001304  2569               	addwf	strstr@s1& (0+255),w,b
  3188  001306  6E26               	movwf	strchr@ptr,c
  3189  001308  0E00               	movlw	0
  3190  00130A  0100               	movlb	0	; () banked
  3191  00130C  216A               	addwfc	(strstr@s1+1)& (0+255),w,b
  3192  00130E  6E27               	movwf	strchr@ptr+1,c
  3193  001310  C06B  FFF6         	movff	strstr@s2,tblptrl
  3194  001314  C06C  FFF7         	movff	strstr@s2+1,tblptrh
  3195  001318  0E00               	movlw	low (__mediumconst shr (0+16))
  3196  00131A  6EF8               	movwf	tblptru,c
  3197  00131C  0E0F               	movlw	(high __ramtop+-1)
  3198  00131E  64F7               	cpfsgt	tblptrh,c
  3199  001320  D003               	bra	u3777
  3200  001322  0008               	tblrd		*
  3201  001324  50F5               	movf	tablat,w,c
  3202  001326  D005               	bra	u3770
  3203  001328                     u3777:
  3204  001328  CFF6 FFE1          	movff	tblptrl,fsr1l
  3205  00132C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3206  001330  50E7               	movf	indf1,w,c
  3207  001332                     u3770:
  3208  001332  6E2C               	movwf	??_strstr& (0+255),c
  3209  001334  502C               	movf	??_strstr,w,c
  3210  001336  6E28               	movwf	strchr@chr,c
  3211  001338  6A29               	clrf	strchr@chr+1,c
  3212  00133A  ECA0  F00C         	call	_strchr	;wreg free
  3213  00133E  C026  F069         	movff	?_strchr,strstr@s1
  3214  001342  C027  F06A         	movff	?_strchr+1,strstr@s1+1
  3215  001346                     l3427:
  3216  001346  0100               	movlb	0	; () banked
  3217  001348  5169               	movf	strstr@s1& (0+255),w,b
  3218  00134A  0100               	movlb	0	; () banked
  3219  00134C  116A               	iorwf	(strstr@s1+1)& (0+255),w,b
  3220  00134E  B4D8               	btfsc	status,2,c
  3221  001350  D007               	goto	l3431
  3222                           
  3223                           ; BSR set to: 0
  3224  001352  C069  FFD9         	movff	strstr@s1,fsr2l
  3225  001356  C06A  FFDA         	movff	strstr@s1+1,fsr2h
  3226  00135A  50DF               	movf	indf2,w,c
  3227  00135C  A4D8               	btfss	status,2,c
  3228  00135E  D7B1               	goto	l3419
  3229  001360                     l3431:
  3230                           
  3231                           ; BSR set to: 0
  3232  001360  0E00               	movlw	0
  3233  001362  0100               	movlb	0	; () banked
  3234  001364  6F69               	movwf	?_strstr& (0+255),b
  3235  001366  0E00               	movlw	0
  3236  001368  0100               	movlb	0	; () banked
  3237  00136A  6F6A               	movwf	(?_strstr+1)& (0+255),b
  3238  00136C  0012               	return	
  3239  00136E                     __end_of_strstr:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           intcon	equ	0xFF2
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           indf1	equ	0xFE7
  3251                           postdec1	equ	0xFE5
  3252                           fsr1h	equ	0xFE2
  3253                           fsr1l	equ	0xFE1
  3254                           indf2	equ	0xFDF
  3255                           postinc2	equ	0xFDE
  3256                           postdec2	equ	0xFDD
  3257                           fsr2h	equ	0xFDA
  3258                           fsr2l	equ	0xFD9
  3259                           status	equ	0xFD8
  3260                           
  3261 ;; *************** function _strncmp *****************
  3262 ;; Defined at:
  3263 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  3266 ;;		 -> NULL(0), line(128), 
  3267 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  3268 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  3269 ;;  len             2    4[BANK0 ] unsigned int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    0[BANK0 ] int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        9 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    4
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_strstr
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text12
  3296  0011F2                     __ptext12:
  3297                           	opt stack 0
  3298  0011F2                     _strncmp:
  3299                           	opt stack 24
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;incstack = 0
  3303  0011F2  D055               	goto	l3411
  3304  0011F4                     l3401:
  3305  0011F4  C060  FFD9         	movff	strncmp@s1,fsr2l
  3306  0011F8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3307  0011FC  50DF               	movf	indf2,w,c
  3308  0011FE  B4D8               	btfsc	status,2,c
  3309  001200  D01C               	goto	l3405
  3310  001202  C060  FFD9         	movff	strncmp@s1,fsr2l
  3311  001206  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3312  00120A  50DF               	movf	indf2,w,c
  3313  00120C  0100               	movlb	0	; () banked
  3314  00120E  6F66               	movwf	??_strncmp& (0+255),b
  3315  001210  C062  FFF6         	movff	strncmp@s2,tblptrl
  3316  001214  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3317  001218  0E00               	movlw	low (__mediumconst shr (0+16))
  3318  00121A  6EF8               	movwf	tblptru,c
  3319  00121C  0E0F               	movlw	(high __ramtop+-1)
  3320  00121E  64F7               	cpfsgt	tblptrh,c
  3321  001220  D003               	bra	u3727
  3322  001222  0008               	tblrd		*
  3323  001224  50F5               	movf	tablat,w,c
  3324  001226  D005               	bra	u3720
  3325  001228                     u3727:
  3326  001228  CFF6 FFE1          	movff	tblptrl,fsr1l
  3327  00122C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3328  001230  50E7               	movf	indf1,w,c
  3329  001232                     u3720:
  3330  001232  0100               	movlb	0	; () banked
  3331  001234  1966               	xorwf	??_strncmp& (0+255),w,b
  3332  001236  B4D8               	btfsc	status,2,c
  3333  001238  D02C               	goto	l3409
  3334  00123A                     l3405:
  3335  00123A  C062  FFF6         	movff	strncmp@s2,tblptrl
  3336  00123E  C063  FFF7         	movff	strncmp@s2+1,tblptrh
  3337  001242  0E00               	movlw	low (__mediumconst shr (0+16))
  3338  001244  6EF8               	movwf	tblptru,c
  3339  001246  0E0F               	movlw	(high __ramtop+-1)
  3340  001248  64F7               	cpfsgt	tblptrh,c
  3341  00124A  D003               	bra	u3747
  3342  00124C  0008               	tblrd		*
  3343  00124E  50F5               	movf	tablat,w,c
  3344  001250  D005               	bra	u3740
  3345  001252                     u3747:
  3346  001252  CFF6 FFE1          	movff	tblptrl,fsr1l
  3347  001256  CFF7 FFE2          	movff	tblptrh,fsr1h
  3348  00125A  50E7               	movf	indf1,w,c
  3349  00125C                     u3740:
  3350  00125C  0100               	movlb	0	; () banked
  3351  00125E  6F66               	movwf	??_strncmp& (0+255),b
  3352  001260  6B67               	clrf	(??_strncmp+1)& (0+255),b
  3353  001262  0100               	movlb	0	; () banked
  3354  001264  1F66               	comf	??_strncmp& (0+255),f,b
  3355  001266  1F67               	comf	(??_strncmp+1)& (0+255),f,b
  3356  001268  4B66               	infsnz	??_strncmp& (0+255),f,b
  3357  00126A  2B67               	incf	(??_strncmp+1)& (0+255),f,b
  3358  00126C  C060  FFD9         	movff	strncmp@s1,fsr2l
  3359  001270  C061  FFDA         	movff	strncmp@s1+1,fsr2h
  3360  001274  50DF               	movf	indf2,w,c
  3361  001276  0100               	movlb	0	; () banked
  3362  001278  6F68               	movwf	(??_strncmp+2)& (0+255),b
  3363  00127A  0100               	movlb	0	; () banked
  3364  00127C  5168               	movf	(??_strncmp+2)& (0+255),w,b
  3365  00127E  0100               	movlb	0	; () banked
  3366  001280  2566               	addwf	??_strncmp& (0+255),w,b
  3367  001282  0100               	movlb	0	; () banked
  3368  001284  6F60               	movwf	?_strncmp& (0+255),b
  3369  001286  0E00               	movlw	0
  3370  001288  0100               	movlb	0	; () banked
  3371  00128A  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
  3372  00128C  0100               	movlb	0	; () banked
  3373  00128E  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376  001290  0012               	return	
  3377  001292                     l3409:
  3378                           
  3379                           ; BSR set to: 0
  3380  001292  0100               	movlb	0	; () banked
  3381  001294  4B60               	infsnz	strncmp@s1& (0+255),f,b
  3382  001296  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
  3383  001298  0100               	movlb	0	; () banked
  3384  00129A  4B62               	infsnz	strncmp@s2& (0+255),f,b
  3385  00129C  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
  3386  00129E                     l3411:
  3387  00129E  0100               	movlb	0	; () banked
  3388  0012A0  0764               	decf	strncmp@len& (0+255),f,b
  3389  0012A2  A0D8               	btfss	status,0,c
  3390  0012A4  0765               	decf	(strncmp@len+1)& (0+255),f,b
  3391  0012A6  0100               	movlb	0	; () banked
  3392  0012A8  2964               	incf	strncmp@len& (0+255),w,b
  3393  0012AA  E1A4               	bnz	l3401
  3394  0012AC  0100               	movlb	0	; () banked
  3395  0012AE  2965               	incf	(strncmp@len+1)& (0+255),w,b
  3396  0012B0  A4D8               	btfss	status,2,c
  3397  0012B2  D7A0               	goto	l3401
  3398                           
  3399                           ; BSR set to: 0
  3400                           
  3401                           ; BSR set to: 0
  3402  0012B4  0E00               	movlw	0
  3403  0012B6  0100               	movlb	0	; () banked
  3404  0012B8  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3405  0012BA  0E00               	movlw	0
  3406  0012BC  6F60               	movwf	?_strncmp& (0+255),b
  3407  0012BE  0012               	return	
  3408  0012C0                     __end_of_strncmp:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           intcon	equ	0xFF2
  3417                           postinc0	equ	0xFEE
  3418                           wreg	equ	0xFE8
  3419                           indf1	equ	0xFE7
  3420                           postdec1	equ	0xFE5
  3421                           fsr1h	equ	0xFE2
  3422                           fsr1l	equ	0xFE1
  3423                           indf2	equ	0xFDF
  3424                           postinc2	equ	0xFDE
  3425                           postdec2	equ	0xFDD
  3426                           fsr2h	equ	0xFDA
  3427                           fsr2l	equ	0xFD9
  3428                           status	equ	0xFD8
  3429                           
  3430 ;; *************** function _strlen *****************
  3431 ;; Defined at:
  3432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  s               2   37[COMRAM] PTR const unsigned char 
  3435 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  cp              2   41[COMRAM] PTR const unsigned char 
  3438 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2   37[COMRAM] unsigned int 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;Total ram usage:        6 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    4
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_process_message
  3459 ;;		_strstr
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text13
  3464  001770                     __ptext13:
  3465                           	opt stack 0
  3466  001770                     _strlen:
  3467                           	opt stack 24
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;incstack = 0
  3471  001770  C026  F02A         	movff	strlen@s,strlen@cp
  3472  001774  C027  F02B         	movff	strlen@s+1,strlen@cp+1
  3473  001778  D002               	goto	l2283
  3474  00177A                     l2281:
  3475  00177A  4A2A               	infsnz	strlen@cp,f,c
  3476  00177C  2A2B               	incf	strlen@cp+1,f,c
  3477  00177E                     l2283:
  3478  00177E  C02A  FFF6         	movff	strlen@cp,tblptrl
  3479  001782  C02B  FFF7         	movff	strlen@cp+1,tblptrh
  3480  001786  0E00               	movlw	low (__mediumconst shr (0+16))
  3481  001788  6EF8               	movwf	tblptru,c
  3482  00178A  0E0F               	movlw	(high __ramtop+-1)
  3483  00178C  64F7               	cpfsgt	tblptrh,c
  3484  00178E  D003               	bra	u1747
  3485  001790  0008               	tblrd		*
  3486  001792  50F5               	movf	tablat,w,c
  3487  001794  D005               	bra	u1740
  3488  001796                     u1747:
  3489  001796  CFF6 FFE1          	movff	tblptrl,fsr1l
  3490  00179A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3491  00179E  50E7               	movf	indf1,w,c
  3492  0017A0                     u1740:
  3493  0017A0  0900               	iorlw	0
  3494  0017A2  A4D8               	btfss	status,2,c
  3495  0017A4  D7EA               	goto	l2281
  3496  0017A6  C026  F028         	movff	strlen@s,??_strlen
  3497  0017AA  C027  F029         	movff	strlen@s+1,??_strlen+1
  3498  0017AE  1E28               	comf	??_strlen,f,c
  3499  0017B0  1E29               	comf	??_strlen+1,f,c
  3500  0017B2  4A28               	infsnz	??_strlen,f,c
  3501  0017B4  2A29               	incf	??_strlen+1,f,c
  3502  0017B6  502A               	movf	strlen@cp,w,c
  3503  0017B8  2428               	addwf	??_strlen,w,c
  3504  0017BA  6E26               	movwf	?_strlen,c
  3505  0017BC  502B               	movf	strlen@cp+1,w,c
  3506  0017BE  2029               	addwfc	??_strlen+1,w,c
  3507  0017C0  6E27               	movwf	?_strlen+1,c
  3508  0017C2  0012               	return	
  3509  0017C4                     __end_of_strlen:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           prodh	equ	0xFF4
  3516                           prodl	equ	0xFF3
  3517                           intcon	equ	0xFF2
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           indf1	equ	0xFE7
  3521                           postdec1	equ	0xFE5
  3522                           fsr1h	equ	0xFE2
  3523                           fsr1l	equ	0xFE1
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           postdec2	equ	0xFDD
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           status	equ	0xFD8
  3530                           
  3531 ;; *************** function _strchr *****************
  3532 ;; Defined at:
  3533 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  ptr             2   37[COMRAM] PTR const unsigned char 
  3536 ;;		 -> NULL(0), line(128), 
  3537 ;;  chr             2   39[COMRAM] int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2   37[COMRAM] PTR unsigned char 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;Total ram usage:        5 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_strstr
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text14
  3564  001940                     __ptext14:
  3565                           	opt stack 0
  3566  001940                     _strchr:
  3567                           	opt stack 24
  3568  001940  C026  FFD9         	movff	strchr@ptr,fsr2l
  3569  001944  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3570  001948  5028               	movf	strchr@chr,w,c
  3571  00194A  18DE               	xorwf	postinc2,w,c
  3572  00194C  A4D8               	btfss	status,2,c
  3573  00194E  D005               	goto	l2537
  3574  001950  C026  F026         	movff	strchr@ptr,?_strchr
  3575  001954  C027  F027         	movff	strchr@ptr+1,?_strchr+1
  3576  001958  0012               	return	
  3577  00195A                     l2537:
  3578  00195A  C026  FFD9         	movff	strchr@ptr,fsr2l
  3579  00195E  C027  FFDA         	movff	strchr@ptr+1,fsr2h
  3580  001962  4A26               	infsnz	strchr@ptr,f,c
  3581  001964  2A27               	incf	strchr@ptr+1,f,c
  3582  001966  50DF               	movf	indf2,w,c
  3583  001968  A4D8               	btfss	status,2,c
  3584  00196A  D7EA               	goto	l2531
  3585  00196C  0E00               	movlw	0
  3586  00196E  6E26               	movwf	?_strchr,c
  3587  001970  0E00               	movlw	0
  3588  001972  6E27               	movwf	?_strchr+1,c
  3589  001974  0012               	return	
  3590  001976                     __end_of_strchr:
  3591                           	opt stack 0
  3592                           tblptru	equ	0xFF8
  3593                           tblptrh	equ	0xFF7
  3594                           tblptrl	equ	0xFF6
  3595                           tablat	equ	0xFF5
  3596                           prodh	equ	0xFF4
  3597                           prodl	equ	0xFF3
  3598                           intcon	equ	0xFF2
  3599                           postinc0	equ	0xFEE
  3600                           wreg	equ	0xFE8
  3601                           indf1	equ	0xFE7
  3602                           postdec1	equ	0xFE5
  3603                           fsr1h	equ	0xFE2
  3604                           fsr1l	equ	0xFE1
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _sprintf *****************
  3613 ;; Defined at:
  3614 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprintf.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  wh              2   27[BANK0 ] PTR unsigned char 
  3617 ;;		 -> process_message@hexval(4), 
  3618 ;;  f               2   29[BANK0 ] PTR const unsigned char 
  3619 ;;		 -> STR_7(5), 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  pb              4   37[BANK0 ] struct __prbuf
  3622 ;;  ap              2   35[BANK0 ] PTR void [1]
  3623 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   27[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:       14 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    7
  3640 ;; This function calls:
  3641 ;;		__doprnt
  3642 ;; This function is called by:
  3643 ;;		_process_message
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text15
  3648  001818                     __ptext15:
  3649                           	opt stack 0
  3650  001818                     _sprintf:
  3651                           	opt stack 22
  3652                           
  3653                           ;incstack = 0
  3654  001818  C07B  F085         	movff	sprintf@wh,sprintf@pb
  3655  00181C  C07C  F086         	movff	sprintf@wh+1,sprintf@pb+1
  3656  001820  0E00               	movlw	0
  3657  001822  0100               	movlb	0	; () banked
  3658  001824  6F87               	movwf	(sprintf@pb+2)& (0+255),b
  3659  001826  0E00               	movlw	0
  3660  001828  0100               	movlb	0	; () banked
  3661  00182A  6F88               	movwf	(sprintf@pb+3)& (0+255),b
  3662  00182C  0E7F               	movlw	low (?_sprintf+4)
  3663  00182E  0100               	movlb	0	; () banked
  3664  001830  6F83               	movwf	sprintf@ap& (0+255),b
  3665  001832  0E00               	movlw	high (?_sprintf+4)
  3666  001834  0100               	movlb	0	; () banked
  3667  001836  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3668                           
  3669                           ; BSR set to: 0
  3670  001838  0E85               	movlw	low sprintf@pb
  3671  00183A  0100               	movlb	0	; () banked
  3672  00183C  6F65               	movwf	__doprnt@pb& (0+255),b
  3673  00183E  0E00               	movlw	high sprintf@pb
  3674  001840  0100               	movlb	0	; () banked
  3675  001842  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  3676  001844  C07D  F067         	movff	sprintf@f,__doprnt@f
  3677  001848  C07E  F068         	movff	sprintf@f+1,__doprnt@f+1
  3678  00184C  0E83               	movlw	low sprintf@ap
  3679  00184E  0100               	movlb	0	; () banked
  3680  001850  6F69               	movwf	__doprnt@ap& (0+255),b
  3681  001852  0E00               	movlw	high sprintf@ap
  3682  001854  0100               	movlb	0	; () banked
  3683  001856  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  3684  001858  EC4C  F000         	call	__doprnt	;wreg free
  3685  00185C  C085  FFD9         	movff	sprintf@pb,fsr2l
  3686  001860  C086  FFDA         	movff	sprintf@pb+1,fsr2h
  3687  001864  0E00               	movlw	0
  3688  001866  6EDF               	movwf	indf2,c
  3689  001868  0012               	return	
  3690  00186A                     __end_of_sprintf:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _getUUID *****************
  3713 ;; Defined at:
  3714 ;;		line 48 in file "main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    8
  3735 ;; This function calls:
  3736 ;;		_printf
  3737 ;;		_read_line
  3738 ;;		_strcpy
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text16
  3745  001B08                     __ptext16:
  3746                           	opt stack 0
  3747  001B08                     _getUUID:
  3748                           	opt stack 22
  3749                           
  3750                           ;main.c: 49: printf("sys get hweui\r\n");
  3751                           
  3752                           ;incstack = 0
  3753  001B08  0E53               	movlw	low STR_5
  3754  001B0A  0100               	movlb	0	; () banked
  3755  001B0C  6F7B               	movwf	printf@f& (0+255),b
  3756  001B0E  0EFF               	movlw	high STR_5
  3757  001B10  0100               	movlb	0	; () banked
  3758  001B12  6F7C               	movwf	(printf@f+1)& (0+255),b
  3759  001B14  EC5E  F00C         	call	_printf	;wreg free
  3760                           
  3761                           ;main.c: 50: read_line();
  3762  001B18  EC2F  F00E         	call	_read_line	;wreg free
  3763                           
  3764                           ;main.c: 51: strcpy(uuid,line);
  3765  001B1C  0E9B               	movlw	low _uuid
  3766  001B1E  6E26               	movwf	strcpy@to,c
  3767  001B20  0E00               	movlw	high _uuid
  3768  001B22  6E27               	movwf	strcpy@to+1,c
  3769  001B24  0E80               	movlw	low _line
  3770  001B26  6E28               	movwf	strcpy@from,c
  3771  001B28  0E01               	movlw	high _line
  3772  001B2A  6E29               	movwf	strcpy@from+1,c
  3773  001B2C  EC56  F00D         	call	_strcpy	;wreg free
  3774  001B30  0012               	return		;funcret
  3775  001B32                     __end_of_getUUID:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           prodh	equ	0xFF4
  3782                           prodl	equ	0xFF3
  3783                           intcon	equ	0xFF2
  3784                           postinc0	equ	0xFEE
  3785                           wreg	equ	0xFE8
  3786                           indf1	equ	0xFE7
  3787                           postdec1	equ	0xFE5
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _strcpy *****************
  3798 ;; Defined at:
  3799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  to              2   37[COMRAM] PTR unsigned char 
  3802 ;;		 -> uuid(40), 
  3803 ;;  from            2   39[COMRAM] PTR const unsigned char 
  3804 ;;		 -> line(128), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  cp              2   41[COMRAM] PTR unsigned char 
  3807 ;;		 -> uuid(40), 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  2   37[COMRAM] PTR unsigned char 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:        6 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    4
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_getUUID
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text17
  3832  001AAC                     __ptext17:
  3833                           	opt stack 0
  3834  001AAC                     _strcpy:
  3835                           	opt stack 25
  3836                           
  3837                           ;incstack = 0
  3838  001AAC  C026  F02A         	movff	strcpy@to,strcpy@cp
  3839  001AB0  C027  F02B         	movff	strcpy@to+1,strcpy@cp+1
  3840  001AB4  D004               	goto	l2715
  3841  001AB6                     l2713:
  3842  001AB6  4A2A               	infsnz	strcpy@cp,f,c
  3843  001AB8  2A2B               	incf	strcpy@cp+1,f,c
  3844  001ABA  4A28               	infsnz	strcpy@from,f,c
  3845  001ABC  2A29               	incf	strcpy@from+1,f,c
  3846  001ABE                     l2715:
  3847  001ABE  C028  FFD9         	movff	strcpy@from,fsr2l
  3848  001AC2  C029  FFDA         	movff	strcpy@from+1,fsr2h
  3849  001AC6  C02A  FFE1         	movff	strcpy@cp,fsr1l
  3850  001ACA  C02B  FFE2         	movff	strcpy@cp+1,fsr1h
  3851  001ACE  CFDF FFE7          	movff	indf2,indf1
  3852  001AD2  50E7               	movf	indf1,w,c
  3853  001AD4  B4D8               	btfsc	status,2,c
  3854  001AD6  0012               	return	
  3855  001AD8  D7EE               	goto	l2713
  3856  001ADA                     __end_of_strcpy:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           indf1	equ	0xFE7
  3868                           postdec1	equ	0xFE5
  3869                           fsr1h	equ	0xFE2
  3870                           fsr1l	equ	0xFE1
  3871                           indf2	equ	0xFDF
  3872                           postinc2	equ	0xFDE
  3873                           postdec2	equ	0xFDD
  3874                           fsr2h	equ	0xFDA
  3875                           fsr2l	equ	0xFD9
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _read_line *****************
  3879 ;; Defined at:
  3880 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2  147[None  ] int 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    4
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_getUUID
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text18
  3910  001C5E                     __ptext18:
  3911                           	opt stack 0
  3912  001C5E                     _read_line:
  3913                           	opt stack 26
  3914  001C5E                     l2699:
  3915  001C5E  0434               	decf	_ready,w,c	;volatile
  3916  001C60  A4D8               	btfss	status,2,c
  3917  001C62  D7FD               	goto	l2699
  3918                           
  3919                           ;eusart1.c: 252: }
  3920                           ;eusart1.c: 253: ready=0;
  3921  001C64  0E00               	movlw	0
  3922  001C66  6E34               	movwf	_ready,c	;volatile
  3923  001C68  0012               	return	
  3924  001C6A                     __end_of_read_line:
  3925                           	opt stack 0
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           prodh	equ	0xFF4
  3931                           prodl	equ	0xFF3
  3932                           intcon	equ	0xFF2
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           indf1	equ	0xFE7
  3936                           postdec1	equ	0xFE5
  3937                           fsr1h	equ	0xFE2
  3938                           fsr1l	equ	0xFE1
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function _printf *****************
  3947 ;; Defined at:
  3948 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\printf.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  f               2   27[BANK0 ] PTR const unsigned char 
  3951 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  3952 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  3953 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  3954 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  3955 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  3956 ;;		 -> STR_5(16), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  pb              4   37[BANK0 ] struct __prbuf
  3959 ;;  ap              2   35[BANK0 ] PTR void [1]
  3960 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2   27[BANK0 ] int 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:       14 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    7
  3977 ;; This function calls:
  3978 ;;		__doprnt
  3979 ;; This function is called by:
  3980 ;;		_getUUID
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text19
  3986  0018BC                     __ptext19:
  3987                           	opt stack 0
  3988  0018BC                     _printf:
  3989                           	opt stack 23
  3990                           
  3991                           ;incstack = 0
  3992  0018BC  0E00               	movlw	0
  3993  0018BE  0100               	movlb	0	; () banked
  3994  0018C0  6F85               	movwf	printf@pb& (0+255),b
  3995  0018C2  0E00               	movlw	0
  3996  0018C4  0100               	movlb	0	; () banked
  3997  0018C6  6F86               	movwf	(printf@pb+1)& (0+255),b
  3998  0018C8  0E6A               	movlw	low _putch
  3999  0018CA  0100               	movlb	0	; () banked
  4000  0018CC  6F87               	movwf	(printf@pb+2)& (0+255),b
  4001  0018CE  0E1C               	movlw	high _putch
  4002  0018D0  0100               	movlb	0	; () banked
  4003  0018D2  6F88               	movwf	(printf@pb+3)& (0+255),b
  4004  0018D4  0E7D               	movlw	low (?_printf+2)
  4005  0018D6  0100               	movlb	0	; () banked
  4006  0018D8  6F83               	movwf	printf@ap& (0+255),b
  4007  0018DA  0E00               	movlw	high (?_printf+2)
  4008  0018DC  0100               	movlb	0	; () banked
  4009  0018DE  6F84               	movwf	(printf@ap+1)& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;	Return value of _printf is never used
  4013  0018E0  0E85               	movlw	low printf@pb
  4014  0018E2  0100               	movlb	0	; () banked
  4015  0018E4  6F65               	movwf	__doprnt@pb& (0+255),b
  4016  0018E6  0E00               	movlw	high printf@pb
  4017  0018E8  0100               	movlb	0	; () banked
  4018  0018EA  6F66               	movwf	(__doprnt@pb+1)& (0+255),b
  4019  0018EC  C07B  F067         	movff	printf@f,__doprnt@f
  4020  0018F0  C07C  F068         	movff	printf@f+1,__doprnt@f+1
  4021  0018F4  0E83               	movlw	low printf@ap
  4022  0018F6  0100               	movlb	0	; () banked
  4023  0018F8  6F69               	movwf	__doprnt@ap& (0+255),b
  4024  0018FA  0E00               	movlw	high printf@ap
  4025  0018FC  0100               	movlb	0	; () banked
  4026  0018FE  6F6A               	movwf	(__doprnt@ap+1)& (0+255),b
  4027  001900  EC4C  F000         	call	__doprnt	;wreg free
  4028  001904  0012               	return	
  4029  001906                     __end_of_printf:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           indf1	equ	0xFE7
  4041                           postdec1	equ	0xFE5
  4042                           fsr1h	equ	0xFE2
  4043                           fsr1l	equ	0xFE1
  4044                           indf2	equ	0xFDF
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function __doprnt *****************
  4052 ;; Defined at:
  4053 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  pb              2    5[BANK0 ] PTR struct __prbuf
  4056 ;;		 -> sprintf@pb(4), printf@pb(4), 
  4057 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4058 ;;		 -> STR_27(13), STR_26(19), STR_25(32), STR_24(19), 
  4059 ;;		 -> STR_23(32), STR_22(13), STR_21(19), STR_20(19), 
  4060 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  4061 ;;		 -> STR_15(12), STR_14(16), STR_13(18), STR_12(15), 
  4062 ;;		 -> STR_11(15), STR_10(15), STR_9(14), STR_8(12), 
  4063 ;;		 -> STR_7(5), STR_5(16), 
  4064 ;;  ap              2    9[BANK0 ] PTR PTR void 
  4065 ;;		 -> sprintf@ap(2), printf@ap(2), 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  idx             1   15[BANK0 ] unsigned char 
  4068 ;;  tmpval          4    0        struct .
  4069 ;;  width           2   24[BANK0 ] int 
  4070 ;;  val             2   21[BANK0 ] unsigned int 
  4071 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  4072 ;;		 -> ?_sprintf(2), ?_printf(2), STR_28(7), _doprnt@c(1), 
  4073 ;;		 -> process_message@hexval(4), uuid(40), NULL(0), 
  4074 ;;  len             2   17[BANK0 ] unsigned int 
  4075 ;;  c               1   26[BANK0 ] char 
  4076 ;;  flag            1   23[BANK0 ] unsigned char 
  4077 ;;  prec            1   16[BANK0 ] char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    5[BANK0 ] int 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4087 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;Total ram usage:       22 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    6
  4094 ;; This function calls:
  4095 ;;		Absolute function
  4096 ;;		___lwdiv
  4097 ;;		___lwmod
  4098 ;;		___wmul
  4099 ;;		_isdigit
  4100 ;;		_putch
  4101 ;; This function is called by:
  4102 ;;		_printf
  4103 ;;		_sprintf
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text20
  4108  000098                     __ptext20:
  4109                           	opt stack 0
  4110  000098                     __doprnt:
  4111                           	opt stack 22
  4112                           
  4113                           ;doprnt.c: 499: signed char c;
  4114                           ;doprnt.c: 501: int width;
  4115                           ;doprnt.c: 506: signed char prec;
  4116                           ;doprnt.c: 508: unsigned char flag;
  4117                           ;doprnt.c: 523: union {
  4118                           ;doprnt.c: 524: unsigned long vd;
  4119                           ;doprnt.c: 525: double integ;
  4120                           ;doprnt.c: 526: } tmpval;
  4121                           ;doprnt.c: 528: unsigned int val;
  4122                           ;doprnt.c: 529: unsigned len;
  4123                           ;doprnt.c: 530: const char * cp;
  4124                           ;doprnt.c: 536: while(c = *f++) {
  4125                           
  4126                           ;incstack = 0
  4127  000098  EFAB  F004         	goto	l3383
  4128  00009C                     l3177:
  4129                           
  4130                           ;doprnt.c: 538: if(c != '%')
  4131  00009C  0E25               	movlw	37
  4132  00009E  0100               	movlb	0	; () banked
  4133  0000A0  197A               	xorwf	__doprnt@c& (0+255),w,b
  4134  0000A2  B4D8               	btfsc	status,2,c
  4135  0000A4  D03C               	goto	l3187
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;doprnt.c: 540: {
  4139                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4140  0000A6  0100               	movlb	0	; () banked
  4141  0000A8  EE20 F002          	lfsr	2,2
  4142  0000AC  5165               	movf	__doprnt@pb& (0+255),w,b
  4143  0000AE  26D9               	addwf	fsr2l,f,c
  4144  0000B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4145  0000B2  22DA               	addwfc	fsr2h,f,c
  4146  0000B4  50DE               	movf	postinc2,w,c
  4147  0000B6  10DE               	iorwf	postinc2,w,c
  4148  0000B8  B4D8               	btfsc	status,2,c
  4149  0000BA  D01A               	goto	l3183
  4150                           
  4151                           ; BSR set to: 0
  4152  0000BC  0100               	movlb	0	; () banked
  4153  0000BE  EE20 F002          	lfsr	2,2
  4154  0000C2  5165               	movf	__doprnt@pb& (0+255),w,b
  4155  0000C4  26D9               	addwf	fsr2l,f,c
  4156  0000C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4157  0000C8  22DA               	addwfc	fsr2h,f,c
  4158  0000CA  CFDE F06B          	movff	postinc2,??__doprnt
  4159  0000CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  4160  0000D2  D802               	call	u3248
  4161  0000D4  EFAB  F004         	goto	l3383
  4162  0000D8                     u3248:
  4163  0000D8  0005               	push	
  4164  0000DA  6EFA               	movwf	pclath,c
  4165  0000DC  0100               	movlb	0	; () banked
  4166  0000DE  516B               	movf	??__doprnt& (0+255),w,b
  4167  0000E0  6EFD               	movwf	tosl,c
  4168  0000E2  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4169  0000E4  6EFE               	movwf	tosh,c
  4170  0000E6  6AFF               	clrf	tosu,c
  4171  0000E8  50FA               	movf	pclath,w,c
  4172  0000EA  0100               	movlb	0	; () banked
  4173  0000EC  517A               	movf	__doprnt@c& (0+255),w,b
  4174  0000EE  0012               	return		;indir
  4175  0000F0                     l3183:
  4176  0000F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4177  0000F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4178  0000F8  CFDE F06B          	movff	postinc2,??__doprnt
  4179  0000FC  CFDD F06C          	movff	postdec2,??__doprnt+1
  4180  000100  C06B  FFD9         	movff	??__doprnt,fsr2l
  4181  000104  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4182  000108  C07A  FFDF         	movff	__doprnt@c,indf2
  4183  00010C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4184  000110  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4185  000114  2ADE               	incf	postinc2,f,c
  4186  000116  0E00               	movlw	0
  4187  000118  22DD               	addwfc	postdec2,f,c
  4188                           
  4189                           ;doprnt.c: 542: continue;
  4190  00011A  EFAB  F004         	goto	l3383
  4191  00011E                     l3187:
  4192                           
  4193                           ;doprnt.c: 543: }
  4194                           ;doprnt.c: 546: width = 0;
  4195  00011E  0E00               	movlw	0
  4196  000120  0100               	movlb	0	; () banked
  4197  000122  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4198  000124  0E00               	movlw	0
  4199  000126  6F78               	movwf	__doprnt@width& (0+255),b
  4200                           
  4201                           ;doprnt.c: 548: flag = 0;
  4202  000128  0E00               	movlw	0
  4203  00012A  0100               	movlb	0	; () banked
  4204  00012C  6F77               	movwf	__doprnt@flag& (0+255),b
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;doprnt.c: 551: switch(*f) {
  4208                           
  4209                           ;doprnt.c: 550: for(;;) {
  4210  00012E  D005               	goto	l3193
  4211  000130                     l3189:
  4212                           
  4213                           ;doprnt.c: 580: flag |= 0x04;
  4214  000130  0100               	movlb	0	; () banked
  4215  000132  8577               	bsf	__doprnt@flag& (0+255),2,b
  4216                           
  4217                           ;doprnt.c: 581: f++;
  4218  000134  0100               	movlb	0	; () banked
  4219  000136  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4220  000138  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4221  00013A                     l3193:
  4222  00013A  C067  FFF6         	movff	__doprnt@f,tblptrl
  4223  00013E  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4224  000142                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4225  000142  6AF8               	clrf	tblptru,c
  4226  000144                     	endif
  4227  000144                     	if	0	;tblptru may be non-zero
  4228  000144                     	endif
  4229  000144  0008               	tblrd		*
  4230  000146  50F5               	movf	tablat,w,c
  4231                           
  4232                           ; Switch size 1, requested type "space"
  4233                           ; Number of cases is 1, Range of values is 48 to 48
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            4     3 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  000148  0A30               	xorlw	48	; case 48
  4239  00014A  B4D8               	btfsc	status,2,c
  4240  00014C  D7F1               	goto	l3189
  4241                           
  4242                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4243                           
  4244                           ;doprnt.c: 586: }
  4245                           
  4246                           ;doprnt.c: 585: break;
  4247  00014E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4248  000152  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4249  000156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4250  000156  6AF8               	clrf	tblptru,c
  4251  000158                     	endif
  4252  000158                     	if	0	;tblptru may be non-zero
  4253  000158                     	endif
  4254  000158  0008               	tblrd		*
  4255  00015A  50F5               	movf	tablat,w,c
  4256  00015C  ECF2  F00D         	call	_isdigit
  4257  000160  A0D8               	btfss	status,0,c
  4258  000162  D175               	goto	l3259
  4259                           
  4260                           ;doprnt.c: 598: width = 0;
  4261  000164  0E00               	movlw	0
  4262  000166  0100               	movlb	0	; () banked
  4263  000168  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4264  00016A  0E00               	movlw	0
  4265  00016C  6F78               	movwf	__doprnt@width& (0+255),b
  4266  00016E                     l3199:
  4267                           
  4268                           ;doprnt.c: 600: width *= 10;
  4269  00016E  C078  F026         	movff	__doprnt@width,___wmul@multiplier
  4270  000172  C079  F027         	movff	__doprnt@width+1,___wmul@multiplier+1
  4271  000176  0E00               	movlw	0
  4272  000178  6E29               	movwf	___wmul@multiplicand+1,c
  4273  00017A  0E0A               	movlw	10
  4274  00017C  6E28               	movwf	___wmul@multiplicand,c
  4275  00017E  ECC0  F00D         	call	___wmul	;wreg free
  4276  000182  C026  F078         	movff	?___wmul,__doprnt@width
  4277  000186  C027  F079         	movff	?___wmul+1,__doprnt@width+1
  4278                           
  4279                           ;doprnt.c: 601: width += *f++ - '0';
  4280  00018A  0ED0               	movlw	208
  4281  00018C  0100               	movlb	0	; () banked
  4282  00018E  6F6B               	movwf	??__doprnt& (0+255),b
  4283  000190  0EFF               	movlw	255
  4284  000192  0100               	movlb	0	; () banked
  4285  000194  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4286  000196  C067  FFF6         	movff	__doprnt@f,tblptrl
  4287  00019A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4288  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4289  00019E  6AF8               	clrf	tblptru,c
  4290  0001A0                     	endif
  4291  0001A0                     	if	0	;tblptru may be non-zero
  4292  0001A0                     	endif
  4293  0001A0  0008               	tblrd		*
  4294  0001A2  50F5               	movf	tablat,w,c
  4295  0001A4  0100               	movlb	0	; () banked
  4296  0001A6  6F6D               	movwf	(??__doprnt+2)& (0+255),b
  4297  0001A8  6B6E               	clrf	(??__doprnt+3)& (0+255),b
  4298  0001AA  0100               	movlb	0	; () banked
  4299  0001AC  516B               	movf	??__doprnt& (0+255),w,b
  4300  0001AE  0100               	movlb	0	; () banked
  4301  0001B0  276D               	addwf	(??__doprnt+2)& (0+255),f,b
  4302  0001B2  0100               	movlb	0	; () banked
  4303  0001B4  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4304  0001B6  0100               	movlb	0	; () banked
  4305  0001B8  236E               	addwfc	(??__doprnt+3)& (0+255),f,b
  4306  0001BA  0100               	movlb	0	; () banked
  4307  0001BC  516D               	movf	(??__doprnt+2)& (0+255),w,b
  4308  0001BE  0100               	movlb	0	; () banked
  4309  0001C0  2778               	addwf	__doprnt@width& (0+255),f,b
  4310  0001C2  0100               	movlb	0	; () banked
  4311  0001C4  516E               	movf	(??__doprnt+3)& (0+255),w,b
  4312  0001C6  0100               	movlb	0	; () banked
  4313  0001C8  2379               	addwfc	(__doprnt@width+1)& (0+255),f,b
  4314                           
  4315                           ; BSR set to: 0
  4316  0001CA  0100               	movlb	0	; () banked
  4317  0001CC  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4318  0001CE  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4322  0001D0  C067  FFF6         	movff	__doprnt@f,tblptrl
  4323  0001D4  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4324  0001D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4325  0001D8  6AF8               	clrf	tblptru,c
  4326  0001DA                     	endif
  4327  0001DA                     	if	0	;tblptru may be non-zero
  4328  0001DA                     	endif
  4329  0001DA  0008               	tblrd		*
  4330  0001DC  50F5               	movf	tablat,w,c
  4331  0001DE  ECF2  F00D         	call	_isdigit
  4332  0001E2  A0D8               	btfss	status,0,c
  4333  0001E4  D134               	goto	l3259
  4334  0001E6  D7C3               	goto	l3199
  4335  0001E8                     l3207:
  4336                           
  4337                           ;doprnt.c: 718: case 'x':
  4338                           ;doprnt.c: 721: flag |= 0x80;
  4339  0001E8  0100               	movlb	0	; () banked
  4340  0001EA  8F77               	bsf	__doprnt@flag& (0+255),7,b
  4341                           
  4342                           ;doprnt.c: 723: break;
  4343  0001EC  D153               	goto	l344
  4344  0001EE                     l3209:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4348  0001EE  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4349  0001F2  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4350  0001F6  CFDF F06B          	movff	indf2,??__doprnt
  4351  0001FA  0E02               	movlw	2
  4352  0001FC  26DE               	addwf	postinc2,f,c
  4353  0001FE  CFDF F06C          	movff	indf2,??__doprnt+1
  4354  000202  0E00               	movlw	0
  4355  000204  22DD               	addwfc	postdec2,f,c
  4356  000206  C06B  FFD9         	movff	??__doprnt,fsr2l
  4357  00020A  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4358  00020E  CFDE F073          	movff	postinc2,__doprnt@cp
  4359  000212  CFDD F074          	movff	postdec2,__doprnt@cp+1
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;doprnt.c: 740: if(!cp)
  4363  000216  0100               	movlb	0	; () banked
  4364  000218  5173               	movf	__doprnt@cp& (0+255),w,b
  4365  00021A  0100               	movlb	0	; () banked
  4366  00021C  1174               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  4367  00021E  A4D8               	btfss	status,2,c
  4368  000220  D006               	goto	l3215
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;doprnt.c: 741: cp = "(null)";
  4372  000222  0EF2               	movlw	low STR_28
  4373  000224  0100               	movlb	0	; () banked
  4374  000226  6F73               	movwf	__doprnt@cp& (0+255),b
  4375  000228  0EFF               	movlw	high STR_28
  4376  00022A  0100               	movlb	0	; () banked
  4377  00022C  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4378  00022E                     l3215:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;doprnt.c: 745: len = 0;
  4382  00022E  0E00               	movlw	0
  4383  000230  0100               	movlb	0	; () banked
  4384  000232  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4385  000234  0E00               	movlw	0
  4386  000236  6F71               	movwf	__doprnt@len& (0+255),b
  4387                           
  4388                           ;doprnt.c: 746: while(cp[len])
  4389  000238  D003               	goto	l3219
  4390  00023A                     l3217:
  4391                           
  4392                           ;doprnt.c: 747: len++;
  4393  00023A  0100               	movlb	0	; () banked
  4394  00023C  4B71               	infsnz	__doprnt@len& (0+255),f,b
  4395  00023E  2B72               	incf	(__doprnt@len+1)& (0+255),f,b
  4396  000240                     l3219:
  4397                           
  4398                           ; BSR set to: 0
  4399  000240  0100               	movlb	0	; () banked
  4400  000242  5171               	movf	__doprnt@len& (0+255),w,b
  4401  000244  0100               	movlb	0	; () banked
  4402  000246  2573               	addwf	__doprnt@cp& (0+255),w,b
  4403  000248  0100               	movlb	0	; () banked
  4404  00024A  6F6B               	movwf	??__doprnt& (0+255),b
  4405  00024C  0100               	movlb	0	; () banked
  4406  00024E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4407  000250  0100               	movlb	0	; () banked
  4408  000252  2174               	addwfc	(__doprnt@cp+1)& (0+255),w,b
  4409  000254  0100               	movlb	0	; () banked
  4410  000256  6F6C               	movwf	(??__doprnt+1)& (0+255),b
  4411  000258  C06B  FFF6         	movff	??__doprnt,tblptrl
  4412  00025C  C06C  FFF7         	movff	??__doprnt+1,tblptrh
  4413  000260  0E00               	movlw	low (__mediumconst shr (0+16))
  4414  000262  6EF8               	movwf	tblptru,c
  4415  000264  0E0F               	movlw	(high __ramtop+-1)
  4416  000266  64F7               	cpfsgt	tblptrh,c
  4417  000268  D003               	bra	u3287
  4418  00026A  0008               	tblrd		*
  4419  00026C  50F5               	movf	tablat,w,c
  4420  00026E  D005               	bra	u3280
  4421  000270                     u3287:
  4422  000270  CFF6 FFE1          	movff	tblptrl,fsr1l
  4423  000274  CFF7 FFE2          	movff	tblptrh,fsr1h
  4424  000278  50E7               	movf	indf1,w,c
  4425  00027A                     u3280:
  4426  00027A  0900               	iorlw	0
  4427  00027C  A4D8               	btfss	status,2,c
  4428  00027E  D7DD               	goto	l3217
  4429  000280                     l3221:
  4430                           
  4431                           ;doprnt.c: 757: if(width > len)
  4432  000280  0100               	movlb	0	; () banked
  4433  000282  5178               	movf	__doprnt@width& (0+255),w,b
  4434  000284  0100               	movlb	0	; () banked
  4435  000286  5D71               	subwf	__doprnt@len& (0+255),w,b
  4436  000288  0100               	movlb	0	; () banked
  4437  00028A  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  4438  00028C  0100               	movlb	0	; () banked
  4439  00028E  5972               	subwfb	(__doprnt@len+1)& (0+255),w,b
  4440  000290  B0D8               	btfsc	status,0,c
  4441  000292  D009               	goto	l3225
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;doprnt.c: 758: width -= len;
  4445  000294  0100               	movlb	0	; () banked
  4446  000296  5171               	movf	__doprnt@len& (0+255),w,b
  4447  000298  0100               	movlb	0	; () banked
  4448  00029A  5F78               	subwf	__doprnt@width& (0+255),f,b
  4449  00029C  0100               	movlb	0	; () banked
  4450  00029E  5172               	movf	(__doprnt@len+1)& (0+255),w,b
  4451  0002A0  0100               	movlb	0	; () banked
  4452  0002A2  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4453  0002A4  D03E               	goto	l3235
  4454  0002A6                     l3225:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;doprnt.c: 759: else
  4458                           ;doprnt.c: 760: width = 0;
  4459  0002A6  0E00               	movlw	0
  4460  0002A8  0100               	movlb	0	; () banked
  4461  0002AA  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4462  0002AC  0E00               	movlw	0
  4463  0002AE  6F78               	movwf	__doprnt@width& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;doprnt.c: 764: while(width--)
  4467  0002B0  D038               	goto	l3235
  4468  0002B2                     l3227:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4472  0002B2  0100               	movlb	0	; () banked
  4473  0002B4  EE20 F002          	lfsr	2,2
  4474  0002B8  5165               	movf	__doprnt@pb& (0+255),w,b
  4475  0002BA  26D9               	addwf	fsr2l,f,c
  4476  0002BC  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4477  0002BE  22DA               	addwfc	fsr2h,f,c
  4478  0002C0  50DE               	movf	postinc2,w,c
  4479  0002C2  10DE               	iorwf	postinc2,w,c
  4480  0002C4  B4D8               	btfsc	status,2,c
  4481  0002C6  D018               	goto	l3231
  4482                           
  4483                           ; BSR set to: 0
  4484  0002C8  0100               	movlb	0	; () banked
  4485  0002CA  EE20 F002          	lfsr	2,2
  4486  0002CE  5165               	movf	__doprnt@pb& (0+255),w,b
  4487  0002D0  26D9               	addwf	fsr2l,f,c
  4488  0002D2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4489  0002D4  22DA               	addwfc	fsr2h,f,c
  4490  0002D6  CFDE F06B          	movff	postinc2,??__doprnt
  4491  0002DA  CFDD F06C          	movff	postdec2,??__doprnt+1
  4492  0002DE  D801               	call	u3328
  4493  0002E0  D020               	goto	l3235
  4494  0002E2                     u3328:
  4495  0002E2  0005               	push	
  4496  0002E4  6EFA               	movwf	pclath,c
  4497  0002E6  0100               	movlb	0	; () banked
  4498  0002E8  516B               	movf	??__doprnt& (0+255),w,b
  4499  0002EA  6EFD               	movwf	tosl,c
  4500  0002EC  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4501  0002EE  6EFE               	movwf	tosh,c
  4502  0002F0  6AFF               	clrf	tosu,c
  4503  0002F2  50FA               	movf	pclath,w,c
  4504  0002F4  0E20               	movlw	32
  4505  0002F6  0012               	return		;indir
  4506  0002F8                     l3231:
  4507  0002F8  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4508  0002FC  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4509  000300  CFDE F06B          	movff	postinc2,??__doprnt
  4510  000304  CFDD F06C          	movff	postdec2,??__doprnt+1
  4511  000308  C06B  FFD9         	movff	??__doprnt,fsr2l
  4512  00030C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4513  000310  0E20               	movlw	32
  4514  000312  6EDF               	movwf	indf2,c
  4515  000314  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4516  000318  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4517  00031C  2ADE               	incf	postinc2,f,c
  4518  00031E  0E00               	movlw	0
  4519  000320  22DD               	addwfc	postdec2,f,c
  4520  000322                     l3235:
  4521  000322  0100               	movlb	0	; () banked
  4522  000324  0778               	decf	__doprnt@width& (0+255),f,b
  4523  000326  A0D8               	btfss	status,0,c
  4524  000328  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  4525  00032A  0100               	movlb	0	; () banked
  4526  00032C  2978               	incf	__doprnt@width& (0+255),w,b
  4527  00032E  E1C1               	bnz	l3227
  4528  000330  0100               	movlb	0	; () banked
  4529  000332  2979               	incf	(__doprnt@width+1)& (0+255),w,b
  4530  000334  B4D8               	btfsc	status,2,c
  4531  000336  D060               	goto	l3249
  4532  000338  D7BC               	goto	l3227
  4533  00033A                     l3237:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  4537  00033A  0100               	movlb	0	; () banked
  4538  00033C  EE20 F002          	lfsr	2,2
  4539  000340  5165               	movf	__doprnt@pb& (0+255),w,b
  4540  000342  26D9               	addwf	fsr2l,f,c
  4541  000344  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4542  000346  22DA               	addwfc	fsr2h,f,c
  4543  000348  50DE               	movf	postinc2,w,c
  4544  00034A  10DE               	iorwf	postinc2,w,c
  4545  00034C  B4D8               	btfsc	status,2,c
  4546  00034E  D02C               	goto	l3243
  4547                           
  4548                           ; BSR set to: 0
  4549  000350  0100               	movlb	0	; () banked
  4550  000352  EE20 F002          	lfsr	2,2
  4551  000356  5165               	movf	__doprnt@pb& (0+255),w,b
  4552  000358  26D9               	addwf	fsr2l,f,c
  4553  00035A  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  4554  00035C  22DA               	addwfc	fsr2h,f,c
  4555  00035E  CFDE F06B          	movff	postinc2,??__doprnt
  4556  000362  CFDD F06C          	movff	postdec2,??__doprnt+1
  4557  000366  D801               	call	u3358
  4558  000368  D01B               	goto	l3241
  4559  00036A                     u3358:
  4560  00036A  0005               	push	
  4561  00036C  6EFA               	movwf	pclath,c
  4562  00036E  0100               	movlb	0	; () banked
  4563  000370  516B               	movf	??__doprnt& (0+255),w,b
  4564  000372  6EFD               	movwf	tosl,c
  4565  000374  516C               	movf	(??__doprnt+1)& (0+255),w,b
  4566  000376  6EFE               	movwf	tosh,c
  4567  000378  6AFF               	clrf	tosu,c
  4568  00037A  50FA               	movf	pclath,w,c
  4569  00037C  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4570  000380  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4571  000384  0E00               	movlw	low (__mediumconst shr (0+16))
  4572  000386  6EF8               	movwf	tblptru,c
  4573  000388  0E0F               	movlw	(high __ramtop+-1)
  4574  00038A  64F7               	cpfsgt	tblptrh,c
  4575  00038C  D003               	bra	u3367
  4576  00038E  0008               	tblrd		*
  4577  000390  50F5               	movf	tablat,w,c
  4578  000392  D005               	bra	u3360
  4579  000394                     u3367:
  4580  000394  CFF6 FFE1          	movff	tblptrl,fsr1l
  4581  000398  CFF7 FFE2          	movff	tblptrh,fsr1h
  4582  00039C  50E7               	movf	indf1,w,c
  4583  00039E                     u3360:
  4584  00039E  0012               	return		;indir
  4585  0003A0                     l3241:
  4586  0003A0  0100               	movlb	0	; () banked
  4587  0003A2  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4588  0003A4  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4589  0003A6  D028               	goto	l3249
  4590  0003A8                     l3243:
  4591                           
  4592                           ; BSR set to: 0
  4593  0003A8  C073  FFF6         	movff	__doprnt@cp,tblptrl
  4594  0003AC  C074  FFF7         	movff	__doprnt@cp+1,tblptrh
  4595  0003B0  0E00               	movlw	low (__mediumconst shr (0+16))
  4596  0003B2  6EF8               	movwf	tblptru,c
  4597  0003B4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4598  0003B8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4599  0003BC  CFDE F06B          	movff	postinc2,??__doprnt
  4600  0003C0  CFDD F06C          	movff	postdec2,??__doprnt+1
  4601  0003C4  C06B  FFD9         	movff	??__doprnt,fsr2l
  4602  0003C8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4603  0003CC  0E0F               	movlw	(high __ramtop+-1)
  4604  0003CE  64F7               	cpfsgt	tblptrh,c
  4605  0003D0  D003               	bra	u3377
  4606  0003D2  0008               	tblrd		*
  4607  0003D4  50F5               	movf	tablat,w,c
  4608  0003D6  D005               	bra	u3370
  4609  0003D8                     u3377:
  4610  0003D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4611  0003DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4612  0003E0  50E7               	movf	indf1,w,c
  4613  0003E2                     u3370:
  4614  0003E2  6EDF               	movwf	indf2,c
  4615  0003E4  0100               	movlb	0	; () banked
  4616  0003E6  4B73               	infsnz	__doprnt@cp& (0+255),f,b
  4617  0003E8  2B74               	incf	(__doprnt@cp+1)& (0+255),f,b
  4618                           
  4619                           ; BSR set to: 0
  4620  0003EA  C065  FFD9         	movff	__doprnt@pb,fsr2l
  4621  0003EE  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  4622  0003F2  2ADE               	incf	postinc2,f,c
  4623  0003F4  0E00               	movlw	0
  4624  0003F6  22DD               	addwfc	postdec2,f,c
  4625  0003F8                     l3249:
  4626                           
  4627                           ; BSR set to: 0
  4628  0003F8  0100               	movlb	0	; () banked
  4629  0003FA  0771               	decf	__doprnt@len& (0+255),f,b
  4630  0003FC  A0D8               	btfss	status,0,c
  4631  0003FE  0772               	decf	(__doprnt@len+1)& (0+255),f,b
  4632  000400  0100               	movlb	0	; () banked
  4633  000402  2971               	incf	__doprnt@len& (0+255),w,b
  4634  000404  E19A               	bnz	l3237
  4635  000406  0100               	movlb	0	; () banked
  4636  000408  2972               	incf	(__doprnt@len+1)& (0+255),w,b
  4637  00040A  B4D8               	btfsc	status,2,c
  4638  00040C  D2A4               	goto	l3383
  4639  00040E  D795               	goto	l3237
  4640  000410                     l3251:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4644  000410  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4645  000414  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4646  000418  CFDF F06B          	movff	indf2,??__doprnt
  4647  00041C  0E02               	movlw	2
  4648  00041E  26DE               	addwf	postinc2,f,c
  4649  000420  CFDF F06C          	movff	indf2,??__doprnt+1
  4650  000424  0E00               	movlw	0
  4651  000426  22DD               	addwfc	postdec2,f,c
  4652  000428  C06B  FFD9         	movff	??__doprnt,fsr2l
  4653  00042C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4654  000430  50DF               	movf	indf2,w,c
  4655  000432  0100               	movlb	0	; () banked
  4656  000434  6F7A               	movwf	__doprnt@c& (0+255),b
  4657  000436                     l3253:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;doprnt.c: 805: cp = (char *)&c;
  4661  000436  0E7A               	movlw	low __doprnt@c
  4662  000438  0100               	movlb	0	; () banked
  4663  00043A  6F73               	movwf	__doprnt@cp& (0+255),b
  4664  00043C  0E00               	movlw	high __doprnt@c
  4665  00043E  0100               	movlb	0	; () banked
  4666  000440  6F74               	movwf	(__doprnt@cp+1)& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;doprnt.c: 806: len = 1;
  4670  000442  0E00               	movlw	0
  4671  000444  0100               	movlb	0	; () banked
  4672  000446  6F72               	movwf	(__doprnt@len+1)& (0+255),b
  4673  000448  0E01               	movlw	1
  4674  00044A  6F71               	movwf	__doprnt@len& (0+255),b
  4675                           
  4676                           ;doprnt.c: 807: goto dostring;
  4677  00044C  D719               	goto	l3221
  4678  00044E                     l3259:
  4679  00044E  C067  FFF6         	movff	__doprnt@f,tblptrl
  4680  000452  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  4681  000456  0100               	movlb	0	; () banked
  4682  000458  4B67               	infsnz	__doprnt@f& (0+255),f,b
  4683  00045A  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  4684  00045C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4685  00045C  6AF8               	clrf	tblptru,c
  4686  00045E                     	endif
  4687  00045E                     	if	0	;tblptru may be non-zero
  4688  00045E                     	endif
  4689  00045E  0008               	tblrd		*
  4690  000460  CFF5 F07A          	movff	tablat,__doprnt@c
  4691  000464  0100               	movlb	0	; () banked
  4692  000466  517A               	movf	__doprnt@c& (0+255),w,b
  4693                           
  4694                           ; Switch size 1, requested type "space"
  4695                           ; Number of cases is 7, Range of values is 0 to 120
  4696                           ; switch strategies available:
  4697                           ; Name         Instructions Cycles
  4698                           ; simple_byte           22    12 (average)
  4699                           ;	Chosen strategy is simple_byte
  4700  000468  0A00               	xorlw	0	; case 0
  4701  00046A  B4D8               	btfsc	status,2,c
  4702  00046C  D284               	goto	l3385
  4703  00046E  0A58               	xorlw	88	; case 88
  4704  000470  B4D8               	btfsc	status,2,c
  4705  000472  D6BA               	goto	l3207
  4706  000474  0A3B               	xorlw	59	; case 99
  4707  000476  B4D8               	btfsc	status,2,c
  4708  000478  D7CB               	goto	l3251
  4709  00047A  0A07               	xorlw	7	; case 100
  4710  00047C  B4D8               	btfsc	status,2,c
  4711  00047E  D00A               	goto	l344
  4712  000480  0A0D               	xorlw	13	; case 105
  4713  000482  B4D8               	btfsc	status,2,c
  4714  000484  D007               	goto	l344
  4715  000486  0A1A               	xorlw	26	; case 115
  4716  000488  B4D8               	btfsc	status,2,c
  4717  00048A  D6B1               	goto	l3209
  4718  00048C  0A0B               	xorlw	11	; case 120
  4719  00048E  B4D8               	btfsc	status,2,c
  4720  000490  D6AB               	goto	l3207
  4721  000492  D7D1               	goto	l3253
  4722  000494                     l344:
  4723                           
  4724                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4725  000494  0100               	movlb	0	; () banked
  4726  000496  BF77               	btfsc	__doprnt@flag& (0+255),7,b
  4727  000498  D020               	goto	l3269
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;doprnt.c: 1253: {
  4731                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4732  00049A  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4733  00049E  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4734  0004A2  CFDF F06B          	movff	indf2,??__doprnt
  4735  0004A6  0E02               	movlw	2
  4736  0004A8  26DE               	addwf	postinc2,f,c
  4737  0004AA  CFDF F06C          	movff	indf2,??__doprnt+1
  4738  0004AE  0E00               	movlw	0
  4739  0004B0  22DD               	addwfc	postdec2,f,c
  4740  0004B2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4741  0004B6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4742  0004BA  CFDE F075          	movff	postinc2,__doprnt@val
  4743  0004BE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;doprnt.c: 1261: if((int)val < 0) {
  4747  0004C2  0100               	movlb	0	; () banked
  4748  0004C4  AF76               	btfss	(__doprnt@val+1)& (0+255),7,b
  4749  0004C6  D060               	goto	l3301
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;doprnt.c: 1262: flag |= 0x03;
  4753  0004C8  0E03               	movlw	3
  4754  0004CA  0100               	movlb	0	; () banked
  4755  0004CC  1377               	iorwf	__doprnt@flag& (0+255),f,b
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;doprnt.c: 1263: val = -val;
  4759  0004CE  0100               	movlb	0	; () banked
  4760  0004D0  6D75               	negf	__doprnt@val& (0+255),b
  4761  0004D2  1F76               	comf	(__doprnt@val+1)& (0+255),f,b
  4762  0004D4  B0D8               	btfsc	status,0,c
  4763  0004D6  2B76               	incf	(__doprnt@val+1)& (0+255),f,b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;doprnt.c: 1264: }
  4767                           ;doprnt.c: 1266: }
  4768  0004D8  D057               	goto	l3301
  4769  0004DA                     l3269:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;doprnt.c: 1268: else
  4773                           ;doprnt.c: 1273: {
  4774                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4775  0004DA  C069  FFD9         	movff	__doprnt@ap,fsr2l
  4776  0004DE  C06A  FFDA         	movff	__doprnt@ap+1,fsr2h
  4777  0004E2  CFDF F06B          	movff	indf2,??__doprnt
  4778  0004E6  0E02               	movlw	2
  4779  0004E8  26DE               	addwf	postinc2,f,c
  4780  0004EA  CFDF F06C          	movff	indf2,??__doprnt+1
  4781  0004EE  0E00               	movlw	0
  4782  0004F0  22DD               	addwfc	postdec2,f,c
  4783  0004F2  C06B  FFD9         	movff	??__doprnt,fsr2l
  4784  0004F6  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  4785  0004FA  CFDE F075          	movff	postinc2,__doprnt@val
  4786  0004FE  CFDD F076          	movff	postdec2,__doprnt@val+1
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;doprnt.c: 1287: }
  4790                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4791  000502  D042               	goto	l3301
  4792  000504                     l3271:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4796  000504  0E01               	movlw	1
  4797  000506  0100               	movlb	0	; () banked
  4798  000508  6F7A               	movwf	__doprnt@c& (0+255),b
  4799  00050A                     l3273:
  4800                           
  4801                           ; BSR set to: 0
  4802  00050A  0E05               	movlw	5
  4803  00050C  0100               	movlb	0	; () banked
  4804  00050E  197A               	xorwf	__doprnt@c& (0+255),w,b
  4805  000510  B4D8               	btfsc	status,2,c
  4806  000512  D043               	goto	l3303
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;doprnt.c: 1306: if(val < dpowers[c])
  4810                           
  4811                           ; BSR set to: 0
  4812                           
  4813                           ; BSR set to: 0
  4814  000514  0100               	movlb	0	; () banked
  4815  000516  517A               	movf	__doprnt@c& (0+255),w,b
  4816  000518  0D02               	mullw	2
  4817  00051A  0E5B               	movlw	low _dpowers
  4818  00051C  24F3               	addwf	prodl,w,c
  4819  00051E  6EF6               	movwf	tblptrl,c
  4820  000520  0EFE               	movlw	high _dpowers
  4821  000522  20F4               	addwfc	prodh,w,c
  4822  000524  6EF7               	movwf	tblptrh,c
  4823  000526                     	if	1	;There are 3 active tblptr bytes
  4824  000526  6AF8               	clrf	tblptru,c
  4825  000528  0E00               	movlw	low (__mediumconst shr (0+16))
  4826  00052A  22F8               	addwfc	tblptru,f,c
  4827  00052C                     	endif
  4828  00052C  0009               	tblrd		*+
  4829  00052E  50F5               	movf	tablat,w,c
  4830  000530  0100               	movlb	0	; () banked
  4831  000532  5D75               	subwf	__doprnt@val& (0+255),w,b
  4832  000534  0009               	tblrd		*+
  4833  000536  50F5               	movf	tablat,w,c
  4834  000538  0100               	movlb	0	; () banked
  4835  00053A  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4836  00053C  A0D8               	btfss	status,0,c
  4837  00053E  D02D               	goto	l3303
  4838                           
  4839                           ; BSR set to: 0
  4840                           
  4841                           ; BSR set to: 0
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;doprnt.c: 1307: break;
  4845  000540  0100               	movlb	0	; () banked
  4846  000542  2B7A               	incf	__doprnt@c& (0+255),f,b
  4847  000544  D7E2               	goto	l3273
  4848  000546                     l3285:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4852  000546  0E01               	movlw	1
  4853  000548  0100               	movlb	0	; () banked
  4854  00054A  6F7A               	movwf	__doprnt@c& (0+255),b
  4855  00054C                     l3287:
  4856                           
  4857                           ; BSR set to: 0
  4858  00054C  0E04               	movlw	4
  4859  00054E  0100               	movlb	0	; () banked
  4860  000550  197A               	xorwf	__doprnt@c& (0+255),w,b
  4861  000552  B4D8               	btfsc	status,2,c
  4862  000554  D022               	goto	l3303
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4866                           
  4867                           ; BSR set to: 0
  4868                           
  4869                           ; BSR set to: 0
  4870  000556  0100               	movlb	0	; () banked
  4871  000558  517A               	movf	__doprnt@c& (0+255),w,b
  4872  00055A  0D02               	mullw	2
  4873  00055C  0E65               	movlw	low _hexpowers
  4874  00055E  24F3               	addwf	prodl,w,c
  4875  000560  6EF6               	movwf	tblptrl,c
  4876  000562  0EFE               	movlw	high _hexpowers
  4877  000564  20F4               	addwfc	prodh,w,c
  4878  000566  6EF7               	movwf	tblptrh,c
  4879  000568                     	if	1	;There are 3 active tblptr bytes
  4880  000568  6AF8               	clrf	tblptru,c
  4881  00056A  0E00               	movlw	low (__mediumconst shr (0+16))
  4882  00056C  22F8               	addwfc	tblptru,f,c
  4883  00056E                     	endif
  4884  00056E  0009               	tblrd		*+
  4885  000570  50F5               	movf	tablat,w,c
  4886  000572  0100               	movlb	0	; () banked
  4887  000574  5D75               	subwf	__doprnt@val& (0+255),w,b
  4888  000576  0009               	tblrd		*+
  4889  000578  50F5               	movf	tablat,w,c
  4890  00057A  0100               	movlb	0	; () banked
  4891  00057C  5976               	subwfb	(__doprnt@val+1)& (0+255),w,b
  4892  00057E  A0D8               	btfss	status,0,c
  4893  000580  D00C               	goto	l3303
  4894                           
  4895                           ; BSR set to: 0
  4896                           
  4897                           ; BSR set to: 0
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;doprnt.c: 1318: break;
  4901  000582  0100               	movlb	0	; () banked
  4902  000584  2B7A               	incf	__doprnt@c& (0+255),f,b
  4903  000586  D7E2               	goto	l3287
  4904  000588                     l3301:
  4905                           
  4906                           ; BSR set to: 0
  4907  000588  0100               	movlb	0	; () banked
  4908  00058A  5177               	movf	__doprnt@flag& (0+255),w,b
  4909  00058C  0B80               	andlw	128
  4910                           
  4911                           ; Switch size 1, requested type "space"
  4912                           ; Number of cases is 2, Range of values is 0 to 128
  4913                           ; switch strategies available:
  4914                           ; Name         Instructions Cycles
  4915                           ; simple_byte            7     4 (average)
  4916                           ;	Chosen strategy is simple_byte
  4917  00058E  0A00               	xorlw	0	; case 0
  4918  000590  B4D8               	btfsc	status,2,c
  4919  000592  D7B8               	goto	l3271
  4920  000594  0A80               	xorlw	128	; case 128
  4921  000596  B4D8               	btfsc	status,2,c
  4922  000598  D7D6               	goto	l3285
  4923  00059A                     l3303:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4927  00059A  0100               	movlb	0	; () banked
  4928  00059C  5178               	movf	__doprnt@width& (0+255),w,b
  4929  00059E  0100               	movlb	0	; () banked
  4930  0005A0  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4931  0005A2  B4D8               	btfsc	status,2,c
  4932  0005A4  D00B               	goto	l3309
  4933                           
  4934                           ; BSR set to: 0
  4935  0005A6  C077  F06B         	movff	__doprnt@flag,??__doprnt
  4936  0005AA  0E03               	movlw	3
  4937  0005AC  0100               	movlb	0	; () banked
  4938  0005AE  176B               	andwf	??__doprnt& (0+255),f,b
  4939  0005B0  B4D8               	btfsc	status,2,c
  4940  0005B2  D004               	goto	l3309
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;doprnt.c: 1346: width--;
  4944  0005B4  0100               	movlb	0	; () banked
  4945  0005B6  0778               	decf	__doprnt@width& (0+255),f,b
  4946  0005B8  A0D8               	btfss	status,0,c
  4947  0005BA  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  4948  0005BC                     l3309:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;doprnt.c: 1381: if(width > c)
  4952  0005BC  0E80               	movlw	128
  4953  0005BE  0100               	movlb	0	; () banked
  4954  0005C0  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  4955  0005C2  0E7F               	movlw	127
  4956  0005C4  0100               	movlb	0	; () banked
  4957  0005C6  6F6B               	movwf	??__doprnt& (0+255),b
  4958  0005C8  0100               	movlb	0	; () banked
  4959  0005CA  5178               	movf	__doprnt@width& (0+255),w,b
  4960  0005CC  0100               	movlb	0	; () banked
  4961  0005CE  5D7A               	subwf	__doprnt@c& (0+255),w,b
  4962  0005D0  0100               	movlb	0	; () banked
  4963  0005D2  5179               	movf	(__doprnt@width+1)& (0+255),w,b
  4964  0005D4  0A80               	xorlw	128
  4965  0005D6  0100               	movlb	0	; () banked
  4966  0005D8  596B               	subwfb	??__doprnt& (0+255),w,b
  4967  0005DA  B0D8               	btfsc	status,0,c
  4968  0005DC  D00B               	goto	l3313
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;doprnt.c: 1382: width -= c;
  4972  0005DE  0100               	movlb	0	; () banked
  4973  0005E0  517A               	movf	__doprnt@c& (0+255),w,b
  4974  0005E2  0100               	movlb	0	; () banked
  4975  0005E4  5F78               	subwf	__doprnt@width& (0+255),f,b
  4976  0005E6  0E00               	movlw	0
  4977  0005E8  0100               	movlb	0	; () banked
  4978  0005EA  BF7A               	btfsc	__doprnt@c& (0+255),7,b
  4979  0005EC  0EFF               	movlw	255
  4980  0005EE  0100               	movlb	0	; () banked
  4981  0005F0  5B79               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4982  0005F2  D005               	goto	l3315
  4983  0005F4                     l3313:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;doprnt.c: 1383: else
  4987                           ;doprnt.c: 1384: width = 0;
  4988  0005F4  0E00               	movlw	0
  4989  0005F6  0100               	movlb	0	; () banked
  4990  0005F8  6F79               	movwf	(__doprnt@width+1)& (0+255),b
  4991  0005FA  0E00               	movlw	0
  4992  0005FC  6F78               	movwf	__doprnt@width& (0+255),b
  4993  0005FE                     l3315:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;doprnt.c: 1387: if(flag & 0x04) {
  4997  0005FE  0100               	movlb	0	; () banked
  4998  000600  A577               	btfss	__doprnt@flag& (0+255),2,b
  4999  000602  D082               	goto	l3339
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;doprnt.c: 1392: if(flag & 0x03)
  5003  000604  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5004  000608  0E03               	movlw	3
  5005  00060A  0100               	movlb	0	; () banked
  5006  00060C  176B               	andwf	??__doprnt& (0+255),f,b
  5007  00060E  B4D8               	btfsc	status,2,c
  5008  000610  D038               	goto	l3327
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5012  000612  0100               	movlb	0	; () banked
  5013  000614  EE20 F002          	lfsr	2,2
  5014  000618  5165               	movf	__doprnt@pb& (0+255),w,b
  5015  00061A  26D9               	addwf	fsr2l,f,c
  5016  00061C  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5017  00061E  22DA               	addwfc	fsr2h,f,c
  5018  000620  50DE               	movf	postinc2,w,c
  5019  000622  10DE               	iorwf	postinc2,w,c
  5020  000624  B4D8               	btfsc	status,2,c
  5021  000626  D018               	goto	l3323
  5022                           
  5023                           ; BSR set to: 0
  5024  000628  0100               	movlb	0	; () banked
  5025  00062A  EE20 F002          	lfsr	2,2
  5026  00062E  5165               	movf	__doprnt@pb& (0+255),w,b
  5027  000630  26D9               	addwf	fsr2l,f,c
  5028  000632  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5029  000634  22DA               	addwfc	fsr2h,f,c
  5030  000636  CFDE F06B          	movff	postinc2,??__doprnt
  5031  00063A  CFDD F06C          	movff	postdec2,??__doprnt+1
  5032  00063E  D801               	call	u3538
  5033  000640  D020               	goto	l3327
  5034  000642                     u3538:
  5035  000642  0005               	push	
  5036  000644  6EFA               	movwf	pclath,c
  5037  000646  0100               	movlb	0	; () banked
  5038  000648  516B               	movf	??__doprnt& (0+255),w,b
  5039  00064A  6EFD               	movwf	tosl,c
  5040  00064C  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5041  00064E  6EFE               	movwf	tosh,c
  5042  000650  6AFF               	clrf	tosu,c
  5043  000652  50FA               	movf	pclath,w,c
  5044  000654  0E2D               	movlw	45
  5045  000656  0012               	return		;indir
  5046  000658                     l3323:
  5047  000658  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5048  00065C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5049  000660  CFDE F06B          	movff	postinc2,??__doprnt
  5050  000664  CFDD F06C          	movff	postdec2,??__doprnt+1
  5051  000668  C06B  FFD9         	movff	??__doprnt,fsr2l
  5052  00066C  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5053  000670  0E2D               	movlw	45
  5054  000672  6EDF               	movwf	indf2,c
  5055  000674  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5056  000678  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5057  00067C  2ADE               	incf	postinc2,f,c
  5058  00067E  0E00               	movlw	0
  5059  000680  22DD               	addwfc	postdec2,f,c
  5060  000682                     l3327:
  5061                           
  5062                           ;doprnt.c: 1415: if(width)
  5063  000682  0100               	movlb	0	; () banked
  5064  000684  5178               	movf	__doprnt@width& (0+255),w,b
  5065  000686  0100               	movlb	0	; () banked
  5066  000688  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5067  00068A  B4D8               	btfsc	status,2,c
  5068  00068C  D0C4               	goto	l3361
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  5072                           
  5073                           ; BSR set to: 0
  5074                           
  5075                           ;doprnt.c: 1416: do
  5076  00068E  0100               	movlb	0	; () banked
  5077  000690  EE20 F002          	lfsr	2,2
  5078  000694  5165               	movf	__doprnt@pb& (0+255),w,b
  5079  000696  26D9               	addwf	fsr2l,f,c
  5080  000698  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5081  00069A  22DA               	addwfc	fsr2h,f,c
  5082  00069C  50DE               	movf	postinc2,w,c
  5083  00069E  10DE               	iorwf	postinc2,w,c
  5084  0006A0  B4D8               	btfsc	status,2,c
  5085  0006A2  D018               	goto	l3333
  5086                           
  5087                           ; BSR set to: 0
  5088  0006A4  0100               	movlb	0	; () banked
  5089  0006A6  EE20 F002          	lfsr	2,2
  5090  0006AA  5165               	movf	__doprnt@pb& (0+255),w,b
  5091  0006AC  26D9               	addwf	fsr2l,f,c
  5092  0006AE  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5093  0006B0  22DA               	addwfc	fsr2h,f,c
  5094  0006B2  CFDE F06B          	movff	postinc2,??__doprnt
  5095  0006B6  CFDD F06C          	movff	postdec2,??__doprnt+1
  5096  0006BA  D801               	call	u3568
  5097  0006BC  D020               	goto	l3337
  5098  0006BE                     u3568:
  5099  0006BE  0005               	push	
  5100  0006C0  6EFA               	movwf	pclath,c
  5101  0006C2  0100               	movlb	0	; () banked
  5102  0006C4  516B               	movf	??__doprnt& (0+255),w,b
  5103  0006C6  6EFD               	movwf	tosl,c
  5104  0006C8  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5105  0006CA  6EFE               	movwf	tosh,c
  5106  0006CC  6AFF               	clrf	tosu,c
  5107  0006CE  50FA               	movf	pclath,w,c
  5108  0006D0  0E30               	movlw	48
  5109  0006D2  0012               	return		;indir
  5110  0006D4                     l3333:
  5111  0006D4  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5112  0006D8  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5113  0006DC  CFDE F06B          	movff	postinc2,??__doprnt
  5114  0006E0  CFDD F06C          	movff	postdec2,??__doprnt+1
  5115  0006E4  C06B  FFD9         	movff	??__doprnt,fsr2l
  5116  0006E8  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5117  0006EC  0E30               	movlw	48
  5118  0006EE  6EDF               	movwf	indf2,c
  5119  0006F0  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5120  0006F4  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5121  0006F8  2ADE               	incf	postinc2,f,c
  5122  0006FA  0E00               	movlw	0
  5123  0006FC  22DD               	addwfc	postdec2,f,c
  5124  0006FE                     l3337:
  5125                           
  5126                           ;doprnt.c: 1418: while(--width);
  5127  0006FE  0100               	movlb	0	; () banked
  5128  000700  0778               	decf	__doprnt@width& (0+255),f,b
  5129  000702  A0D8               	btfss	status,0,c
  5130  000704  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5131  000706  D7BD               	goto	l3327
  5132  000708                     l3339:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;doprnt.c: 1422: {
  5136                           ;doprnt.c: 1424: if(width
  5137                           ;doprnt.c: 1428: )
  5138  000708  0100               	movlb	0	; () banked
  5139  00070A  5178               	movf	__doprnt@width& (0+255),w,b
  5140  00070C  0100               	movlb	0	; () banked
  5141  00070E  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5142  000710  B4D8               	btfsc	status,2,c
  5143  000712  D042               	goto	l3351
  5144  000714                     l3341:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  5148  000714  0100               	movlb	0	; () banked
  5149  000716  EE20 F002          	lfsr	2,2
  5150  00071A  5165               	movf	__doprnt@pb& (0+255),w,b
  5151  00071C  26D9               	addwf	fsr2l,f,c
  5152  00071E  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5153  000720  22DA               	addwfc	fsr2h,f,c
  5154  000722  50DE               	movf	postinc2,w,c
  5155  000724  10DE               	iorwf	postinc2,w,c
  5156  000726  B4D8               	btfsc	status,2,c
  5157  000728  D018               	goto	l3345
  5158                           
  5159                           ; BSR set to: 0
  5160  00072A  0100               	movlb	0	; () banked
  5161  00072C  EE20 F002          	lfsr	2,2
  5162  000730  5165               	movf	__doprnt@pb& (0+255),w,b
  5163  000732  26D9               	addwf	fsr2l,f,c
  5164  000734  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5165  000736  22DA               	addwfc	fsr2h,f,c
  5166  000738  CFDE F06B          	movff	postinc2,??__doprnt
  5167  00073C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5168  000740  D801               	call	u3608
  5169  000742  D020               	goto	l3349
  5170  000744                     u3608:
  5171  000744  0005               	push	
  5172  000746  6EFA               	movwf	pclath,c
  5173  000748  0100               	movlb	0	; () banked
  5174  00074A  516B               	movf	??__doprnt& (0+255),w,b
  5175  00074C  6EFD               	movwf	tosl,c
  5176  00074E  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5177  000750  6EFE               	movwf	tosh,c
  5178  000752  6AFF               	clrf	tosu,c
  5179  000754  50FA               	movf	pclath,w,c
  5180  000756  0E20               	movlw	32
  5181  000758  0012               	return		;indir
  5182  00075A                     l3345:
  5183  00075A  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5184  00075E  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5185  000762  CFDE F06B          	movff	postinc2,??__doprnt
  5186  000766  CFDD F06C          	movff	postdec2,??__doprnt+1
  5187  00076A  C06B  FFD9         	movff	??__doprnt,fsr2l
  5188  00076E  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5189  000772  0E20               	movlw	32
  5190  000774  6EDF               	movwf	indf2,c
  5191  000776  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5192  00077A  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5193  00077E  2ADE               	incf	postinc2,f,c
  5194  000780  0E00               	movlw	0
  5195  000782  22DD               	addwfc	postdec2,f,c
  5196  000784                     l3349:
  5197                           
  5198                           ;doprnt.c: 1431: while(--width);
  5199  000784  0100               	movlb	0	; () banked
  5200  000786  0778               	decf	__doprnt@width& (0+255),f,b
  5201  000788  A0D8               	btfss	status,0,c
  5202  00078A  0779               	decf	(__doprnt@width+1)& (0+255),f,b
  5203  00078C  0100               	movlb	0	; () banked
  5204  00078E  5178               	movf	__doprnt@width& (0+255),w,b
  5205  000790  0100               	movlb	0	; () banked
  5206  000792  1179               	iorwf	(__doprnt@width+1)& (0+255),w,b
  5207  000794  A4D8               	btfss	status,2,c
  5208  000796  D7BE               	goto	l3341
  5209  000798                     l3351:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;doprnt.c: 1438: if(flag & 0x03)
  5213  000798  C077  F06B         	movff	__doprnt@flag,??__doprnt
  5214  00079C  0E03               	movlw	3
  5215  00079E  0100               	movlb	0	; () banked
  5216  0007A0  176B               	andwf	??__doprnt& (0+255),f,b
  5217  0007A2  B4D8               	btfsc	status,2,c
  5218  0007A4  D038               	goto	l3361
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  5222  0007A6  0100               	movlb	0	; () banked
  5223  0007A8  EE20 F002          	lfsr	2,2
  5224  0007AC  5165               	movf	__doprnt@pb& (0+255),w,b
  5225  0007AE  26D9               	addwf	fsr2l,f,c
  5226  0007B0  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5227  0007B2  22DA               	addwfc	fsr2h,f,c
  5228  0007B4  50DE               	movf	postinc2,w,c
  5229  0007B6  10DE               	iorwf	postinc2,w,c
  5230  0007B8  B4D8               	btfsc	status,2,c
  5231  0007BA  D018               	goto	l3357
  5232                           
  5233                           ; BSR set to: 0
  5234  0007BC  0100               	movlb	0	; () banked
  5235  0007BE  EE20 F002          	lfsr	2,2
  5236  0007C2  5165               	movf	__doprnt@pb& (0+255),w,b
  5237  0007C4  26D9               	addwf	fsr2l,f,c
  5238  0007C6  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5239  0007C8  22DA               	addwfc	fsr2h,f,c
  5240  0007CA  CFDE F06B          	movff	postinc2,??__doprnt
  5241  0007CE  CFDD F06C          	movff	postdec2,??__doprnt+1
  5242  0007D2  D801               	call	u3648
  5243  0007D4  D020               	goto	l3361
  5244  0007D6                     u3648:
  5245  0007D6  0005               	push	
  5246  0007D8  6EFA               	movwf	pclath,c
  5247  0007DA  0100               	movlb	0	; () banked
  5248  0007DC  516B               	movf	??__doprnt& (0+255),w,b
  5249  0007DE  6EFD               	movwf	tosl,c
  5250  0007E0  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5251  0007E2  6EFE               	movwf	tosh,c
  5252  0007E4  6AFF               	clrf	tosu,c
  5253  0007E6  50FA               	movf	pclath,w,c
  5254  0007E8  0E2D               	movlw	45
  5255  0007EA  0012               	return		;indir
  5256  0007EC                     l3357:
  5257  0007EC  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5258  0007F0  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5259  0007F4  CFDE F06B          	movff	postinc2,??__doprnt
  5260  0007F8  CFDD F06C          	movff	postdec2,??__doprnt+1
  5261  0007FC  C06B  FFD9         	movff	??__doprnt,fsr2l
  5262  000800  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5263  000804  0E2D               	movlw	45
  5264  000806  6EDF               	movwf	indf2,c
  5265  000808  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5266  00080C  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5267  000810  2ADE               	incf	postinc2,f,c
  5268  000812  0E00               	movlw	0
  5269  000814  22DD               	addwfc	postdec2,f,c
  5270  000816                     l3361:
  5271                           
  5272                           ;doprnt.c: 1469: }
  5273                           ;doprnt.c: 1472: prec = c;
  5274  000816  C07A  F070         	movff	__doprnt@c,__doprnt@prec
  5275                           
  5276                           ;doprnt.c: 1474: while(prec--) {
  5277  00081A  D097               	goto	l3381
  5278  00081C                     l3363:
  5279                           
  5280                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5281  00081C  0100               	movlb	0	; () banked
  5282  00081E  5170               	movf	__doprnt@prec& (0+255),w,b
  5283  000820  0D02               	mullw	2
  5284  000822  0E5B               	movlw	low _dpowers
  5285  000824  24F3               	addwf	prodl,w,c
  5286  000826  6EF6               	movwf	tblptrl,c
  5287  000828  0EFE               	movlw	high _dpowers
  5288  00082A  20F4               	addwfc	prodh,w,c
  5289  00082C  6EF7               	movwf	tblptrh,c
  5290  00082E                     	if	1	;There are 3 active tblptr bytes
  5291  00082E  6AF8               	clrf	tblptru,c
  5292  000830  0E00               	movlw	low (__mediumconst shr (0+16))
  5293  000832  22F8               	addwfc	tblptru,f,c
  5294  000834                     	endif
  5295  000834  0009               	tblrd		*+
  5296  000836  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5297  00083A  000A               	tblrd		*-
  5298  00083C  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5299  000840  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5300  000844  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5301  000848  EC35  F00C         	call	___lwdiv
  5302  00084C  C026  F060         	movff	?___lwdiv,___lwmod@dividend
  5303  000850  C027  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
  5304  000854  0E00               	movlw	0
  5305  000856  0100               	movlb	0	; () banked
  5306  000858  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5307  00085A  0E0A               	movlw	10
  5308  00085C  6F62               	movwf	___lwmod@divisor& (0+255),b
  5309  00085E  EC5D  F00B         	call	___lwmod	;wreg free
  5310  000862  0100               	movlb	0	; () banked
  5311  000864  5160               	movf	?___lwmod& (0+255),w,b
  5312  000866  0F30               	addlw	48
  5313  000868  0100               	movlb	0	; () banked
  5314  00086A  6F7A               	movwf	__doprnt@c& (0+255),b
  5315                           
  5316                           ;doprnt.c: 1491: break;
  5317  00086C  D035               	goto	l3373
  5318  00086E                     l3365:
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;doprnt.c: 1499: {
  5322                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5323  00086E  C075  F026         	movff	__doprnt@val,___lwdiv@dividend
  5324  000872  C076  F027         	movff	__doprnt@val+1,___lwdiv@dividend+1
  5325  000876  0100               	movlb	0	; () banked
  5326  000878  5170               	movf	__doprnt@prec& (0+255),w,b
  5327  00087A  0D02               	mullw	2
  5328  00087C  0E65               	movlw	low _hexpowers
  5329  00087E  24F3               	addwf	prodl,w,c
  5330  000880  6EF6               	movwf	tblptrl,c
  5331  000882  0EFE               	movlw	high _hexpowers
  5332  000884  20F4               	addwfc	prodh,w,c
  5333  000886  6EF7               	movwf	tblptrh,c
  5334  000888                     	if	1	;There are 3 active tblptr bytes
  5335  000888  6AF8               	clrf	tblptru,c
  5336  00088A  0E00               	movlw	low (__mediumconst shr (0+16))
  5337  00088C  22F8               	addwfc	tblptru,f,c
  5338  00088E                     	endif
  5339  00088E  0009               	tblrd		*+
  5340  000890  CFF5 F028          	movff	tablat,___lwdiv@divisor
  5341  000894  000A               	tblrd		*-
  5342  000896  CFF5 F029          	movff	tablat,___lwdiv@divisor+1
  5343  00089A  EC35  F00C         	call	___lwdiv	;wreg free
  5344  00089E  5026               	movf	?___lwdiv,w,c
  5345  0008A0  0B0F               	andlw	15
  5346  0008A2  0100               	movlb	0	; () banked
  5347  0008A4  6F6F               	movwf	__doprnt@idx& (0+255),b
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5351  0008A6  0100               	movlb	0	; () banked
  5352  0008A8  516F               	movf	__doprnt@idx& (0+255),w,b
  5353  0008AA  0D01               	mullw	1
  5354  0008AC  0E31               	movlw	low STR_29
  5355  0008AE  24F3               	addwf	prodl,w,c
  5356  0008B0  6EF6               	movwf	tblptrl,c
  5357  0008B2  0EFF               	movlw	high STR_29
  5358  0008B4  20F4               	addwfc	prodh,w,c
  5359  0008B6  6EF7               	movwf	tblptrh,c
  5360  0008B8                     	if	1	;There are 3 active tblptr bytes
  5361  0008B8  6AF8               	clrf	tblptru,c
  5362  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  5363  0008BC  22F8               	addwfc	tblptru,f,c
  5364  0008BE                     	endif
  5365  0008BE  0008               	tblrd		*
  5366  0008C0  CFF5 F07A          	movff	tablat,__doprnt@c
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;doprnt.c: 1523: }
  5370                           
  5371                           ;doprnt.c: 1508: }
  5372                           ;doprnt.c: 1510: break;
  5373  0008C4  D009               	goto	l3373
  5374  0008C6                     l3371:
  5375  0008C6  0100               	movlb	0	; () banked
  5376  0008C8  5177               	movf	__doprnt@flag& (0+255),w,b
  5377  0008CA  0B80               	andlw	128
  5378                           
  5379                           ; Switch size 1, requested type "space"
  5380                           ; Number of cases is 2, Range of values is 0 to 128
  5381                           ; switch strategies available:
  5382                           ; Name         Instructions Cycles
  5383                           ; simple_byte            7     4 (average)
  5384                           ;	Chosen strategy is simple_byte
  5385  0008CC  0A00               	xorlw	0	; case 0
  5386  0008CE  B4D8               	btfsc	status,2,c
  5387  0008D0  D7A5               	goto	l3363
  5388  0008D2  0A80               	xorlw	128	; case 128
  5389  0008D4  B4D8               	btfsc	status,2,c
  5390  0008D6  D7CB               	goto	l3365
  5391  0008D8                     l3373:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5395  0008D8  0100               	movlb	0	; () banked
  5396  0008DA  EE20 F002          	lfsr	2,2
  5397  0008DE  5165               	movf	__doprnt@pb& (0+255),w,b
  5398  0008E0  26D9               	addwf	fsr2l,f,c
  5399  0008E2  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5400  0008E4  22DA               	addwfc	fsr2h,f,c
  5401  0008E6  50DE               	movf	postinc2,w,c
  5402  0008E8  10DE               	iorwf	postinc2,w,c
  5403  0008EA  B4D8               	btfsc	status,2,c
  5404  0008EC  D019               	goto	l3377
  5405                           
  5406                           ; BSR set to: 0
  5407  0008EE  0100               	movlb	0	; () banked
  5408  0008F0  EE20 F002          	lfsr	2,2
  5409  0008F4  5165               	movf	__doprnt@pb& (0+255),w,b
  5410  0008F6  26D9               	addwf	fsr2l,f,c
  5411  0008F8  5166               	movf	(__doprnt@pb+1)& (0+255),w,b
  5412  0008FA  22DA               	addwfc	fsr2h,f,c
  5413  0008FC  CFDE F06B          	movff	postinc2,??__doprnt
  5414  000900  CFDD F06C          	movff	postdec2,??__doprnt+1
  5415  000904  D801               	call	u3668
  5416  000906  D021               	goto	l3381
  5417  000908                     u3668:
  5418  000908  0005               	push	
  5419  00090A  6EFA               	movwf	pclath,c
  5420  00090C  0100               	movlb	0	; () banked
  5421  00090E  516B               	movf	??__doprnt& (0+255),w,b
  5422  000910  6EFD               	movwf	tosl,c
  5423  000912  516C               	movf	(??__doprnt+1)& (0+255),w,b
  5424  000914  6EFE               	movwf	tosh,c
  5425  000916  6AFF               	clrf	tosu,c
  5426  000918  50FA               	movf	pclath,w,c
  5427  00091A  0100               	movlb	0	; () banked
  5428  00091C  517A               	movf	__doprnt@c& (0+255),w,b
  5429  00091E  0012               	return		;indir
  5430  000920                     l3377:
  5431  000920  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5432  000924  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5433  000928  CFDE F06B          	movff	postinc2,??__doprnt
  5434  00092C  CFDD F06C          	movff	postdec2,??__doprnt+1
  5435  000930  C06B  FFD9         	movff	??__doprnt,fsr2l
  5436  000934  C06C  FFDA         	movff	??__doprnt+1,fsr2h
  5437  000938  C07A  FFDF         	movff	__doprnt@c,indf2
  5438  00093C  C065  FFD9         	movff	__doprnt@pb,fsr2l
  5439  000940  C066  FFDA         	movff	__doprnt@pb+1,fsr2h
  5440  000944  2ADE               	incf	postinc2,f,c
  5441  000946  0E00               	movlw	0
  5442  000948  22DD               	addwfc	postdec2,f,c
  5443  00094A                     l3381:
  5444  00094A  0100               	movlb	0	; () banked
  5445  00094C  0770               	decf	__doprnt@prec& (0+255),f,b
  5446  00094E  0100               	movlb	0	; () banked
  5447  000950  2970               	incf	__doprnt@prec& (0+255),w,b
  5448  000952  A4D8               	btfss	status,2,c
  5449  000954  D7B8               	goto	l3371
  5450  000956                     l3383:
  5451  000956  C067  FFF6         	movff	__doprnt@f,tblptrl
  5452  00095A  C068  FFF7         	movff	__doprnt@f+1,tblptrh
  5453  00095E  0100               	movlb	0	; () banked
  5454  000960  4B67               	infsnz	__doprnt@f& (0+255),f,b
  5455  000962  2B68               	incf	(__doprnt@f+1)& (0+255),f,b
  5456  000964                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5457  000964  6AF8               	clrf	tblptru,c
  5458  000966                     	endif
  5459  000966                     	if	0	;tblptru may be non-zero
  5460  000966                     	endif
  5461  000966  0008               	tblrd		*
  5462  000968  CFF5 F07A          	movff	tablat,__doprnt@c
  5463  00096C  0100               	movlb	0	; () banked
  5464  00096E  517A               	movf	__doprnt@c& (0+255),w,b
  5465  000970  A4D8               	btfss	status,2,c
  5466  000972  EF4E  F000         	goto	l3177
  5467  000976                     l3385:
  5468                           
  5469                           ;doprnt.c: 1540: return 0;
  5470  000976  0E00               	movlw	0
  5471  000978  0100               	movlb	0	; () banked
  5472  00097A  6F66               	movwf	(?__doprnt+1)& (0+255),b
  5473  00097C  0E00               	movlw	0
  5474  00097E  6F65               	movwf	?__doprnt& (0+255),b
  5475  000980  0012               	return	
  5476  000982                     __end_of__doprnt:
  5477                           	opt stack 0
  5478                           tosu	equ	0xFFF
  5479                           tosh	equ	0xFFE
  5480                           tosl	equ	0xFFD
  5481                           pclath	equ	0xFFA
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           postinc0	equ	0xFEE
  5490                           wreg	equ	0xFE8
  5491                           indf1	equ	0xFE7
  5492                           postdec1	equ	0xFE5
  5493                           fsr1h	equ	0xFE2
  5494                           fsr1l	equ	0xFE1
  5495                           indf2	equ	0xFDF
  5496                           postinc2	equ	0xFDE
  5497                           postdec2	equ	0xFDD
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           
  5502 ;; *************** function _putch *****************
  5503 ;; Defined at:
  5504 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  txData          1    wreg     unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  txData          1   38[COMRAM] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;Total ram usage:        1 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    5
  5525 ;; This function calls:
  5526 ;;		_EUSART1_Write
  5527 ;; This function is called by:
  5528 ;;		_printf
  5529 ;;		__doprnt
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text21
  5534  001C6A                     __ptext21:
  5535                           	opt stack 0
  5536  001C6A                     _putch:
  5537                           	opt stack 22
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;incstack = 0
  5541                           ;putch@txData stored from wreg
  5542  001C6A  6E27               	movwf	putch@txData,c
  5543                           
  5544                           ;eusart1.c: 172: EUSART1_Write(txData);
  5545  001C6C  5027               	movf	putch@txData,w,c
  5546  001C6E  EC83  F00C         	call	_EUSART1_Write
  5547  001C72  0012               	return		;funcret
  5548  001C74                     __end_of_putch:
  5549                           	opt stack 0
  5550                           tosu	equ	0xFFF
  5551                           tosh	equ	0xFFE
  5552                           tosl	equ	0xFFD
  5553                           pclath	equ	0xFFA
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           prodh	equ	0xFF4
  5559                           prodl	equ	0xFF3
  5560                           intcon	equ	0xFF2
  5561                           postinc0	equ	0xFEE
  5562                           wreg	equ	0xFE8
  5563                           indf1	equ	0xFE7
  5564                           postdec1	equ	0xFE5
  5565                           fsr1h	equ	0xFE2
  5566                           fsr1l	equ	0xFE1
  5567                           indf2	equ	0xFDF
  5568                           postinc2	equ	0xFDE
  5569                           postdec2	equ	0xFDD
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function _EUSART1_Write *****************
  5575 ;; Defined at:
  5576 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  txData          1    wreg     unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  txData          1   37[COMRAM] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        1 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    4
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_putch
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text22
  5605  001906                     __ptext22:
  5606                           	opt stack 0
  5607  001906                     _EUSART1_Write:
  5608                           	opt stack 22
  5609                           
  5610                           ;incstack = 0
  5611                           ;EUSART1_Write@txData stored from wreg
  5612  001906  6E26               	movwf	EUSART1_Write@txData,c
  5613  001908                     l2191:
  5614  001908  5039               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  5615  00190A  B4D8               	btfsc	status,2,c
  5616  00190C  D7FD               	goto	l2191
  5617                           
  5618                           ;eusart1.c: 146: }
  5619                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  5620  00190E  B89D               	btfsc	3997,4,c	;volatile
  5621  001910  D003               	goto	l110
  5622                           
  5623                           ;eusart1.c: 149: {
  5624                           ;eusart1.c: 150: TXREG1 = txData;
  5625  001912  C026  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5626                           
  5627                           ;eusart1.c: 151: }
  5628  001916  D012               	goto	l2205
  5629  001918                     l110:
  5630                           
  5631                           ;eusart1.c: 152: else
  5632                           ;eusart1.c: 153: {
  5633                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  5634  001918  989D               	bcf	3997,4,c	;volatile
  5635                           
  5636                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  5637  00191A  5032               	movf	_eusart1TxHead,w,c
  5638  00191C  0D01               	mullw	1
  5639  00191E  0E00               	movlw	low _eusart1TxBuffer
  5640  001920  24F3               	addwf	prodl,w,c
  5641  001922  6ED9               	movwf	fsr2l,c
  5642  001924  0E01               	movlw	high _eusart1TxBuffer
  5643  001926  20F4               	addwfc	prodh,w,c
  5644  001928  6EDA               	movwf	fsr2h,c
  5645  00192A  C026  FFDF         	movff	EUSART1_Write@txData,indf2
  5646  00192E  2A32               	incf	_eusart1TxHead,f,c
  5647                           
  5648                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  5649  001930  0E7F               	movlw	127
  5650  001932  6432               	cpfsgt	_eusart1TxHead,c
  5651  001934  D002               	goto	l2203
  5652                           
  5653                           ;eusart1.c: 157: {
  5654                           ;eusart1.c: 158: eusart1TxHead = 0;
  5655  001936  0E00               	movlw	0
  5656  001938  6E32               	movwf	_eusart1TxHead,c
  5657  00193A                     l2203:
  5658                           
  5659                           ;eusart1.c: 159: }
  5660                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  5661  00193A  0639               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  5662  00193C                     l2205:
  5663                           
  5664                           ;eusart1.c: 161: }
  5665                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  5666  00193C  889D               	bsf	3997,4,c	;volatile
  5667  00193E  0012               	return		;funcret
  5668  001940                     __end_of_EUSART1_Write:
  5669                           	opt stack 0
  5670                           tosu	equ	0xFFF
  5671                           tosh	equ	0xFFE
  5672                           tosl	equ	0xFFD
  5673                           pclath	equ	0xFFA
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           postinc0	equ	0xFEE
  5682                           wreg	equ	0xFE8
  5683                           indf1	equ	0xFE7
  5684                           postdec1	equ	0xFE5
  5685                           fsr1h	equ	0xFE2
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _isdigit *****************
  5695 ;; Defined at:
  5696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  c               1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  c               1   39[COMRAM] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;		None               void
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        3 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    4
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		__doprnt
  5721 ;;		_strtol
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text23
  5726  001BE4                     __ptext23:
  5727                           	opt stack 0
  5728  001BE4                     _isdigit:
  5729                           	opt stack 25
  5730                           
  5731                           ;incstack = 0
  5732                           ;isdigit@c stored from wreg
  5733  001BE4  6E28               	movwf	isdigit@c,c
  5734  001BE6  0E00               	movlw	0
  5735  001BE8  6E27               	movwf	_isdigit$1031,c
  5736  001BEA  0E3A               	movlw	58
  5737  001BEC  6028               	cpfslt	isdigit@c,c
  5738  001BEE  D005               	goto	l2217
  5739  001BF0  0E2F               	movlw	47
  5740  001BF2  6428               	cpfsgt	isdigit@c,c
  5741  001BF4  D002               	goto	l2217
  5742  001BF6  0E01               	movlw	1
  5743  001BF8  6E27               	movwf	_isdigit$1031,c
  5744  001BFA                     l2217:
  5745  001BFA  C027  F026         	movff	_isdigit$1031,??_isdigit
  5746  001BFE  3026               	rrcf	??_isdigit,w,c
  5747  001C00  0012               	return	
  5748  001C02                     __end_of_isdigit:
  5749                           	opt stack 0
  5750                           tosu	equ	0xFFF
  5751                           tosh	equ	0xFFE
  5752                           tosl	equ	0xFFD
  5753                           pclath	equ	0xFFA
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           intcon	equ	0xFF2
  5761                           postinc0	equ	0xFEE
  5762                           wreg	equ	0xFE8
  5763                           indf1	equ	0xFE7
  5764                           postdec1	equ	0xFE5
  5765                           fsr1h	equ	0xFE2
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function ___wmul *****************
  5775 ;; Defined at:
  5776 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  multiplier      2   37[COMRAM] unsigned int 
  5779 ;;  multiplicand    2   39[COMRAM] unsigned int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  product         2   41[COMRAM] unsigned int 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  2   37[COMRAM] unsigned int 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0, prodl, prodh
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;Total ram usage:        6 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    4
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		__doprnt
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text24
  5806  001B80                     __ptext24:
  5807                           	opt stack 0
  5808  001B80                     ___wmul:
  5809                           	opt stack 23
  5810                           
  5811                           ;incstack = 0
  5812  001B80  5026               	movf	___wmul@multiplier,w,c
  5813  001B82  0228               	mulwf	___wmul@multiplicand,c
  5814  001B84  CFF3 F02A          	movff	prodl,___wmul@product
  5815  001B88  CFF4 F02B          	movff	prodh,___wmul@product+1
  5816  001B8C  5026               	movf	___wmul@multiplier,w,c
  5817  001B8E  0229               	mulwf	___wmul@multiplicand+1,c
  5818  001B90  50F3               	movf	prodl,w,c
  5819  001B92  262B               	addwf	___wmul@product+1,f,c
  5820  001B94  5027               	movf	___wmul@multiplier+1,w,c
  5821  001B96  0228               	mulwf	___wmul@multiplicand,c
  5822  001B98  50F3               	movf	prodl,w,c
  5823  001B9A  262B               	addwf	___wmul@product+1,f,c
  5824  001B9C  C02A  F026         	movff	___wmul@product,?___wmul
  5825  001BA0  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  5826  001BA4  0012               	return	
  5827  001BA6                     __end_of___wmul:
  5828                           	opt stack 0
  5829                           tosu	equ	0xFFF
  5830                           tosh	equ	0xFFE
  5831                           tosl	equ	0xFFD
  5832                           pclath	equ	0xFFA
  5833                           tblptru	equ	0xFF8
  5834                           tblptrh	equ	0xFF7
  5835                           tblptrl	equ	0xFF6
  5836                           tablat	equ	0xFF5
  5837                           prodh	equ	0xFF4
  5838                           prodl	equ	0xFF3
  5839                           intcon	equ	0xFF2
  5840                           postinc0	equ	0xFEE
  5841                           wreg	equ	0xFE8
  5842                           indf1	equ	0xFE7
  5843                           postdec1	equ	0xFE5
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           fsr2h	equ	0xFDA
  5850                           fsr2l	equ	0xFD9
  5851                           status	equ	0xFD8
  5852                           
  5853 ;; *************** function ___lwmod *****************
  5854 ;; Defined at:
  5855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  dividend        2    0[BANK0 ] unsigned int 
  5858 ;;  divisor         2    2[BANK0 ] unsigned int 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  counter         1    4[BANK0 ] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  2    0[BANK0 ] unsigned int 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;Total ram usage:        5 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    4
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		__doprnt
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text25
  5885  0016BA                     __ptext25:
  5886                           	opt stack 0
  5887  0016BA                     ___lwmod:
  5888                           	opt stack 23
  5889                           
  5890                           ;incstack = 0
  5891  0016BA  0100               	movlb	0	; () banked
  5892  0016BC  5162               	movf	___lwmod@divisor& (0+255),w,b
  5893  0016BE  0100               	movlb	0	; () banked
  5894  0016C0  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5895  0016C2  B4D8               	btfsc	status,2,c
  5896  0016C4  D026               	goto	l829
  5897                           
  5898                           ; BSR set to: 0
  5899  0016C6  0E01               	movlw	1
  5900  0016C8  0100               	movlb	0	; () banked
  5901  0016CA  6F64               	movwf	___lwmod@counter& (0+255),b
  5902  0016CC  D006               	goto	l3165
  5903  0016CE                     l3163:
  5904                           
  5905                           ; BSR set to: 0
  5906  0016CE  0100               	movlb	0	; () banked
  5907  0016D0  90D8               	bcf	status,0,c
  5908  0016D2  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  5909  0016D4  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5910  0016D6  0100               	movlb	0	; () banked
  5911  0016D8  2B64               	incf	___lwmod@counter& (0+255),f,b
  5912  0016DA                     l3165:
  5913                           
  5914                           ; BSR set to: 0
  5915  0016DA  0100               	movlb	0	; () banked
  5916  0016DC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5917  0016DE  D7F7               	goto	l3163
  5918  0016E0                     l3167:
  5919                           
  5920                           ; BSR set to: 0
  5921  0016E0  0100               	movlb	0	; () banked
  5922  0016E2  5162               	movf	___lwmod@divisor& (0+255),w,b
  5923  0016E4  0100               	movlb	0	; () banked
  5924  0016E6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  5925  0016E8  0100               	movlb	0	; () banked
  5926  0016EA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5927  0016EC  0100               	movlb	0	; () banked
  5928  0016EE  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5929  0016F0  A0D8               	btfss	status,0,c
  5930  0016F2  D008               	goto	l3171
  5931                           
  5932                           ; BSR set to: 0
  5933  0016F4  0100               	movlb	0	; () banked
  5934  0016F6  5162               	movf	___lwmod@divisor& (0+255),w,b
  5935  0016F8  0100               	movlb	0	; () banked
  5936  0016FA  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  5937  0016FC  0100               	movlb	0	; () banked
  5938  0016FE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5939  001700  0100               	movlb	0	; () banked
  5940  001702  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5941  001704                     l3171:
  5942                           
  5943                           ; BSR set to: 0
  5944  001704  0100               	movlb	0	; () banked
  5945  001706  90D8               	bcf	status,0,c
  5946  001708  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5947  00170A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  5948                           
  5949                           ; BSR set to: 0
  5950  00170C  0100               	movlb	0	; () banked
  5951  00170E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  5952  001710  D7E7               	goto	l3167
  5953  001712                     l829:
  5954                           
  5955                           ; BSR set to: 0
  5956  001712  C060  F060         	movff	___lwmod@dividend,?___lwmod
  5957  001716  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  5958                           
  5959                           ; BSR set to: 0
  5960  00171A  0012               	return		;funcret
  5961  00171C                     __end_of___lwmod:
  5962                           	opt stack 0
  5963                           tosu	equ	0xFFF
  5964                           tosh	equ	0xFFE
  5965                           tosl	equ	0xFFD
  5966                           pclath	equ	0xFFA
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           postinc0	equ	0xFEE
  5975                           wreg	equ	0xFE8
  5976                           indf1	equ	0xFE7
  5977                           postdec1	equ	0xFE5
  5978                           fsr1h	equ	0xFE2
  5979                           fsr1l	equ	0xFE1
  5980                           indf2	equ	0xFDF
  5981                           postinc2	equ	0xFDE
  5982                           postdec2	equ	0xFDD
  5983                           fsr2h	equ	0xFDA
  5984                           fsr2l	equ	0xFD9
  5985                           status	equ	0xFD8
  5986                           
  5987 ;; *************** function ___lwdiv *****************
  5988 ;; Defined at:
  5989 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  dividend        2   37[COMRAM] unsigned int 
  5992 ;;  divisor         2   39[COMRAM] unsigned int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  quotient        2   41[COMRAM] unsigned int 
  5995 ;;  counter         1   43[COMRAM] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2   37[COMRAM] unsigned int 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;Total ram usage:        7 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    4
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		__doprnt
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text26
  6020  00186A                     __ptext26:
  6021                           	opt stack 0
  6022  00186A                     ___lwdiv:
  6023                           	opt stack 23
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;incstack = 0
  6027  00186A  0E00               	movlw	0
  6028  00186C  6E2B               	movwf	___lwdiv@quotient+1,c
  6029  00186E  0E00               	movlw	0
  6030  001870  6E2A               	movwf	___lwdiv@quotient,c
  6031  001872  5028               	movf	___lwdiv@divisor,w,c
  6032  001874  1029               	iorwf	___lwdiv@divisor+1,w,c
  6033  001876  B4D8               	btfsc	status,2,c
  6034  001878  D01C               	goto	l819
  6035  00187A  0E01               	movlw	1
  6036  00187C  6E2C               	movwf	___lwdiv@counter,c
  6037  00187E  D004               	goto	l2235
  6038  001880                     l2233:
  6039  001880  90D8               	bcf	status,0,c
  6040  001882  3628               	rlcf	___lwdiv@divisor,f,c
  6041  001884  3629               	rlcf	___lwdiv@divisor+1,f,c
  6042  001886  2A2C               	incf	___lwdiv@counter,f,c
  6043  001888                     l2235:
  6044  001888  AE29               	btfss	___lwdiv@divisor+1,7,c
  6045  00188A  D7FA               	goto	l2233
  6046  00188C                     l2237:
  6047  00188C  90D8               	bcf	status,0,c
  6048  00188E  362A               	rlcf	___lwdiv@quotient,f,c
  6049  001890  362B               	rlcf	___lwdiv@quotient+1,f,c
  6050  001892  5028               	movf	___lwdiv@divisor,w,c
  6051  001894  5C26               	subwf	___lwdiv@dividend,w,c
  6052  001896  5029               	movf	___lwdiv@divisor+1,w,c
  6053  001898  5827               	subwfb	___lwdiv@dividend+1,w,c
  6054  00189A  A0D8               	btfss	status,0,c
  6055  00189C  D005               	goto	l2245
  6056  00189E  5028               	movf	___lwdiv@divisor,w,c
  6057  0018A0  5E26               	subwf	___lwdiv@dividend,f,c
  6058  0018A2  5029               	movf	___lwdiv@divisor+1,w,c
  6059  0018A4  5A27               	subwfb	___lwdiv@dividend+1,f,c
  6060  0018A6  802A               	bsf	___lwdiv@quotient,0,c
  6061  0018A8                     l2245:
  6062  0018A8  90D8               	bcf	status,0,c
  6063  0018AA  3229               	rrcf	___lwdiv@divisor+1,f,c
  6064  0018AC  3228               	rrcf	___lwdiv@divisor,f,c
  6065  0018AE  2E2C               	decfsz	___lwdiv@counter,f,c
  6066  0018B0  D7ED               	goto	l2237
  6067  0018B2                     l819:
  6068  0018B2  C02A  F026         	movff	___lwdiv@quotient,?___lwdiv
  6069  0018B6  C02B  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6070  0018BA  0012               	return		;funcret
  6071  0018BC                     __end_of___lwdiv:
  6072                           	opt stack 0
  6073                           tosu	equ	0xFFF
  6074                           tosh	equ	0xFFE
  6075                           tosl	equ	0xFFD
  6076                           pclath	equ	0xFFA
  6077                           tblptru	equ	0xFF8
  6078                           tblptrh	equ	0xFF7
  6079                           tblptrl	equ	0xFF6
  6080                           tablat	equ	0xFF5
  6081                           prodh	equ	0xFF4
  6082                           prodl	equ	0xFF3
  6083                           intcon	equ	0xFF2
  6084                           postinc0	equ	0xFEE
  6085                           wreg	equ	0xFE8
  6086                           indf1	equ	0xFE7
  6087                           postdec1	equ	0xFE5
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           postdec2	equ	0xFDD
  6093                           fsr2h	equ	0xFDA
  6094                           fsr2l	equ	0xFD9
  6095                           status	equ	0xFD8
  6096                           
  6097 ;; *************** function ___awmod *****************
  6098 ;; Defined at:
  6099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  dividend        2    8[BANK0 ] int 
  6102 ;;  divisor         2   10[BANK0 ] int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  sign            1   13[BANK0 ] unsigned char 
  6105 ;;  counter         1   12[BANK0 ] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2    8[BANK0 ] int 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;Total ram usage:        6 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    4
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text27
  6130  00141C                     __ptext27:
  6131                           	opt stack 0
  6132  00141C                     ___awmod:
  6133                           	opt stack 26
  6134                           
  6135                           ;incstack = 0
  6136  00141C  0E00               	movlw	0
  6137  00141E  0100               	movlb	0	; () banked
  6138  001420  6F6D               	movwf	___awmod@sign& (0+255),b
  6139                           
  6140                           ; BSR set to: 0
  6141  001422  0100               	movlb	0	; () banked
  6142  001424  AF69               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6143  001426  D008               	goto	l3581
  6144                           
  6145                           ; BSR set to: 0
  6146  001428  0100               	movlb	0	; () banked
  6147  00142A  6D68               	negf	___awmod@dividend& (0+255),b
  6148  00142C  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6149  00142E  B0D8               	btfsc	status,0,c
  6150  001430  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6151                           
  6152                           ; BSR set to: 0
  6153  001432  0E01               	movlw	1
  6154  001434  0100               	movlb	0	; () banked
  6155  001436  6F6D               	movwf	___awmod@sign& (0+255),b
  6156  001438                     l3581:
  6157                           
  6158                           ; BSR set to: 0
  6159  001438  0100               	movlb	0	; () banked
  6160  00143A  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6161  00143C  D005               	goto	l3585
  6162                           
  6163                           ; BSR set to: 0
  6164  00143E  0100               	movlb	0	; () banked
  6165  001440  6D6A               	negf	___awmod@divisor& (0+255),b
  6166  001442  1F6B               	comf	(___awmod@divisor+1)& (0+255),f,b
  6167  001444  B0D8               	btfsc	status,0,c
  6168  001446  2B6B               	incf	(___awmod@divisor+1)& (0+255),f,b
  6169  001448                     l3585:
  6170                           
  6171                           ; BSR set to: 0
  6172  001448  0100               	movlb	0	; () banked
  6173  00144A  516A               	movf	___awmod@divisor& (0+255),w,b
  6174  00144C  0100               	movlb	0	; () banked
  6175  00144E  116B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6176  001450  B4D8               	btfsc	status,2,c
  6177  001452  D026               	goto	l3601
  6178                           
  6179                           ; BSR set to: 0
  6180  001454  0E01               	movlw	1
  6181  001456  0100               	movlb	0	; () banked
  6182  001458  6F6C               	movwf	___awmod@counter& (0+255),b
  6183  00145A  D006               	goto	l3591
  6184  00145C                     l3589:
  6185                           
  6186                           ; BSR set to: 0
  6187  00145C  0100               	movlb	0	; () banked
  6188  00145E  90D8               	bcf	status,0,c
  6189  001460  376A               	rlcf	___awmod@divisor& (0+255),f,b
  6190  001462  376B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6191  001464  0100               	movlb	0	; () banked
  6192  001466  2B6C               	incf	___awmod@counter& (0+255),f,b
  6193  001468                     l3591:
  6194                           
  6195                           ; BSR set to: 0
  6196  001468  0100               	movlb	0	; () banked
  6197  00146A  AF6B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6198  00146C  D7F7               	goto	l3589
  6199  00146E                     l3593:
  6200                           
  6201                           ; BSR set to: 0
  6202  00146E  0100               	movlb	0	; () banked
  6203  001470  516A               	movf	___awmod@divisor& (0+255),w,b
  6204  001472  0100               	movlb	0	; () banked
  6205  001474  5D68               	subwf	___awmod@dividend& (0+255),w,b
  6206  001476  0100               	movlb	0	; () banked
  6207  001478  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6208  00147A  0100               	movlb	0	; () banked
  6209  00147C  5969               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6210  00147E  A0D8               	btfss	status,0,c
  6211  001480  D008               	goto	l3597
  6212                           
  6213                           ; BSR set to: 0
  6214  001482  0100               	movlb	0	; () banked
  6215  001484  516A               	movf	___awmod@divisor& (0+255),w,b
  6216  001486  0100               	movlb	0	; () banked
  6217  001488  5F68               	subwf	___awmod@dividend& (0+255),f,b
  6218  00148A  0100               	movlb	0	; () banked
  6219  00148C  516B               	movf	(___awmod@divisor+1)& (0+255),w,b
  6220  00148E  0100               	movlb	0	; () banked
  6221  001490  5B69               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6222  001492                     l3597:
  6223                           
  6224                           ; BSR set to: 0
  6225  001492  0100               	movlb	0	; () banked
  6226  001494  90D8               	bcf	status,0,c
  6227  001496  336B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6228  001498  336A               	rrcf	___awmod@divisor& (0+255),f,b
  6229                           
  6230                           ; BSR set to: 0
  6231  00149A  0100               	movlb	0	; () banked
  6232  00149C  2F6C               	decfsz	___awmod@counter& (0+255),f,b
  6233  00149E  D7E7               	goto	l3593
  6234  0014A0                     l3601:
  6235                           
  6236                           ; BSR set to: 0
  6237  0014A0  0100               	movlb	0	; () banked
  6238  0014A2  516D               	movf	___awmod@sign& (0+255),w,b
  6239  0014A4  0100               	movlb	0	; () banked
  6240  0014A6  B4D8               	btfsc	status,2,c
  6241  0014A8  D005               	goto	l3605
  6242                           
  6243                           ; BSR set to: 0
  6244  0014AA  0100               	movlb	0	; () banked
  6245  0014AC  6D68               	negf	___awmod@dividend& (0+255),b
  6246  0014AE  1F69               	comf	(___awmod@dividend+1)& (0+255),f,b
  6247  0014B0  B0D8               	btfsc	status,0,c
  6248  0014B2  2B69               	incf	(___awmod@dividend+1)& (0+255),f,b
  6249  0014B4                     l3605:
  6250                           
  6251                           ; BSR set to: 0
  6252  0014B4  C068  F068         	movff	___awmod@dividend,?___awmod
  6253  0014B8  C069  F069         	movff	___awmod@dividend+1,?___awmod+1
  6254  0014BC  0012               	return	
  6255  0014BE                     __end_of___awmod:
  6256                           	opt stack 0
  6257                           tosu	equ	0xFFF
  6258                           tosh	equ	0xFFE
  6259                           tosl	equ	0xFFD
  6260                           pclath	equ	0xFFA
  6261                           tblptru	equ	0xFF8
  6262                           tblptrh	equ	0xFF7
  6263                           tblptrl	equ	0xFF6
  6264                           tablat	equ	0xFF5
  6265                           prodh	equ	0xFF4
  6266                           prodl	equ	0xFF3
  6267                           intcon	equ	0xFF2
  6268                           postinc0	equ	0xFEE
  6269                           wreg	equ	0xFE8
  6270                           indf1	equ	0xFE7
  6271                           postdec1	equ	0xFE5
  6272                           fsr1h	equ	0xFE2
  6273                           fsr1l	equ	0xFE1
  6274                           indf2	equ	0xFDF
  6275                           postinc2	equ	0xFDE
  6276                           postdec2	equ	0xFDD
  6277                           fsr2h	equ	0xFDA
  6278                           fsr2l	equ	0xFD9
  6279                           status	equ	0xFD8
  6280                           
  6281 ;; *************** function _SYSTEM_Initialize *****************
  6282 ;; Defined at:
  6283 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    6
  6304 ;; This function calls:
  6305 ;;		_EPWM1_Initialize
  6306 ;;		_EUSART1_Initialize
  6307 ;;		_INTERRUPT_Initialize
  6308 ;;		_OSCILLATOR_Initialize
  6309 ;;		_PIN_MANAGER_Initialize
  6310 ;;		_TMR2_Initialize
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text28
  6317  001C02                     __ptext28:
  6318                           	opt stack 0
  6319  001C02                     _SYSTEM_Initialize:
  6320                           	opt stack 24
  6321                           
  6322                           ;mcc.c: 115: INTERRUPT_Initialize();
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;incstack = 0
  6326  001C02  EC3A  F00E         	call	_INTERRUPT_Initialize	;wreg free
  6327                           
  6328                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  6329  001C06  ECF0  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  6330                           
  6331                           ;mcc.c: 117: OSCILLATOR_Initialize();
  6332  001C0A  EC28  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  6333                           
  6334                           ;mcc.c: 118: EPWM1_Initialize();
  6335  001C0E  ECD3  F00D         	call	_EPWM1_Initialize	;wreg free
  6336                           
  6337                           ;mcc.c: 119: TMR2_Initialize();
  6338  001C12  EC18  F00E         	call	_TMR2_Initialize	;wreg free
  6339                           
  6340                           ;mcc.c: 120: EUSART1_Initialize();
  6341  001C16  EC0A  F00D         	call	_EUSART1_Initialize	;wreg free
  6342  001C1A  0012               	return		;funcret
  6343  001C1C                     __end_of_SYSTEM_Initialize:
  6344                           	opt stack 0
  6345                           tosu	equ	0xFFF
  6346                           tosh	equ	0xFFE
  6347                           tosl	equ	0xFFD
  6348                           pclath	equ	0xFFA
  6349                           tblptru	equ	0xFF8
  6350                           tblptrh	equ	0xFF7
  6351                           tblptrl	equ	0xFF6
  6352                           tablat	equ	0xFF5
  6353                           prodh	equ	0xFF4
  6354                           prodl	equ	0xFF3
  6355                           intcon	equ	0xFF2
  6356                           postinc0	equ	0xFEE
  6357                           wreg	equ	0xFE8
  6358                           indf1	equ	0xFE7
  6359                           postdec1	equ	0xFE5
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _TMR2_Initialize *****************
  6370 ;; Defined at:
  6371 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    5
  6392 ;; This function calls:
  6393 ;;		_TMR2_StartTimer
  6394 ;; This function is called by:
  6395 ;;		_SYSTEM_Initialize
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text29
  6400  001C30                     __ptext29:
  6401                           	opt stack 0
  6402  001C30                     _TMR2_Initialize:
  6403                           	opt stack 24
  6404                           
  6405                           ;tmr2.c: 63: T2CON = 0x00;
  6406                           
  6407                           ;incstack = 0
  6408  001C30  0E00               	movlw	0
  6409  001C32  6EBA               	movwf	4026,c	;volatile
  6410                           
  6411                           ;tmr2.c: 66: PR2 = 0xFF;
  6412  001C34  68BB               	setf	4027,c	;volatile
  6413                           
  6414                           ;tmr2.c: 69: TMR2 = 0x00;
  6415  001C36  0E00               	movlw	0
  6416  001C38  6EBC               	movwf	4028,c	;volatile
  6417                           
  6418                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  6419  001C3A  929E               	bcf	3998,1,c	;volatile
  6420                           
  6421                           ;tmr2.c: 75: TMR2_StartTimer();
  6422  001C3C  EC41  F00E         	call	_TMR2_StartTimer	;wreg free
  6423  001C40  0012               	return		;funcret
  6424  001C42                     __end_of_TMR2_Initialize:
  6425                           	opt stack 0
  6426                           tosu	equ	0xFFF
  6427                           tosh	equ	0xFFE
  6428                           tosl	equ	0xFFD
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           postinc0	equ	0xFEE
  6438                           wreg	equ	0xFE8
  6439                           indf1	equ	0xFE7
  6440                           postdec1	equ	0xFE5
  6441                           fsr1h	equ	0xFE2
  6442                           fsr1l	equ	0xFE1
  6443                           indf2	equ	0xFDF
  6444                           postinc2	equ	0xFDE
  6445                           postdec2	equ	0xFDD
  6446                           fsr2h	equ	0xFDA
  6447                           fsr2l	equ	0xFD9
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _TMR2_StartTimer *****************
  6451 ;; Defined at:
  6452 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		None
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    4
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_TMR2_Initialize
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text30
  6481  001C82                     __ptext30:
  6482                           	opt stack 0
  6483  001C82                     _TMR2_StartTimer:
  6484                           	opt stack 24
  6485                           
  6486                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  6487                           
  6488                           ;incstack = 0
  6489  001C82  84BA               	bsf	4026,2,c	;volatile
  6490  001C84  0012               	return		;funcret
  6491  001C86                     __end_of_TMR2_StartTimer:
  6492                           	opt stack 0
  6493                           tosu	equ	0xFFF
  6494                           tosh	equ	0xFFE
  6495                           tosl	equ	0xFFD
  6496                           pclath	equ	0xFFA
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           postinc0	equ	0xFEE
  6505                           wreg	equ	0xFE8
  6506                           indf1	equ	0xFE7
  6507                           postdec1	equ	0xFE5
  6508                           fsr1h	equ	0xFE2
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _PIN_MANAGER_Initialize *****************
  6518 ;; Defined at:
  6519 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    4
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_SYSTEM_Initialize
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text31
  6548  0019E0                     __ptext31:
  6549                           	opt stack 0
  6550  0019E0                     _PIN_MANAGER_Initialize:
  6551                           	opt stack 25
  6552                           
  6553                           ;pin_manager.c: 51: LATB = 0x0;
  6554                           
  6555                           ;incstack = 0
  6556  0019E0  0E00               	movlw	0
  6557  0019E2  6E8A               	movwf	3978,c	;volatile
  6558                           
  6559                           ;pin_manager.c: 52: LATA = 0x0;
  6560  0019E4  0E00               	movlw	0
  6561  0019E6  6E89               	movwf	3977,c	;volatile
  6562                           
  6563                           ;pin_manager.c: 53: LATC = 0x0;
  6564  0019E8  0E00               	movlw	0
  6565  0019EA  6E8B               	movwf	3979,c	;volatile
  6566                           
  6567                           ;pin_manager.c: 54: ANSELA = 0x2F;
  6568  0019EC  0E2F               	movlw	47
  6569  0019EE  010F               	movlb	15	; () banked
  6570  0019F0  6F38               	movwf	56,b	;volatile
  6571                           
  6572                           ;pin_manager.c: 55: ANSELB = 0x3E;
  6573  0019F2  0E3E               	movlw	62
  6574  0019F4  010F               	movlb	15	; () banked
  6575  0019F6  6F39               	movwf	57,b	;volatile
  6576                           
  6577                           ;pin_manager.c: 56: ANSELC = 0x38;
  6578  0019F8  0E38               	movlw	56
  6579  0019FA  010F               	movlb	15	; () banked
  6580  0019FC  6F3A               	movwf	58,b	;volatile
  6581                           
  6582                           ;pin_manager.c: 57: TRISB = 0xC8;
  6583  0019FE  0EC8               	movlw	200
  6584  001A00  6E93               	movwf	3987,c	;volatile
  6585                           
  6586                           ;pin_manager.c: 58: TRISC = 0xF9;
  6587  001A02  0EF9               	movlw	249
  6588  001A04  6E94               	movwf	3988,c	;volatile
  6589                           
  6590                           ;pin_manager.c: 59: WPUB = 0xFE;
  6591  001A06  0EFE               	movlw	254
  6592  001A08  6E61               	movwf	3937,c	;volatile
  6593                           
  6594                           ;pin_manager.c: 60: TRISA = 0xEF;
  6595  001A0A  0EEF               	movlw	239
  6596  001A0C  6E92               	movwf	3986,c	;volatile
  6597                           
  6598                           ; BSR set to: 15
  6599                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  6600  001A0E  8EF1               	bsf	intcon2,7,c	;volatile
  6601                           
  6602                           ; BSR set to: 15
  6603                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  6604  001A10  96F2               	bcf	intcon,3,c	;volatile
  6605                           
  6606                           ; BSR set to: 15
  6607  001A12  0012               	return		;funcret
  6608  001A14                     __end_of_PIN_MANAGER_Initialize:
  6609                           	opt stack 0
  6610                           tosu	equ	0xFFF
  6611                           tosh	equ	0xFFE
  6612                           tosl	equ	0xFFD
  6613                           pclath	equ	0xFFA
  6614                           tblptru	equ	0xFF8
  6615                           tblptrh	equ	0xFF7
  6616                           tblptrl	equ	0xFF6
  6617                           tablat	equ	0xFF5
  6618                           prodh	equ	0xFF4
  6619                           prodl	equ	0xFF3
  6620                           intcon	equ	0xFF2
  6621                           intcon2	equ	0xFF1
  6622                           postinc0	equ	0xFEE
  6623                           wreg	equ	0xFE8
  6624                           indf1	equ	0xFE7
  6625                           postdec1	equ	0xFE5
  6626                           fsr1h	equ	0xFE2
  6627                           fsr1l	equ	0xFE1
  6628                           indf2	equ	0xFDF
  6629                           postinc2	equ	0xFDE
  6630                           postdec2	equ	0xFDD
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function _OSCILLATOR_Initialize *****************
  6636 ;; Defined at:
  6637 ;;		line 123 in file "mcc_generated_files/mcc.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, status,2
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;Total ram usage:        0 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    4
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_SYSTEM_Initialize
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text32
  6666  001C50                     __ptext32:
  6667                           	opt stack 0
  6668  001C50                     _OSCILLATOR_Initialize:
  6669                           	opt stack 25
  6670                           
  6671                           ;mcc.c: 126: OSCCON = 0x70;
  6672                           
  6673                           ; BSR set to: 15
  6674                           ;incstack = 0
  6675  001C50  0E70               	movlw	112
  6676  001C52  6ED3               	movwf	4051,c	;volatile
  6677                           
  6678                           ;mcc.c: 128: OSCCON2 = 0x04;
  6679  001C54  0E04               	movlw	4
  6680  001C56  6ED2               	movwf	4050,c	;volatile
  6681                           
  6682                           ;mcc.c: 130: OSCTUNE = 0x40;
  6683  001C58  0E40               	movlw	64
  6684  001C5A  6E9B               	movwf	3995,c	;volatile
  6685  001C5C  0012               	return		;funcret
  6686  001C5E                     __end_of_OSCILLATOR_Initialize:
  6687                           	opt stack 0
  6688                           tosu	equ	0xFFF
  6689                           tosh	equ	0xFFE
  6690                           tosl	equ	0xFFD
  6691                           pclath	equ	0xFFA
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           intcon	equ	0xFF2
  6699                           intcon2	equ	0xFF1
  6700                           postinc0	equ	0xFEE
  6701                           wreg	equ	0xFE8
  6702                           indf1	equ	0xFE7
  6703                           postdec1	equ	0xFE5
  6704                           fsr1h	equ	0xFE2
  6705                           fsr1l	equ	0xFE1
  6706                           indf2	equ	0xFDF
  6707                           postinc2	equ	0xFDE
  6708                           postdec2	equ	0xFDD
  6709                           fsr2h	equ	0xFDA
  6710                           fsr2l	equ	0xFD9
  6711                           status	equ	0xFD8
  6712                           
  6713 ;; *************** function _INTERRUPT_Initialize *****************
  6714 ;; Defined at:
  6715 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;		None
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		None
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;Total ram usage:        0 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    4
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_SYSTEM_Initialize
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text33
  6744  001C74                     __ptext33:
  6745                           	opt stack 0
  6746  001C74                     _INTERRUPT_Initialize:
  6747                           	opt stack 25
  6748                           
  6749                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  6750                           
  6751                           ;incstack = 0
  6752  001C74  9ED0               	bcf	4048,7,c	;volatile
  6753                           
  6754                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  6755  001C76  94F1               	bcf	intcon2,2,c	;volatile
  6756                           
  6757                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  6758  001C78  989F               	bcf	3999,4,c	;volatile
  6759                           
  6760                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  6761  001C7A  9A9F               	bcf	3999,5,c	;volatile
  6762  001C7C  0012               	return		;funcret
  6763  001C7E                     __end_of_INTERRUPT_Initialize:
  6764                           	opt stack 0
  6765                           tosu	equ	0xFFF
  6766                           tosh	equ	0xFFE
  6767                           tosl	equ	0xFFD
  6768                           pclath	equ	0xFFA
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           intcon2	equ	0xFF1
  6777                           postinc0	equ	0xFEE
  6778                           wreg	equ	0xFE8
  6779                           indf1	equ	0xFE7
  6780                           postdec1	equ	0xFE5
  6781                           fsr1h	equ	0xFE2
  6782                           fsr1l	equ	0xFE1
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function _EUSART1_Initialize *****************
  6791 ;; Defined at:
  6792 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    4
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_SYSTEM_Initialize
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text34
  6821  001A14                     __ptext34:
  6822                           	opt stack 0
  6823  001A14                     _EUSART1_Initialize:
  6824                           	opt stack 25
  6825                           
  6826                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  6827                           
  6828                           ;incstack = 0
  6829  001A14  9A9D               	bcf	3997,5,c	;volatile
  6830                           
  6831                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  6832  001A16  989D               	bcf	3997,4,c	;volatile
  6833                           
  6834                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  6835  001A18  0E00               	movlw	0
  6836  001A1A  6EB8               	movwf	4024,c	;volatile
  6837                           
  6838                           ;eusart1.c: 96: RCSTA1 = 0x90;
  6839  001A1C  0E90               	movlw	144
  6840  001A1E  6EAB               	movwf	4011,c	;volatile
  6841                           
  6842                           ;eusart1.c: 99: TXSTA1 = 0x20;
  6843  001A20  0E20               	movlw	32
  6844  001A22  6EAC               	movwf	4012,c	;volatile
  6845                           
  6846                           ;eusart1.c: 102: SPBRG1 = 0x10;
  6847  001A24  0E10               	movlw	16
  6848  001A26  6EAF               	movwf	4015,c	;volatile
  6849                           
  6850                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  6851  001A28  0E00               	movlw	0
  6852  001A2A  6EB0               	movwf	4016,c	;volatile
  6853                           
  6854                           ;eusart1.c: 109: eusart1TxHead = 0;
  6855  001A2C  0E00               	movlw	0
  6856  001A2E  6E32               	movwf	_eusart1TxHead,c
  6857                           
  6858                           ;eusart1.c: 110: eusart1TxTail = 0;
  6859  001A30  0E00               	movlw	0
  6860  001A32  6E33               	movwf	_eusart1TxTail,c
  6861                           
  6862                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  6863  001A34  0E80               	movlw	128
  6864  001A36  6E39               	movwf	_eusart1TxBufferRemaining,c	;volatile
  6865                           
  6866                           ;eusart1.c: 113: eusart1RxHead = 0;
  6867  001A38  0E00               	movlw	0
  6868  001A3A  6E30               	movwf	_eusart1RxHead,c
  6869                           
  6870                           ;eusart1.c: 114: eusart1RxTail = 0;
  6871  001A3C  0E00               	movlw	0
  6872  001A3E  6E31               	movwf	_eusart1RxTail,c
  6873                           
  6874                           ;eusart1.c: 115: eusart1RxCount = 0;
  6875  001A40  0E00               	movlw	0
  6876  001A42  6E2F               	movwf	_eusart1RxCount,c	;volatile
  6877                           
  6878                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  6879  001A44  8A9D               	bsf	3997,5,c	;volatile
  6880  001A46  0012               	return		;funcret
  6881  001A48                     __end_of_EUSART1_Initialize:
  6882                           	opt stack 0
  6883                           tosu	equ	0xFFF
  6884                           tosh	equ	0xFFE
  6885                           tosl	equ	0xFFD
  6886                           pclath	equ	0xFFA
  6887                           tblptru	equ	0xFF8
  6888                           tblptrh	equ	0xFF7
  6889                           tblptrl	equ	0xFF6
  6890                           tablat	equ	0xFF5
  6891                           prodh	equ	0xFF4
  6892                           prodl	equ	0xFF3
  6893                           intcon	equ	0xFF2
  6894                           intcon2	equ	0xFF1
  6895                           postinc0	equ	0xFEE
  6896                           wreg	equ	0xFE8
  6897                           indf1	equ	0xFE7
  6898                           postdec1	equ	0xFE5
  6899                           fsr1h	equ	0xFE2
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function _EPWM1_Initialize *****************
  6909 ;; Defined at:
  6910 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    4
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_SYSTEM_Initialize
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text35
  6939  001BA6                     __ptext35:
  6940                           	opt stack 0
  6941  001BA6                     _EPWM1_Initialize:
  6942                           	opt stack 25
  6943                           
  6944                           ;epwm1.c: 69: CCP1CON = 0x0E;
  6945                           
  6946                           ;incstack = 0
  6947  001BA6  0E0E               	movlw	14
  6948  001BA8  6EBD               	movwf	4029,c	;volatile
  6949                           
  6950                           ;epwm1.c: 72: ECCP1AS = 0x00;
  6951  001BAA  0E00               	movlw	0
  6952  001BAC  6EB6               	movwf	4022,c	;volatile
  6953                           
  6954                           ;epwm1.c: 75: PWM1CON = 0x82;
  6955  001BAE  0E82               	movlw	130
  6956  001BB0  6EB7               	movwf	4023,c	;volatile
  6957                           
  6958                           ;epwm1.c: 78: PSTR1CON = 0x01;
  6959  001BB2  0E01               	movlw	1
  6960  001BB4  6EB9               	movwf	4025,c	;volatile
  6961                           
  6962                           ;epwm1.c: 81: CCPR1L = 0x00;
  6963  001BB6  0E00               	movlw	0
  6964  001BB8  6EBE               	movwf	4030,c	;volatile
  6965                           
  6966                           ;epwm1.c: 84: CCPR1H = 0x00;
  6967  001BBA  0E00               	movlw	0
  6968  001BBC  6EBF               	movwf	4031,c	;volatile
  6969                           
  6970                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  6971  001BBE  0EFC               	movlw	-4
  6972  001BC0  010F               	movlb	15	; () banked
  6973  001BC2  1749               	andwf	73,f,b	;volatile
  6974                           
  6975                           ; BSR set to: 15
  6976  001BC4  0012               	return		;funcret
  6977  001BC6                     __end_of_EPWM1_Initialize:
  6978                           	opt stack 0
  6979                           tosu	equ	0xFFF
  6980                           tosh	equ	0xFFE
  6981                           tosl	equ	0xFFD
  6982                           pclath	equ	0xFFA
  6983                           tblptru	equ	0xFF8
  6984                           tblptrh	equ	0xFF7
  6985                           tblptrl	equ	0xFF6
  6986                           tablat	equ	0xFF5
  6987                           prodh	equ	0xFF4
  6988                           prodl	equ	0xFF3
  6989                           intcon	equ	0xFF2
  6990                           intcon2	equ	0xFF1
  6991                           postinc0	equ	0xFEE
  6992                           wreg	equ	0xFE8
  6993                           indf1	equ	0xFE7
  6994                           postdec1	equ	0xFE5
  6995                           fsr1h	equ	0xFE2
  6996                           fsr1l	equ	0xFE1
  6997                           indf2	equ	0xFDF
  6998                           postinc2	equ	0xFDE
  6999                           postdec2	equ	0xFDD
  7000                           fsr2h	equ	0xFDA
  7001                           fsr2l	equ	0xFD9
  7002                           status	equ	0xFD8
  7003                           
  7004 ;; *************** function _EPWM1_LoadDutyValue *****************
  7005 ;; Defined at:
  7006 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  dutyValue       2   37[COMRAM] unsigned int 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;Total ram usage:        4 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    4
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_main
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text36
  7035  001A7C                     __ptext36:
  7036                           	opt stack 0
  7037  001A7C                     _EPWM1_LoadDutyValue:
  7038                           	opt stack 26
  7039                           
  7040                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  7041                           
  7042                           ; BSR set to: 15
  7043                           ;incstack = 0
  7044  001A7C  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7045  001A80  C027  F029         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7046  001A84  90D8               	bcf	status,0,c
  7047  001A86  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7048  001A88  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7049  001A8A  90D8               	bcf	status,0,c
  7050  001A8C  3229               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  7051  001A8E  3228               	rrcf	??_EPWM1_LoadDutyValue,f,c
  7052  001A90  5028               	movf	??_EPWM1_LoadDutyValue,w,c
  7053  001A92  6EBE               	movwf	4030,c	;volatile
  7054                           
  7055                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  7056  001A94  C026  F028         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7057  001A98  0E03               	movlw	3
  7058  001A9A  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7059  001A9C  3A28               	swapf	??_EPWM1_LoadDutyValue,f,c
  7060  001A9E  0EF0               	movlw	240
  7061  001AA0  1628               	andwf	??_EPWM1_LoadDutyValue,f,c
  7062  001AA2  50BD               	movf	4029,w,c	;volatile
  7063  001AA4  0BCF               	andlw	207
  7064  001AA6  1028               	iorwf	??_EPWM1_LoadDutyValue,w,c
  7065  001AA8  6EBD               	movwf	4029,c	;volatile
  7066  001AAA  0012               	return		;funcret
  7067  001AAC                     __end_of_EPWM1_LoadDutyValue:
  7068                           	opt stack 0
  7069                           tosu	equ	0xFFF
  7070                           tosh	equ	0xFFE
  7071                           tosl	equ	0xFFD
  7072                           pclath	equ	0xFFA
  7073                           tblptru	equ	0xFF8
  7074                           tblptrh	equ	0xFF7
  7075                           tblptrl	equ	0xFF6
  7076                           tablat	equ	0xFF5
  7077                           prodh	equ	0xFF4
  7078                           prodl	equ	0xFF3
  7079                           intcon	equ	0xFF2
  7080                           intcon2	equ	0xFF1
  7081                           postinc0	equ	0xFEE
  7082                           wreg	equ	0xFE8
  7083                           indf1	equ	0xFE7
  7084                           postdec1	equ	0xFE5
  7085                           fsr1h	equ	0xFE2
  7086                           fsr1l	equ	0xFE1
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           postdec2	equ	0xFDD
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _INTERRUPT_InterruptManager *****************
  7095 ;; Defined at:
  7096 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:       14 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    3
  7117 ;; This function calls:
  7118 ;;		_EUSART1_Receive_ISR
  7119 ;;		_EUSART1_Transmit_ISR
  7120 ;; This function is called by:
  7121 ;;		Interrupt level 2
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	intcode
  7126  000008                     __pintcode:
  7127                           	opt stack 0
  7128  000008                     _INTERRUPT_InterruptManager:
  7129                           	opt stack 22
  7130                           
  7131                           ;incstack = 0
  7132  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7133  00000A  CFFA F018          	movff	pclath,??_INTERRUPT_InterruptManager
  7134  00000E  CFFB F019          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7135  000012  CFE9 F01A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7136  000016  CFEA F01B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7137  00001A  CFE1 F01C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7138  00001E  CFE2 F01D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7139  000022  CFD9 F01E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7140  000026  CFDA F01F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7141  00002A  CFF3 F020          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7142  00002E  CFF4 F021          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7143  000032  CFF6 F022          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7144  000036  CFF7 F023          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7145  00003A  CFF8 F024          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7146  00003E  CFF5 F025          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7147                           
  7148                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7149  000042  B89D               	btfsc	3997,4,c	;volatile
  7150  000044  A89E               	btfss	3998,4,c	;volatile
  7151  000046  D003               	goto	i2l20
  7152                           
  7153                           ;interrupt_manager.c: 78: {
  7154                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  7155  000048  EC6D  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7156                           
  7157                           ;interrupt_manager.c: 80: }
  7158  00004C  D005               	goto	i2l24
  7159  00004E                     i2l20:
  7160                           
  7161                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7162  00004E  BA9D               	btfsc	3997,5,c	;volatile
  7163  000050  AA9E               	btfss	3998,5,c	;volatile
  7164  000052  D002               	goto	i2l24
  7165                           
  7166                           ;interrupt_manager.c: 82: {
  7167                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  7168  000054  ECCF  F007         	call	_EUSART1_Receive_ISR	;wreg free
  7169  000058                     i2l24:
  7170  000058  C025  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7171  00005C  C024  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7172  000060  C023  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7173  000064  C022  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7174  000068  C021  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7175  00006C  C020  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7176  000070  C01F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7177  000074  C01E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7178  000078  C01D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7179  00007C  C01C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7180  000080  C01B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7181  000084  C01A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7182  000088  C019  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7183  00008C  C018  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7184  000090  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7185  000092  0011               	retfie		f
  7186  000094                     __end_of_INTERRUPT_InterruptManager:
  7187                           	opt stack 0
  7188                           tosu	equ	0xFFF
  7189                           tosh	equ	0xFFE
  7190                           tosl	equ	0xFFD
  7191                           pclatu	equ	0xFFB
  7192                           pclath	equ	0xFFA
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           intcon	equ	0xFF2
  7200                           intcon2	equ	0xFF1
  7201                           postinc0	equ	0xFEE
  7202                           fsr0h	equ	0xFEA
  7203                           fsr0l	equ	0xFE9
  7204                           wreg	equ	0xFE8
  7205                           indf1	equ	0xFE7
  7206                           postdec1	equ	0xFE5
  7207                           fsr1h	equ	0xFE2
  7208                           fsr1l	equ	0xFE1
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           postdec2	equ	0xFDD
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function _EUSART1_Transmit_ISR *****************
  7217 ;; Defined at:
  7218 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_INTERRUPT_InterruptManager
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text38
  7246  001ADA                     __ptext38:
  7247                           	opt stack 0
  7248  001ADA                     _EUSART1_Transmit_ISR:
  7249                           	opt stack 24
  7250                           
  7251                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7252                           
  7253                           ;incstack = 0
  7254  001ADA  0E80               	movlw	128
  7255  001ADC  6039               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7256  001ADE  D012               	goto	i2l122
  7257                           
  7258                           ;eusart1.c: 180: {
  7259                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7260  001AE0  5033               	movf	_eusart1TxTail,w,c
  7261  001AE2  0D01               	mullw	1
  7262  001AE4  0E00               	movlw	low _eusart1TxBuffer
  7263  001AE6  24F3               	addwf	prodl,w,c
  7264  001AE8  6ED9               	movwf	fsr2l,c
  7265  001AEA  0E01               	movlw	high _eusart1TxBuffer
  7266  001AEC  20F4               	addwfc	prodh,w,c
  7267  001AEE  6EDA               	movwf	fsr2h,c
  7268  001AF0  50DF               	movf	indf2,w,c
  7269  001AF2  6EAD               	movwf	4013,c	;volatile
  7270  001AF4  2A33               	incf	_eusart1TxTail,f,c
  7271                           
  7272                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7273  001AF6  0E7F               	movlw	127
  7274  001AF8  6433               	cpfsgt	_eusart1TxTail,c
  7275  001AFA  D002               	goto	i2l2831
  7276                           
  7277                           ;eusart1.c: 183: {
  7278                           ;eusart1.c: 184: eusart1TxTail = 0;
  7279  001AFC  0E00               	movlw	0
  7280  001AFE  6E33               	movwf	_eusart1TxTail,c
  7281  001B00                     i2l2831:
  7282                           
  7283                           ;eusart1.c: 185: }
  7284                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  7285  001B00  2A39               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7286                           
  7287                           ;eusart1.c: 187: }
  7288  001B02  0012               	return	
  7289  001B04                     i2l122:
  7290                           
  7291                           ;eusart1.c: 188: else
  7292                           ;eusart1.c: 189: {
  7293                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  7294  001B04  989D               	bcf	3997,4,c	;volatile
  7295  001B06  0012               	return	
  7296  001B08                     __end_of_EUSART1_Transmit_ISR:
  7297                           	opt stack 0
  7298                           tosu	equ	0xFFF
  7299                           tosh	equ	0xFFE
  7300                           tosl	equ	0xFFD
  7301                           pclatu	equ	0xFFB
  7302                           pclath	equ	0xFFA
  7303                           tblptru	equ	0xFF8
  7304                           tblptrh	equ	0xFF7
  7305                           tblptrl	equ	0xFF6
  7306                           tablat	equ	0xFF5
  7307                           prodh	equ	0xFF4
  7308                           prodl	equ	0xFF3
  7309                           intcon	equ	0xFF2
  7310                           intcon2	equ	0xFF1
  7311                           postinc0	equ	0xFEE
  7312                           fsr0h	equ	0xFEA
  7313                           fsr0l	equ	0xFE9
  7314                           wreg	equ	0xFE8
  7315                           indf1	equ	0xFE7
  7316                           postdec1	equ	0xFE5
  7317                           fsr1h	equ	0xFE2
  7318                           fsr1l	equ	0xFE1
  7319                           indf2	equ	0xFDF
  7320                           postinc2	equ	0xFDE
  7321                           postdec2	equ	0xFDD
  7322                           fsr2h	equ	0xFDA
  7323                           fsr2l	equ	0xFD9
  7324                           status	equ	0xFD8
  7325                           
  7326 ;; *************** function _EUSART1_Receive_ISR *****************
  7327 ;; Defined at:
  7328 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  state           2   21[COMRAM] int 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;Total ram usage:        3 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    2
  7349 ;; This function calls:
  7350 ;;		_EUSART1_Read
  7351 ;;		_strcmp
  7352 ;;		i2_strstr
  7353 ;; This function is called by:
  7354 ;;		_INTERRUPT_InterruptManager
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text39
  7359  000F9E                     __ptext39:
  7360                           	opt stack 0
  7361  000F9E                     _EUSART1_Receive_ISR:
  7362                           	opt stack 22
  7363                           
  7364                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  7365                           
  7366                           ;incstack = 0
  7367  000F9E  A2AB               	btfss	4011,1,c	;volatile
  7368  000FA0  D002               	goto	i2l2837
  7369                           
  7370                           ;eusart1.c: 197: {
  7371                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  7372  000FA2  98AB               	bcf	4011,4,c	;volatile
  7373                           
  7374                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  7375  000FA4  88AB               	bsf	4011,4,c	;volatile
  7376  000FA6                     i2l2837:
  7377                           
  7378                           ;eusart1.c: 202: }
  7379                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7380  000FA6  5030               	movf	_eusart1RxHead,w,c
  7381  000FA8  0D01               	mullw	1
  7382  000FAA  0E00               	movlw	low _eusart1RxBuffer
  7383  000FAC  24F3               	addwf	prodl,w,c
  7384  000FAE  6ED9               	movwf	fsr2l,c
  7385  000FB0  0E02               	movlw	high _eusart1RxBuffer
  7386  000FB2  20F4               	addwfc	prodh,w,c
  7387  000FB4  6EDA               	movwf	fsr2h,c
  7388  000FB6  CFAE FFDF          	movff	4014,indf2	;volatile
  7389  000FBA  2A30               	incf	_eusart1RxHead,f,c
  7390                           
  7391                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7392  000FBC  0E7F               	movlw	127
  7393  000FBE  6430               	cpfsgt	_eusart1RxHead,c
  7394  000FC0  D002               	goto	i2l2845
  7395                           
  7396                           ;eusart1.c: 209: {
  7397                           ;eusart1.c: 210: eusart1RxHead = 0;
  7398  000FC2  0E00               	movlw	0
  7399  000FC4  6E30               	movwf	_eusart1RxHead,c
  7400  000FC6                     i2l2845:
  7401                           
  7402                           ;eusart1.c: 211: }
  7403                           ;eusart1.c: 212: eusart1RxCount++;
  7404  000FC6  2A2F               	incf	_eusart1RxCount,f,c	;volatile
  7405                           
  7406                           ;eusart1.c: 214: int state = 0;
  7407  000FC8  0E00               	movlw	0
  7408  000FCA  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7409  000FCC  0E00               	movlw	0
  7410  000FCE  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7411                           
  7412                           ;eusart1.c: 216: if(ready)return;
  7413  000FD0  5034               	movf	_ready,w,c	;volatile
  7414  000FD2  A4D8               	btfss	status,2,c
  7415  000FD4  0012               	return	
  7416  000FD6  D01C               	goto	i2l2861
  7417  000FD8                     i2l2853:
  7418                           
  7419                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7420  000FD8  EC24  F00D         	call	_EUSART1_Read	;wreg free
  7421  000FDC  6E15               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7422  000FDE  0E80               	movlw	low _line
  7423  000FE0  242D               	addwf	_index,w,c
  7424  000FE2  6ED9               	movwf	fsr2l,c
  7425  000FE4  0E01               	movlw	high _line
  7426  000FE6  202E               	addwfc	_index+1,w,c
  7427  000FE8  6EDA               	movwf	fsr2h,c
  7428  000FEA  C015  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7429                           
  7430                           ;eusart1.c: 220: if (line[index] == '\n'){
  7431  000FEE  0E80               	movlw	low _line
  7432  000FF0  242D               	addwf	_index,w,c
  7433  000FF2  6ED9               	movwf	fsr2l,c
  7434  000FF4  0E01               	movlw	high _line
  7435  000FF6  202E               	addwfc	_index+1,w,c
  7436  000FF8  6EDA               	movwf	fsr2h,c
  7437  000FFA  0E0A               	movlw	10
  7438  000FFC  18DE               	xorwf	postinc2,w,c
  7439  000FFE  A4D8               	btfss	status,2,c
  7440  001000  D005               	goto	i2l2859
  7441                           
  7442                           ;eusart1.c: 221: state=1;
  7443  001002  0E00               	movlw	0
  7444  001004  6E17               	movwf	EUSART1_Receive_ISR@state+1,c
  7445  001006  0E01               	movlw	1
  7446  001008  6E16               	movwf	EUSART1_Receive_ISR@state,c
  7447                           
  7448                           ;eusart1.c: 222: break;
  7449  00100A  D005               	goto	i2l2863
  7450  00100C                     i2l2859:
  7451                           
  7452                           ;eusart1.c: 223: }
  7453                           ;eusart1.c: 224: index++;
  7454  00100C  4A2D               	infsnz	_index,f,c
  7455  00100E  2A2E               	incf	_index+1,f,c
  7456  001010                     i2l2861:
  7457  001010  502F               	movf	_eusart1RxCount,w,c	;volatile
  7458  001012  A4D8               	btfss	status,2,c
  7459  001014  D7E1               	goto	i2l2853
  7460  001016                     i2l2863:
  7461                           
  7462                           ;eusart1.c: 225: }
  7463                           ;eusart1.c: 227: if(state==1){
  7464  001016  0416               	decf	EUSART1_Receive_ISR@state,w,c
  7465  001018  1017               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7466  00101A  A4D8               	btfss	status,2,c
  7467  00101C  0012               	return	
  7468                           
  7469                           ;eusart1.c: 228: line[--index] = '\0';
  7470  00101E  062D               	decf	_index,f,c
  7471  001020  A0D8               	btfss	status,0,c
  7472  001022  062E               	decf	_index+1,f,c
  7473  001024  0E80               	movlw	low _line
  7474  001026  242D               	addwf	_index,w,c
  7475  001028  6ED9               	movwf	fsr2l,c
  7476  00102A  0E01               	movlw	high _line
  7477  00102C  202E               	addwfc	_index+1,w,c
  7478  00102E  6EDA               	movwf	fsr2h,c
  7479  001030  0E00               	movlw	0
  7480  001032  6EDF               	movwf	indf2,c
  7481                           
  7482                           ;eusart1.c: 229: uartState=0;
  7483  001034  0E00               	movlw	0
  7484  001036  0100               	movlb	0	; () banked
  7485  001038  6F99               	movwf	_uartState& (0+255),b	;volatile
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7489  00103A  0EDF               	movlw	low STR_1
  7490  00103C  6E01               	movwf	strcmp@s1,c
  7491  00103E  0EFF               	movlw	high STR_1
  7492  001040  6E02               	movwf	strcmp@s1+1,c
  7493  001042  0E80               	movlw	low _line
  7494  001044  6E03               	movwf	strcmp@s2,c
  7495  001046  0E01               	movlw	high _line
  7496  001048  6E04               	movwf	strcmp@s2+1,c
  7497  00104A  ECAE  F00A         	call	_strcmp	;wreg free
  7498  00104E  5001               	movf	?_strcmp,w,c
  7499  001050  1002               	iorwf	?_strcmp+1,w,c
  7500  001052  A4D8               	btfss	status,2,c
  7501  001054  D002               	goto	i2l2873
  7502                           
  7503                           ;eusart1.c: 231: uartState=5;
  7504  001056  0E05               	movlw	5
  7505  001058  D02B               	goto	L3
  7506  00105A                     i2l2873:
  7507  00105A  0E80               	movlw	low _line
  7508  00105C  6E10               	movwf	i2strstr@s1,c
  7509  00105E  0E01               	movlw	high _line
  7510  001060  6E11               	movwf	i2strstr@s1+1,c
  7511  001062  0EE9               	movlw	low STR_2
  7512  001064  6E12               	movwf	i2strstr@s2,c
  7513  001066  0EFF               	movlw	high STR_2
  7514  001068  6E13               	movwf	i2strstr@s2+1,c
  7515  00106A  EC5F  F00A         	call	i2_strstr	;wreg free
  7516  00106E  5010               	movf	?i2_strstr,w,c
  7517  001070  1011               	iorwf	?i2_strstr+1,w,c
  7518  001072  B4D8               	btfsc	status,2,c
  7519  001074  D00E               	goto	i2l2883
  7520                           
  7521                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7522  001076  0E34               	movlw	52
  7523  001078  0101               	movlb	1	; () banked
  7524  00107A  198A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7525  00107C  A4D8               	btfss	status,2,c
  7526  00107E  D007               	goto	i2l2881
  7527                           
  7528                           ; BSR set to: 1
  7529  001080  0E33               	movlw	51
  7530  001082  0101               	movlb	1	; () banked
  7531  001084  198B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7532  001086  A4D8               	btfss	status,2,c
  7533  001088  D002               	goto	i2l2881
  7534                           
  7535                           ; BSR set to: 1
  7536                           ;eusart1.c: 234: uartState=4;
  7537  00108A  0E04               	movlw	4
  7538  00108C  D011               	goto	L3
  7539  00108E                     i2l2881:
  7540                           
  7541                           ;eusart1.c: 236: uartState=3;
  7542  00108E  0E03               	movlw	3
  7543  001090  D00F               	goto	L3
  7544  001092                     i2l2883:
  7545  001092  0E80               	movlw	low _line
  7546  001094  6E01               	movwf	strcmp@s1,c
  7547  001096  0E01               	movlw	high _line
  7548  001098  6E02               	movwf	strcmp@s1+1,c
  7549  00109A  0ED3               	movlw	low STR_3
  7550  00109C  6E03               	movwf	strcmp@s2,c
  7551  00109E  0EFF               	movlw	high STR_3
  7552  0010A0  6E04               	movwf	strcmp@s2+1,c
  7553  0010A2  ECAE  F00A         	call	_strcmp	;wreg free
  7554  0010A6  5001               	movf	?_strcmp,w,c
  7555  0010A8  1002               	iorwf	?_strcmp+1,w,c
  7556  0010AA  A4D8               	btfss	status,2,c
  7557  0010AC  D004               	goto	i2l2887
  7558  0010AE  D011               	goto	i2l2889
  7559  0010B0                     L3:
  7560  0010B0  0100               	movlb	0	; () banked
  7561  0010B2  6F99               	movwf	_uartState& (0+255),b	;volatile
  7562                           
  7563                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7564  0010B4  D010               	goto	i2l138
  7565  0010B6                     i2l2887:
  7566  0010B6  0E80               	movlw	low _line
  7567  0010B8  6E01               	movwf	strcmp@s1,c
  7568  0010BA  0E01               	movlw	high _line
  7569  0010BC  6E02               	movwf	strcmp@s1+1,c
  7570  0010BE  0EDC               	movlw	low (STR_3+9)
  7571  0010C0  6E03               	movwf	strcmp@s2,c
  7572  0010C2  0EFF               	movlw	high (STR_3+9)
  7573  0010C4  6E04               	movwf	strcmp@s2+1,c
  7574  0010C6  ECAE  F00A         	call	_strcmp	;wreg free
  7575  0010CA  5001               	movf	?_strcmp,w,c
  7576  0010CC  1002               	iorwf	?_strcmp+1,w,c
  7577  0010CE  A4D8               	btfss	status,2,c
  7578  0010D0  D002               	goto	i2l138
  7579  0010D2                     i2l2889:
  7580                           
  7581                           ;eusart1.c: 241: uartState=1;
  7582  0010D2  0E01               	movlw	1
  7583  0010D4  D7ED               	goto	L3
  7584  0010D6                     i2l138:
  7585                           
  7586                           ;eusart1.c: 242: }
  7587                           ;eusart1.c: 243: index=0;
  7588  0010D6  0E00               	movlw	0
  7589  0010D8  6E2E               	movwf	_index+1,c
  7590  0010DA  0E00               	movlw	0
  7591  0010DC  6E2D               	movwf	_index,c
  7592                           
  7593                           ;eusart1.c: 244: ready=1;
  7594  0010DE  0E01               	movlw	1
  7595  0010E0  6E34               	movwf	_ready,c	;volatile
  7596  0010E2  0012               	return	
  7597  0010E4                     __end_of_EUSART1_Receive_ISR:
  7598                           	opt stack 0
  7599                           tosu	equ	0xFFF
  7600                           tosh	equ	0xFFE
  7601                           tosl	equ	0xFFD
  7602                           pclatu	equ	0xFFB
  7603                           pclath	equ	0xFFA
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           postinc0	equ	0xFEE
  7613                           fsr0h	equ	0xFEA
  7614                           fsr0l	equ	0xFE9
  7615                           wreg	equ	0xFE8
  7616                           indf1	equ	0xFE7
  7617                           postdec1	equ	0xFE5
  7618                           fsr1h	equ	0xFE2
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           postdec2	equ	0xFDD
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function i2_strstr *****************
  7628 ;; Defined at:
  7629 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7632 ;;		 -> NULL(0), line(128), 
  7633 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7634 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2   15[COMRAM] PTR unsigned char 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;Total ram usage:        5 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    1
  7653 ;; This function calls:
  7654 ;;		i2_strchr
  7655 ;;		i2_strlen
  7656 ;;		i2_strncmp
  7657 ;; This function is called by:
  7658 ;;		_EUSART1_Receive_ISR
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text40
  7663  0014BE                     __ptext40:
  7664                           	opt stack 0
  7665  0014BE                     i2_strstr:
  7666                           	opt stack 22
  7667                           
  7668                           ;incstack = 0
  7669  0014BE  D03E               	goto	i2l2813
  7670  0014C0                     i2l2805:
  7671  0014C0  C010  F007         	movff	i2strstr@s1,i2strncmp@s1
  7672  0014C4  C011  F008         	movff	i2strstr@s1+1,i2strncmp@s1+1
  7673  0014C8  C012  F009         	movff	i2strstr@s2,i2strncmp@s2
  7674  0014CC  C013  F00A         	movff	i2strstr@s2+1,i2strncmp@s2+1
  7675  0014D0  C012  F001         	movff	i2strstr@s2,i2strlen@s
  7676  0014D4  C013  F002         	movff	i2strstr@s2+1,i2strlen@s+1
  7677  0014D8  ECE2  F00B         	call	i2_strlen	;wreg free
  7678  0014DC  C001  F00B         	movff	?i2_strlen,i2strncmp@len
  7679  0014E0  C002  F00C         	movff	?i2_strlen+1,i2strncmp@len+1
  7680  0014E4  ECB7  F009         	call	i2_strncmp	;wreg free
  7681  0014E8  5007               	movf	?i2_strncmp,w,c
  7682  0014EA  1008               	iorwf	?i2_strncmp+1,w,c
  7683  0014EC  A4D8               	btfss	status,2,c
  7684  0014EE  D005               	goto	i2l2811
  7685  0014F0  C010  F010         	movff	i2strstr@s1,?i2_strstr
  7686  0014F4  C011  F011         	movff	i2strstr@s1+1,?i2_strstr+1
  7687  0014F8  0012               	return	
  7688  0014FA                     i2l2811:
  7689  0014FA  0E01               	movlw	1
  7690  0014FC  2410               	addwf	i2strstr@s1,w,c
  7691  0014FE  6E01               	movwf	i2strchr@ptr,c
  7692  001500  0E00               	movlw	0
  7693  001502  2011               	addwfc	i2strstr@s1+1,w,c
  7694  001504  6E02               	movwf	i2strchr@ptr+1,c
  7695  001506  C012  FFF6         	movff	i2strstr@s2,tblptrl
  7696  00150A  C013  FFF7         	movff	i2strstr@s2+1,tblptrh
  7697  00150E  0E00               	movlw	low (__mediumconst shr (0+16))
  7698  001510  6EF8               	movwf	tblptru,c
  7699  001512  0E0F               	movlw	(high __ramtop+-1)
  7700  001514  64F7               	cpfsgt	tblptrh,c
  7701  001516  D003               	bra	i2u278_47
  7702  001518  0008               	tblrd		*
  7703  00151A  50F5               	movf	tablat,w,c
  7704  00151C  D005               	bra	i2u278_40
  7705  00151E                     i2u278_47:
  7706  00151E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7707  001522  CFF7 FFE2          	movff	tblptrh,fsr1h
  7708  001526  50E7               	movf	indf1,w,c
  7709  001528                     i2u278_40:
  7710  001528  6E14               	movwf	??i2_strstr& (0+255),c
  7711  00152A  5014               	movf	??i2_strstr,w,c
  7712  00152C  6E03               	movwf	i2strchr@chr,c
  7713  00152E  6A04               	clrf	i2strchr@chr+1,c
  7714  001530  ECBB  F00C         	call	i2_strchr	;wreg free
  7715  001534  C001  F010         	movff	?i2_strchr,i2strstr@s1
  7716  001538  C002  F011         	movff	?i2_strchr+1,i2strstr@s1+1
  7717  00153C                     i2l2813:
  7718  00153C  5010               	movf	i2strstr@s1,w,c
  7719  00153E  1011               	iorwf	i2strstr@s1+1,w,c
  7720  001540  B4D8               	btfsc	status,2,c
  7721  001542  D007               	goto	i2l2817
  7722  001544  C010  FFD9         	movff	i2strstr@s1,fsr2l
  7723  001548  C011  FFDA         	movff	i2strstr@s1+1,fsr2h
  7724  00154C  50DF               	movf	indf2,w,c
  7725  00154E  A4D8               	btfss	status,2,c
  7726  001550  D7B7               	goto	i2l2805
  7727  001552                     i2l2817:
  7728  001552  0E00               	movlw	0
  7729  001554  6E10               	movwf	?i2_strstr,c
  7730  001556  0E00               	movlw	0
  7731  001558  6E11               	movwf	?i2_strstr+1,c
  7732  00155A  0012               	return	
  7733  00155C                     __end_ofi2_strstr:
  7734                           	opt stack 0
  7735                           tosu	equ	0xFFF
  7736                           tosh	equ	0xFFE
  7737                           tosl	equ	0xFFD
  7738                           pclatu	equ	0xFFB
  7739                           pclath	equ	0xFFA
  7740                           tblptru	equ	0xFF8
  7741                           tblptrh	equ	0xFF7
  7742                           tblptrl	equ	0xFF6
  7743                           tablat	equ	0xFF5
  7744                           prodh	equ	0xFF4
  7745                           prodl	equ	0xFF3
  7746                           intcon	equ	0xFF2
  7747                           intcon2	equ	0xFF1
  7748                           postinc0	equ	0xFEE
  7749                           fsr0h	equ	0xFEA
  7750                           fsr0l	equ	0xFE9
  7751                           wreg	equ	0xFE8
  7752                           indf1	equ	0xFE7
  7753                           postdec1	equ	0xFE5
  7754                           fsr1h	equ	0xFE2
  7755                           fsr1l	equ	0xFE1
  7756                           indf2	equ	0xFDF
  7757                           postinc2	equ	0xFDE
  7758                           postdec2	equ	0xFDD
  7759                           fsr2h	equ	0xFDA
  7760                           fsr2l	equ	0xFD9
  7761                           status	equ	0xFD8
  7762                           
  7763 ;; *************** function i2_strncmp *****************
  7764 ;; Defined at:
  7765 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7768 ;;		 -> NULL(0), line(128), 
  7769 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7770 ;;		 -> STR_6(17), uuid(40), STR_2(9), 
  7771 ;;  len             2   10[COMRAM] unsigned int 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  2    6[COMRAM] int 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;Total ram usage:        9 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		i2_strstr
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text41
  7797  00136E                     __ptext41:
  7798                           	opt stack 0
  7799  00136E                     i2_strncmp:
  7800                           	opt stack 22
  7801                           
  7802                           ;incstack = 0
  7803  00136E  D049               	goto	i2l2615
  7804  001370                     i2l2605:
  7805  001370  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7806  001374  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7807  001378  50DF               	movf	indf2,w,c
  7808  00137A  B4D8               	btfsc	status,2,c
  7809  00137C  D01A               	goto	i2l2609
  7810  00137E  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7811  001382  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7812  001386  50DF               	movf	indf2,w,c
  7813  001388  6E0D               	movwf	??i2_strncmp& (0+255),c
  7814  00138A  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7815  00138E  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7816  001392  0E00               	movlw	low (__mediumconst shr (0+16))
  7817  001394  6EF8               	movwf	tblptru,c
  7818  001396  0E0F               	movlw	(high __ramtop+-1)
  7819  001398  64F7               	cpfsgt	tblptrh,c
  7820  00139A  D003               	bra	i2u245_47
  7821  00139C  0008               	tblrd		*
  7822  00139E  50F5               	movf	tablat,w,c
  7823  0013A0  D005               	bra	i2u245_40
  7824  0013A2                     i2u245_47:
  7825  0013A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7826  0013A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7827  0013AA  50E7               	movf	indf1,w,c
  7828  0013AC                     i2u245_40:
  7829  0013AC  180D               	xorwf	??i2_strncmp,w,c
  7830  0013AE  B4D8               	btfsc	status,2,c
  7831  0013B0  D024               	goto	i2l2613
  7832  0013B2                     i2l2609:
  7833  0013B2  C009  FFF6         	movff	i2strncmp@s2,tblptrl
  7834  0013B6  C00A  FFF7         	movff	i2strncmp@s2+1,tblptrh
  7835  0013BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7836  0013BC  6EF8               	movwf	tblptru,c
  7837  0013BE  0E0F               	movlw	(high __ramtop+-1)
  7838  0013C0  64F7               	cpfsgt	tblptrh,c
  7839  0013C2  D003               	bra	i2u247_47
  7840  0013C4  0008               	tblrd		*
  7841  0013C6  50F5               	movf	tablat,w,c
  7842  0013C8  D005               	bra	i2u247_40
  7843  0013CA                     i2u247_47:
  7844  0013CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7845  0013CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7846  0013D2  50E7               	movf	indf1,w,c
  7847  0013D4                     i2u247_40:
  7848  0013D4  6E0D               	movwf	??i2_strncmp& (0+255),c
  7849  0013D6  6A0E               	clrf	(??i2_strncmp+1)& (0+255),c
  7850  0013D8  1E0D               	comf	??i2_strncmp,f,c
  7851  0013DA  1E0E               	comf	??i2_strncmp+1,f,c
  7852  0013DC  4A0D               	infsnz	??i2_strncmp,f,c
  7853  0013DE  2A0E               	incf	??i2_strncmp+1,f,c
  7854  0013E0  C007  FFD9         	movff	i2strncmp@s1,fsr2l
  7855  0013E4  C008  FFDA         	movff	i2strncmp@s1+1,fsr2h
  7856  0013E8  50DF               	movf	indf2,w,c
  7857  0013EA  6E0F               	movwf	(??i2_strncmp+2)& (0+255),c
  7858  0013EC  500F               	movf	??i2_strncmp+2,w,c
  7859  0013EE  240D               	addwf	??i2_strncmp,w,c
  7860  0013F0  6E07               	movwf	?i2_strncmp,c
  7861  0013F2  0E00               	movlw	0
  7862  0013F4  200E               	addwfc	??i2_strncmp+1,w,c
  7863  0013F6  6E08               	movwf	?i2_strncmp+1,c
  7864  0013F8  0012               	return	
  7865  0013FA                     i2l2613:
  7866  0013FA  4A07               	infsnz	i2strncmp@s1,f,c
  7867  0013FC  2A08               	incf	i2strncmp@s1+1,f,c
  7868  0013FE  4A09               	infsnz	i2strncmp@s2,f,c
  7869  001400  2A0A               	incf	i2strncmp@s2+1,f,c
  7870  001402                     i2l2615:
  7871  001402  060B               	decf	i2strncmp@len,f,c
  7872  001404  A0D8               	btfss	status,0,c
  7873  001406  060C               	decf	i2strncmp@len+1,f,c
  7874  001408  280B               	incf	i2strncmp@len,w,c
  7875  00140A  E1B2               	bnz	i2l2605
  7876  00140C  280C               	incf	i2strncmp@len+1,w,c
  7877  00140E  A4D8               	btfss	status,2,c
  7878  001410  D7AF               	goto	i2l2605
  7879  001412  0E00               	movlw	0
  7880  001414  6E08               	movwf	?i2_strncmp+1,c
  7881  001416  0E00               	movlw	0
  7882  001418  6E07               	movwf	?i2_strncmp,c
  7883  00141A  0012               	return	
  7884  00141C                     __end_ofi2_strncmp:
  7885                           	opt stack 0
  7886                           tosu	equ	0xFFF
  7887                           tosh	equ	0xFFE
  7888                           tosl	equ	0xFFD
  7889                           pclatu	equ	0xFFB
  7890                           pclath	equ	0xFFA
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           postinc0	equ	0xFEE
  7900                           fsr0h	equ	0xFEA
  7901                           fsr0l	equ	0xFE9
  7902                           wreg	equ	0xFE8
  7903                           indf1	equ	0xFE7
  7904                           postdec1	equ	0xFE5
  7905                           fsr1h	equ	0xFE2
  7906                           fsr1l	equ	0xFE1
  7907                           indf2	equ	0xFDF
  7908                           postinc2	equ	0xFDE
  7909                           postdec2	equ	0xFDD
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function i2_strlen *****************
  7915 ;; Defined at:
  7916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7919 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  7922 ;;		 -> STR_6(17), uuid(40), STR_2(9), line(128), 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  2    0[COMRAM] unsigned int 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;Total ram usage:        6 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		i2_strstr
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text42
  7946  0017C4                     __ptext42:
  7947                           	opt stack 0
  7948  0017C4                     i2_strlen:
  7949                           	opt stack 22
  7950                           
  7951                           ;incstack = 0
  7952  0017C4  C001  F005         	movff	i2strlen@s,i2strlen@cp
  7953  0017C8  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
  7954  0017CC  D002               	goto	i2l2585
  7955  0017CE                     i2l2583:
  7956  0017CE  4A05               	infsnz	i2strlen@cp,f,c
  7957  0017D0  2A06               	incf	i2strlen@cp+1,f,c
  7958  0017D2                     i2l2585:
  7959  0017D2  C005  FFF6         	movff	i2strlen@cp,tblptrl
  7960  0017D6  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
  7961  0017DA  0E00               	movlw	low (__mediumconst shr (0+16))
  7962  0017DC  6EF8               	movwf	tblptru,c
  7963  0017DE  0E0F               	movlw	(high __ramtop+-1)
  7964  0017E0  64F7               	cpfsgt	tblptrh,c
  7965  0017E2  D003               	bra	i2u240_47
  7966  0017E4  0008               	tblrd		*
  7967  0017E6  50F5               	movf	tablat,w,c
  7968  0017E8  D005               	bra	i2u240_40
  7969  0017EA                     i2u240_47:
  7970  0017EA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7971  0017EE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7972  0017F2  50E7               	movf	indf1,w,c
  7973  0017F4                     i2u240_40:
  7974  0017F4  0900               	iorlw	0
  7975  0017F6  A4D8               	btfss	status,2,c
  7976  0017F8  D7EA               	goto	i2l2583
  7977  0017FA  C001  F003         	movff	i2strlen@s,??i2_strlen
  7978  0017FE  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
  7979  001802  1E03               	comf	??i2_strlen,f,c
  7980  001804  1E04               	comf	??i2_strlen+1,f,c
  7981  001806  4A03               	infsnz	??i2_strlen,f,c
  7982  001808  2A04               	incf	??i2_strlen+1,f,c
  7983  00180A  5005               	movf	i2strlen@cp,w,c
  7984  00180C  2403               	addwf	??i2_strlen,w,c
  7985  00180E  6E01               	movwf	?i2_strlen,c
  7986  001810  5006               	movf	i2strlen@cp+1,w,c
  7987  001812  2004               	addwfc	??i2_strlen+1,w,c
  7988  001814  6E02               	movwf	?i2_strlen+1,c
  7989  001816  0012               	return	
  7990  001818                     __end_ofi2_strlen:
  7991                           	opt stack 0
  7992                           tosu	equ	0xFFF
  7993                           tosh	equ	0xFFE
  7994                           tosl	equ	0xFFD
  7995                           pclatu	equ	0xFFB
  7996                           pclath	equ	0xFFA
  7997                           tblptru	equ	0xFF8
  7998                           tblptrh	equ	0xFF7
  7999                           tblptrl	equ	0xFF6
  8000                           tablat	equ	0xFF5
  8001                           prodh	equ	0xFF4
  8002                           prodl	equ	0xFF3
  8003                           intcon	equ	0xFF2
  8004                           intcon2	equ	0xFF1
  8005                           postinc0	equ	0xFEE
  8006                           fsr0h	equ	0xFEA
  8007                           fsr0l	equ	0xFE9
  8008                           wreg	equ	0xFE8
  8009                           indf1	equ	0xFE7
  8010                           postdec1	equ	0xFE5
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           fsr2h	equ	0xFDA
  8017                           fsr2l	equ	0xFD9
  8018                           status	equ	0xFD8
  8019                           
  8020 ;; *************** function i2_strchr *****************
  8021 ;; Defined at:
  8022 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  8025 ;;		 -> NULL(0), line(128), 
  8026 ;;  chr             2    2[COMRAM] int 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  2    0[COMRAM] PTR unsigned char 
  8031 ;; Registers used:
  8032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        5 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		i2_strstr
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text43
  8052  001976                     __ptext43:
  8053                           	opt stack 0
  8054  001976                     i2_strchr:
  8055                           	opt stack 22
  8056  001976  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8057  00197A  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8058  00197E  5003               	movf	i2strchr@chr,w,c
  8059  001980  18DE               	xorwf	postinc2,w,c
  8060  001982  A4D8               	btfss	status,2,c
  8061  001984  D005               	goto	i2l2597
  8062  001986  C001  F001         	movff	i2strchr@ptr,?i2_strchr
  8063  00198A  C002  F002         	movff	i2strchr@ptr+1,?i2_strchr+1
  8064  00198E  0012               	return	
  8065  001990                     i2l2597:
  8066  001990  C001  FFD9         	movff	i2strchr@ptr,fsr2l
  8067  001994  C002  FFDA         	movff	i2strchr@ptr+1,fsr2h
  8068  001998  4A01               	infsnz	i2strchr@ptr,f,c
  8069  00199A  2A02               	incf	i2strchr@ptr+1,f,c
  8070  00199C  50DF               	movf	indf2,w,c
  8071  00199E  A4D8               	btfss	status,2,c
  8072  0019A0  D7EA               	goto	i2l2591
  8073  0019A2  0E00               	movlw	0
  8074  0019A4  6E01               	movwf	?i2_strchr,c
  8075  0019A6  0E00               	movlw	0
  8076  0019A8  6E02               	movwf	?i2_strchr+1,c
  8077  0019AA  0012               	return	
  8078  0019AC                     __end_ofi2_strchr:
  8079                           	opt stack 0
  8080                           tosu	equ	0xFFF
  8081                           tosh	equ	0xFFE
  8082                           tosl	equ	0xFFD
  8083                           pclatu	equ	0xFFB
  8084                           pclath	equ	0xFFA
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           intcon2	equ	0xFF1
  8093                           postinc0	equ	0xFEE
  8094                           fsr0h	equ	0xFEA
  8095                           fsr0l	equ	0xFE9
  8096                           wreg	equ	0xFE8
  8097                           indf1	equ	0xFE7
  8098                           postdec1	equ	0xFE5
  8099                           fsr1h	equ	0xFE2
  8100                           fsr1l	equ	0xFE1
  8101                           indf2	equ	0xFDF
  8102                           postinc2	equ	0xFDE
  8103                           postdec2	equ	0xFDD
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _strcmp *****************
  8109 ;; Defined at:
  8110 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8113 ;;		 -> STR_1(10), line(128), 
  8114 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8115 ;;		 -> STR_4(3), STR_3(12), line(128), 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  r               1    5[COMRAM] char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  2    0[COMRAM] int 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;Total ram usage:        6 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_EUSART1_Receive_ISR
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text44
  8141  00155C                     __ptext44:
  8142                           	opt stack 0
  8143  00155C                     _strcmp:
  8144                           	opt stack 23
  8145                           
  8146                           ;incstack = 0
  8147  00155C  D004               	goto	i2l2671
  8148  00155E                     i2l2669:
  8149  00155E  4A01               	infsnz	strcmp@s1,f,c
  8150  001560  2A02               	incf	strcmp@s1+1,f,c
  8151  001562  4A03               	infsnz	strcmp@s2,f,c
  8152  001564  2A04               	incf	strcmp@s2+1,f,c
  8153  001566                     i2l2671:
  8154  001566  C001  FFF6         	movff	strcmp@s1,tblptrl
  8155  00156A  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8156  00156E  0E00               	movlw	low (__mediumconst shr (0+16))
  8157  001570  6EF8               	movwf	tblptru,c
  8158  001572  0E0F               	movlw	(high __ramtop+-1)
  8159  001574  64F7               	cpfsgt	tblptrh,c
  8160  001576  D003               	bra	i2u251_47
  8161  001578  0008               	tblrd		*
  8162  00157A  50F5               	movf	tablat,w,c
  8163  00157C  D005               	bra	i2u251_40
  8164  00157E                     i2u251_47:
  8165  00157E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8166  001582  CFF7 FFE2          	movff	tblptrh,fsr1h
  8167  001586  50E7               	movf	indf1,w,c
  8168  001588                     i2u251_40:
  8169  001588  6E05               	movwf	??_strcmp& (0+255),c
  8170  00158A  C003  FFF6         	movff	strcmp@s2,tblptrl
  8171  00158E  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8172  001592  0E00               	movlw	low (__mediumconst shr (0+16))
  8173  001594  6EF8               	movwf	tblptru,c
  8174  001596  0E0F               	movlw	(high __ramtop+-1)
  8175  001598  64F7               	cpfsgt	tblptrh,c
  8176  00159A  D003               	bra	i2u252_47
  8177  00159C  0008               	tblrd		*
  8178  00159E  50F5               	movf	tablat,w,c
  8179  0015A0  D005               	bra	i2u252_40
  8180  0015A2                     i2u252_47:
  8181  0015A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8182  0015A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8183  0015AA  50E7               	movf	indf1,w,c
  8184  0015AC                     i2u252_40:
  8185  0015AC  0800               	sublw	0
  8186  0015AE  2405               	addwf	??_strcmp,w,c
  8187  0015B0  6E06               	movwf	strcmp@r,c
  8188  0015B2  5006               	movf	strcmp@r,w,c
  8189  0015B4  A4D8               	btfss	status,2,c
  8190  0015B6  D014               	goto	i2l2675
  8191  0015B8  C001  FFF6         	movff	strcmp@s1,tblptrl
  8192  0015BC  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8193  0015C0  0E00               	movlw	low (__mediumconst shr (0+16))
  8194  0015C2  6EF8               	movwf	tblptru,c
  8195  0015C4  0E0F               	movlw	(high __ramtop+-1)
  8196  0015C6  64F7               	cpfsgt	tblptrh,c
  8197  0015C8  D003               	bra	i2u254_47
  8198  0015CA  0008               	tblrd		*
  8199  0015CC  50F5               	movf	tablat,w,c
  8200  0015CE  D005               	bra	i2u254_40
  8201  0015D0                     i2u254_47:
  8202  0015D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8203  0015D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8204  0015D8  50E7               	movf	indf1,w,c
  8205  0015DA                     i2u254_40:
  8206  0015DA  0900               	iorlw	0
  8207  0015DC  A4D8               	btfss	status,2,c
  8208  0015DE  D7BF               	goto	i2l2669
  8209  0015E0                     i2l2675:
  8210  0015E0  5006               	movf	strcmp@r,w,c
  8211  0015E2  6E01               	movwf	?_strcmp,c
  8212  0015E4  6A02               	clrf	?_strcmp+1,c
  8213  0015E6  BE01               	btfsc	?_strcmp,7,c
  8214  0015E8  0602               	decf	?_strcmp+1,f,c
  8215  0015EA  0012               	return	
  8216  0015EC                     __end_of_strcmp:
  8217                           	opt stack 0
  8218                           tosu	equ	0xFFF
  8219                           tosh	equ	0xFFE
  8220                           tosl	equ	0xFFD
  8221                           pclatu	equ	0xFFB
  8222                           pclath	equ	0xFFA
  8223                           tblptru	equ	0xFF8
  8224                           tblptrh	equ	0xFF7
  8225                           tblptrl	equ	0xFF6
  8226                           tablat	equ	0xFF5
  8227                           prodh	equ	0xFF4
  8228                           prodl	equ	0xFF3
  8229                           intcon	equ	0xFF2
  8230                           intcon2	equ	0xFF1
  8231                           postinc0	equ	0xFEE
  8232                           fsr0h	equ	0xFEA
  8233                           fsr0l	equ	0xFE9
  8234                           wreg	equ	0xFE8
  8235                           indf1	equ	0xFE7
  8236                           postdec1	equ	0xFE5
  8237                           fsr1h	equ	0xFE2
  8238                           fsr1l	equ	0xFE1
  8239                           indf2	equ	0xFDF
  8240                           postinc2	equ	0xFDE
  8241                           postdec2	equ	0xFDD
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function _EUSART1_Read *****************
  8247 ;; Defined at:
  8248 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;		None
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  readValue       1    0[COMRAM] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      unsigned char 
  8255 ;; Registers used:
  8256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;Total ram usage:        1 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_EUSART1_Receive_ISR
  8272 ;;		_getch
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text45
  8277  001A48                     __ptext45:
  8278                           	opt stack 0
  8279  001A48                     _EUSART1_Read:
  8280                           	opt stack 23
  8281                           
  8282                           ;eusart1.c: 123: uint8_t readValue = 0;
  8283                           
  8284                           ;incstack = 0
  8285  001A48  0E00               	movlw	0
  8286  001A4A  6E01               	movwf	EUSART1_Read@readValue,c
  8287  001A4C                     i2l2649:
  8288  001A4C  502F               	movf	_eusart1RxCount,w,c	;volatile
  8289  001A4E  B4D8               	btfsc	status,2,c
  8290  001A50  D7FD               	goto	i2l2649
  8291                           
  8292                           ;eusart1.c: 127: }
  8293                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  8294  001A52  9A9D               	bcf	3997,5,c	;volatile
  8295                           
  8296                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  8297  001A54  5031               	movf	_eusart1RxTail,w,c
  8298  001A56  0D01               	mullw	1
  8299  001A58  0E00               	movlw	low _eusart1RxBuffer
  8300  001A5A  24F3               	addwf	prodl,w,c
  8301  001A5C  6ED9               	movwf	fsr2l,c
  8302  001A5E  0E02               	movlw	high _eusart1RxBuffer
  8303  001A60  20F4               	addwfc	prodh,w,c
  8304  001A62  6EDA               	movwf	fsr2h,c
  8305  001A64  50DF               	movf	indf2,w,c
  8306  001A66  6E01               	movwf	EUSART1_Read@readValue,c
  8307  001A68  2A31               	incf	_eusart1RxTail,f,c
  8308                           
  8309                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8310  001A6A  0E7F               	movlw	127
  8311  001A6C  6431               	cpfsgt	_eusart1RxTail,c
  8312  001A6E  D002               	goto	i2l2659
  8313                           
  8314                           ;eusart1.c: 133: {
  8315                           ;eusart1.c: 134: eusart1RxTail = 0;
  8316  001A70  0E00               	movlw	0
  8317  001A72  6E31               	movwf	_eusart1RxTail,c
  8318  001A74                     i2l2659:
  8319                           
  8320                           ;eusart1.c: 135: }
  8321                           ;eusart1.c: 136: eusart1RxCount--;
  8322  001A74  062F               	decf	_eusart1RxCount,f,c	;volatile
  8323                           
  8324                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  8325  001A76  8A9D               	bsf	3997,5,c	;volatile
  8326                           
  8327                           ;eusart1.c: 139: return readValue;
  8328  001A78  5001               	movf	EUSART1_Read@readValue,w,c
  8329  001A7A  0012               	return	
  8330  001A7C                     __end_of_EUSART1_Read:
  8331                           	opt stack 0
  8332                           tosu	equ	0xFFF
  8333                           tosh	equ	0xFFE
  8334                           tosl	equ	0xFFD
  8335                           pclatu	equ	0xFFB
  8336                           pclath	equ	0xFFA
  8337                           tblptru	equ	0xFF8
  8338                           tblptrh	equ	0xFF7
  8339                           tblptrl	equ	0xFF6
  8340                           tablat	equ	0xFF5
  8341                           prodh	equ	0xFF4
  8342                           prodl	equ	0xFF3
  8343                           intcon	equ	0xFF2
  8344                           intcon2	equ	0xFF1
  8345                           postinc0	equ	0xFEE
  8346                           fsr0h	equ	0xFEA
  8347                           fsr0l	equ	0xFE9
  8348                           wreg	equ	0xFE8
  8349                           indf1	equ	0xFE7
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           postinc2	equ	0xFDE
  8355                           postdec2	equ	0xFDD
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           tosu	equ	0xFFF
  8360                           tosh	equ	0xFFE
  8361                           tosl	equ	0xFFD
  8362                           pclatu	equ	0xFFB
  8363                           pclath	equ	0xFFA
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           intcon	equ	0xFF2
  8371                           intcon2	equ	0xFF1
  8372                           postinc0	equ	0xFEE
  8373                           fsr0h	equ	0xFEA
  8374                           fsr0l	equ	0xFE9
  8375                           wreg	equ	0xFE8
  8376                           indf1	equ	0xFE7
  8377                           postdec1	equ	0xFE5
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           indf2	equ	0xFDF
  8381                           postinc2	equ	0xFDE
  8382                           postdec2	equ	0xFDD
  8383                           fsr2h	equ	0xFDA
  8384                           fsr2l	equ	0xFD9
  8385                           status	equ	0xFD8
  8386                           
  8387                           	psect	text46
  8388  000000                     __ptext46:
  8389                           	opt stack 0
  8390                           tosu	equ	0xFFF
  8391                           tosh	equ	0xFFE
  8392                           tosl	equ	0xFFD
  8393                           pclatu	equ	0xFFB
  8394                           pclath	equ	0xFFA
  8395                           tblptru	equ	0xFF8
  8396                           tblptrh	equ	0xFF7
  8397                           tblptrl	equ	0xFF6
  8398                           tablat	equ	0xFF5
  8399                           prodh	equ	0xFF4
  8400                           prodl	equ	0xFF3
  8401                           intcon	equ	0xFF2
  8402                           intcon2	equ	0xFF1
  8403                           postinc0	equ	0xFEE
  8404                           fsr0h	equ	0xFEA
  8405                           fsr0l	equ	0xFE9
  8406                           wreg	equ	0xFE8
  8407                           indf1	equ	0xFE7
  8408                           postdec1	equ	0xFE5
  8409                           fsr1h	equ	0xFE2
  8410                           fsr1l	equ	0xFE1
  8411                           indf2	equ	0xFDF
  8412                           postinc2	equ	0xFDE
  8413                           postdec2	equ	0xFDD
  8414                           fsr2h	equ	0xFDA
  8415                           fsr2l	equ	0xFD9
  8416                           status	equ	0xFD8
  8417                           
  8418                           	psect	rparam
  8419  0000                     tosu	equ	0xFFF
  8420                           tosh	equ	0xFFE
  8421                           tosl	equ	0xFFD
  8422                           pclatu	equ	0xFFB
  8423                           pclath	equ	0xFFA
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           intcon	equ	0xFF2
  8431                           intcon2	equ	0xFF1
  8432                           postinc0	equ	0xFEE
  8433                           fsr0h	equ	0xFEA
  8434                           fsr0l	equ	0xFE9
  8435                           wreg	equ	0xFE8
  8436                           indf1	equ	0xFE7
  8437                           postdec1	equ	0xFE5
  8438                           fsr1h	equ	0xFE2
  8439                           fsr1l	equ	0xFE1
  8440                           indf2	equ	0xFDF
  8441                           postinc2	equ	0xFDE
  8442                           postdec2	equ	0xFDD
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447                           	psect	temp
  8448  00003A                     btemp:
  8449                           	opt stack 0
  8450  00003A                     	ds	1
  8451  0000                     int$flags	set	btemp
  8452                           tosu	equ	0xFFF
  8453                           tosh	equ	0xFFE
  8454                           tosl	equ	0xFFD
  8455                           pclatu	equ	0xFFB
  8456                           pclath	equ	0xFFA
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           intcon	equ	0xFF2
  8464                           intcon2	equ	0xFF1
  8465                           postinc0	equ	0xFEE
  8466                           fsr0h	equ	0xFEA
  8467                           fsr0l	equ	0xFE9
  8468                           wreg	equ	0xFE8
  8469                           indf1	equ	0xFE7
  8470                           postdec1	equ	0xFE5
  8471                           fsr1h	equ	0xFE2
  8472                           fsr1l	equ	0xFE1
  8473                           indf2	equ	0xFDF
  8474                           postinc2	equ	0xFDE
  8475                           postdec2	equ	0xFDD
  8476                           fsr2h	equ	0xFDA
  8477                           fsr2l	equ	0xFD9
  8478                           status	equ	0xFD8


Data Sizes:
    Strings     401
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     56      99
    BANK1           256      0     256
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_6(CODE[17]), uuid(BANK0[40]), STR_2(CODE[9]), line(BANK1[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK1[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK1[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK1[128]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_28(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> process_message@hexval(BANK0[4]), uuid(BANK0[40]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[13]), STR_26(CODE[19]), STR_25(CODE[32]), STR_24(CODE[19]), 
		 -> STR_23(CODE[32]), STR_22(CODE[13]), STR_21(CODE[19]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), 
		 -> STR_7(CODE[5]), STR_5(CODE[16]), 

    S771__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S771__prbuf$ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 4
		 -> process_message@hexval(BANK0[4]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK0[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK1[128]), 


Critical Paths under _main in COMRAM

    _rand->___lmul
    _process_message->_strstr
    _strtol->_isalpha
    _isalpha->_isupper
    _strstr->_strlen
    _strncmp->_strlen
    __doprnt->___lwdiv
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->i2_strstr
    i2_strstr->i2_strncmp
    i2_strncmp->i2_strlen

Critical Paths under _main in BANK0

    _main->_process_message
    _srand->_strtol
    _rand->___lmul
    _process_message->_sprintf
    _strtol->___lmul
    _strstr->_strncmp
    _sprintf->__doprnt
    _getUUID->_printf
    _printf->__doprnt
    __doprnt->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   27227
                                             49 BANK0      7     7      0
                _EPWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awmod
                            _getUUID
                             _printf
                    _process_message
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     174
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     108
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             41 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _process_message                                      8     6      2    9435
                                             41 BANK0      8     6      2
                            _sprintf
                             _strlen
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2396
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             40 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             37 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     1      4    1500
                                             43 COMRAM     1     1      0
                                              9 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     423
                                              0 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     218
                                             37 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     216
                                             37 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     6      8    5138
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    6728
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     6      8    6525
                                             27 BANK0     14     6      8
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             26    20      6    4628
                                              5 BANK0     22    16      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             38 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Write                                        1     1      0      44
                                             37 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             37 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                             37 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     895
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     108
                                             37 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0    1220
                                             23 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  3     3      0    1220
                                             20 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                           i2_strstr
 ---------------------------------------------------------------------------------
 (8) i2_strstr                                             5     1      4     697
                                             15 COMRAM     5     1      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (9) i2_strncmp                                            9     3      6     212
                                              6 COMRAM     9     3      6
                           i2_strlen (ARG)
 ---------------------------------------------------------------------------------
 (9) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_strchr                                             5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _read_line
     _strcpy
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
         _EUSART1_Write
   _process_message
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART1_Write
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     i2_strstr
       i2_strchr
       i2_strlen
       i2_strncmp
         i2_strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      63       5       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      12        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Mar 21 10:21:04 2016

           _eusart1TxBufferRemaining 0039                  ___wmul@multiplicand 0028  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 1918                                  l344 0494  
                                l280 19C4                                  l819 18B2  
                                l829 1712                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0098                                  _val 009A  
                       ___awmod@sign 006D                      _TMR2_Initialize 1C30  
                                prod 000FF3                                  tosl 000FFD  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1053 0F8C                                 l2203 193A  
                               l2205 193C                                 l2233 1880  
                               l2217 1BFA                                 l2235 1888  
                               l2245 18A8                                 l2237 188C  
                               l3301 0588                                 l3221 0280  
                               l2191 1908                                 l3303 059A  
                               l3231 02F8                                 l3215 022E  
                               l3207 01E8                                 l3313 05F4  
                               l3241 03A0                                 l3225 02A6  
                               l3217 023A                                 l3209 01EE  
                               l2281 177A                                 l3401 11F4  
                               l2273 1BDC                                 l3171 1704  
                               l3163 16CE                                 l3323 0658  
                               l3315 05FE                                 l3251 0410  
                               l3243 03A8                                 l3227 02B2  
                               l3235 0322                                 l3219 0240  
                               l2531 1940                                 l2283 177E  
                               l3411 129E                                 l3165 16DA  
                               l3341 0714                                 l3333 06D4  
                               l3309 05BC                                 l3253 0436  
                               l3237 033A                                 l3405 123A  
                               l3167 16E0                                 l3351 0798  
                               l3327 0682                                 l3271 0504  
                               l3183 00F0                                 l3431 1360  
                               l2551 1B74                                 l3503 0E78  
                               l3601 14A0                                 l3345 075A  
                               l3337 06FE                                 l3361 0816  
                               l3273 050A                                 l3249 03F8  
                               l3193 013A                                 l3177 009C  
                               l2713 1AB6                                 l2537 195A  
                               l3409 1292                                 l3425 1300  
                               l2553 1B78                                 l3521 0F4C  
                               l3363 081C                                 l3371 08C6  
                               l3339 0708                                 l3259 044E  
                               l3187 011E                                 l2715 1ABE  
                               l3419 12C2                                 l3427 1346  
                               l2563 1B44                                 l3507 0E8A  
                               l3605 14B4                                 l3365 086E  
                               l3373 08D8                                 l3381 094A  
                               l3357 07EC                                 l3349 0784  
                               l3285 0546                                 l3269 04DA  
                               l3189 0130                                 l3517 0F1C  
                               l3287 054C                                 l3199 016E  
                               l3383 0956                                 l3391 15FC  
                               l2567 1B52                                 l3471 0DC4  
                               l3463 0DA2                                 l3703 0BC6  
                               l3377 0920                                 l3385 0976  
                               l2577 1C2C                                 l3481 0DFC  
                               l3465 0DAA                                 l3449 0D58  
                               l3545 113E                                 l3395 161A  
                               l3491 0E30                                 l3467 0DB4  
                               l3539 1106                                 l2907 19B2  
                               l3581 1438                                 l3485 0E10  
                               l3549 116C                                 l3725 0C80  
                               l3591 1468                                 l3495 0E46  
                               l3559 11E6                                 l3593 146E  
                               l3585 1448                                 l3729 0CA6  
                               l2699 1C5E                                 l3499 0E5C  
                               l3747 0D3C                                 l3597 1492  
                               l3589 145C                                 l3685 0B40  
                               STR_1 FFDF                                 STR_2 FFE9  
                               STR_3 FFD3                                 STR_4 FFDC  
                               STR_5 FF53                                 STR_6 FF42  
                               STR_7 FFF9                                 STR_8 FFC7  
                               STR_9 FFA0                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u1740 17A0                                 u3360 039E  
                               u3328 02E2                                 u3280 027A  
                               u3248 00D8                                 u4137 0B48  
                               u3370 03E2                                 u1747 1796  
                               u4147 19B8                                 u3358 036A  
                               u3367 0394                                 u3287 0270  
                               u3608 0744                                 u3720 1232  
                               u3377 03D8                                 u3538 0642  
                               u3740 125C                                 u3727 1228  
                               u3648 07D6                                 u3568 06BE  
                               u3770 1332                                 u3747 1252  
                               i2l20 004E                                 u3668 0908  
                               i2l24 0058                                 u3777 1328  
                               u3980 1180                                 _TMR2 000FBC  
                               _WPUB 000F61                        _EUSART1_Write 1906  
                               _main 0982                                 _line 0180  
                               _rand 171C                        ?_EUSART1_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 003A                                 _uuid 009B  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
              ??_EPWM1_LoadDutyValue 0028                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1C5E  
                              ?_main 0001                                ?_rand 002A  
                              STR_10 FF73                                STR_11 FF91  
                              STR_12 FF82                                STR_20 FF0C  
                              STR_13 FF1F                                STR_21 FEF9  
                              STR_22 FFAE                                STR_14 FF63  
                              STR_15 FFBB                                STR_23 FE8D  
                              STR_24 FEF9                                STR_16 FEC0  
                              STR_17 FEAD                                STR_25 FE6D  
                              STR_26 FEF9                                STR_18 FED3  
                              STR_27 FFAE                                STR_19 FEE6  
                              STR_28 FFF2                      __end_of___awmod 14BE  
                              STR_29 FF31                                _T2CON 000FBA  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 18BC  
                    __end_of___lwmod 171C                                i2l122 1B04  
                              i2l138 10D6                      __end_of__doprnt 0982  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                      __end_of_getUUID 1B32  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                  ___lmul@multiplicand 0064  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1ADA  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FE65  
                              _index 002D                      __end_of_isalpha 1B5A  
                              _ready 0034                      __end_of_isdigit 1C02  
                              _randx 0035                   __CFG_MCLRE$EXTMCLR 000000  
                              _srand 1C42                                _putch 1C6A  
                              main@q 0094                      __end_of_isspace 1B80  
                     ?_EUSART1_Write 0001                      __end_of_isupper 1BE4  
                              pclath 000FFA                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                    __end_of_sprintf 186A                       __CFG_HFOFST$ON 000000  
                    _TMR2_StartTimer 1C82                      __end_of_strncmp 12C0  
                    __end_of_toupper 1C30                       __CFG_PBADEN$ON 000000  
                   __end_ofi2_strchr 19AC                     __end_ofi2_strlen 1818  
                   __end_ofi2_strstr 155C                      __initialization 1658  
         __end_of_EUSART1_Initialize 1A48                         __end_of_main 0D58  
                       __end_of_rand 1770              __end_of_TMR2_Initialize 1C42  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0091  
                             ??_rand 002C                        __activetblptr 000003  
                 __size_ofi2_strncmp 00AE                ?_EUSART1_Transmit_ISR 0001  
                         i2strlen@cp 0005                           i2strstr@s1 0010  
                         i2strstr@s2 0012                               _CCPR1H 000FBF  
                             _CCPR1L 000FBE                               ?_srand 0078  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             i2l2613 13FA                               i2l2605 1370  
                     __CFG_WDTEN$OFF 000000                               i2l2615 1402  
                             i2l2609 13B2                               i2l2811 14FA  
                             i2l2805 14C0                               i2l2813 153C  
                             i2l2671 1566                               i2l2591 1976  
                             i2l2583 17CE                               i2l2831 1B00  
                             i2l2649 1A4C                               i2l2585 17D2  
                             i2l2817 1552                               i2l2659 1A74  
                             i2l2675 15E0                               i2l2669 155E  
                             i2l2597 1990                               i2l2853 0FD8  
                             i2l2861 1010                               i2l2845 0FC6  
                             i2l2837 0FA6                               i2l2863 1016  
                             i2l2881 108E                               i2l2873 105A  
                             i2l2883 1092                               i2l2859 100C  
                             i2l2887 10B6                               i2l2889 10D2  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                         _CCPTMRS0bits 000F49  
                             ___lmul 15EC                               ___wmul 1B80  
                     __CFG_STVREN$ON 000000                            ??___awmod 002C  
                          ??___lwdiv 002A                            ??___lwmod 002D  
                          ??__doprnt 006B                               clear_0 165E  
                             clear_1 166C                               clear_2 167E  
                             clear_3 168A                      ___awmod@divisor 006A  
                          ??_getUUID 002D                         __doprnt@flag 0077  
                    ___awmod@counter 006C                               _printf 18BC  
                       __doprnt@prec 0070                               _strchr 1940  
                             _strcmp 155C                               _strcpy 1AAC  
                             _strlen 1770                               _strtol 0D58  
                             _strstr 12C0                     __end_of_wait_5ms 19E0  
                       __pdataCOMRAM 0035                            ??_isalpha 0029  
                          ??_isdigit 0026                         __mediumconst FE5A  
                          ??_isspace 0026                               tblptrh 000FF7  
                          ??_isupper 0026                               tblptrl 000FF6  
                             tblptru 000FF8                               srand@x 0078  
                    ??_EUSART1_Write 0026              __end_of_TMR2_StartTimer 1C86  
                          ??_sprintf 002D                      _eusart1RxBuffer 0200  
                          ??_strncmp 0066                            ??_toupper 0026  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0100  
                  _SYSTEM_Initialize 1C02                           __accesstop 0060  
            __end_of__initialization 16B0                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    __end_ofi2_strncmp 141C  
                  ?_EPWM1_Initialize 0001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0026                   ??_EPWM1_Initialize 0026  
                      __end_of_srand 1C50                        __end_of_putch 1C74  
                   ?_TMR2_Initialize 0001                 __end_of_EUSART1_Read 1A7C  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 10E4  
           __size_of_process_message 010E                            ?i2_strchr 0001  
                          ?i2_strlen 0001                           __doprnt@ap 0069  
                         __doprnt@cp 0073                           __doprnt@pb 0065  
                          ?i2_strstr 0010            __end_of_SYSTEM_Initialize 1C1C  
                            ??_srand 002C                              ??_putch 0027  
                      _eusart1RxHead 0030                        _eusart1TxHead 0032  
                      _eusart1RxTail 0031                           __pbssBANK0 0098  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0033                      __CFG_PLLCFG$OFF 000000  
                        i2strchr@chr 0003                          i2strchr@ptr 0001  
                         __pnvCOMRAM 0039                   __size_of_read_line 000C  
                        i2strncmp@s1 0007                          i2strncmp@s2 0009  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 0060  
                            ?___wmul 0026                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                     ___lmul@product 0026                              ?_printf 007B  
                            ?_strchr 0026                              ?_strcmp 0001  
                            ?_strcpy 0026                              ?_strlen 0026  
                            ?_strtol 0068                              ?_strstr 0069  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7                              _SPBRGH1 000FB0  
                         ??i2_strchr 0005                           ??i2_strlen 0003  
                         ??i2_strstr 0014                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 1AAC                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          ?_wait_5ms 0026                      __size_of___lmul 006C  
                            ___awmod 141C                      __size_of___wmul 0026  
                            ___lwdiv 186A                              ___lwmod 16BA  
                            __doprnt 0098                              __pcinit 1658  
                            _getUUID 1B08                              __ramtop 1000  
              process_message@hexval 008D                              __ptext0 0982  
                            __ptext1 19AC                              __ptext2 1C42  
                            __ptext3 171C                              __ptext4 10E4  
                            __ptext5 0D58                              __ptext6 1C1C  
                            __ptext7 1B5A                              __ptext8 1B32  
                            __ptext9 1BC6                      __size_of_printf 004A  
                    __size_of_strchr 0036                      __size_of_strcmp 0090  
                    __size_of_strcpy 002E                      __size_of_strlen 0054  
                  __end_of_hexpowers FE6D                      __size_of_strtol 0246  
                    __size_of_strstr 00AE                              _dpowers FE5B  
              _OSCILLATOR_Initialize 1C50                            _T2CONbits 000FBA  
                            _isalpha 1B32                              _isdigit 1BE4  
                   ___awmod@dividend 0068                    __end_of_read_line 1C6A  
                 _EUSART1_Initialize 1A14             ??_PIN_MANAGER_Initialize 0026  
                            _isspace 1B5A                              _isupper 1BC6  
         __size_of_SYSTEM_Initialize 001A                              _sprintf 1818  
                      __doprnt@width 0078                              _strncmp 11F2  
                            _toupper 1C1C                 end_of_initialization 16B0  
                ?_EUSART1_Initialize 0001                    ??_process_message 002D  
                         ??_wait_5ms 0028                              printf@f 007B  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0026  
                            strcmp@r 0006                              strlen@s 0026  
                            strtol@a 0073                              strtol@c 0077  
                            strtol@s 0068                         strtol@endptr 006A  
                EUSART1_Write@txData 0026                         _EUSART1_Read 1A48  
       __end_of_INTERRUPT_Initialize 1C7E                            i2_strncmp 136E  
                     __end_of___lmul 1658                       __end_of___wmul 1BA6  
                      __pidataCOMRAM 1C7E               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 1906                       __end_of_strchr 1976  
                     __end_of_strcmp 15EC                       __end_of_strcpy 1ADA  
                     __end_of_strlen 17C4                       __end_of_strtol 0F9E  
                     __end_of_strstr 136E                  start_initialization 1658  
          __size_of_EPWM1_Initialize 0020      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0027         EPWM1_LoadDutyValue@dutyValue 0026  
              __end_of_EUSART1_Write 1940                    __size_ofi2_strchr 0036  
                  __size_ofi2_strlen 0054                            i2strlen@s 0001  
                  __size_ofi2_strstr 009E                             ??___lmul 0026  
                           ??___wmul 002A                           ?i2_strncmp 0007  
                        __doprnt@idx 006F                          __doprnt@len 0071  
                        __doprnt@val 0075                             ??_printf 002D  
                           ??_strchr 002A                             ??_strcmp 0005  
                           ??_strcpy 002A                             ??_strlen 0028  
                           ??_strtol 006E                       _eusart1RxCount 002F  
                           ??_strstr 002C                          __pbssCOMRAM 002D  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 0060  
                       _isalpha$1311 002A             __size_of_TMR2_Initialize 0012  
                       _isdigit$1031 0027         __size_of_EUSART1_Receive_ISR 0146  
                          __doprnt@c 007A                            __doprnt@f 0067  
                       i2strncmp@len 000B                     ___lwdiv@dividend 0026  
             _PIN_MANAGER_Initialize 19E0                            __pintcode 0008  
                      __pmediumconst FE5A                             ?___awmod 0068  
                  __size_of_wait_5ms 0034                             ?___lwdiv 0026  
                           ?___lwmod 0060                             ?__doprnt 0065  
                           ?_getUUID 0001         ??_INTERRUPT_InterruptManager 0018  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
                           ?_isalpha 0001                             ?_isdigit 0001  
                    _process_message 10E4                             ?_isspace 0001  
                           ?_isupper 0001             EUSART1_Receive_ISR@state 0016  
                          _hexpowers FE65                     ___lwdiv@quotient 002A  
                           ?_sprintf 007B                             ?_strncmp 0060  
                          _read_line 1C5E                             ?_toupper 0001  
                     __size_of_srand 000E                       __size_of_putch 000A  
               _INTERRUPT_Initialize 1C74                       ___wmul@product 002A  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
           __size_of_TMR2_StartTimer 0004  __size_of_INTERRUPT_InterruptManager 008C  
                           i2u240_40 17F4                             i2u240_47 17EA  
                           i2u251_40 1588                             i2u251_47 157E  
                           i2u252_40 15AC                             i2u252_47 15A2  
                           i2u245_40 13AC                             i2u245_47 13A2  
                           i2u254_40 15DA                             i2u254_47 15D0  
                           i2u247_40 13D4                             i2u247_47 13CA  
                           _PIR1bits 000F9E                             i2u278_40 1528  
                           i2u278_47 151E         __size_of_EPWM1_LoadDutyValue 0030  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                          _uartState 0099                             _PSTR1CON 000FB9  
                        ??i2_strncmp 000D                    ___wmul@multiplier 0026  
                          main@delay 0096                     _EPWM1_Initialize 1BA6  
                       _isspace$1314 0027                             i2_strchr 1976  
                           i2_strlen 17C4                             i2_strstr 14BE  
                  ___lmul@multiplier 0060                          _INTCON2bits 000FF1  
                         ?_read_line 0001                            copy_data0 16A4  
              ?_INTERRUPT_Initialize 0001                    ??_TMR2_Initialize 0026  
              EUSART1_Read@readValue 0001                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                 process_message@res 008B                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 0026                     __size_of___awmod 00A2  
        __size_of_EUSART1_Initialize 0034                     __size_of___lwdiv 0052  
            __end_of_process_message 11F2                     __size_of___lwmod 0062  
                   __size_of__doprnt 08EA                     __size_of_getUUID 002A  
                       _isupper$1317 0027                     __size_of_isalpha 0028  
                   __size_of_isdigit 001E                      ___lwdiv@divisor 0028  
                   __size_of_isspace 0026                      ___lwdiv@counter 002C  
                           __ptext10 15EC                             __ptext11 12C0  
                           __ptext20 0098                             __ptext12 11F2  
                           __ptext21 1C6A                             __ptext13 1770  
                           __ptext30 1C82                             __ptext22 1906  
                           __ptext14 1940                             __ptext31 19E0  
                           __ptext23 1BE4                             __ptext15 1818  
                           __ptext40 14BE                             __ptext32 1C50  
                           __ptext24 1B80                             __ptext16 1B08  
                           __ptext41 136E                             __ptext33 1C74  
                           __ptext25 16BA                             __ptext17 1AAC  
                           __ptext42 17C4                             __ptext34 1A14  
                           __ptext26 186A                             __ptext18 1C5E  
                           __ptext43 1976                             __ptext35 1BA6  
                           __ptext27 141C                             __ptext19 18BC  
                           __ptext44 155C                             __ptext36 1A7C  
                           __ptext28 1C02                             __ptext45 1A48  
                           __ptext29 1C30                             __ptext46 0000  
                           __ptext38 1ADA                             __ptext39 0F9E  
                   __size_of_isupper 001E                     __size_of_sprintf 0052  
                   __size_of_strncmp 00CE                     __size_of_toupper 0014  
                         strcpy@from 0028                        __size_of_main 03D6  
                      __size_of_rand 0054                            wait_5ms@i 002B  
                          wait_5ms@j 0026                           strncmp@len 0064  
                           _wait_5ms 19AC                             int$flags 003A  
                         strtol@base 006C                           strtol@sign 0072  
                  ??_TMR2_StartTimer 0026   __end_of_INTERRUPT_InterruptManager 0094  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0F9E  
                         _INTCONbits 000FF2                             isalpha@c 002B  
                           isdigit@c 0028               ??_INTERRUPT_Initialize 0026  
                        ??_read_line 0026                             intlevel2 0000  
                          sprintf@ap 0083                            sprintf@pb 0085  
                          sprintf@wh 007B                 ?_EUSART1_Receive_ISR 0001  
                          strchr@chr 0028                     ___lwmod@dividend 0060  
                          strchr@ptr 0026                             isspace@c 0028  
            ?_PIN_MANAGER_Initialize 0001                           _RCSTA1bits 000FAB  
                           isupper@c 0028         __end_of_EUSART1_Transmit_ISR 1B08  
                          strncmp@s1 0060                            strncmp@s2 0062  
                           printf@ap 0083                             printf@pb 0085  
                   ?_process_message 0089               __size_of_EUSART1_Write 003A  
                           sprintf@f 007D                             strcmp@s1 0001  
                           strcmp@s2 0003                      ___lwmod@divisor 0062  
                           strcpy@cp 002A                             strlen@cp 002A  
                           strcpy@to 0026                      ___lwmod@counter 0064  
                           toupper@c 0026                    __CFG_T3CMX$PORTC0 000000  
                _EPWM1_LoadDutyValue 1A7C                             strstr@s1 0069  
                           strstr@s2 006B                ??_EUSART1_Receive_ISR 0015  
     __end_of_PIN_MANAGER_Initialize 1A14                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 1BC6                 ?_EPWM1_LoadDutyValue 0026  
