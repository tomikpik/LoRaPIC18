

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Mar 06 22:33:55 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	mediumconst
    38  00FED8                     __pmediumconst:
    39                           	opt stack 0
    40  00FED8  00                 	db	0
    41  00FED9                     _dpowers:
    42                           	opt stack 0
    43  00FED9  0001               	dw	1
    44  00FEDB  000A               	dw	10
    45  00FEDD  0064               	dw	100
    46  00FEDF  03E8               	dw	1000
    47  00FEE1  2710               	dw	10000
    48  00FEE3                     __end_of_dpowers:
    49                           	opt stack 0
    50  00FEE3                     _hexpowers:
    51                           	opt stack 0
    52  00FEE3  0001               	dw	1
    53  00FEE5  0010               	dw	16
    54  00FEE7  0100               	dw	256
    55  00FEE9  1000               	dw	4096
    56  00FEEB                     __end_of_hexpowers:
    57                           	opt stack 0
    58  00FEEB                     STR_14:
    59  00FEEB  72                 	db	114	;'r'
    60  00FEEC  61                 	db	97	;'a'
    61  00FEED  64                 	db	100	;'d'
    62  00FEEE  69                 	db	105	;'i'
    63  00FEEF  6F                 	db	111	;'o'
    64  00FEF0  20                 	db	32
    65  00FEF1  74                 	db	116	;'t'
    66  00FEF2  78                 	db	120	;'x'
    67  00FEF3  20                 	db	32
    68  00FEF4  31                 	db	49	;'1'
    69  00FEF5  30                 	db	48	;'0'
    70  00FEF6  30                 	db	48	;'0'
    71  00FEF7  30                 	db	48	;'0'
    72  00FEF8  30                 	db	48	;'0'
    73  00FEF9  30                 	db	48	;'0'
    74  00FEFA  30                 	db	48	;'0'
    75  00FEFB  30                 	db	48	;'0'
    76  00FEFC  30                 	db	48	;'0'
    77  00FEFD  30                 	db	48	;'0'
    78  00FEFE  30                 	db	48	;'0'
    79  00FEFF  30                 	db	48	;'0'
    80  00FF00  30                 	db	48	;'0'
    81  00FF01  30                 	db	48	;'0'
    82  00FF02  30                 	db	48	;'0'
    83  00FF03  30                 	db	48	;'0'
    84  00FF04  30                 	db	48	;'0'
    85  00FF05  30                 	db	48	;'0'
    86  00FF06  30                 	db	48	;'0'
    87  00FF07  30                 	db	48	;'0'
    88  00FF08  30                 	db	48	;'0'
    89  00FF09  30                 	db	48	;'0'
    90  00FF0A  25                 	db	37
    91  00FF0B  30                 	db	48	;'0'
    92  00FF0C  34                 	db	52	;'4'
    93  00FF0D  58                 	db	88	;'X'
    94  00FF0E  25                 	db	37
    95  00FF0F  64                 	db	100	;'d'
    96  00FF10  0D                 	db	13
    97  00FF11  0A                 	db	10
    98  00FF12  00                 	db	0
    99  00FF13                     STR_10:
   100  00FF13  72                 	db	114	;'r'
   101  00FF14  61                 	db	97	;'a'
   102  00FF15  64                 	db	100	;'d'
   103  00FF16  69                 	db	105	;'i'
   104  00FF17  6F                 	db	111	;'o'
   105  00FF18  20                 	db	32
   106  00FF19  73                 	db	115	;'s'
   107  00FF1A  65                 	db	101	;'e'
   108  00FF1B  74                 	db	116	;'t'
   109  00FF1C  20                 	db	32
   110  00FF1D  62                 	db	98	;'b'
   111  00FF1E  77                 	db	119	;'w'
   112  00FF1F  20                 	db	32
   113  00FF20  35                 	db	53	;'5'
   114  00FF21  30                 	db	48	;'0'
   115  00FF22  30                 	db	48	;'0'
   116  00FF23  0D                 	db	13
   117  00FF24  0A                 	db	10
   118  00FF25  00                 	db	0
   119  00FF26                     STR_9:
   120  00FF26  72                 	db	114	;'r'
   121  00FF27  61                 	db	97	;'a'
   122  00FF28  64                 	db	100	;'d'
   123  00FF29  69                 	db	105	;'i'
   124  00FF2A  6F                 	db	111	;'o'
   125  00FF2B  20                 	db	32
   126  00FF2C  73                 	db	115	;'s'
   127  00FF2D  65                 	db	101	;'e'
   128  00FF2E  74                 	db	116	;'t'
   129  00FF2F  20                 	db	32
   130  00FF30  70                 	db	112	;'p'
   131  00FF31  77                 	db	119	;'w'
   132  00FF32  72                 	db	114	;'r'
   133  00FF33  20                 	db	32
   134  00FF34  2D                 	db	45
   135  00FF35  33                 	db	51	;'3'
   136  00FF36  0D                 	db	13
   137  00FF37  0A                 	db	10
   138  00FF38  00                 	db	0
   139  00FF39                     STR_12:
   140  00FF39  72                 	db	114	;'r'
   141  00FF3A  61                 	db	97	;'a'
   142  00FF3B  64                 	db	100	;'d'
   143  00FF3C  69                 	db	105	;'i'
   144  00FF3D  6F                 	db	111	;'o'
   145  00FF3E  20                 	db	32
   146  00FF3F  73                 	db	115	;'s'
   147  00FF40  65                 	db	101	;'e'
   148  00FF41  74                 	db	116	;'t'
   149  00FF42  20                 	db	32
   150  00FF43  63                 	db	99	;'c'
   151  00FF44  72                 	db	114	;'r'
   152  00FF45  20                 	db	32
   153  00FF46  34                 	db	52	;'4'
   154  00FF47  2F                 	db	47
   155  00FF48  35                 	db	53	;'5'
   156  00FF49  0D                 	db	13
   157  00FF4A  0A                 	db	10
   158  00FF4B  00                 	db	0
   159  00FF4C                     STR_11:
   160  00FF4C  72                 	db	114	;'r'
   161  00FF4D  61                 	db	97	;'a'
   162  00FF4E  64                 	db	100	;'d'
   163  00FF4F  69                 	db	105	;'i'
   164  00FF50  6F                 	db	111	;'o'
   165  00FF51  20                 	db	32
   166  00FF52  73                 	db	115	;'s'
   167  00FF53  65                 	db	101	;'e'
   168  00FF54  74                 	db	116	;'t'
   169  00FF55  20                 	db	32
   170  00FF56  73                 	db	115	;'s'
   171  00FF57  66                 	db	102	;'f'
   172  00FF58  20                 	db	32
   173  00FF59  73                 	db	115	;'s'
   174  00FF5A  66                 	db	102	;'f'
   175  00FF5B  37                 	db	55	;'7'
   176  00FF5C  0D                 	db	13
   177  00FF5D  0A                 	db	10
   178  00FF5E  00                 	db	0
   179  00FF5F                     STR_13:
   180  00FF5F  72                 	db	114	;'r'
   181  00FF60  61                 	db	97	;'a'
   182  00FF61  64                 	db	100	;'d'
   183  00FF62  69                 	db	105	;'i'
   184  00FF63  6F                 	db	111	;'o'
   185  00FF64  20                 	db	32
   186  00FF65  73                 	db	115	;'s'
   187  00FF66  65                 	db	101	;'e'
   188  00FF67  74                 	db	116	;'t'
   189  00FF68  20                 	db	32
   190  00FF69  63                 	db	99	;'c'
   191  00FF6A  72                 	db	114	;'r'
   192  00FF6B  63                 	db	99	;'c'
   193  00FF6C  20                 	db	32
   194  00FF6D  6F                 	db	111	;'o'
   195  00FF6E  6E                 	db	110	;'n'
   196  00FF6F  0D                 	db	13
   197  00FF70  0A                 	db	10
   198  00FF71  00                 	db	0
   199  00FF72                     STR_6:
   200  00FF72  72                 	db	114	;'r'
   201  00FF73  61                 	db	97	;'a'
   202  00FF74  64                 	db	100	;'d'
   203  00FF75  69                 	db	105	;'i'
   204  00FF76  6F                 	db	111	;'o'
   205  00FF77  20                 	db	32
   206  00FF78  67                 	db	103	;'g'
   207  00FF79  65                 	db	101	;'e'
   208  00FF7A  74                 	db	116	;'t'
   209  00FF7B  20                 	db	32
   210  00FF7C  70                 	db	112	;'p'
   211  00FF7D  72                 	db	114	;'r'
   212  00FF7E  6C                 	db	108	;'l'
   213  00FF7F  65                 	db	101	;'e'
   214  00FF80  6E                 	db	110	;'n'
   215  00FF81  0D                 	db	13
   216  00FF82  0A                 	db	10
   217  00FF83  00                 	db	0
   218  00FF84                     STR_16:
   219  00FF84  30                 	db	48	;'0'
   220  00FF85  31                 	db	49	;'1'
   221  00FF86  32                 	db	50	;'2'
   222  00FF87  33                 	db	51	;'3'
   223  00FF88  34                 	db	52	;'4'
   224  00FF89  35                 	db	53	;'5'
   225  00FF8A  36                 	db	54	;'6'
   226  00FF8B  37                 	db	55	;'7'
   227  00FF8C  38                 	db	56	;'8'
   228  00FF8D  39                 	db	57	;'9'
   229  00FF8E  41                 	db	65	;'A'
   230  00FF8F  42                 	db	66	;'B'
   231  00FF90  43                 	db	67	;'C'
   232  00FF91  44                 	db	68	;'D'
   233  00FF92  45                 	db	69	;'E'
   234  00FF93  46                 	db	70	;'F'
   235  00FF94  00                 	db	0
   236  00FF95                     STR_7:
   237  00FF95  72                 	db	114	;'r'
   238  00FF96  61                 	db	97	;'a'
   239  00FF97  64                 	db	100	;'d'
   240  00FF98  69                 	db	105	;'i'
   241  00FF99  6F                 	db	111	;'o'
   242  00FF9A  20                 	db	32
   243  00FF9B  67                 	db	103	;'g'
   244  00FF9C  65                 	db	101	;'e'
   245  00FF9D  74                 	db	116	;'t'
   246  00FF9E  20                 	db	32
   247  00FF9F  70                 	db	112	;'p'
   248  00FFA0  77                 	db	119	;'w'
   249  00FFA1  72                 	db	114	;'r'
   250  00FFA2  0D                 	db	13
   251  00FFA3  0A                 	db	10
   252  00FFA4  00                 	db	0
   253  00FFA5                     STR_3:
   254  00FFA5  72                 	db	114	;'r'
   255  00FFA6  61                 	db	97	;'a'
   256  00FFA7  64                 	db	100	;'d'
   257  00FFA8  69                 	db	105	;'i'
   258  00FFA9  6F                 	db	111	;'o'
   259  00FFAA  20                 	db	32
   260  00FFAB  67                 	db	103	;'g'
   261  00FFAC  65                 	db	101	;'e'
   262  00FFAD  74                 	db	116	;'t'
   263  00FFAE  20                 	db	32
   264  00FFAF  73                 	db	115	;'s'
   265  00FFB0  66                 	db	102	;'f'
   266  00FFB1  0D                 	db	13
   267  00FFB2  0A                 	db	10
   268  00FFB3  00                 	db	0
   269  00FFB4                     STR_5:
   270  00FFB4  72                 	db	114	;'r'
   271  00FFB5  61                 	db	97	;'a'
   272  00FFB6  64                 	db	100	;'d'
   273  00FFB7  69                 	db	105	;'i'
   274  00FFB8  6F                 	db	111	;'o'
   275  00FFB9  20                 	db	32
   276  00FFBA  67                 	db	103	;'g'
   277  00FFBB  65                 	db	101	;'e'
   278  00FFBC  74                 	db	116	;'t'
   279  00FFBD  20                 	db	32
   280  00FFBE  63                 	db	99	;'c'
   281  00FFBF  72                 	db	114	;'r'
   282  00FFC0  0D                 	db	13
   283  00FFC1  0A                 	db	10
   284  00FFC2  00                 	db	0
   285  00FFC3                     STR_4:
   286  00FFC3  72                 	db	114	;'r'
   287  00FFC4  61                 	db	97	;'a'
   288  00FFC5  64                 	db	100	;'d'
   289  00FFC6  69                 	db	105	;'i'
   290  00FFC7  6F                 	db	111	;'o'
   291  00FFC8  20                 	db	32
   292  00FFC9  67                 	db	103	;'g'
   293  00FFCA  65                 	db	101	;'e'
   294  00FFCB  74                 	db	116	;'t'
   295  00FFCC  20                 	db	32
   296  00FFCD  62                 	db	98	;'b'
   297  00FFCE  77                 	db	119	;'w'
   298  00FFCF  0D                 	db	13
   299  00FFD0  0A                 	db	10
   300  00FFD1  00                 	db	0
   301  00FFD2                     STR_2:
   302  00FFD2  73                 	db	115	;'s'
   303  00FFD3  79                 	db	121	;'y'
   304  00FFD4  73                 	db	115	;'s'
   305  00FFD5  20                 	db	32
   306  00FFD6  67                 	db	103	;'g'
   307  00FFD7  65                 	db	101	;'e'
   308  00FFD8  74                 	db	116	;'t'
   309  00FFD9  20                 	db	32
   310  00FFDA  76                 	db	118	;'v'
   311  00FFDB  65                 	db	101	;'e'
   312  00FFDC  72                 	db	114	;'r'
   313  00FFDD  0D                 	db	13
   314  00FFDE  0A                 	db	10
   315  00FFDF  00                 	db	0
   316  00FFE0                     STR_8:
   317  00FFE0  6D                 	db	109	;'m'
   318  00FFE1  61                 	db	97	;'a'
   319  00FFE2  63                 	db	99	;'c'
   320  00FFE3  20                 	db	32
   321  00FFE4  70                 	db	112	;'p'
   322  00FFE5  61                 	db	97	;'a'
   323  00FFE6  75                 	db	117	;'u'
   324  00FFE7  73                 	db	115	;'s'
   325  00FFE8  65                 	db	101	;'e'
   326  00FFE9  0D                 	db	13
   327  00FFEA  0A                 	db	10
   328  00FFEB  00                 	db	0
   329  00FFEC                     STR_1:
   330  00FFEC  73                 	db	115	;'s'
   331  00FFED  79                 	db	121	;'y'
   332  00FFEE  73                 	db	115	;'s'
   333  00FFEF  20                 	db	32
   334  00FFF0  72                 	db	114	;'r'
   335  00FFF1  65                 	db	101	;'e'
   336  00FFF2  73                 	db	115	;'s'
   337  00FFF3  65                 	db	101	;'e'
   338  00FFF4  74                 	db	116	;'t'
   339  00FFF5  0D                 	db	13
   340  00FFF6  0A                 	db	10
   341  00FFF7  00                 	db	0
   342  00FFF8  61                 	db	97	;'a'
   343  00FFF9  68                 	db	104	;'h'
   344  00FFFA  6F                 	db	111	;'o'
   345  00FFFB  6A                 	db	106	;'j'
   346  00FFFC  0D                 	db	13
   347  00FFFD  0A                 	db	10
   348  00FFFE  00                 	db	0
   349                           
   350                           ; #config settings
   351  00FFFF  00                 	db	0	; dummy byte at the end
   352  0000                     
   353                           	psect	nvCOMRAM
   354  00004A                     __pnvCOMRAM:
   355                           	opt stack 0
   356  00004A                     _eusart1TxBufferRemaining:
   357                           	opt stack 0
   358  00004A                     	ds	1
   359  0000                     _ANSELA	set	3896
   360  0000                     _ANSELB	set	3897
   361  0000                     _ANSELC	set	3898
   362  0000                     _CCPTMRS0bits	set	3913
   363  0000                     _BAUDCON1	set	4024
   364  0000                     _CCP1CON	set	4029
   365  0000                     _CCPR1H	set	4031
   366  0000                     _CCPR1L	set	4030
   367  0000                     _ECCP1AS	set	4022
   368  0000                     _INTCON2bits	set	4081
   369  0000                     _INTCONbits	set	4082
   370  0000                     _IPR1bits	set	3999
   371  0000                     _LATA	set	3977
   372  0000                     _LATB	set	3978
   373  0000                     _LATC	set	3979
   374  0000                     _OSCCON	set	4051
   375  0000                     _OSCCON2	set	4050
   376  0000                     _OSCTUNE	set	3995
   377  0000                     _PIE1bits	set	3997
   378  0000                     _PIR1bits	set	3998
   379  0000                     _PR2	set	4027
   380  0000                     _PSTR1CON	set	4025
   381  0000                     _PWM1CON	set	4023
   382  0000                     _RCONbits	set	4048
   383  0000                     _RCREG1	set	4014
   384  0000                     _RCSTA1	set	4011
   385  0000                     _RCSTA1bits	set	4011
   386  0000                     _SPBRG1	set	4015
   387  0000                     _SPBRGH1	set	4016
   388  0000                     _T0CON	set	4053
   389  0000                     _T0CONbits	set	4053
   390  0000                     _T2CON	set	4026
   391  0000                     _T2CONbits	set	4026
   392  0000                     _TMR0H	set	4055
   393  0000                     _TMR0L	set	4054
   394  0000                     _TMR2	set	4028
   395  0000                     _TRISA	set	3986
   396  0000                     _TRISB	set	3987
   397  0000                     _TRISC	set	3988
   398  0000                     _TXREG1	set	4013
   399  0000                     _TXSTA1	set	4012
   400  0000                     _WPUB	set	3937
   401                           
   402                           	psect	cinit
   403  000796                     __pcinit:
   404                           	opt stack 0
   405  000796                     start_initialization:
   406                           	opt stack 0
   407  000796                     __initialization:
   408                           	opt stack 0
   409                           
   410                           ; Clear objects allocated to BANK1 (128 bytes)
   411  000796  EE01  F000         	lfsr	0,__pbssBANK1
   412  00079A  0E80               	movlw	128
   413  00079C                     clear_0:
   414  00079C  6AEE               	clrf	postinc0,c
   415  00079E  06E8               	decf	wreg,f,c
   416  0007A0  E1FD               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BANK0 (128 bytes)
   419  0007A2  EE00  F060         	lfsr	0,__pbssBANK0
   420  0007A6  0E80               	movlw	128
   421  0007A8                     clear_1:
   422  0007A8  6AEE               	clrf	postinc0,c
   423  0007AA  06E8               	decf	wreg,f,c
   424  0007AC  E1FD               	bnz	clear_1
   425                           
   426                           ; Clear objects allocated to COMRAM (7 bytes)
   427  0007AE  EE00  F043         	lfsr	0,__pbssCOMRAM
   428  0007B2  0E07               	movlw	7
   429  0007B4                     clear_2:
   430  0007B4  6AEE               	clrf	postinc0,c
   431  0007B6  06E8               	decf	wreg,f,c
   432  0007B8  E1FD               	bnz	clear_2
   433  0007BA                     end_of_initialization:
   434                           	opt stack 0
   435  0007BA                     __end_of__initialization:
   436                           	opt stack 0
   437  0007BA  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   438  0007BC  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439  0007BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   440  0007C0  6EF8               	movwf	tblptru,c
   441  0007C2  0100               	movlb	0
   442  0007C4  EFD5  F001         	goto	_main	;jump to C main() function
   443                           tblptru	equ	0xFF8
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447                           	psect	bssCOMRAM
   448  000043                     __pbssCOMRAM:
   449                           	opt stack 0
   450  000043                     _eusart1RxCount:
   451                           	opt stack 0
   452  000043                     	ds	1
   453  000044                     _eusart1RxHead:
   454                           	opt stack 0
   455  000044                     	ds	1
   456  000045                     _eusart1RxTail:
   457                           	opt stack 0
   458  000045                     	ds	1
   459  000046                     _eusart1TxHead:
   460                           	opt stack 0
   461  000046                     	ds	1
   462  000047                     _eusart1TxTail:
   463                           	opt stack 0
   464  000047                     	ds	1
   465  000048                     _timer0ReloadVal8bit:
   466                           	opt stack 0
   467  000048                     	ds	1
   468  000049                     _uartState:
   469                           	opt stack 0
   470  000049                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           
   475                           	psect	bssBANK0
   476  000060                     __pbssBANK0:
   477                           	opt stack 0
   478  000060                     _eusart1TxBuffer:
   479                           	opt stack 0
   480  000060                     	ds	128
   481                           tblptru	equ	0xFF8
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           	psect	bssBANK1
   486  000100                     __pbssBANK1:
   487                           	opt stack 0
   488  000100                     _eusart1RxBuffer:
   489                           	opt stack 0
   490  000100                     	ds	128
   491                           tblptru	equ	0xFF8
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495                           	psect	cstackCOMRAM
   496  000001                     __pcstackCOMRAM:
   497                           	opt stack 0
   498  000001                     ??_INTERRUPT_InterruptManager:
   499  000001                     
   500                           ; 2 bytes @ 0x0
   501  000001                     	ds	14
   502  00000F                     ??_isdigit:
   503  00000F                     ?___wmul:
   504                           	opt stack 0
   505  00000F                     ?___lwdiv:
   506                           	opt stack 0
   507  00000F                     EUSART1_Write@txData:
   508                           	opt stack 0
   509  00000F                     ___wmul@multiplier:
   510                           	opt stack 0
   511  00000F                     ___lwdiv@dividend:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515  00000F                     	ds	1
   516  000010                     putch@txData:
   517                           	opt stack 0
   518  000010                     _isdigit$1010:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xF
   522  000010                     	ds	1
   523  000011                     isdigit@c:
   524                           	opt stack 0
   525  000011                     ___wmul@multiplicand:
   526                           	opt stack 0
   527  000011                     ___lwdiv@divisor:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x10
   531  000011                     	ds	2
   532  000013                     ___wmul@product:
   533                           	opt stack 0
   534  000013                     ___lwdiv@quotient:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538  000013                     	ds	2
   539  000015                     ___lwdiv@counter:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x14
   543  000015                     	ds	1
   544  000016                     ?___lwmod:
   545                           	opt stack 0
   546  000016                     ___lwmod@dividend:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x15
   550  000016                     	ds	2
   551  000018                     ___lwmod@divisor:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x17
   555  000018                     	ds	2
   556  00001A                     ___lwmod@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     ?_printf:
   562                           	opt stack 0
   563  00001B                     printf@f:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x1A
   567  00001B                     	ds	6
   568  000021                     ??_printf:
   569                           
   570                           ; 1 bytes @ 0x20
   571  000021                     	ds	4
   572  000025                     printf@idx:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x24
   576  000025                     	ds	1
   577  000026                     printf@ap:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x25
   581  000026                     	ds	2
   582  000028                     printf@prec:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x27
   586  000028                     	ds	1
   587  000029                     printf@val:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x28
   591  000029                     	ds	2
   592  00002B                     printf@flag:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x2A
   596  00002B                     	ds	1
   597  00002C                     printf@width:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x2B
   601  00002C                     	ds	2
   602  00002E                     printf@c:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x2D
   606  00002E                     	ds	1
   607  00002F                     ??_main:
   608                           
   609                           ; 1 bytes @ 0x2E
   610  00002F                     	ds	1
   611  000030                     main@sleep:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x2F
   615  000030                     	ds	2
   616  000032                     main@a:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x31
   620  000032                     	ds	2
   621  000034                     main@val:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x33
   625  000034                     	ds	2
   626  000036                     main@i:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x35
   630  000036                     	ds	1
   631  000037                     main@i_656:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x36
   635  000037                     	ds	1
   636  000038                     main@i_658:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x37
   640  000038                     	ds	1
   641  000039                     main@i_660:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x38
   645  000039                     	ds	1
   646  00003A                     main@i_662:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x39
   650  00003A                     	ds	1
   651  00003B                     main@i_664:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x3A
   655  00003B                     	ds	1
   656  00003C                     main@i_666:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x3B
   660  00003C                     	ds	1
   661  00003D                     main@i_668:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x3C
   665  00003D                     	ds	1
   666  00003E                     main@i_670:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x3D
   670  00003E                     	ds	1
   671  00003F                     main@i_672:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x3E
   675  00003F                     	ds	1
   676  000040                     main@i_674:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x3F
   680  000040                     	ds	1
   681  000041                     main@i_676:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x40
   685  000041                     	ds	1
   686  000042                     main@i_678:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x41
   690  000042                     	ds	1
   691                           tblptru	equ	0xFF8
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 27 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  i               1   65[COMRAM] unsigned char 
   705 ;;  i               1   64[COMRAM] unsigned char 
   706 ;;  i               1   63[COMRAM] unsigned char 
   707 ;;  i               1   62[COMRAM] unsigned char 
   708 ;;  i               1   61[COMRAM] unsigned char 
   709 ;;  i               1   60[COMRAM] unsigned char 
   710 ;;  i               1   59[COMRAM] unsigned char 
   711 ;;  i               1   58[COMRAM] unsigned char 
   712 ;;  i               1   57[COMRAM] unsigned char 
   713 ;;  i               1   56[COMRAM] unsigned char 
   714 ;;  i               1   55[COMRAM] unsigned char 
   715 ;;  i               1   54[COMRAM] unsigned char 
   716 ;;  i               1   53[COMRAM] unsigned char 
   717 ;;  val             2   51[COMRAM] unsigned int 
   718 ;;  a               2   49[COMRAM] int 
   719 ;;  sleep           2   47[COMRAM] unsigned int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;Total ram usage:       20 bytes
   734 ;; Hardware stack levels required when called:    5
   735 ;; This function calls:
   736 ;;		_SYSTEM_Initialize
   737 ;;		_printf
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  0003AA                     __ptext0:
   745                           	opt stack 0
   746  0003AA                     _main:
   747                           	opt stack 26
   748                           
   749                           ;main.c: 28: SYSTEM_Initialize();
   750                           
   751                           ;incstack = 0
   752  0003AA  EC43  F004         	call	_SYSTEM_Initialize	;wreg free
   753                           
   754                           ;main.c: 30: (INTCONbits.GIE = 1);
   755  0003AE  8EF2               	bsf	intcon,7,c	;volatile
   756                           
   757                           ;main.c: 32: (INTCONbits.PEIE = 1);
   758  0003B0  8CF2               	bsf	intcon,6,c	;volatile
   759                           
   760                           ;main.c: 34: _delay((unsigned long)((10)*(64000000/4000.0)));
   761  0003B2  0ED0               	movlw	208
   762  0003B4  6E2F               	movwf	??_main& (0+255),c
   763  0003B6  0ECA               	movlw	202
   764  0003B8                     u1377:
   765  0003B8  2EE8               	decfsz	wreg,f,c
   766  0003BA  D7FE               	goto	u1377
   767  0003BC  2E2F               	decfsz	??_main& (0+255),f,c
   768  0003BE  D7FC               	goto	u1377
   769                           
   770                           ;main.c: 36: printf("sys reset\r\n");
   771  0003C0  0EEC               	movlw	low STR_1
   772  0003C2  6E1B               	movwf	printf@f,c
   773  0003C4  0EFF               	movlw	high STR_1
   774  0003C6  6E1C               	movwf	printf@f+1,c
   775  0003C8  EC4C  F000         	call	_printf	;wreg free
   776                           
   777                           ;main.c: 37: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   778  0003CC  0E00               	movlw	0
   779  0003CE  6E36               	movwf	main@i,c
   780  0003D0                     l1750:
   781  0003D0  0E09               	movlw	9
   782  0003D2  6436               	cpfsgt	main@i,c
   783  0003D4  D001               	goto	l1754
   784  0003D6  D009               	goto	l1758
   785  0003D8                     l1754:
   786  0003D8  0ED0               	movlw	208
   787  0003DA  6E2F               	movwf	??_main& (0+255),c
   788  0003DC  0ECA               	movlw	202
   789  0003DE                     u1387:
   790  0003DE  2EE8               	decfsz	wreg,f,c
   791  0003E0  D7FE               	goto	u1387
   792  0003E2  2E2F               	decfsz	??_main& (0+255),f,c
   793  0003E4  D7FC               	goto	u1387
   794  0003E6  2A36               	incf	main@i,f,c
   795  0003E8  D7F3               	goto	l1750
   796  0003EA                     l1758:
   797                           
   798                           ;main.c: 38: printf("sys get ver\r\n");
   799  0003EA  0ED2               	movlw	low STR_2
   800  0003EC  6E1B               	movwf	printf@f,c
   801  0003EE  0EFF               	movlw	high STR_2
   802  0003F0  6E1C               	movwf	printf@f+1,c
   803  0003F2  EC4C  F000         	call	_printf	;wreg free
   804                           
   805                           ;main.c: 39: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   806  0003F6  0E00               	movlw	0
   807  0003F8  6E37               	movwf	main@i_656,c
   808  0003FA                     l1762:
   809  0003FA  0E09               	movlw	9
   810  0003FC  6437               	cpfsgt	main@i_656,c
   811  0003FE  D001               	goto	l1766
   812  000400  D009               	goto	l1770
   813  000402                     l1766:
   814  000402  0ED0               	movlw	208
   815  000404  6E2F               	movwf	??_main& (0+255),c
   816  000406  0ECA               	movlw	202
   817  000408                     u1397:
   818  000408  2EE8               	decfsz	wreg,f,c
   819  00040A  D7FE               	goto	u1397
   820  00040C  2E2F               	decfsz	??_main& (0+255),f,c
   821  00040E  D7FC               	goto	u1397
   822  000410  2A37               	incf	main@i_656,f,c
   823  000412  D7F3               	goto	l1762
   824  000414                     l1770:
   825                           
   826                           ;main.c: 40: printf("radio get sf\r\n");
   827  000414  0EA5               	movlw	low STR_3
   828  000416  6E1B               	movwf	printf@f,c
   829  000418  0EFF               	movlw	high STR_3
   830  00041A  6E1C               	movwf	printf@f+1,c
   831  00041C  EC4C  F000         	call	_printf	;wreg free
   832                           
   833                           ;main.c: 41: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   834  000420  0E00               	movlw	0
   835  000422  6E38               	movwf	main@i_658,c
   836  000424                     l1774:
   837  000424  0E09               	movlw	9
   838  000426  6438               	cpfsgt	main@i_658,c
   839  000428  D001               	goto	l1778
   840  00042A  D009               	goto	l1782
   841  00042C                     l1778:
   842  00042C  0ED0               	movlw	208
   843  00042E  6E2F               	movwf	??_main& (0+255),c
   844  000430  0ECA               	movlw	202
   845  000432                     u1407:
   846  000432  2EE8               	decfsz	wreg,f,c
   847  000434  D7FE               	goto	u1407
   848  000436  2E2F               	decfsz	??_main& (0+255),f,c
   849  000438  D7FC               	goto	u1407
   850  00043A  2A38               	incf	main@i_658,f,c
   851  00043C  D7F3               	goto	l1774
   852  00043E                     l1782:
   853                           
   854                           ;main.c: 42: printf("radio get bw\r\n");
   855  00043E  0EC3               	movlw	low STR_4
   856  000440  6E1B               	movwf	printf@f,c
   857  000442  0EFF               	movlw	high STR_4
   858  000444  6E1C               	movwf	printf@f+1,c
   859  000446  EC4C  F000         	call	_printf	;wreg free
   860                           
   861                           ;main.c: 43: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   862  00044A  0E00               	movlw	0
   863  00044C  6E39               	movwf	main@i_660,c
   864  00044E                     l1786:
   865  00044E  0E09               	movlw	9
   866  000450  6439               	cpfsgt	main@i_660,c
   867  000452  D001               	goto	l1790
   868  000454  D009               	goto	l1794
   869  000456                     l1790:
   870  000456  0ED0               	movlw	208
   871  000458  6E2F               	movwf	??_main& (0+255),c
   872  00045A  0ECA               	movlw	202
   873  00045C                     u1417:
   874  00045C  2EE8               	decfsz	wreg,f,c
   875  00045E  D7FE               	goto	u1417
   876  000460  2E2F               	decfsz	??_main& (0+255),f,c
   877  000462  D7FC               	goto	u1417
   878  000464  2A39               	incf	main@i_660,f,c
   879  000466  D7F3               	goto	l1786
   880  000468                     l1794:
   881                           
   882                           ;main.c: 44: printf("radio get cr\r\n");
   883  000468  0EB4               	movlw	low STR_5
   884  00046A  6E1B               	movwf	printf@f,c
   885  00046C  0EFF               	movlw	high STR_5
   886  00046E  6E1C               	movwf	printf@f+1,c
   887  000470  EC4C  F000         	call	_printf	;wreg free
   888                           
   889                           ;main.c: 45: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   890  000474  0E00               	movlw	0
   891  000476  6E3A               	movwf	main@i_662,c
   892  000478                     l1798:
   893  000478  0E09               	movlw	9
   894  00047A  643A               	cpfsgt	main@i_662,c
   895  00047C  D001               	goto	l1802
   896  00047E  D009               	goto	l1806
   897  000480                     l1802:
   898  000480  0ED0               	movlw	208
   899  000482  6E2F               	movwf	??_main& (0+255),c
   900  000484  0ECA               	movlw	202
   901  000486                     u1427:
   902  000486  2EE8               	decfsz	wreg,f,c
   903  000488  D7FE               	goto	u1427
   904  00048A  2E2F               	decfsz	??_main& (0+255),f,c
   905  00048C  D7FC               	goto	u1427
   906  00048E  2A3A               	incf	main@i_662,f,c
   907  000490  D7F3               	goto	l1798
   908  000492                     l1806:
   909                           
   910                           ;main.c: 46: printf("radio get prlen\r\n");
   911  000492  0E72               	movlw	low STR_6
   912  000494  6E1B               	movwf	printf@f,c
   913  000496  0EFF               	movlw	high STR_6
   914  000498  6E1C               	movwf	printf@f+1,c
   915  00049A  EC4C  F000         	call	_printf	;wreg free
   916                           
   917                           ;main.c: 47: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   918  00049E  0E00               	movlw	0
   919  0004A0  6E3B               	movwf	main@i_664,c
   920  0004A2                     l1810:
   921  0004A2  0E09               	movlw	9
   922  0004A4  643B               	cpfsgt	main@i_664,c
   923  0004A6  D001               	goto	l1814
   924  0004A8  D009               	goto	l1818
   925  0004AA                     l1814:
   926  0004AA  0ED0               	movlw	208
   927  0004AC  6E2F               	movwf	??_main& (0+255),c
   928  0004AE  0ECA               	movlw	202
   929  0004B0                     u1437:
   930  0004B0  2EE8               	decfsz	wreg,f,c
   931  0004B2  D7FE               	goto	u1437
   932  0004B4  2E2F               	decfsz	??_main& (0+255),f,c
   933  0004B6  D7FC               	goto	u1437
   934  0004B8  2A3B               	incf	main@i_664,f,c
   935  0004BA  D7F3               	goto	l1810
   936  0004BC                     l1818:
   937                           
   938                           ;main.c: 48: printf("radio get pwr\r\n");
   939  0004BC  0E95               	movlw	low STR_7
   940  0004BE  6E1B               	movwf	printf@f,c
   941  0004C0  0EFF               	movlw	high STR_7
   942  0004C2  6E1C               	movwf	printf@f+1,c
   943  0004C4  EC4C  F000         	call	_printf	;wreg free
   944                           
   945                           ;main.c: 49: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   946  0004C8  0E00               	movlw	0
   947  0004CA  6E3C               	movwf	main@i_666,c
   948  0004CC                     l1822:
   949  0004CC  0E09               	movlw	9
   950  0004CE  643C               	cpfsgt	main@i_666,c
   951  0004D0  D001               	goto	l1826
   952  0004D2  D009               	goto	l1830
   953  0004D4                     l1826:
   954  0004D4  0ED0               	movlw	208
   955  0004D6  6E2F               	movwf	??_main& (0+255),c
   956  0004D8  0ECA               	movlw	202
   957  0004DA                     u1447:
   958  0004DA  2EE8               	decfsz	wreg,f,c
   959  0004DC  D7FE               	goto	u1447
   960  0004DE  2E2F               	decfsz	??_main& (0+255),f,c
   961  0004E0  D7FC               	goto	u1447
   962  0004E2  2A3C               	incf	main@i_666,f,c
   963  0004E4  D7F3               	goto	l1822
   964  0004E6                     l1830:
   965                           
   966                           ;main.c: 51: printf("mac pause\r\n");
   967  0004E6  0EE0               	movlw	low STR_8
   968  0004E8  6E1B               	movwf	printf@f,c
   969  0004EA  0EFF               	movlw	high STR_8
   970  0004EC  6E1C               	movwf	printf@f+1,c
   971  0004EE  EC4C  F000         	call	_printf	;wreg free
   972                           
   973                           ;main.c: 52: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   974  0004F2  0E00               	movlw	0
   975  0004F4  6E3D               	movwf	main@i_668,c
   976  0004F6                     l1834:
   977  0004F6  0E09               	movlw	9
   978  0004F8  643D               	cpfsgt	main@i_668,c
   979  0004FA  D001               	goto	l1838
   980  0004FC  D009               	goto	l1842
   981  0004FE                     l1838:
   982  0004FE  0ED0               	movlw	208
   983  000500  6E2F               	movwf	??_main& (0+255),c
   984  000502  0ECA               	movlw	202
   985  000504                     u1457:
   986  000504  2EE8               	decfsz	wreg,f,c
   987  000506  D7FE               	goto	u1457
   988  000508  2E2F               	decfsz	??_main& (0+255),f,c
   989  00050A  D7FC               	goto	u1457
   990  00050C  2A3D               	incf	main@i_668,f,c
   991  00050E  D7F3               	goto	l1834
   992  000510                     l1842:
   993                           
   994                           ;main.c: 54: printf("radio set pwr -3\r\n");
   995  000510  0E26               	movlw	low STR_9
   996  000512  6E1B               	movwf	printf@f,c
   997  000514  0EFF               	movlw	high STR_9
   998  000516  6E1C               	movwf	printf@f+1,c
   999  000518  EC4C  F000         	call	_printf	;wreg free
  1000                           
  1001                           ;main.c: 55: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1002  00051C  0E00               	movlw	0
  1003  00051E  6E3E               	movwf	main@i_670,c
  1004  000520                     l1846:
  1005  000520  0E09               	movlw	9
  1006  000522  643E               	cpfsgt	main@i_670,c
  1007  000524  D001               	goto	l1850
  1008  000526  D009               	goto	l1854
  1009  000528                     l1850:
  1010  000528  0ED0               	movlw	208
  1011  00052A  6E2F               	movwf	??_main& (0+255),c
  1012  00052C  0ECA               	movlw	202
  1013  00052E                     u1467:
  1014  00052E  2EE8               	decfsz	wreg,f,c
  1015  000530  D7FE               	goto	u1467
  1016  000532  2E2F               	decfsz	??_main& (0+255),f,c
  1017  000534  D7FC               	goto	u1467
  1018  000536  2A3E               	incf	main@i_670,f,c
  1019  000538  D7F3               	goto	l1846
  1020  00053A                     l1854:
  1021                           
  1022                           ;main.c: 56: printf("radio set bw 500\r\n");
  1023  00053A  0E13               	movlw	low STR_10
  1024  00053C  6E1B               	movwf	printf@f,c
  1025  00053E  0EFF               	movlw	high STR_10
  1026  000540  6E1C               	movwf	printf@f+1,c
  1027  000542  EC4C  F000         	call	_printf	;wreg free
  1028                           
  1029                           ;main.c: 57: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1030  000546  0E00               	movlw	0
  1031  000548  6E3F               	movwf	main@i_672,c
  1032  00054A                     l1858:
  1033  00054A  0E09               	movlw	9
  1034  00054C  643F               	cpfsgt	main@i_672,c
  1035  00054E  D001               	goto	l1862
  1036  000550  D009               	goto	l1866
  1037  000552                     l1862:
  1038  000552  0ED0               	movlw	208
  1039  000554  6E2F               	movwf	??_main& (0+255),c
  1040  000556  0ECA               	movlw	202
  1041  000558                     u1477:
  1042  000558  2EE8               	decfsz	wreg,f,c
  1043  00055A  D7FE               	goto	u1477
  1044  00055C  2E2F               	decfsz	??_main& (0+255),f,c
  1045  00055E  D7FC               	goto	u1477
  1046  000560  2A3F               	incf	main@i_672,f,c
  1047  000562  D7F3               	goto	l1858
  1048  000564                     l1866:
  1049                           
  1050                           ;main.c: 58: printf("radio set sf sf7\r\n");
  1051  000564  0E4C               	movlw	low STR_11
  1052  000566  6E1B               	movwf	printf@f,c
  1053  000568  0EFF               	movlw	high STR_11
  1054  00056A  6E1C               	movwf	printf@f+1,c
  1055  00056C  EC4C  F000         	call	_printf	;wreg free
  1056                           
  1057                           ;main.c: 59: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1058  000570  0E00               	movlw	0
  1059  000572  6E40               	movwf	main@i_674,c
  1060  000574                     l1870:
  1061  000574  0E09               	movlw	9
  1062  000576  6440               	cpfsgt	main@i_674,c
  1063  000578  D001               	goto	l1874
  1064  00057A  D009               	goto	l1878
  1065  00057C                     l1874:
  1066  00057C  0ED0               	movlw	208
  1067  00057E  6E2F               	movwf	??_main& (0+255),c
  1068  000580  0ECA               	movlw	202
  1069  000582                     u1487:
  1070  000582  2EE8               	decfsz	wreg,f,c
  1071  000584  D7FE               	goto	u1487
  1072  000586  2E2F               	decfsz	??_main& (0+255),f,c
  1073  000588  D7FC               	goto	u1487
  1074  00058A  2A40               	incf	main@i_674,f,c
  1075  00058C  D7F3               	goto	l1870
  1076  00058E                     l1878:
  1077                           
  1078                           ;main.c: 60: printf("radio set cr 4/5\r\n");
  1079  00058E  0E39               	movlw	low STR_12
  1080  000590  6E1B               	movwf	printf@f,c
  1081  000592  0EFF               	movlw	high STR_12
  1082  000594  6E1C               	movwf	printf@f+1,c
  1083  000596  EC4C  F000         	call	_printf	;wreg free
  1084                           
  1085                           ;main.c: 61: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1086  00059A  0E00               	movlw	0
  1087  00059C  6E41               	movwf	main@i_676,c
  1088  00059E                     l1882:
  1089  00059E  0E09               	movlw	9
  1090  0005A0  6441               	cpfsgt	main@i_676,c
  1091  0005A2  D001               	goto	l1886
  1092  0005A4  D009               	goto	l1890
  1093  0005A6                     l1886:
  1094  0005A6  0ED0               	movlw	208
  1095  0005A8  6E2F               	movwf	??_main& (0+255),c
  1096  0005AA  0ECA               	movlw	202
  1097  0005AC                     u1497:
  1098  0005AC  2EE8               	decfsz	wreg,f,c
  1099  0005AE  D7FE               	goto	u1497
  1100  0005B0  2E2F               	decfsz	??_main& (0+255),f,c
  1101  0005B2  D7FC               	goto	u1497
  1102  0005B4  2A41               	incf	main@i_676,f,c
  1103  0005B6  D7F3               	goto	l1882
  1104  0005B8                     l1890:
  1105                           
  1106                           ;main.c: 62: printf("radio set crc on\r\n");
  1107  0005B8  0E5F               	movlw	low STR_13
  1108  0005BA  6E1B               	movwf	printf@f,c
  1109  0005BC  0EFF               	movlw	high STR_13
  1110  0005BE  6E1C               	movwf	printf@f+1,c
  1111  0005C0  EC4C  F000         	call	_printf	;wreg free
  1112                           
  1113                           ;main.c: 63: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
  1114  0005C4  0E00               	movlw	0
  1115  0005C6  6E42               	movwf	main@i_678,c
  1116  0005C8                     l1894:
  1117  0005C8  0E09               	movlw	9
  1118  0005CA  6442               	cpfsgt	main@i_678,c
  1119  0005CC  D001               	goto	l1898
  1120  0005CE  D009               	goto	l1902
  1121  0005D0                     l1898:
  1122  0005D0  0ED0               	movlw	208
  1123  0005D2  6E2F               	movwf	??_main& (0+255),c
  1124  0005D4  0ECA               	movlw	202
  1125  0005D6                     u1507:
  1126  0005D6  2EE8               	decfsz	wreg,f,c
  1127  0005D8  D7FE               	goto	u1507
  1128  0005DA  2E2F               	decfsz	??_main& (0+255),f,c
  1129  0005DC  D7FC               	goto	u1507
  1130  0005DE  2A42               	incf	main@i_678,f,c
  1131  0005E0  D7F3               	goto	l1894
  1132  0005E2                     l1902:
  1133                           
  1134                           ;main.c: 76: uint16_t val=0;
  1135  0005E2  0E00               	movlw	0
  1136  0005E4  6E35               	movwf	main@val+1,c
  1137  0005E6  0E00               	movlw	0
  1138  0005E8  6E34               	movwf	main@val,c
  1139                           
  1140                           ;main.c: 77: uint16_t sleep=0;
  1141  0005EA  0E00               	movlw	0
  1142  0005EC  6E31               	movwf	main@sleep+1,c
  1143  0005EE  0E00               	movlw	0
  1144  0005F0  6E30               	movwf	main@sleep,c
  1145                           
  1146                           ;main.c: 78: int a =0;
  1147  0005F2  0E00               	movlw	0
  1148  0005F4  6E33               	movwf	main@a+1,c
  1149  0005F6  0E00               	movlw	0
  1150  0005F8  6E32               	movwf	main@a,c
  1151  0005FA                     l1904:
  1152                           
  1153                           ;main.c: 92: _delay((unsigned long)((10)*(64000000/4000.0)));
  1154  0005FA  0ED0               	movlw	208
  1155  0005FC  6E2F               	movwf	??_main& (0+255),c
  1156  0005FE  0ECA               	movlw	202
  1157  000600                     u1517:
  1158  000600  2EE8               	decfsz	wreg,f,c
  1159  000602  D7FE               	goto	u1517
  1160  000604  2E2F               	decfsz	??_main& (0+255),f,c
  1161  000606  D7FC               	goto	u1517
  1162                           
  1163                           ;main.c: 93: _delay((unsigned long)((10)*(64000000/4000.0)));
  1164  000608  0ED0               	movlw	208
  1165  00060A  6E2F               	movwf	??_main& (0+255),c
  1166  00060C  0ECA               	movlw	202
  1167  00060E                     u1527:
  1168  00060E  2EE8               	decfsz	wreg,f,c
  1169  000610  D7FE               	goto	u1527
  1170  000612  2E2F               	decfsz	??_main& (0+255),f,c
  1171  000614  D7FC               	goto	u1527
  1172                           
  1173                           ;main.c: 94: _delay((unsigned long)((10)*(64000000/4000.0)));
  1174  000616  0ED0               	movlw	208
  1175  000618  6E2F               	movwf	??_main& (0+255),c
  1176  00061A  0ECA               	movlw	202
  1177  00061C                     u1537:
  1178  00061C  2EE8               	decfsz	wreg,f,c
  1179  00061E  D7FE               	goto	u1537
  1180  000620  2E2F               	decfsz	??_main& (0+255),f,c
  1181  000622  D7FC               	goto	u1537
  1182                           
  1183                           ;main.c: 95: _delay((unsigned long)((10)*(64000000/4000.0)));
  1184  000624  0ED0               	movlw	208
  1185  000626  6E2F               	movwf	??_main& (0+255),c
  1186  000628  0ECA               	movlw	202
  1187  00062A                     u1547:
  1188  00062A  2EE8               	decfsz	wreg,f,c
  1189  00062C  D7FE               	goto	u1547
  1190  00062E  2E2F               	decfsz	??_main& (0+255),f,c
  1191  000630  D7FC               	goto	u1547
  1192                           
  1193                           ;main.c: 96: _delay((unsigned long)((10)*(64000000/4000.0)));
  1194  000632  0ED0               	movlw	208
  1195  000634  6E2F               	movwf	??_main& (0+255),c
  1196  000636  0ECA               	movlw	202
  1197  000638                     u1557:
  1198  000638  2EE8               	decfsz	wreg,f,c
  1199  00063A  D7FE               	goto	u1557
  1200  00063C  2E2F               	decfsz	??_main& (0+255),f,c
  1201  00063E  D7FC               	goto	u1557
  1202                           
  1203                           ;main.c: 97: printf("radio tx 1000000000000000000000%04X%d\r\n",val++,uartState);
  1204  000640  0EEB               	movlw	low STR_14
  1205  000642  6E1B               	movwf	printf@f,c
  1206  000644  0EFE               	movlw	high STR_14
  1207  000646  6E1C               	movwf	printf@f+1,c
  1208  000648  C034  F01D         	movff	main@val,?_printf+2
  1209  00064C  C035  F01E         	movff	main@val+1,?_printf+3
  1210  000650  C049  F01F         	movff	_uartState,?_printf+4	;volatile
  1211  000654  6A20               	clrf	?_printf+5,c
  1212  000656  EC4C  F000         	call	_printf	;wreg free
  1213  00065A  4A34               	infsnz	main@val,f,c
  1214  00065C  2A35               	incf	main@val+1,f,c
  1215  00065E  D7CD               	goto	l1904
  1216  000660                     __end_of_main:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           intcon	equ	0xFF2
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           
  1223 ;; *************** function _printf *****************
  1224 ;; Defined at:
  1225 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  f               2   26[COMRAM] PTR const unsigned char 
  1228 ;;		 -> STR_15(7), STR_14(40), STR_13(19), STR_12(19), 
  1229 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(12), 
  1230 ;;		 -> STR_7(16), STR_6(18), STR_5(15), STR_4(15), 
  1231 ;;		 -> STR_3(15), STR_2(14), STR_1(12), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  idx             1   36[COMRAM] unsigned char 
  1234 ;;  tmpval          4    0        struct .
  1235 ;;  cp              3    0        PTR const unsigned char 
  1236 ;;  width           2   43[COMRAM] int 
  1237 ;;  val             2   40[COMRAM] unsigned int 
  1238 ;;  ap              2   37[COMRAM] PTR void [1]
  1239 ;;		 -> ?_printf(2), 
  1240 ;;  len             2    0        unsigned int 
  1241 ;;  c               1   45[COMRAM] char 
  1242 ;;  flag            1   42[COMRAM] unsigned char 
  1243 ;;  prec            1   39[COMRAM] char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   26[COMRAM] int 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:       20 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		___lwdiv
  1262 ;;		___lwmod
  1263 ;;		___wmul
  1264 ;;		_isdigit
  1265 ;;		_putch
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;;		_TMR0_ISR
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text1
  1273  000098                     __ptext1:
  1274                           	opt stack 0
  1275  000098                     _printf:
  1276                           	opt stack 26
  1277                           
  1278                           ;doprnt.c: 466: va_list ap;
  1279                           ;doprnt.c: 499: signed char c;
  1280                           ;doprnt.c: 501: int width;
  1281                           ;doprnt.c: 506: signed char prec;
  1282                           ;doprnt.c: 508: unsigned char flag;
  1283                           ;doprnt.c: 523: union {
  1284                           ;doprnt.c: 524: unsigned long vd;
  1285                           ;doprnt.c: 525: double integ;
  1286                           ;doprnt.c: 526: } tmpval;
  1287                           ;doprnt.c: 528: unsigned int val;
  1288                           ;doprnt.c: 529: unsigned len;
  1289                           ;doprnt.c: 530: const char * cp;
  1290                           ;doprnt.c: 533: *ap = __va_start();
  1291                           
  1292                           ;incstack = 0
  1293  000098  0E1D               	movlw	low (?_printf+2)
  1294  00009A  6E26               	movwf	printf@ap,c
  1295  00009C  0E00               	movlw	high (?_printf+2)
  1296  00009E  6E27               	movwf	printf@ap+1,c
  1297                           
  1298                           ;doprnt.c: 536: while(c = *f++) {
  1299  0000A0  D177               	goto	l1722
  1300  0000A2                     l1596:
  1301                           
  1302                           ;doprnt.c: 538: if(c != '%')
  1303  0000A2  0E25               	movlw	37
  1304  0000A4  182E               	xorwf	printf@c,w,c
  1305  0000A6  B4D8               	btfsc	status,2,c
  1306  0000A8  D004               	goto	l1600
  1307                           
  1308                           ;doprnt.c: 540: {
  1309                           ;doprnt.c: 541: (putch(c) );
  1310  0000AA  502E               	movf	printf@c,w,c
  1311  0000AC  EC6E  F004         	call	_putch
  1312                           
  1313                           ;doprnt.c: 542: continue;
  1314  0000B0  D16F               	goto	l1722
  1315  0000B2                     l1600:
  1316                           
  1317                           ;doprnt.c: 543: }
  1318                           ;doprnt.c: 546: width = 0;
  1319  0000B2  0E00               	movlw	0
  1320  0000B4  6E2D               	movwf	printf@width+1,c
  1321  0000B6  0E00               	movlw	0
  1322  0000B8  6E2C               	movwf	printf@width,c
  1323                           
  1324                           ;doprnt.c: 548: flag = 0;
  1325  0000BA  0E00               	movlw	0
  1326  0000BC  6E2B               	movwf	printf@flag,c
  1327                           
  1328                           ;doprnt.c: 551: switch(*f) {
  1329                           
  1330                           ;doprnt.c: 550: for(;;) {
  1331  0000BE  D003               	goto	l1606
  1332  0000C0                     l1602:
  1333                           
  1334                           ;doprnt.c: 580: flag |= 0x04;
  1335  0000C0  842B               	bsf	printf@flag,2,c
  1336                           
  1337                           ;doprnt.c: 581: f++;
  1338  0000C2  4A1B               	infsnz	printf@f,f,c
  1339  0000C4  2A1C               	incf	printf@f+1,f,c
  1340  0000C6                     l1606:
  1341  0000C6  C01B  FFF6         	movff	printf@f,tblptrl
  1342  0000CA  C01C  FFF7         	movff	printf@f+1,tblptrh
  1343  0000CE                     	if	0	;tblptru may be non-zero
  1344  0000CE                     	endif
  1345  0000CE                     	if	0	;tblptru may be non-zero
  1346  0000CE                     	endif
  1347  0000CE  0008               	tblrd		*
  1348  0000D0  50F5               	movf	tablat,w,c
  1349                           
  1350                           ; Switch size 1, requested type "space"
  1351                           ; Number of cases is 1, Range of values is 48 to 48
  1352                           ; switch strategies available:
  1353                           ; Name         Instructions Cycles
  1354                           ; simple_byte            4     3 (average)
  1355                           ;	Chosen strategy is simple_byte
  1356  0000D2  0A30               	xorlw	48	; case 48
  1357  0000D4  B4D8               	btfsc	status,2,c
  1358  0000D6  D7F4               	goto	l1602
  1359                           
  1360                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1361                           
  1362                           ;doprnt.c: 586: }
  1363                           
  1364                           ;doprnt.c: 585: break;
  1365  0000D8  C01B  FFF6         	movff	printf@f,tblptrl
  1366  0000DC  C01C  FFF7         	movff	printf@f+1,tblptrh
  1367  0000E0                     	if	0	;tblptru may be non-zero
  1368  0000E0                     	endif
  1369  0000E0                     	if	0	;tblptru may be non-zero
  1370  0000E0                     	endif
  1371  0000E0  0008               	tblrd		*
  1372  0000E2  50F5               	movf	tablat,w,c
  1373  0000E4  EC34  F004         	call	_isdigit
  1374  0000E8  A0D8               	btfss	status,0,c
  1375  0000EA  D035               	goto	l1624
  1376                           
  1377                           ;doprnt.c: 598: width = 0;
  1378  0000EC  0E00               	movlw	0
  1379  0000EE  6E2D               	movwf	printf@width+1,c
  1380  0000F0  0E00               	movlw	0
  1381  0000F2  6E2C               	movwf	printf@width,c
  1382  0000F4                     l1612:
  1383                           
  1384                           ;doprnt.c: 600: width *= 10;
  1385  0000F4  C02C  F00F         	movff	printf@width,___wmul@multiplier
  1386  0000F8  C02D  F010         	movff	printf@width+1,___wmul@multiplier+1
  1387  0000FC  0E00               	movlw	0
  1388  0000FE  6E12               	movwf	___wmul@multiplicand+1,c
  1389  000100  0E0A               	movlw	10
  1390  000102  6E11               	movwf	___wmul@multiplicand,c
  1391  000104  EC11  F004         	call	___wmul	;wreg free
  1392  000108  C00F  F02C         	movff	?___wmul,printf@width
  1393  00010C  C010  F02D         	movff	?___wmul+1,printf@width+1
  1394                           
  1395                           ;doprnt.c: 601: width += *f++ - '0';
  1396  000110  0ED0               	movlw	208
  1397  000112  6E21               	movwf	??_printf& (0+255),c
  1398  000114  0EFF               	movlw	255
  1399  000116  6E22               	movwf	(??_printf+1)& (0+255),c
  1400  000118  C01B  FFF6         	movff	printf@f,tblptrl
  1401  00011C  C01C  FFF7         	movff	printf@f+1,tblptrh
  1402  000120                     	if	0	;tblptru may be non-zero
  1403  000120                     	endif
  1404  000120                     	if	0	;tblptru may be non-zero
  1405  000120                     	endif
  1406  000120  0008               	tblrd		*
  1407  000122  50F5               	movf	tablat,w,c
  1408  000124  6E23               	movwf	(??_printf+2)& (0+255),c
  1409  000126  6A24               	clrf	(??_printf+3)& (0+255),c
  1410  000128  5021               	movf	??_printf,w,c
  1411  00012A  2623               	addwf	??_printf+2,f,c
  1412  00012C  5022               	movf	??_printf+1,w,c
  1413  00012E  2224               	addwfc	??_printf+3,f,c
  1414  000130  5023               	movf	??_printf+2,w,c
  1415  000132  262C               	addwf	printf@width,f,c
  1416  000134  5024               	movf	??_printf+3,w,c
  1417  000136  222D               	addwfc	printf@width+1,f,c
  1418  000138  4A1B               	infsnz	printf@f,f,c
  1419  00013A  2A1C               	incf	printf@f+1,f,c
  1420                           
  1421                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1422  00013C  C01B  FFF6         	movff	printf@f,tblptrl
  1423  000140  C01C  FFF7         	movff	printf@f+1,tblptrh
  1424  000144                     	if	0	;tblptru may be non-zero
  1425  000144                     	endif
  1426  000144                     	if	0	;tblptru may be non-zero
  1427  000144                     	endif
  1428  000144  0008               	tblrd		*
  1429  000146  50F5               	movf	tablat,w,c
  1430  000148  EC34  F004         	call	_isdigit
  1431  00014C  A0D8               	btfss	status,0,c
  1432  00014E  D003               	goto	l1624
  1433  000150  D7D1               	goto	l1612
  1434  000152                     l1620:
  1435                           
  1436                           ;doprnt.c: 718: case 'x':
  1437                           ;doprnt.c: 721: flag |= 0x80;
  1438  000152  8E2B               	bsf	printf@flag,7,c
  1439                           
  1440                           ;doprnt.c: 723: break;
  1441  000154  D01A               	goto	l319
  1442  000156                     l1624:
  1443  000156  C01B  FFF6         	movff	printf@f,tblptrl
  1444  00015A  C01C  FFF7         	movff	printf@f+1,tblptrh
  1445  00015E  4A1B               	infsnz	printf@f,f,c
  1446  000160  2A1C               	incf	printf@f+1,f,c
  1447  000162                     	if	0	;tblptru may be non-zero
  1448  000162                     	endif
  1449  000162                     	if	0	;tblptru may be non-zero
  1450  000162                     	endif
  1451  000162  0008               	tblrd		*
  1452  000164  CFF5 F02E          	movff	tablat,printf@c
  1453  000168  502E               	movf	printf@c,w,c
  1454                           
  1455                           ; Switch size 1, requested type "space"
  1456                           ; Number of cases is 5, Range of values is 0 to 120
  1457                           ; switch strategies available:
  1458                           ; Name         Instructions Cycles
  1459                           ; simple_byte           16     9 (average)
  1460                           ;	Chosen strategy is simple_byte
  1461  00016A  0A00               	xorlw	0	; case 0
  1462  00016C  B4D8               	btfsc	status,2,c
  1463  00016E  0012               	return	
  1464  000170  0A58               	xorlw	88	; case 88
  1465  000172  B4D8               	btfsc	status,2,c
  1466  000174  D7EE               	goto	l1620
  1467  000176  0A3C               	xorlw	60	; case 100
  1468  000178  B4D8               	btfsc	status,2,c
  1469  00017A  D007               	goto	l319
  1470  00017C  0A0D               	xorlw	13	; case 105
  1471  00017E  B4D8               	btfsc	status,2,c
  1472  000180  D004               	goto	l319
  1473  000182  0A11               	xorlw	17	; case 120
  1474  000184  B4D8               	btfsc	status,2,c
  1475  000186  D7E5               	goto	l1620
  1476  000188  D103               	goto	l1722
  1477  00018A                     l319:
  1478                           
  1479                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1480  00018A  BE2B               	btfsc	printf@flag,7,c
  1481  00018C  D015               	goto	l1636
  1482                           
  1483                           ;doprnt.c: 1253: {
  1484                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1485  00018E  C026  FFD9         	movff	printf@ap,fsr2l
  1486  000192  C027  FFDA         	movff	printf@ap+1,fsr2h
  1487  000196  CFDE F029          	movff	postinc2,printf@val
  1488  00019A  CFDD F02A          	movff	postdec2,printf@val+1
  1489  00019E  0E02               	movlw	2
  1490  0001A0  2626               	addwf	printf@ap,f,c
  1491  0001A2  0E00               	movlw	0
  1492  0001A4  2227               	addwfc	printf@ap+1,f,c
  1493                           
  1494                           ;doprnt.c: 1261: if((int)val < 0) {
  1495  0001A6  AE2A               	btfss	printf@val+1,7,c
  1496  0001A8  D044               	goto	l1670
  1497                           
  1498                           ;doprnt.c: 1262: flag |= 0x03;
  1499  0001AA  0E03               	movlw	3
  1500  0001AC  122B               	iorwf	printf@flag,f,c
  1501                           
  1502                           ;doprnt.c: 1263: val = -val;
  1503  0001AE  6C29               	negf	printf@val,c
  1504  0001B0  1E2A               	comf	printf@val+1,f,c
  1505  0001B2  B0D8               	btfsc	status,0,c
  1506  0001B4  2A2A               	incf	printf@val+1,f,c
  1507                           
  1508                           ;doprnt.c: 1264: }
  1509                           ;doprnt.c: 1266: }
  1510  0001B6  D03D               	goto	l1670
  1511  0001B8                     l1636:
  1512                           
  1513                           ;doprnt.c: 1268: else
  1514                           ;doprnt.c: 1273: {
  1515                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1516  0001B8  C026  FFD9         	movff	printf@ap,fsr2l
  1517  0001BC  C027  FFDA         	movff	printf@ap+1,fsr2h
  1518  0001C0  CFDE F029          	movff	postinc2,printf@val
  1519  0001C4  CFDD F02A          	movff	postdec2,printf@val+1
  1520  0001C8  0E02               	movlw	2
  1521  0001CA  2626               	addwf	printf@ap,f,c
  1522  0001CC  0E00               	movlw	0
  1523  0001CE  2227               	addwfc	printf@ap+1,f,c
  1524                           
  1525                           ;doprnt.c: 1287: }
  1526                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1527  0001D0  D030               	goto	l1670
  1528  0001D2                     l1640:
  1529                           
  1530                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1531  0001D2  0E01               	movlw	1
  1532  0001D4  6E2E               	movwf	printf@c,c
  1533  0001D6                     l1642:
  1534  0001D6  0E05               	movlw	5
  1535  0001D8  182E               	xorwf	printf@c,w,c
  1536  0001DA  B4D8               	btfsc	status,2,c
  1537  0001DC  D032               	goto	l1672
  1538                           
  1539                           ;doprnt.c: 1306: if(val < dpowers[c])
  1540  0001DE  502E               	movf	printf@c,w,c
  1541  0001E0  0D02               	mullw	2
  1542  0001E2  0ED9               	movlw	low _dpowers
  1543  0001E4  24F3               	addwf	prodl,w,c
  1544  0001E6  6EF6               	movwf	tblptrl,c
  1545  0001E8  0EFE               	movlw	high _dpowers
  1546  0001EA  20F4               	addwfc	prodh,w,c
  1547  0001EC  6EF7               	movwf	tblptrh,c
  1548  0001EE                     	if	0	;There are less than 3 active tblptr bytes
  1549  0001EE                     	endif
  1550  0001EE  0009               	tblrd		*+
  1551  0001F0  50F5               	movf	tablat,w,c
  1552  0001F2  5C29               	subwf	printf@val,w,c
  1553  0001F4  0009               	tblrd		*+
  1554  0001F6  50F5               	movf	tablat,w,c
  1555  0001F8  582A               	subwfb	printf@val+1,w,c
  1556  0001FA  A0D8               	btfss	status,0,c
  1557  0001FC  D022               	goto	l1672
  1558                           
  1559                           ;doprnt.c: 1307: break;
  1560  0001FE  2A2E               	incf	printf@c,f,c
  1561  000200  D7EA               	goto	l1642
  1562  000202                     l1654:
  1563                           
  1564                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1565  000202  0E01               	movlw	1
  1566  000204  6E2E               	movwf	printf@c,c
  1567  000206                     l1656:
  1568  000206  0E04               	movlw	4
  1569  000208  182E               	xorwf	printf@c,w,c
  1570  00020A  B4D8               	btfsc	status,2,c
  1571  00020C  D01A               	goto	l1672
  1572                           
  1573                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1574  00020E  502E               	movf	printf@c,w,c
  1575  000210  0D02               	mullw	2
  1576  000212  0EE3               	movlw	low _hexpowers
  1577  000214  24F3               	addwf	prodl,w,c
  1578  000216  6EF6               	movwf	tblptrl,c
  1579  000218  0EFE               	movlw	high _hexpowers
  1580  00021A  20F4               	addwfc	prodh,w,c
  1581  00021C  6EF7               	movwf	tblptrh,c
  1582  00021E                     	if	0	;There are less than 3 active tblptr bytes
  1583  00021E                     	endif
  1584  00021E  0009               	tblrd		*+
  1585  000220  50F5               	movf	tablat,w,c
  1586  000222  5C29               	subwf	printf@val,w,c
  1587  000224  0009               	tblrd		*+
  1588  000226  50F5               	movf	tablat,w,c
  1589  000228  582A               	subwfb	printf@val+1,w,c
  1590  00022A  A0D8               	btfss	status,0,c
  1591  00022C  D00A               	goto	l1672
  1592                           
  1593                           ;doprnt.c: 1318: break;
  1594  00022E  2A2E               	incf	printf@c,f,c
  1595  000230  D7EA               	goto	l1656
  1596  000232                     l1670:
  1597  000232  502B               	movf	printf@flag,w,c
  1598  000234  0B80               	andlw	128
  1599                           
  1600                           ; Switch size 1, requested type "space"
  1601                           ; Number of cases is 2, Range of values is 0 to 128
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte            7     4 (average)
  1605                           ;	Chosen strategy is simple_byte
  1606  000236  0A00               	xorlw	0	; case 0
  1607  000238  B4D8               	btfsc	status,2,c
  1608  00023A  D7CB               	goto	l1640
  1609  00023C  0A80               	xorlw	128	; case 128
  1610  00023E  B4D8               	btfsc	status,2,c
  1611  000240  D7E0               	goto	l1654
  1612  000242                     l1672:
  1613                           
  1614                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1615  000242  502C               	movf	printf@width,w,c
  1616  000244  102D               	iorwf	printf@width+1,w,c
  1617  000246  B4D8               	btfsc	status,2,c
  1618  000248  D009               	goto	l1678
  1619  00024A  C02B  F021         	movff	printf@flag,??_printf
  1620  00024E  0E03               	movlw	3
  1621  000250  1621               	andwf	??_printf,f,c
  1622  000252  B4D8               	btfsc	status,2,c
  1623  000254  D003               	goto	l1678
  1624                           
  1625                           ;doprnt.c: 1346: width--;
  1626  000256  062C               	decf	printf@width,f,c
  1627  000258  A0D8               	btfss	status,0,c
  1628  00025A  062D               	decf	printf@width+1,f,c
  1629  00025C                     l1678:
  1630                           
  1631                           ;doprnt.c: 1381: if(width > c)
  1632  00025C  0E80               	movlw	128
  1633  00025E  BE2E               	btfsc	printf@c,7,c
  1634  000260  0E7F               	movlw	127
  1635  000262  6E21               	movwf	??_printf& (0+255),c
  1636  000264  502C               	movf	printf@width,w,c
  1637  000266  5C2E               	subwf	printf@c,w,c
  1638  000268  502D               	movf	printf@width+1,w,c
  1639  00026A  0A80               	xorlw	128
  1640  00026C  5821               	subwfb	??_printf& (0+255),w,c
  1641  00026E  B0D8               	btfsc	status,0,c
  1642  000270  D007               	goto	l1682
  1643                           
  1644                           ;doprnt.c: 1382: width -= c;
  1645  000272  502E               	movf	printf@c,w,c
  1646  000274  5E2C               	subwf	printf@width,f,c
  1647  000276  0E00               	movlw	0
  1648  000278  BE2E               	btfsc	printf@c,7,c
  1649  00027A  0EFF               	movlw	255
  1650  00027C  5A2D               	subwfb	printf@width+1,f,c
  1651  00027E  D004               	goto	l1684
  1652  000280                     l1682:
  1653                           
  1654                           ;doprnt.c: 1383: else
  1655                           ;doprnt.c: 1384: width = 0;
  1656  000280  0E00               	movlw	0
  1657  000282  6E2D               	movwf	printf@width+1,c
  1658  000284  0E00               	movlw	0
  1659  000286  6E2C               	movwf	printf@width,c
  1660  000288                     l1684:
  1661                           
  1662                           ;doprnt.c: 1387: if(flag & 0x04) {
  1663  000288  A42B               	btfss	printf@flag,2,c
  1664  00028A  D014               	goto	l1696
  1665                           
  1666                           ;doprnt.c: 1392: if(flag & 0x03)
  1667  00028C  C02B  F021         	movff	printf@flag,??_printf
  1668  000290  0E03               	movlw	3
  1669  000292  1621               	andwf	??_printf,f,c
  1670  000294  B4D8               	btfsc	status,2,c
  1671  000296  D003               	goto	l1690
  1672                           
  1673                           ;doprnt.c: 1393: (putch('-') );
  1674  000298  0E2D               	movlw	45
  1675  00029A  EC6E  F004         	call	_putch
  1676  00029E                     l1690:
  1677                           
  1678                           ;doprnt.c: 1415: if(width)
  1679  00029E  502C               	movf	printf@width,w,c
  1680  0002A0  102D               	iorwf	printf@width+1,w,c
  1681  0002A2  B4D8               	btfsc	status,2,c
  1682  0002A4  D01E               	goto	l1706
  1683                           
  1684                           ;doprnt.c: 1417: (putch('0') );
  1685                           
  1686                           ;doprnt.c: 1416: do
  1687  0002A6  0E30               	movlw	48
  1688  0002A8  EC6E  F004         	call	_putch
  1689                           
  1690                           ;doprnt.c: 1418: while(--width);
  1691  0002AC  062C               	decf	printf@width,f,c
  1692  0002AE  A0D8               	btfss	status,0,c
  1693  0002B0  062D               	decf	printf@width+1,f,c
  1694  0002B2  D7F5               	goto	l1690
  1695  0002B4                     l1696:
  1696                           
  1697                           ;doprnt.c: 1422: {
  1698                           ;doprnt.c: 1424: if(width
  1699                           ;doprnt.c: 1428: )
  1700  0002B4  502C               	movf	printf@width,w,c
  1701  0002B6  102D               	iorwf	printf@width+1,w,c
  1702  0002B8  B4D8               	btfsc	status,2,c
  1703  0002BA  D00A               	goto	l1702
  1704  0002BC                     l1698:
  1705                           
  1706                           ;doprnt.c: 1430: (putch(' ') );
  1707  0002BC  0E20               	movlw	32
  1708  0002BE  EC6E  F004         	call	_putch
  1709                           
  1710                           ;doprnt.c: 1431: while(--width);
  1711  0002C2  062C               	decf	printf@width,f,c
  1712  0002C4  A0D8               	btfss	status,0,c
  1713  0002C6  062D               	decf	printf@width+1,f,c
  1714  0002C8  502C               	movf	printf@width,w,c
  1715  0002CA  102D               	iorwf	printf@width+1,w,c
  1716  0002CC  A4D8               	btfss	status,2,c
  1717  0002CE  D7F6               	goto	l1698
  1718  0002D0                     l1702:
  1719                           
  1720                           ;doprnt.c: 1438: if(flag & 0x03)
  1721  0002D0  C02B  F021         	movff	printf@flag,??_printf
  1722  0002D4  0E03               	movlw	3
  1723  0002D6  1621               	andwf	??_printf,f,c
  1724  0002D8  B4D8               	btfsc	status,2,c
  1725  0002DA  D003               	goto	l1706
  1726                           
  1727                           ;doprnt.c: 1439: (putch('-') );
  1728  0002DC  0E2D               	movlw	45
  1729  0002DE  EC6E  F004         	call	_putch
  1730  0002E2                     l1706:
  1731                           
  1732                           ;doprnt.c: 1469: }
  1733                           ;doprnt.c: 1472: prec = c;
  1734  0002E2  C02E  F028         	movff	printf@c,printf@prec
  1735                           
  1736                           ;doprnt.c: 1474: while(prec--) {
  1737  0002E6  D050               	goto	l1720
  1738  0002E8                     l1708:
  1739                           
  1740                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1741  0002E8  5028               	movf	printf@prec,w,c
  1742  0002EA  0D02               	mullw	2
  1743  0002EC  0ED9               	movlw	low _dpowers
  1744  0002EE  24F3               	addwf	prodl,w,c
  1745  0002F0  6EF6               	movwf	tblptrl,c
  1746  0002F2  0EFE               	movlw	high _dpowers
  1747  0002F4  20F4               	addwfc	prodh,w,c
  1748  0002F6  6EF7               	movwf	tblptrh,c
  1749  0002F8                     	if	0	;There are less than 3 active tblptr bytes
  1750  0002F8                     	endif
  1751  0002F8  0009               	tblrd		*+
  1752  0002FA  CFF5 F011          	movff	tablat,___lwdiv@divisor
  1753  0002FE  000A               	tblrd		*-
  1754  000300  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  1755  000304  C029  F00F         	movff	printf@val,___lwdiv@dividend
  1756  000308  C02A  F010         	movff	printf@val+1,___lwdiv@dividend+1
  1757  00030C  EC30  F003         	call	___lwdiv	;wreg free
  1758  000310  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  1759  000314  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  1760  000318  0E00               	movlw	0
  1761  00031A  6E19               	movwf	___lwmod@divisor+1,c
  1762  00031C  0E0A               	movlw	10
  1763  00031E  6E18               	movwf	___lwmod@divisor,c
  1764  000320  EC59  F003         	call	___lwmod	;wreg free
  1765  000324  5016               	movf	?___lwmod,w,c
  1766  000326  0F30               	addlw	48
  1767  000328  6E2E               	movwf	printf@c,c
  1768                           
  1769                           ;doprnt.c: 1491: break;
  1770  00032A  D02B               	goto	l1718
  1771  00032C                     l1710:
  1772                           
  1773                           ;doprnt.c: 1499: {
  1774                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1775  00032C  C029  F00F         	movff	printf@val,___lwdiv@dividend
  1776  000330  C02A  F010         	movff	printf@val+1,___lwdiv@dividend+1
  1777  000334  5028               	movf	printf@prec,w,c
  1778  000336  0D02               	mullw	2
  1779  000338  0EE3               	movlw	low _hexpowers
  1780  00033A  24F3               	addwf	prodl,w,c
  1781  00033C  6EF6               	movwf	tblptrl,c
  1782  00033E  0EFE               	movlw	high _hexpowers
  1783  000340  20F4               	addwfc	prodh,w,c
  1784  000342  6EF7               	movwf	tblptrh,c
  1785  000344                     	if	0	;There are less than 3 active tblptr bytes
  1786  000344                     	endif
  1787  000344  0009               	tblrd		*+
  1788  000346  CFF5 F011          	movff	tablat,___lwdiv@divisor
  1789  00034A  000A               	tblrd		*-
  1790  00034C  CFF5 F012          	movff	tablat,___lwdiv@divisor+1
  1791  000350  EC30  F003         	call	___lwdiv	;wreg free
  1792  000354  500F               	movf	?___lwdiv,w,c
  1793  000356  0B0F               	andlw	15
  1794  000358  6E25               	movwf	printf@idx,c
  1795                           
  1796                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  1797  00035A  5025               	movf	printf@idx,w,c
  1798  00035C  0D01               	mullw	1
  1799  00035E  0E84               	movlw	low STR_16
  1800  000360  24F3               	addwf	prodl,w,c
  1801  000362  6EF6               	movwf	tblptrl,c
  1802  000364  0EFF               	movlw	high STR_16
  1803  000366  20F4               	addwfc	prodh,w,c
  1804  000368  6EF7               	movwf	tblptrh,c
  1805  00036A                     	if	0	;There are less than 3 active tblptr bytes
  1806  00036A                     	endif
  1807  00036A  0008               	tblrd		*
  1808  00036C  CFF5 F02E          	movff	tablat,printf@c
  1809                           
  1810                           ;doprnt.c: 1523: }
  1811                           
  1812                           ;doprnt.c: 1508: }
  1813                           ;doprnt.c: 1510: break;
  1814  000370  D008               	goto	l1718
  1815  000372                     l1716:
  1816  000372  502B               	movf	printf@flag,w,c
  1817  000374  0B80               	andlw	128
  1818                           
  1819                           ; Switch size 1, requested type "space"
  1820                           ; Number of cases is 2, Range of values is 0 to 128
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte            7     4 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  000376  0A00               	xorlw	0	; case 0
  1826  000378  B4D8               	btfsc	status,2,c
  1827  00037A  D7B6               	goto	l1708
  1828  00037C  0A80               	xorlw	128	; case 128
  1829  00037E  B4D8               	btfsc	status,2,c
  1830  000380  D7D5               	goto	l1710
  1831  000382                     l1718:
  1832                           
  1833                           ;doprnt.c: 1524: (putch(c) );
  1834  000382  502E               	movf	printf@c,w,c
  1835  000384  EC6E  F004         	call	_putch
  1836  000388                     l1720:
  1837  000388  0628               	decf	printf@prec,f,c
  1838  00038A  2828               	incf	printf@prec,w,c
  1839  00038C  A4D8               	btfss	status,2,c
  1840  00038E  D7F1               	goto	l1716
  1841  000390                     l1722:
  1842  000390  C01B  FFF6         	movff	printf@f,tblptrl
  1843  000394  C01C  FFF7         	movff	printf@f+1,tblptrh
  1844  000398  4A1B               	infsnz	printf@f,f,c
  1845  00039A  2A1C               	incf	printf@f+1,f,c
  1846  00039C                     	if	0	;tblptru may be non-zero
  1847  00039C                     	endif
  1848  00039C                     	if	0	;tblptru may be non-zero
  1849  00039C                     	endif
  1850  00039C  0008               	tblrd		*
  1851  00039E  CFF5 F02E          	movff	tablat,printf@c
  1852  0003A2  502E               	movf	printf@c,w,c
  1853  0003A4  B4D8               	btfsc	status,2,c
  1854  0003A6  0012               	return	
  1855  0003A8  D67C               	goto	l1596
  1856  0003AA                     __end_of_printf:
  1857                           	opt stack 0
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postinc2	equ	0xFDE
  1868                           postdec2	equ	0xFDD
  1869                           fsr2h	equ	0xFDA
  1870                           fsr2l	equ	0xFD9
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _putch *****************
  1874 ;; Defined at:
  1875 ;;		line 164 in file "mcc_generated_files/eusart1.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  txData          1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  txData          1   15[COMRAM] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		_EUSART1_Write
  1898 ;; This function is called by:
  1899 ;;		_printf
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text2
  1904  0008DC                     __ptext2:
  1905                           	opt stack 0
  1906  0008DC                     _putch:
  1907                           	opt stack 26
  1908                           
  1909                           ;incstack = 0
  1910                           ;putch@txData stored from wreg
  1911  0008DC  6E10               	movwf	putch@txData,c
  1912                           
  1913                           ;eusart1.c: 166: EUSART1_Write(txData);
  1914  0008DE  5010               	movf	putch@txData,w,c
  1915  0008E0  EC7A  F003         	call	_EUSART1_Write
  1916  0008E4  0012               	return		;funcret
  1917  0008E6                     __end_of_putch:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           prodh	equ	0xFF4
  1924                           prodl	equ	0xFF3
  1925                           intcon	equ	0xFF2
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postinc2	equ	0xFDE
  1929                           postdec2	equ	0xFDD
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _EUSART1_Write *****************
  1935 ;; Defined at:
  1936 ;;		line 136 in file "mcc_generated_files/eusart1.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  txData          1    wreg     unsigned char 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  txData          1   14[COMRAM] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;Total ram usage:        1 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    2
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_putch
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text3
  1965  0006F4                     __ptext3:
  1966                           	opt stack 0
  1967  0006F4                     _EUSART1_Write:
  1968                           	opt stack 26
  1969                           
  1970                           ;incstack = 0
  1971                           ;EUSART1_Write@txData stored from wreg
  1972  0006F4  6E0F               	movwf	EUSART1_Write@txData,c
  1973  0006F6                     l978:
  1974  0006F6  504A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1975  0006F8  B4D8               	btfsc	status,2,c
  1976  0006FA  D7FD               	goto	l978
  1977                           
  1978                           ;eusart1.c: 140: }
  1979                           ;eusart1.c: 142: if(0 == PIE1bits.TX1IE)
  1980  0006FC  B89D               	btfsc	3997,4,c	;volatile
  1981  0006FE  D003               	goto	l104
  1982                           
  1983                           ;eusart1.c: 143: {
  1984                           ;eusart1.c: 144: TXREG1 = txData;
  1985  000700  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1986                           
  1987                           ;eusart1.c: 145: }
  1988  000704  D012               	goto	l992
  1989  000706                     l104:
  1990                           
  1991                           ;eusart1.c: 146: else
  1992                           ;eusart1.c: 147: {
  1993                           ;eusart1.c: 148: PIE1bits.TX1IE = 0;
  1994  000706  989D               	bcf	3997,4,c	;volatile
  1995                           
  1996                           ;eusart1.c: 149: eusart1TxBuffer[eusart1TxHead++] = txData;
  1997  000708  5046               	movf	_eusart1TxHead,w,c
  1998  00070A  0D01               	mullw	1
  1999  00070C  0E60               	movlw	low _eusart1TxBuffer
  2000  00070E  24F3               	addwf	prodl,w,c
  2001  000710  6ED9               	movwf	fsr2l,c
  2002  000712  0E00               	movlw	high _eusart1TxBuffer
  2003  000714  20F4               	addwfc	prodh,w,c
  2004  000716  6EDA               	movwf	fsr2h,c
  2005  000718  C00F  FFDF         	movff	EUSART1_Write@txData,indf2
  2006  00071C  2A46               	incf	_eusart1TxHead,f,c
  2007                           
  2008                           ;eusart1.c: 150: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  2009  00071E  0E7F               	movlw	127
  2010  000720  6446               	cpfsgt	_eusart1TxHead,c
  2011  000722  D002               	goto	l990
  2012                           
  2013                           ;eusart1.c: 151: {
  2014                           ;eusart1.c: 152: eusart1TxHead = 0;
  2015  000724  0E00               	movlw	0
  2016  000726  6E46               	movwf	_eusart1TxHead,c
  2017  000728                     l990:
  2018                           
  2019                           ;eusart1.c: 153: }
  2020                           ;eusart1.c: 154: eusart1TxBufferRemaining--;
  2021  000728  064A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  2022  00072A                     l992:
  2023                           
  2024                           ;eusart1.c: 155: }
  2025                           ;eusart1.c: 156: PIE1bits.TX1IE = 1;
  2026  00072A  889D               	bsf	3997,4,c	;volatile
  2027  00072C  0012               	return		;funcret
  2028  00072E                     __end_of_EUSART1_Write:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           intcon	equ	0xFF2
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           indf2	equ	0xFDF
  2040                           postinc2	equ	0xFDE
  2041                           postdec2	equ	0xFDD
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _isdigit *****************
  2047 ;; Defined at:
  2048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  c               1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  c               1   16[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:        3 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    2
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_printf
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text4
  2077  000868                     __ptext4:
  2078                           	opt stack 0
  2079  000868                     _isdigit:
  2080                           	opt stack 27
  2081                           
  2082                           ;incstack = 0
  2083                           ;isdigit@c stored from wreg
  2084  000868  6E11               	movwf	isdigit@c,c
  2085  00086A  0E00               	movlw	0
  2086  00086C  6E10               	movwf	_isdigit$1010,c
  2087  00086E  0E3A               	movlw	58
  2088  000870  6011               	cpfslt	isdigit@c,c
  2089  000872  D005               	goto	l1512
  2090  000874  0E2F               	movlw	47
  2091  000876  6411               	cpfsgt	isdigit@c,c
  2092  000878  D002               	goto	l1512
  2093  00087A  0E01               	movlw	1
  2094  00087C  6E10               	movwf	_isdigit$1010,c
  2095  00087E                     l1512:
  2096  00087E  C010  F00F         	movff	_isdigit$1010,??_isdigit
  2097  000882  300F               	rrcf	??_isdigit,w,c
  2098  000884  0012               	return	
  2099  000886                     __end_of_isdigit:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           intcon	equ	0xFF2
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           indf2	equ	0xFDF
  2111                           postinc2	equ	0xFDE
  2112                           postdec2	equ	0xFDD
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function ___wmul *****************
  2118 ;; Defined at:
  2119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  multiplier      2   14[COMRAM] unsigned int 
  2122 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  product         2   18[COMRAM] unsigned int 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  2   14[COMRAM] unsigned int 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, prodl, prodh
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;Total ram usage:        6 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_printf
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text5
  2149  000822                     __ptext5:
  2150                           	opt stack 0
  2151  000822                     ___wmul:
  2152                           	opt stack 27
  2153                           
  2154                           ;incstack = 0
  2155  000822  500F               	movf	___wmul@multiplier,w,c
  2156  000824  0211               	mulwf	___wmul@multiplicand,c
  2157  000826  CFF3 F013          	movff	prodl,___wmul@product
  2158  00082A  CFF4 F014          	movff	prodh,___wmul@product+1
  2159  00082E  500F               	movf	___wmul@multiplier,w,c
  2160  000830  0212               	mulwf	___wmul@multiplicand+1,c
  2161  000832  50F3               	movf	prodl,w,c
  2162  000834  2614               	addwf	___wmul@product+1,f,c
  2163  000836  5010               	movf	___wmul@multiplier+1,w,c
  2164  000838  0211               	mulwf	___wmul@multiplicand,c
  2165  00083A  50F3               	movf	prodl,w,c
  2166  00083C  2614               	addwf	___wmul@product+1,f,c
  2167  00083E  C013  F00F         	movff	___wmul@product,?___wmul
  2168  000842  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2169  000846  0012               	return	
  2170  000848                     __end_of___wmul:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           prodh	equ	0xFF4
  2177                           prodl	equ	0xFF3
  2178                           intcon	equ	0xFF2
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           indf2	equ	0xFDF
  2182                           postinc2	equ	0xFDE
  2183                           postdec2	equ	0xFDD
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function ___lwmod *****************
  2189 ;; Defined at:
  2190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  dividend        2   21[COMRAM] unsigned int 
  2193 ;;  divisor         2   23[COMRAM] unsigned int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  counter         1   25[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2   21[COMRAM] unsigned int 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        5 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    2
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_printf
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text6
  2220  0006B2                     __ptext6:
  2221                           	opt stack 0
  2222  0006B2                     ___lwmod:
  2223                           	opt stack 27
  2224                           
  2225                           ;incstack = 0
  2226  0006B2  5018               	movf	___lwmod@divisor,w,c
  2227  0006B4  1019               	iorwf	___lwmod@divisor+1,w,c
  2228  0006B6  B4D8               	btfsc	status,2,c
  2229  0006B8  D018               	goto	l775
  2230  0006BA  0E01               	movlw	1
  2231  0006BC  6E1A               	movwf	___lwmod@counter,c
  2232  0006BE  D004               	goto	l1550
  2233  0006C0                     l1548:
  2234  0006C0  90D8               	bcf	status,0,c
  2235  0006C2  3618               	rlcf	___lwmod@divisor,f,c
  2236  0006C4  3619               	rlcf	___lwmod@divisor+1,f,c
  2237  0006C6  2A1A               	incf	___lwmod@counter,f,c
  2238  0006C8                     l1550:
  2239  0006C8  AE19               	btfss	___lwmod@divisor+1,7,c
  2240  0006CA  D7FA               	goto	l1548
  2241  0006CC                     l1552:
  2242  0006CC  5018               	movf	___lwmod@divisor,w,c
  2243  0006CE  5C16               	subwf	___lwmod@dividend,w,c
  2244  0006D0  5019               	movf	___lwmod@divisor+1,w,c
  2245  0006D2  5817               	subwfb	___lwmod@dividend+1,w,c
  2246  0006D4  A0D8               	btfss	status,0,c
  2247  0006D6  D004               	goto	l1556
  2248  0006D8  5018               	movf	___lwmod@divisor,w,c
  2249  0006DA  5E16               	subwf	___lwmod@dividend,f,c
  2250  0006DC  5019               	movf	___lwmod@divisor+1,w,c
  2251  0006DE  5A17               	subwfb	___lwmod@dividend+1,f,c
  2252  0006E0                     l1556:
  2253  0006E0  90D8               	bcf	status,0,c
  2254  0006E2  3219               	rrcf	___lwmod@divisor+1,f,c
  2255  0006E4  3218               	rrcf	___lwmod@divisor,f,c
  2256  0006E6  2E1A               	decfsz	___lwmod@counter,f,c
  2257  0006E8  D7F1               	goto	l1552
  2258  0006EA                     l775:
  2259  0006EA  C016  F016         	movff	___lwmod@dividend,?___lwmod
  2260  0006EE  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  2261  0006F2  0012               	return		;funcret
  2262  0006F4                     __end_of___lwmod:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           prodh	equ	0xFF4
  2269                           prodl	equ	0xFF3
  2270                           intcon	equ	0xFF2
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           indf2	equ	0xFDF
  2274                           postinc2	equ	0xFDE
  2275                           postdec2	equ	0xFDD
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function ___lwdiv *****************
  2281 ;; Defined at:
  2282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  dividend        2   14[COMRAM] unsigned int 
  2285 ;;  divisor         2   16[COMRAM] unsigned int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  quotient        2   18[COMRAM] unsigned int 
  2288 ;;  counter         1   20[COMRAM] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2   14[COMRAM] unsigned int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        7 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    2
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_printf
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text7
  2313  000660                     __ptext7:
  2314                           	opt stack 0
  2315  000660                     ___lwdiv:
  2316                           	opt stack 27
  2317                           
  2318                           ;incstack = 0
  2319  000660  0E00               	movlw	0
  2320  000662  6E14               	movwf	___lwdiv@quotient+1,c
  2321  000664  0E00               	movlw	0
  2322  000666  6E13               	movwf	___lwdiv@quotient,c
  2323  000668  5011               	movf	___lwdiv@divisor,w,c
  2324  00066A  1012               	iorwf	___lwdiv@divisor+1,w,c
  2325  00066C  B4D8               	btfsc	status,2,c
  2326  00066E  D01C               	goto	l765
  2327  000670  0E01               	movlw	1
  2328  000672  6E15               	movwf	___lwdiv@counter,c
  2329  000674  D004               	goto	l1530
  2330  000676                     l1528:
  2331  000676  90D8               	bcf	status,0,c
  2332  000678  3611               	rlcf	___lwdiv@divisor,f,c
  2333  00067A  3612               	rlcf	___lwdiv@divisor+1,f,c
  2334  00067C  2A15               	incf	___lwdiv@counter,f,c
  2335  00067E                     l1530:
  2336  00067E  AE12               	btfss	___lwdiv@divisor+1,7,c
  2337  000680  D7FA               	goto	l1528
  2338  000682                     l1532:
  2339  000682  90D8               	bcf	status,0,c
  2340  000684  3613               	rlcf	___lwdiv@quotient,f,c
  2341  000686  3614               	rlcf	___lwdiv@quotient+1,f,c
  2342  000688  5011               	movf	___lwdiv@divisor,w,c
  2343  00068A  5C0F               	subwf	___lwdiv@dividend,w,c
  2344  00068C  5012               	movf	___lwdiv@divisor+1,w,c
  2345  00068E  5810               	subwfb	___lwdiv@dividend+1,w,c
  2346  000690  A0D8               	btfss	status,0,c
  2347  000692  D005               	goto	l1540
  2348  000694  5011               	movf	___lwdiv@divisor,w,c
  2349  000696  5E0F               	subwf	___lwdiv@dividend,f,c
  2350  000698  5012               	movf	___lwdiv@divisor+1,w,c
  2351  00069A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2352  00069C  8013               	bsf	___lwdiv@quotient,0,c
  2353  00069E                     l1540:
  2354  00069E  90D8               	bcf	status,0,c
  2355  0006A0  3212               	rrcf	___lwdiv@divisor+1,f,c
  2356  0006A2  3211               	rrcf	___lwdiv@divisor,f,c
  2357  0006A4  2E15               	decfsz	___lwdiv@counter,f,c
  2358  0006A6  D7ED               	goto	l1532
  2359  0006A8                     l765:
  2360  0006A8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2361  0006AC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2362  0006B0  0012               	return		;funcret
  2363  0006B2                     __end_of___lwdiv:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           indf2	equ	0xFDF
  2375                           postinc2	equ	0xFDE
  2376                           postdec2	equ	0xFDD
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function _SYSTEM_Initialize *****************
  2382 ;; Defined at:
  2383 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    4
  2404 ;; This function calls:
  2405 ;;		_EPWM1_Initialize
  2406 ;;		_EUSART1_Initialize
  2407 ;;		_INTERRUPT_Initialize
  2408 ;;		_OSCILLATOR_Initialize
  2409 ;;		_PIN_MANAGER_Initialize
  2410 ;;		_TMR0_Initialize
  2411 ;;		_TMR2_Initialize
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text8
  2418  000886                     __ptext8:
  2419                           	opt stack 0
  2420  000886                     _SYSTEM_Initialize:
  2421                           	opt stack 26
  2422                           
  2423                           ;mcc.c: 115: INTERRUPT_Initialize();
  2424                           
  2425                           ;incstack = 0
  2426  000886  EC73  F004         	call	_INTERRUPT_Initialize	;wreg free
  2427                           
  2428                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  2429  00088A  EC97  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  2430                           
  2431                           ;mcc.c: 117: OSCILLATOR_Initialize();
  2432  00088E  EC67  F004         	call	_OSCILLATOR_Initialize	;wreg free
  2433                           
  2434                           ;mcc.c: 118: EPWM1_Initialize();
  2435  000892  EC24  F004         	call	_EPWM1_Initialize	;wreg free
  2436                           
  2437                           ;mcc.c: 119: TMR2_Initialize();
  2438  000896  EC5E  F004         	call	_TMR2_Initialize	;wreg free
  2439                           
  2440                           ;mcc.c: 120: TMR0_Initialize();
  2441  00089A  EC52  F004         	call	_TMR0_Initialize	;wreg free
  2442                           
  2443                           ;mcc.c: 121: EUSART1_Initialize();
  2444  00089E  ECB1  F003         	call	_EUSART1_Initialize	;wreg free
  2445  0008A2  0012               	return		;funcret
  2446  0008A4                     __end_of_SYSTEM_Initialize:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           indf2	equ	0xFDF
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _TMR2_Initialize *****************
  2465 ;; Defined at:
  2466 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    3
  2487 ;; This function calls:
  2488 ;;		_TMR2_StartTimer
  2489 ;; This function is called by:
  2490 ;;		_SYSTEM_Initialize
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text9
  2495  0008BC                     __ptext9:
  2496                           	opt stack 0
  2497  0008BC                     _TMR2_Initialize:
  2498                           	opt stack 26
  2499                           
  2500                           ;tmr2.c: 63: T2CON = 0x00;
  2501                           
  2502                           ;incstack = 0
  2503  0008BC  0E00               	movlw	0
  2504  0008BE  6EBA               	movwf	4026,c	;volatile
  2505                           
  2506                           ;tmr2.c: 66: PR2 = 0xFF;
  2507  0008C0  68BB               	setf	4027,c	;volatile
  2508                           
  2509                           ;tmr2.c: 69: TMR2 = 0x00;
  2510  0008C2  0E00               	movlw	0
  2511  0008C4  6EBC               	movwf	4028,c	;volatile
  2512                           
  2513                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2514  0008C6  929E               	bcf	3998,1,c	;volatile
  2515                           
  2516                           ;tmr2.c: 75: TMR2_StartTimer();
  2517  0008C8  EC77  F004         	call	_TMR2_StartTimer	;wreg free
  2518  0008CC  0012               	return		;funcret
  2519  0008CE                     __end_of_TMR2_Initialize:
  2520                           	opt stack 0
  2521                           tblptru	equ	0xFF8
  2522                           tblptrh	equ	0xFF7
  2523                           tblptrl	equ	0xFF6
  2524                           tablat	equ	0xFF5
  2525                           prodh	equ	0xFF4
  2526                           prodl	equ	0xFF3
  2527                           intcon	equ	0xFF2
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _TMR2_StartTimer *****************
  2538 ;; Defined at:
  2539 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		None
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    2
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_TMR2_Initialize
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text10
  2568  0008EE                     __ptext10:
  2569                           	opt stack 0
  2570  0008EE                     _TMR2_StartTimer:
  2571                           	opt stack 26
  2572                           
  2573                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  2574                           
  2575                           ;incstack = 0
  2576  0008EE  84BA               	bsf	4026,2,c	;volatile
  2577  0008F0  0012               	return		;funcret
  2578  0008F2                     __end_of_TMR2_StartTimer:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           postdec2	equ	0xFDD
  2592                           fsr2h	equ	0xFDA
  2593                           fsr2l	equ	0xFD9
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _TMR0_Initialize *****************
  2597 ;; Defined at:
  2598 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2   36[None  ] int 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    3
  2619 ;; This function calls:
  2620 ;;		_TMR0_StartTimer
  2621 ;; This function is called by:
  2622 ;;		_SYSTEM_Initialize
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text11
  2627  0008A4                     __ptext11:
  2628                           	opt stack 0
  2629  0008A4                     _TMR0_Initialize:
  2630                           	opt stack 26
  2631                           
  2632                           ;tmr0.c: 70: T0CON = 0xFF;
  2633                           
  2634                           ;incstack = 0
  2635  0008A4  68D5               	setf	4053,c	;volatile
  2636                           
  2637                           ;tmr0.c: 73: TMR0H = 0x00;
  2638  0008A6  0E00               	movlw	0
  2639  0008A8  6ED7               	movwf	4055,c	;volatile
  2640                           
  2641                           ;tmr0.c: 76: TMR0L = 0x00;
  2642  0008AA  0E00               	movlw	0
  2643  0008AC  6ED6               	movwf	4054,c	;volatile
  2644                           
  2645                           ;tmr0.c: 79: timer0ReloadVal8bit = 0;
  2646  0008AE  0E00               	movlw	0
  2647  0008B0  6E48               	movwf	_timer0ReloadVal8bit,c	;volatile
  2648                           
  2649                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  2650  0008B2  94F2               	bcf	intcon,2,c	;volatile
  2651                           
  2652                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  2653  0008B4  8AF2               	bsf	intcon,5,c	;volatile
  2654                           
  2655                           ;tmr0.c: 88: TMR0_StartTimer();
  2656  0008B6  EC79  F004         	call	_TMR0_StartTimer	;wreg free
  2657  0008BA  0012               	return		;funcret
  2658  0008BC                     __end_of_TMR0_Initialize:
  2659                           	opt stack 0
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           prodh	equ	0xFF4
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           indf2	equ	0xFDF
  2670                           postinc2	equ	0xFDE
  2671                           postdec2	equ	0xFDD
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _TMR0_StartTimer *****************
  2677 ;; Defined at:
  2678 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		None
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_TMR0_Initialize
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text12
  2707  0008F2                     __ptext12:
  2708                           	opt stack 0
  2709  0008F2                     _TMR0_StartTimer:
  2710                           	opt stack 26
  2711                           
  2712                           ;tmr0.c: 94: T0CONbits.TMR0ON = 1;
  2713                           
  2714                           ;incstack = 0
  2715  0008F2  8ED5               	bsf	4053,7,c	;volatile
  2716  0008F4  0012               	return		;funcret
  2717  0008F6                     __end_of_TMR0_StartTimer:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           intcon	equ	0xFF2
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf2	equ	0xFDF
  2729                           postinc2	equ	0xFDE
  2730                           postdec2	equ	0xFDD
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _PIN_MANAGER_Initialize *****************
  2736 ;; Defined at:
  2737 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    2
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_SYSTEM_Initialize
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text13
  2766  00072E                     __ptext13:
  2767                           	opt stack 0
  2768  00072E                     _PIN_MANAGER_Initialize:
  2769                           	opt stack 27
  2770                           
  2771                           ;pin_manager.c: 51: LATB = 0x0;
  2772                           
  2773                           ;incstack = 0
  2774  00072E  0E00               	movlw	0
  2775  000730  6E8A               	movwf	3978,c	;volatile
  2776                           
  2777                           ;pin_manager.c: 52: LATA = 0x0;
  2778  000732  0E00               	movlw	0
  2779  000734  6E89               	movwf	3977,c	;volatile
  2780                           
  2781                           ;pin_manager.c: 53: LATC = 0x0;
  2782  000736  0E00               	movlw	0
  2783  000738  6E8B               	movwf	3979,c	;volatile
  2784                           
  2785                           ;pin_manager.c: 54: ANSELA = 0x2F;
  2786  00073A  0E2F               	movlw	47
  2787  00073C  010F               	movlb	15	; () banked
  2788  00073E  6F38               	movwf	56,b	;volatile
  2789                           
  2790                           ;pin_manager.c: 55: ANSELB = 0x3E;
  2791  000740  0E3E               	movlw	62
  2792  000742  010F               	movlb	15	; () banked
  2793  000744  6F39               	movwf	57,b	;volatile
  2794                           
  2795                           ;pin_manager.c: 56: ANSELC = 0x38;
  2796  000746  0E38               	movlw	56
  2797  000748  010F               	movlb	15	; () banked
  2798  00074A  6F3A               	movwf	58,b	;volatile
  2799                           
  2800                           ;pin_manager.c: 57: TRISB = 0xC8;
  2801  00074C  0EC8               	movlw	200
  2802  00074E  6E93               	movwf	3987,c	;volatile
  2803                           
  2804                           ;pin_manager.c: 58: TRISC = 0xF9;
  2805  000750  0EF9               	movlw	249
  2806  000752  6E94               	movwf	3988,c	;volatile
  2807                           
  2808                           ;pin_manager.c: 59: WPUB = 0xFE;
  2809  000754  0EFE               	movlw	254
  2810  000756  6E61               	movwf	3937,c	;volatile
  2811                           
  2812                           ;pin_manager.c: 60: TRISA = 0xEF;
  2813  000758  0EEF               	movlw	239
  2814  00075A  6E92               	movwf	3986,c	;volatile
  2815                           
  2816                           ; BSR set to: 15
  2817                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  2818  00075C  8EF1               	bsf	intcon2,7,c	;volatile
  2819                           
  2820                           ; BSR set to: 15
  2821                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  2822  00075E  96F2               	bcf	intcon,3,c	;volatile
  2823                           
  2824                           ; BSR set to: 15
  2825  000760  0012               	return		;funcret
  2826  000762                     __end_of_PIN_MANAGER_Initialize:
  2827                           	opt stack 0
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _OSCILLATOR_Initialize *****************
  2846 ;; Defined at:
  2847 ;;		line 124 in file "mcc_generated_files/mcc.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    2
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_SYSTEM_Initialize
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text14
  2876  0008CE                     __ptext14:
  2877                           	opt stack 0
  2878  0008CE                     _OSCILLATOR_Initialize:
  2879                           	opt stack 27
  2880                           
  2881                           ;mcc.c: 127: OSCCON = 0x70;
  2882                           
  2883                           ; BSR set to: 15
  2884                           ;incstack = 0
  2885  0008CE  0E70               	movlw	112
  2886  0008D0  6ED3               	movwf	4051,c	;volatile
  2887                           
  2888                           ;mcc.c: 129: OSCCON2 = 0x04;
  2889  0008D2  0E04               	movlw	4
  2890  0008D4  6ED2               	movwf	4050,c	;volatile
  2891                           
  2892                           ;mcc.c: 131: OSCTUNE = 0x40;
  2893  0008D6  0E40               	movlw	64
  2894  0008D8  6E9B               	movwf	3995,c	;volatile
  2895  0008DA  0012               	return		;funcret
  2896  0008DC                     __end_of_OSCILLATOR_Initialize:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           intcon2	equ	0xFF1
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           indf2	equ	0xFDF
  2909                           postinc2	equ	0xFDE
  2910                           postdec2	equ	0xFDD
  2911                           fsr2h	equ	0xFDA
  2912                           fsr2l	equ	0xFD9
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _INTERRUPT_Initialize *****************
  2916 ;; Defined at:
  2917 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		None
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_SYSTEM_Initialize
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text15
  2946  0008E6                     __ptext15:
  2947                           	opt stack 0
  2948  0008E6                     _INTERRUPT_Initialize:
  2949                           	opt stack 27
  2950                           
  2951                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2952                           
  2953                           ;incstack = 0
  2954  0008E6  9ED0               	bcf	4048,7,c	;volatile
  2955                           
  2956                           ;interrupt_manager.c: 60: IPR1bits.TX1IP = 0;
  2957  0008E8  989F               	bcf	3999,4,c	;volatile
  2958                           
  2959                           ;interrupt_manager.c: 62: IPR1bits.RC1IP = 0;
  2960  0008EA  9A9F               	bcf	3999,5,c	;volatile
  2961  0008EC  0012               	return		;funcret
  2962  0008EE                     __end_of_INTERRUPT_Initialize:
  2963                           	opt stack 0
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           intcon	equ	0xFF2
  2971                           intcon2	equ	0xFF1
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           indf2	equ	0xFDF
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _EUSART1_Initialize *****************
  2982 ;; Defined at:
  2983 ;;		line 78 in file "mcc_generated_files/eusart1.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    2
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_SYSTEM_Initialize
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text16
  3012  000762                     __ptext16:
  3013                           	opt stack 0
  3014  000762                     _EUSART1_Initialize:
  3015                           	opt stack 27
  3016                           
  3017                           ;eusart1.c: 81: PIE1bits.RC1IE = 0;
  3018                           
  3019                           ;incstack = 0
  3020  000762  9A9D               	bcf	3997,5,c	;volatile
  3021                           
  3022                           ;eusart1.c: 82: PIE1bits.TX1IE = 0;
  3023  000764  989D               	bcf	3997,4,c	;volatile
  3024                           
  3025                           ;eusart1.c: 87: BAUDCON1 = 0x00;
  3026  000766  0E00               	movlw	0
  3027  000768  6EB8               	movwf	4024,c	;volatile
  3028                           
  3029                           ;eusart1.c: 90: RCSTA1 = 0x90;
  3030  00076A  0E90               	movlw	144
  3031  00076C  6EAB               	movwf	4011,c	;volatile
  3032                           
  3033                           ;eusart1.c: 93: TXSTA1 = 0x20;
  3034  00076E  0E20               	movlw	32
  3035  000770  6EAC               	movwf	4012,c	;volatile
  3036                           
  3037                           ;eusart1.c: 96: SPBRG1 = 0x10;
  3038  000772  0E10               	movlw	16
  3039  000774  6EAF               	movwf	4015,c	;volatile
  3040                           
  3041                           ;eusart1.c: 99: SPBRGH1 = 0x00;
  3042  000776  0E00               	movlw	0
  3043  000778  6EB0               	movwf	4016,c	;volatile
  3044                           
  3045                           ;eusart1.c: 103: eusart1TxHead = 0;
  3046  00077A  0E00               	movlw	0
  3047  00077C  6E46               	movwf	_eusart1TxHead,c
  3048                           
  3049                           ;eusart1.c: 104: eusart1TxTail = 0;
  3050  00077E  0E00               	movlw	0
  3051  000780  6E47               	movwf	_eusart1TxTail,c
  3052                           
  3053                           ;eusart1.c: 105: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3054  000782  0E80               	movlw	128
  3055  000784  6E4A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  3056                           
  3057                           ;eusart1.c: 107: eusart1RxHead = 0;
  3058  000786  0E00               	movlw	0
  3059  000788  6E44               	movwf	_eusart1RxHead,c
  3060                           
  3061                           ;eusart1.c: 108: eusart1RxTail = 0;
  3062  00078A  0E00               	movlw	0
  3063  00078C  6E45               	movwf	_eusart1RxTail,c
  3064                           
  3065                           ;eusart1.c: 109: eusart1RxCount = 0;
  3066  00078E  0E00               	movlw	0
  3067  000790  6E43               	movwf	_eusart1RxCount,c	;volatile
  3068                           
  3069                           ;eusart1.c: 112: PIE1bits.RC1IE = 1;
  3070  000792  8A9D               	bsf	3997,5,c	;volatile
  3071  000794  0012               	return		;funcret
  3072  000796                     __end_of_EUSART1_Initialize:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           intcon2	equ	0xFF1
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           postdec2	equ	0xFDD
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _EPWM1_Initialize *****************
  3092 ;; Defined at:
  3093 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_SYSTEM_Initialize
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text17
  3122  000848                     __ptext17:
  3123                           	opt stack 0
  3124  000848                     _EPWM1_Initialize:
  3125                           	opt stack 27
  3126                           
  3127                           ;epwm1.c: 69: CCP1CON = 0x0E;
  3128                           
  3129                           ;incstack = 0
  3130  000848  0E0E               	movlw	14
  3131  00084A  6EBD               	movwf	4029,c	;volatile
  3132                           
  3133                           ;epwm1.c: 72: ECCP1AS = 0x00;
  3134  00084C  0E00               	movlw	0
  3135  00084E  6EB6               	movwf	4022,c	;volatile
  3136                           
  3137                           ;epwm1.c: 75: PWM1CON = 0x82;
  3138  000850  0E82               	movlw	130
  3139  000852  6EB7               	movwf	4023,c	;volatile
  3140                           
  3141                           ;epwm1.c: 78: PSTR1CON = 0x01;
  3142  000854  0E01               	movlw	1
  3143  000856  6EB9               	movwf	4025,c	;volatile
  3144                           
  3145                           ;epwm1.c: 81: CCPR1L = 0x00;
  3146  000858  0E00               	movlw	0
  3147  00085A  6EBE               	movwf	4030,c	;volatile
  3148                           
  3149                           ;epwm1.c: 84: CCPR1H = 0x00;
  3150  00085C  0E00               	movlw	0
  3151  00085E  6EBF               	movwf	4031,c	;volatile
  3152                           
  3153                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  3154  000860  0EFC               	movlw	-4
  3155  000862  010F               	movlb	15	; () banked
  3156  000864  1749               	andwf	73,f,b	;volatile
  3157                           
  3158                           ; BSR set to: 15
  3159  000866  0012               	return		;funcret
  3160  000868                     __end_of_EPWM1_Initialize:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           intcon2	equ	0xFF1
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           indf2	equ	0xFDF
  3173                           postinc2	equ	0xFDE
  3174                           postdec2	equ	0xFDD
  3175                           fsr2h	equ	0xFDA
  3176                           fsr2l	equ	0xFD9
  3177                           status	equ	0xFD8
  3178                           
  3179 ;; *************** function _INTERRUPT_InterruptManager *****************
  3180 ;; Defined at:
  3181 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:       14 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    1
  3202 ;; This function calls:
  3203 ;;		_EUSART1_Receive_ISR
  3204 ;;		_EUSART1_Transmit_ISR
  3205 ;; This function is called by:
  3206 ;;		Interrupt level 2
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	intcode
  3211  000008                     __pintcode:
  3212                           	opt stack 0
  3213  000008                     _INTERRUPT_InterruptManager:
  3214                           	opt stack 26
  3215                           
  3216                           ; BSR set to: 15
  3217                           ;incstack = 0
  3218  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3219  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3220  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3221  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3222  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3223  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3224  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3225  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3226  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3227  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3228  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3229  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3230  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3231  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3232  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3233                           
  3234                           ;interrupt_manager.c: 68: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3235  000042  B89D               	btfsc	3997,4,c	;volatile
  3236  000044  A89E               	btfss	3998,4,c	;volatile
  3237  000046  D003               	goto	i2l20
  3238                           
  3239                           ;interrupt_manager.c: 69: {
  3240                           ;interrupt_manager.c: 70: EUSART1_Transmit_ISR();
  3241  000048  ECE4  F003         	call	_EUSART1_Transmit_ISR	;wreg free
  3242                           
  3243                           ;interrupt_manager.c: 71: }
  3244  00004C  D005               	goto	i2l24
  3245  00004E                     i2l20:
  3246                           
  3247                           ;interrupt_manager.c: 72: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3248  00004E  BA9D               	btfsc	3997,5,c	;volatile
  3249  000050  AA9E               	btfss	3998,5,c	;volatile
  3250  000052  D002               	goto	i2l24
  3251                           
  3252                           ;interrupt_manager.c: 73: {
  3253                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  3254  000054  ECFB  F003         	call	_EUSART1_Receive_ISR	;wreg free
  3255  000058                     i2l24:
  3256  000058  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3257  00005C  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3258  000060  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3259  000064  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3260  000068  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3261  00006C  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3262  000070  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3263  000074  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3264  000078  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3265  00007C  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3266  000080  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3267  000084  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3268  000088  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3269  00008C  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3270  000090  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3271  000092  0011               	retfie		f
  3272  000094                     __end_of_INTERRUPT_InterruptManager:
  3273                           	opt stack 0
  3274                           pclatu	equ	0xFFB
  3275                           pclath	equ	0xFFA
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           intcon2	equ	0xFF1
  3284                           postinc0	equ	0xFEE
  3285                           fsr0h	equ	0xFEA
  3286                           fsr0l	equ	0xFE9
  3287                           wreg	equ	0xFE8
  3288                           fsr1h	equ	0xFE2
  3289                           fsr1l	equ	0xFE1
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           postdec2	equ	0xFDD
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _EUSART1_Transmit_ISR *****************
  3298 ;; Defined at:
  3299 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_INTERRUPT_InterruptManager
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text19
  3327  0007C8                     __ptext19:
  3328                           	opt stack 0
  3329  0007C8                     _EUSART1_Transmit_ISR:
  3330                           	opt stack 26
  3331                           
  3332                           ;eusart1.c: 173: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3333                           
  3334                           ;incstack = 0
  3335  0007C8  0E80               	movlw	128
  3336  0007CA  604A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3337  0007CC  D012               	goto	i2l116
  3338                           
  3339                           ;eusart1.c: 174: {
  3340                           ;eusart1.c: 175: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  3341  0007CE  5047               	movf	_eusart1TxTail,w,c
  3342  0007D0  0D01               	mullw	1
  3343  0007D2  0E60               	movlw	low _eusart1TxBuffer
  3344  0007D4  24F3               	addwf	prodl,w,c
  3345  0007D6  6ED9               	movwf	fsr2l,c
  3346  0007D8  0E00               	movlw	high _eusart1TxBuffer
  3347  0007DA  20F4               	addwfc	prodh,w,c
  3348  0007DC  6EDA               	movwf	fsr2h,c
  3349  0007DE  50DF               	movf	indf2,w,c
  3350  0007E0  6EAD               	movwf	4013,c	;volatile
  3351  0007E2  2A47               	incf	_eusart1TxTail,f,c
  3352                           
  3353                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3354  0007E4  0E7F               	movlw	127
  3355  0007E6  6447               	cpfsgt	_eusart1TxTail,c
  3356  0007E8  D002               	goto	i2l1102
  3357                           
  3358                           ;eusart1.c: 177: {
  3359                           ;eusart1.c: 178: eusart1TxTail = 0;
  3360  0007EA  0E00               	movlw	0
  3361  0007EC  6E47               	movwf	_eusart1TxTail,c
  3362  0007EE                     i2l1102:
  3363                           
  3364                           ;eusart1.c: 179: }
  3365                           ;eusart1.c: 180: eusart1TxBufferRemaining++;
  3366  0007EE  2A4A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3367                           
  3368                           ;eusart1.c: 181: }
  3369  0007F0  0012               	return	
  3370  0007F2                     i2l116:
  3371                           
  3372                           ;eusart1.c: 182: else
  3373                           ;eusart1.c: 183: {
  3374                           ;eusart1.c: 184: PIE1bits.TX1IE = 0;
  3375  0007F2  989D               	bcf	3997,4,c	;volatile
  3376  0007F4  0012               	return	
  3377  0007F6                     __end_of_EUSART1_Transmit_ISR:
  3378                           	opt stack 0
  3379                           pclatu	equ	0xFFB
  3380                           pclath	equ	0xFFA
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           intcon2	equ	0xFF1
  3389                           postinc0	equ	0xFEE
  3390                           fsr0h	equ	0xFEA
  3391                           fsr0l	equ	0xFE9
  3392                           wreg	equ	0xFE8
  3393                           fsr1h	equ	0xFE2
  3394                           fsr1l	equ	0xFE1
  3395                           indf2	equ	0xFDF
  3396                           postinc2	equ	0xFDE
  3397                           postdec2	equ	0xFDD
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _EUSART1_Receive_ISR *****************
  3403 ;; Defined at:
  3404 ;;		line 188 in file "mcc_generated_files/eusart1.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_INTERRUPT_InterruptManager
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text20
  3432  0007F6                     __ptext20:
  3433                           	opt stack 0
  3434  0007F6                     _EUSART1_Receive_ISR:
  3435                           	opt stack 26
  3436                           
  3437                           ;eusart1.c: 190: if(1 == RCSTA1bits.OERR)
  3438                           
  3439                           ;incstack = 0
  3440  0007F6  A2AB               	btfss	4011,1,c	;volatile
  3441  0007F8  D002               	goto	i2l1564
  3442                           
  3443                           ;eusart1.c: 191: {
  3444                           ;eusart1.c: 194: RCSTA1bits.CREN = 0;
  3445  0007FA  98AB               	bcf	4011,4,c	;volatile
  3446                           
  3447                           ;eusart1.c: 195: RCSTA1bits.CREN = 1;
  3448  0007FC  88AB               	bsf	4011,4,c	;volatile
  3449  0007FE                     i2l1564:
  3450                           
  3451                           ;eusart1.c: 196: }
  3452                           ;eusart1.c: 201: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3453  0007FE  5044               	movf	_eusart1RxHead,w,c
  3454  000800  0D01               	mullw	1
  3455  000802  0E00               	movlw	low _eusart1RxBuffer
  3456  000804  24F3               	addwf	prodl,w,c
  3457  000806  6ED9               	movwf	fsr2l,c
  3458  000808  0E01               	movlw	high _eusart1RxBuffer
  3459  00080A  20F4               	addwfc	prodh,w,c
  3460  00080C  6EDA               	movwf	fsr2h,c
  3461  00080E  CFAE FFDF          	movff	4014,indf2	;volatile
  3462  000812  2A44               	incf	_eusart1RxHead,f,c
  3463                           
  3464                           ;eusart1.c: 202: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3465  000814  0E7F               	movlw	127
  3466  000816  6444               	cpfsgt	_eusart1RxHead,c
  3467  000818  D002               	goto	i2l1572
  3468                           
  3469                           ;eusart1.c: 203: {
  3470                           ;eusart1.c: 204: eusart1RxHead = 0;
  3471  00081A  0E00               	movlw	0
  3472  00081C  6E44               	movwf	_eusart1RxHead,c
  3473  00081E                     i2l1572:
  3474                           
  3475                           ;eusart1.c: 205: }
  3476                           ;eusart1.c: 206: eusart1RxCount++;
  3477  00081E  2A43               	incf	_eusart1RxCount,f,c	;volatile
  3478  000820  0012               	return		;funcret
  3479  000822                     __end_of_EUSART1_Receive_ISR:
  3480                           	opt stack 0
  3481                           pclatu	equ	0xFFB
  3482                           pclath	equ	0xFFA
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           intcon	equ	0xFF2
  3490                           intcon2	equ	0xFF1
  3491                           postinc0	equ	0xFEE
  3492                           fsr0h	equ	0xFEA
  3493                           fsr0l	equ	0xFE9
  3494                           wreg	equ	0xFE8
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           pclatu	equ	0xFFB
  3504                           pclath	equ	0xFFA
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526                           	psect	rparam
  3527  0000                     pclatu	equ	0xFFB
  3528                           pclath	equ	0xFFA
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           prodh	equ	0xFF4
  3534                           prodl	equ	0xFF3
  3535                           intcon	equ	0xFF2
  3536                           intcon2	equ	0xFF1
  3537                           postinc0	equ	0xFEE
  3538                           fsr0h	equ	0xFEA
  3539                           fsr0l	equ	0xFE9
  3540                           wreg	equ	0xFE8
  3541                           fsr1h	equ	0xFE2
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550                           	psect	temp
  3551  00004B                     btemp:
  3552                           	opt stack 0
  3553  00004B                     	ds	1
  3554  0000                     int$flags	set	btemp
  3555                           pclatu	equ	0xFFB
  3556                           pclath	equ	0xFFA
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           intcon2	equ	0xFF1
  3565                           postinc0	equ	0xFEE
  3566                           fsr0h	equ	0xFEA
  3567                           fsr0l	equ	0xFE9
  3568                           wreg	equ	0xFE8
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8


Data Sizes:
    Strings     276
    Constant    18
    Data        0
    BSS         263
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      74
    BANK0           160      0     128
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_15(CODE[7]), STR_14(CODE[40]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[18]), STR_5(CODE[15]), STR_4(CODE[15]), 
		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3686
                                             46 COMRAM    20    20      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    23      6    3062
                                             26 COMRAM    20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      45
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      4A       1       78.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14A      12        0.0%
DATA                 0      0     14A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Mar 06 22:33:55 2016

           _eusart1TxBufferRemaining 004A                  ___wmul@multiplicand 0011  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l104 0706                                  l319 018A  
                                l765 06A8                                  l775 06EA  
                                l990 0728                                  l992 072A  
                                l978 06F6                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                    _TMR2_Initialize 08BC                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1512 087E                                 l1600 00B2  
                               l1530 067E                                 l1602 00C0  
                               l1540 069E                                 l1532 0682  
                               l1620 0152                                 l1612 00F4  
                               l1550 06C8                                 l1710 032C  
                               l1702 02D0                                 l1606 00C6  
                               l1528 0676                                 l1552 06CC  
                               l1720 0388                                 l1640 01D2  
                               l1624 0156                                 l1706 02E2  
                               l1642 01D6                                 l1722 0390  
                               l1810 04A2                                 l1802 0480  
                               l1556 06E0                                 l1548 06C0  
                               l1708 02E8                                 l1716 0372  
                               l1636 01B8                                 l1718 0382  
                               l1654 0202                                 l1670 0232  
                               l1902 05E2                                 l1830 04E6  
                               l1822 04CC                                 l1814 04AA  
                               l1806 0492                                 l1750 03D0  
                               l1656 0206                                 l1672 0242  
                               l1904 05FA                                 l1690 029E  
                               l1682 0280                                 l1850 0528  
                               l1842 0510                                 l1834 04F6  
                               l1826 04D4                                 l1818 04BC  
                               l1770 0414                                 l1762 03FA  
                               l1754 03D8                                 l1684 0288  
                               l1596 00A2                                 l1678 025C  
                               l1870 0574                                 l1862 0552  
                               l1854 053A                                 l1846 0520  
                               l1838 04FE                                 l1790 0456  
                               l1782 043E                                 l1774 0424  
                               l1766 0402                                 l1758 03EA  
                               l1696 02B4                                 l1698 02BC  
                               l1890 05B8                                 l1882 059E  
                               l1874 057C                                 l1866 0564  
                               l1858 054A                                 l1794 0468  
                               l1786 044E                                 l1778 042C  
                               l1894 05C8                                 l1886 05A6  
                               l1878 058E                                 l1798 0478  
                               l1898 05D0                                 STR_1 FFEC  
                               STR_2 FFD2                                 STR_3 FFA5  
                               STR_4 FFC3                                 STR_5 FFB4  
                               STR_6 FF72                                 STR_7 FF95  
                               STR_8 FFE0                                 STR_9 FF26  
                               _LATA 000F89                                 _LATB 000F8A  
                               u1407 0432                                 _LATC 000F8B  
                               u1417 045C                                 u1507 05D6  
                               u1427 0486                                 u1517 0600  
                               u1437 04B0                                 u1527 060E  
                               u1447 04DA                                 u1537 061C  
                               u1457 0504                                 u1377 03B8  
                               u1547 062A                                 u1467 052E  
                               u1387 03DE                                 u1557 0638  
                               u1477 0558                                 u1397 0408  
                               u1487 0582                                 u1497 05AC  
                               i2l20 004E                                 i2l24 0058  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 06F4                                 _main 03AA  
                    _TMR0_StartTimer 08F2                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 004B                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0094  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
            __end_of_TMR0_Initialize 08BC       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 08DC                                ?_main 0001  
                              STR_10 FF13                                STR_11 FF4C  
                              STR_12 FF39                                STR_13 FF5F  
                              STR_14 FEEB                                STR_15 FFF8  
                              STR_16 FF84                                _T0CON 000FD5  
                              _T2CON 000FBA                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 06B2                      __end_of___lwmod 06F4  
                              i2l116 07F2                                _TMR0H 000FD7  
                              _TMR0L 000FD6                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 07C8                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                    __end_of_dpowers FEE3                      __end_of_isdigit 0886  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 08DC  
                              main@a 0032                                main@i 0036  
                     ?_EUSART1_Write 0001                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                    _TMR2_StartTimer 08EE                       __CFG_PBADEN$ON 000000  
                    __initialization 0796           __end_of_EUSART1_Initialize 0796  
                       __end_of_main 0660              __end_of_TMR2_Initialize 08CE  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 002F  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0001  
            __end_of_TMR0_StartTimer 08F6                               _CCPR1H 000FBF  
                             _CCPR1L 000FBE                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l1102 07EE  
                             i2l1572 081E                               i2l1564 07FE  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                               ___wmul 0822  
                     __CFG_STVREN$ON 000000                            ??___lwdiv 0013  
                          ??___lwmod 001A                     ?_TMR0_Initialize 0001  
                             clear_0 079C                               clear_1 07A8  
                             clear_2 07B4                               _printf 0098  
                          ??_isdigit 000F                         __mediumconst FED8  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 000F  
            __end_of_TMR2_StartTimer 08F2                      _eusart1RxBuffer 0100  
      __size_of_INTERRUPT_Initialize 0008                      _eusart1TxBuffer 0060  
                  _SYSTEM_Initialize 0886                           __accesstop 0060  
            __end_of__initialization 07BA                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  _timer0ReloadVal8bit 0048  
                ??_SYSTEM_Initialize 000F                   ??_EPWM1_Initialize 000F  
                      __end_of_putch 08E6                     ?_TMR2_Initialize 0001  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 0822  
                   ?_TMR0_StartTimer 0001            __end_of_SYSTEM_Initialize 08A4  
                            ??_putch 0010                        _eusart1RxHead 0044  
                      _eusart1TxHead 0046                        _eusart1RxTail 0045  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                      _eusart1TxTail 0047                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 004A                   __CFG_CCP2MX$PORTC1 000000  
                            ?___wmul 000F                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                            ?_printf 001B                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                            _SPBRGH1 000FB0                     ?_TMR2_StartTimer 0001  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                      __size_of___wmul 0026  
                            ___lwdiv 0660                              ___lwmod 06B2  
                            __pcinit 0796                              __ramtop 1000  
                            __ptext0 03AA                              __ptext1 0098  
                            __ptext2 08DC                              __ptext3 06F4  
                            __ptext4 0868                              __ptext5 0822  
                            __ptext6 06B2                              __ptext7 0660  
                            __ptext8 0886                              __ptext9 08BC  
                    __size_of_printf 0312                            _T0CONbits 000FD5  
                  __end_of_hexpowers FEEB                              _dpowers FED9  
              _OSCILLATOR_Initialize 08CE                            _T2CONbits 000FBA  
                            _isdigit 0868                   _EUSART1_Initialize 0762  
           ??_PIN_MANAGER_Initialize 000F           __size_of_SYSTEM_Initialize 001E  
                            main@val 0034                 end_of_initialization 07BA  
                ?_EUSART1_Initialize 0001                        __Lmediumconst FED8  
                            printf@c 002E                              printf@f 001B  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                 ??_EUSART1_Initialize 000F  
                EUSART1_Write@txData 000F                          printf@width 002C  
       __end_of_INTERRUPT_Initialize 08EE                       __end_of___wmul 0848  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 03AA  
                start_initialization 0796            __size_of_EPWM1_Initialize 0020  
           __size_of_TMR0_Initialize 0018      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0010                __end_of_EUSART1_Write 072E  
                           ??___wmul 0013                             ??_printf 0021  
                     _eusart1RxCount 0043                          __pbssCOMRAM 0043  
      __size_of_EUSART1_Transmit_ISR 002E             __size_of_TMR2_Initialize 0012  
                       _isdigit$1010 0010         __size_of_EUSART1_Receive_ISR 002C  
           __size_of_TMR0_StartTimer 0004                     ___lwdiv@dividend 000F  
             _PIN_MANAGER_Initialize 072E                            __pintcode 0008  
                      __pmediumconst FED8                             ?___lwdiv 000F  
                           ?___lwmod 0016         ??_INTERRUPT_InterruptManager 0001  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
                           ?_isdigit 0001                            _hexpowers FEE3  
                   ___lwdiv@quotient 0013                       __size_of_putch 000A  
               _INTERRUPT_Initialize 08E6                    ??_TMR0_Initialize 000F  
                     ___wmul@product 0013                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
__size_of_INTERRUPT_InterruptManager 008C                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                          _uartState 0049                             _PSTR1CON 000FB9  
                          main@i_660 0039                            main@i_670 003E  
                          main@i_662 003A                            main@i_672 003F  
                          main@i_664 003B                            main@i_656 0037  
                          main@i_674 0040                            main@i_666 003C  
                          main@i_658 0038                            main@i_676 0041  
                          main@i_668 003D                            main@i_678 0042  
                  ___wmul@multiplier 000F                           printf@flag 002B  
                         printf@prec 0028                     _EPWM1_Initialize 0848  
                          main@sleep 0030                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                    ??_TMR2_Initialize 000F  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 000F                    ??_TMR0_StartTimer 000F  
        __size_of_EUSART1_Initialize 0034                     __size_of___lwdiv 0052  
                   __size_of___lwmod 0042                     __size_of_isdigit 001E  
                    ___lwdiv@divisor 0011                      ___lwdiv@counter 0015  
                           __ptext10 08EE                             __ptext11 08A4  
                           __ptext20 07F6                             __ptext12 08F2  
                           __ptext13 072E                             __ptext14 08CE  
                           __ptext15 08E6                             __ptext16 0762  
                           __ptext17 0848                             __ptext19 07C8  
                      __size_of_main 02B6                             int$flags 004B  
                  ??_TMR2_StartTimer 000F   __end_of_INTERRUPT_InterruptManager 0094  
         _INTERRUPT_InterruptManager 0008                            printf@idx 0025  
                          printf@val 0029                  _EUSART1_Receive_ISR 07F6  
                         _INTCONbits 000FF2                             isdigit@c 0011  
             ??_INTERRUPT_Initialize 000F                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001                     ___lwmod@dividend 0016  
            ?_PIN_MANAGER_Initialize 0001                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 07F6                             printf@ap 0026  
             __size_of_EUSART1_Write 003A                      ___lwmod@divisor 0018  
                    _TMR0_Initialize 08A4                      ___lwmod@counter 001A  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 0762                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 0868  
