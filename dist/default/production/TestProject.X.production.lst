

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 03 03:10:02 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	nvCOMRAM
    33  000029                     __pnvCOMRAM:
    34                           	opt stack 0
    35  000029                     _eusart1TxBufferRemaining:
    36                           	opt stack 0
    37  000029                     	ds	1
    38  0000                     _ANSELA	set	3896
    39  0000                     _ANSELB	set	3897
    40  0000                     _ANSELC	set	3898
    41  0000                     _CCPTMRS0bits	set	3913
    42  0000                     _BAUDCON1	set	4024
    43  0000                     _CCP1CON	set	4029
    44  0000                     _CCPR1H	set	4031
    45  0000                     _CCPR1L	set	4030
    46  0000                     _ECCP1AS	set	4022
    47  0000                     _INTCON2bits	set	4081
    48  0000                     _INTCONbits	set	4082
    49  0000                     _IPR1bits	set	3999
    50  0000                     _LATA	set	3977
    51  0000                     _LATB	set	3978
    52  0000                     _LATC	set	3979
    53  0000                     _OSCCON	set	4051
    54  0000                     _OSCCON2	set	4050
    55  0000                     _OSCTUNE	set	3995
    56  0000                     _PIE1bits	set	3997
    57  0000                     _PIR1bits	set	3998
    58  0000                     _PR2	set	4027
    59  0000                     _PSTR1CON	set	4025
    60  0000                     _PWM1CON	set	4023
    61  0000                     _RCONbits	set	4048
    62  0000                     _RCREG1	set	4014
    63  0000                     _RCSTA1	set	4011
    64  0000                     _RCSTA1bits	set	4011
    65  0000                     _SPBRG1	set	4015
    66  0000                     _SPBRGH1	set	4016
    67  0000                     _T2CON	set	4026
    68  0000                     _T2CONbits	set	4026
    69  0000                     _TMR2	set	4028
    70  0000                     _TRISA	set	3986
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISC	set	3988
    73  0000                     _TXREG1	set	4013
    74  0000                     _TXSTA1	set	4012
    75  0000                     _WPUB	set	3937
    76                           
    77                           	psect	smallconst
    78  001000                     __psmallconst:
    79                           	opt stack 0
    80  001000  00                 	db	0
    81  001001                     STR_8:
    82  001001  72                 	db	114	;'r'
    83  001002  61                 	db	97	;'a'
    84  001003  64                 	db	100	;'d'
    85  001004  69                 	db	105	;'i'
    86  001005  6F                 	db	111	;'o'
    87  001006  20                 	db	32
    88  001007  74                 	db	116	;'t'
    89  001008  78                 	db	120	;'x'
    90  001009  20                 	db	32
    91  00100A  31                 	db	49	;'1'
    92  00100B  32                 	db	50	;'2'
    93  00100C  33                 	db	51	;'3'
    94  00100D  34                 	db	52	;'4'
    95  00100E  35                 	db	53	;'5'
    96  00100F  36                 	db	54	;'6'
    97  001010  37                 	db	55	;'7'
    98  001011  38                 	db	56	;'8'
    99  001012  39                 	db	57	;'9'
   100  001013  30                 	db	48	;'0'
   101  001014  31                 	db	49	;'1'
   102  001015  32                 	db	50	;'2'
   103  001016  0D                 	db	13
   104  001017  0A                 	db	10
   105  001018  00                 	db	0
   106  001019                     STR_7:
   107  001019  72                 	db	114	;'r'
   108  00101A  61                 	db	97	;'a'
   109  00101B  64                 	db	100	;'d'
   110  00101C  69                 	db	105	;'i'
   111  00101D  6F                 	db	111	;'o'
   112  00101E  20                 	db	32
   113  00101F  73                 	db	115	;'s'
   114  001020  65                 	db	101	;'e'
   115  001021  74                 	db	116	;'t'
   116  001022  20                 	db	32
   117  001023  70                 	db	112	;'p'
   118  001024  77                 	db	119	;'w'
   119  001025  72                 	db	114	;'r'
   120  001026  20                 	db	32
   121  001027  31                 	db	49	;'1'
   122  001028  35                 	db	53	;'5'
   123  001029  0D                 	db	13
   124  00102A  0A                 	db	10
   125  00102B  00                 	db	0
   126  00102C                     STR_5:
   127  00102C  72                 	db	114	;'r'
   128  00102D  61                 	db	97	;'a'
   129  00102E  64                 	db	100	;'d'
   130  00102F  69                 	db	105	;'i'
   131  001030  6F                 	db	111	;'o'
   132  001031  20                 	db	32
   133  001032  67                 	db	103	;'g'
   134  001033  65                 	db	101	;'e'
   135  001034  74                 	db	116	;'t'
   136  001035  20                 	db	32
   137  001036  70                 	db	112	;'p'
   138  001037  72                 	db	114	;'r'
   139  001038  6C                 	db	108	;'l'
   140  001039  65                 	db	101	;'e'
   141  00103A  6E                 	db	110	;'n'
   142  00103B  0D                 	db	13
   143  00103C  0A                 	db	10
   144  00103D  00                 	db	0
   145  00103E                     STR_6:
   146  00103E  72                 	db	114	;'r'
   147  00103F  61                 	db	97	;'a'
   148  001040  64                 	db	100	;'d'
   149  001041  69                 	db	105	;'i'
   150  001042  6F                 	db	111	;'o'
   151  001043  20                 	db	32
   152  001044  67                 	db	103	;'g'
   153  001045  65                 	db	101	;'e'
   154  001046  74                 	db	116	;'t'
   155  001047  20                 	db	32
   156  001048  70                 	db	112	;'p'
   157  001049  77                 	db	119	;'w'
   158  00104A  72                 	db	114	;'r'
   159  00104B  0D                 	db	13
   160  00104C  0A                 	db	10
   161  00104D  00                 	db	0
   162  00104E                     STR_2:
   163  00104E  72                 	db	114	;'r'
   164  00104F  61                 	db	97	;'a'
   165  001050  64                 	db	100	;'d'
   166  001051  69                 	db	105	;'i'
   167  001052  6F                 	db	111	;'o'
   168  001053  20                 	db	32
   169  001054  67                 	db	103	;'g'
   170  001055  65                 	db	101	;'e'
   171  001056  74                 	db	116	;'t'
   172  001057  20                 	db	32
   173  001058  73                 	db	115	;'s'
   174  001059  66                 	db	102	;'f'
   175  00105A  0D                 	db	13
   176  00105B  0A                 	db	10
   177  00105C  00                 	db	0
   178  00105D                     STR_4:
   179  00105D  72                 	db	114	;'r'
   180  00105E  61                 	db	97	;'a'
   181  00105F  64                 	db	100	;'d'
   182  001060  69                 	db	105	;'i'
   183  001061  6F                 	db	111	;'o'
   184  001062  20                 	db	32
   185  001063  67                 	db	103	;'g'
   186  001064  65                 	db	101	;'e'
   187  001065  74                 	db	116	;'t'
   188  001066  20                 	db	32
   189  001067  63                 	db	99	;'c'
   190  001068  72                 	db	114	;'r'
   191  001069  0D                 	db	13
   192  00106A  0A                 	db	10
   193  00106B  00                 	db	0
   194  00106C                     STR_3:
   195  00106C  72                 	db	114	;'r'
   196  00106D  61                 	db	97	;'a'
   197  00106E  64                 	db	100	;'d'
   198  00106F  69                 	db	105	;'i'
   199  001070  6F                 	db	111	;'o'
   200  001071  20                 	db	32
   201  001072  67                 	db	103	;'g'
   202  001073  65                 	db	101	;'e'
   203  001074  74                 	db	116	;'t'
   204  001075  20                 	db	32
   205  001076  62                 	db	98	;'b'
   206  001077  77                 	db	119	;'w'
   207  001078  0D                 	db	13
   208  001079  0A                 	db	10
   209  00107A  00                 	db	0
   210  00107B                     STR_1:
   211  00107B  73                 	db	115	;'s'
   212  00107C  79                 	db	121	;'y'
   213  00107D  73                 	db	115	;'s'
   214  00107E  20                 	db	32
   215  00107F  67                 	db	103	;'g'
   216  001080  65                 	db	101	;'e'
   217  001081  74                 	db	116	;'t'
   218  001082  20                 	db	32
   219  001083  76                 	db	118	;'v'
   220  001084  65                 	db	101	;'e'
   221  001085  72                 	db	114	;'r'
   222  001086  0D                 	db	13
   223  001087  0A                 	db	10
   224  001088  00                 	db	0
   225                           
   226                           ; #config settings
   227  001089  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           	psect	cinit
   230  0013CC                     __pcinit:
   231                           	opt stack 0
   232  0013CC                     start_initialization:
   233                           	opt stack 0
   234  0013CC                     __initialization:
   235                           	opt stack 0
   236                           
   237                           ; Clear objects allocated to BANK0 (128 bytes)
   238  0013CC  EE00  F060         	lfsr	0,__pbssBANK0
   239  0013D0  0E80               	movlw	128
   240  0013D2                     clear_0:
   241  0013D2  6AEE               	clrf	postinc0,c
   242  0013D4  06E8               	decf	wreg,f,c
   243  0013D6  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to COMRAM (5 bytes)
   246  0013D8  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   247  0013DA  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   248  0013DC  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249  0013DE  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250  0013E0  6A24               	clrf	__pbssCOMRAM& (0+255),c
   251  0013E2                     end_of_initialization:
   252                           	opt stack 0
   253  0013E2                     __end_of__initialization:
   254                           	opt stack 0
   255  0013E2  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   256  0013E4  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257  0013E6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   258  0013E8  6EF8               	movwf	tblptru,c
   259  0013EA  0E10               	movlw	high __Lsmallconst
   260  0013EC  6EF7               	movwf	tblptrh,c
   261  0013EE  0100               	movlb	0
   262  0013F0  EF45  F008         	goto	_main	;jump to C main() function
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssCOMRAM
   269  000024                     __pbssCOMRAM:
   270                           	opt stack 0
   271  000024                     _eusart1RxCount:
   272                           	opt stack 0
   273  000024                     	ds	1
   274  000025                     _eusart1RxHead:
   275                           	opt stack 0
   276  000025                     	ds	1
   277  000026                     _eusart1RxTail:
   278                           	opt stack 0
   279  000026                     	ds	1
   280  000027                     _eusart1TxHead:
   281                           	opt stack 0
   282  000027                     	ds	1
   283  000028                     _eusart1TxTail:
   284                           	opt stack 0
   285  000028                     	ds	1
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	bssBANK0
   292  000060                     __pbssBANK0:
   293                           	opt stack 0
   294  000060                     _eusart1RxBuffer:
   295                           	opt stack 0
   296  000060                     	ds	64
   297  0000A0                     _eusart1TxBuffer:
   298                           	opt stack 0
   299  0000A0                     	ds	64
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           
   305                           	psect	cstackCOMRAM
   306  000001                     __pcstackCOMRAM:
   307                           	opt stack 0
   308  000001                     ??_INTERRUPT_InterruptManager:
   309  000001                     
   310                           ; 2 bytes @ 0x0
   311  000001                     	ds	14
   312  00000F                     ?___wmul:
   313                           	opt stack 0
   314  00000F                     EUSART1_Write@txData:
   315                           	opt stack 0
   316  00000F                     EPWM1_LoadDutyValue@dutyValue:
   317                           	opt stack 0
   318  00000F                     ___wmul@multiplier:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0xE
   322  00000F                     	ds	1
   323  000010                     putch@txData:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0xF
   327  000010                     	ds	1
   328  000011                     ??_EPWM1_LoadDutyValue:
   329  000011                     ?_printf:
   330                           	opt stack 0
   331  000011                     printf@f:
   332                           	opt stack 0
   333  000011                     ___wmul@multiplicand:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x10
   337  000011                     	ds	2
   338  000013                     printf@ap:
   339                           	opt stack 0
   340  000013                     ___wmul@product:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x12
   344  000013                     	ds	2
   345  000015                     printf@c:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x14
   349  000015                     	ds	1
   350  000016                     ??_main:
   351                           
   352                           ; 1 bytes @ 0x15
   353  000016                     	ds	1
   354  000017                     main@dir:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x16
   358  000017                     	ds	2
   359  000019                     main@i:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x18
   363  000019                     	ds	1
   364  00001A                     main@i_101:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x19
   368  00001A                     	ds	1
   369  00001B                     main@i_103:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x1A
   373  00001B                     	ds	1
   374  00001C                     main@i_105:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x1B
   378  00001C                     	ds	1
   379  00001D                     main@i_107:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x1C
   383  00001D                     	ds	1
   384  00001E                     main@i_109:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x1D
   388  00001E                     	ds	1
   389  00001F                     main@i_111:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1E
   393  00001F                     	ds	1
   394  000020                     main@i_113:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x1F
   398  000020                     	ds	1
   399  000021                     main@i_117:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x20
   403  000021                     	ds	1
   404  000022                     main@val:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x21
   408  000022                     	ds	2
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 26 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  i               1   32[COMRAM] unsigned char 
   424 ;;  i               1   31[COMRAM] unsigned char 
   425 ;;  i               1   30[COMRAM] unsigned char 
   426 ;;  i               1   29[COMRAM] unsigned char 
   427 ;;  i               1   28[COMRAM] unsigned char 
   428 ;;  i               1   27[COMRAM] unsigned char 
   429 ;;  i               1   26[COMRAM] unsigned char 
   430 ;;  i               1   25[COMRAM] unsigned char 
   431 ;;  i               1   24[COMRAM] unsigned char 
   432 ;;  val             2   33[COMRAM] int 
   433 ;;  dir             2   22[COMRAM] int 
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;Total ram usage:       14 bytes
   448 ;; Hardware stack levels required when called:    5
   449 ;; This function calls:
   450 ;;		_EPWM1_LoadDutyValue
   451 ;;		_SYSTEM_Initialize
   452 ;;		___wmul
   453 ;;		_printf
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text0
   460  00108A                     __ptext0:
   461                           	opt stack 0
   462  00108A                     _main:
   463                           	opt stack 26
   464                           
   465                           ;main.c: 27: SYSTEM_Initialize();
   466                           
   467                           ;incstack = 0
   468  00108A  EC1D  F00A         	call	_SYSTEM_Initialize	;wreg free
   469                           
   470                           ;main.c: 29: (INTCONbits.GIE = 1);
   471  00108E  8EF2               	bsf	intcon,7,c	;volatile
   472                           
   473                           ;main.c: 32: (INTCONbits.PEIE = 1);
   474  001090  8CF2               	bsf	intcon,6,c	;volatile
   475                           
   476                           ;main.c: 34: _delay((unsigned long)((10)*(64000000/4000.0)));
   477  001092  0ED0               	movlw	208
   478  001094  6E16               	movwf	??_main& (0+255),c
   479  001096  0ECA               	movlw	202
   480  001098                     u707:
   481  001098  2EE8               	decfsz	wreg,f,c
   482  00109A  D7FE               	goto	u707
   483  00109C  2E16               	decfsz	??_main& (0+255),f,c
   484  00109E  D7FC               	goto	u707
   485                           
   486                           ;main.c: 36: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   487  0010A0  0E00               	movlw	0
   488  0010A2  6E19               	movwf	main@i,c
   489  0010A4                     l1228:
   490  0010A4  0E09               	movlw	9
   491  0010A6  6419               	cpfsgt	main@i,c
   492  0010A8  D001               	goto	l1232
   493  0010AA  D009               	goto	l1236
   494  0010AC                     l1232:
   495  0010AC  0ED0               	movlw	208
   496  0010AE  6E16               	movwf	??_main& (0+255),c
   497  0010B0  0ECA               	movlw	202
   498  0010B2                     u717:
   499  0010B2  2EE8               	decfsz	wreg,f,c
   500  0010B4  D7FE               	goto	u717
   501  0010B6  2E16               	decfsz	??_main& (0+255),f,c
   502  0010B8  D7FC               	goto	u717
   503  0010BA  2A19               	incf	main@i,f,c
   504  0010BC  D7F3               	goto	l1228
   505  0010BE                     l1236:
   506                           
   507                           ;main.c: 38: printf("sys get ver\r\n");
   508  0010BE  0E7B               	movlw	low STR_1
   509  0010C0  6E11               	movwf	printf@f,c
   510  0010C2  0E10               	movlw	high STR_1
   511  0010C4  6E12               	movwf	printf@f+1,c
   512  0010C6  ECD1  F009         	call	_printf	;wreg free
   513                           
   514                           ;main.c: 39: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   515  0010CA  0E00               	movlw	0
   516  0010CC  6E1A               	movwf	main@i_101,c
   517  0010CE                     l1240:
   518  0010CE  0E09               	movlw	9
   519  0010D0  641A               	cpfsgt	main@i_101,c
   520  0010D2  D001               	goto	l1244
   521  0010D4  D009               	goto	l1248
   522  0010D6                     l1244:
   523  0010D6  0ED0               	movlw	208
   524  0010D8  6E16               	movwf	??_main& (0+255),c
   525  0010DA  0ECA               	movlw	202
   526  0010DC                     u727:
   527  0010DC  2EE8               	decfsz	wreg,f,c
   528  0010DE  D7FE               	goto	u727
   529  0010E0  2E16               	decfsz	??_main& (0+255),f,c
   530  0010E2  D7FC               	goto	u727
   531  0010E4  2A1A               	incf	main@i_101,f,c
   532  0010E6  D7F3               	goto	l1240
   533  0010E8                     l1248:
   534                           
   535                           ;main.c: 40: printf("radio get sf\r\n");
   536  0010E8  0E4E               	movlw	low STR_2
   537  0010EA  6E11               	movwf	printf@f,c
   538  0010EC  0E10               	movlw	high STR_2
   539  0010EE  6E12               	movwf	printf@f+1,c
   540  0010F0  ECD1  F009         	call	_printf	;wreg free
   541                           
   542                           ;main.c: 41: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   543  0010F4  0E00               	movlw	0
   544  0010F6  6E1B               	movwf	main@i_103,c
   545  0010F8                     l1252:
   546  0010F8  0E09               	movlw	9
   547  0010FA  641B               	cpfsgt	main@i_103,c
   548  0010FC  D001               	goto	l1256
   549  0010FE  D009               	goto	l1260
   550  001100                     l1256:
   551  001100  0ED0               	movlw	208
   552  001102  6E16               	movwf	??_main& (0+255),c
   553  001104  0ECA               	movlw	202
   554  001106                     u737:
   555  001106  2EE8               	decfsz	wreg,f,c
   556  001108  D7FE               	goto	u737
   557  00110A  2E16               	decfsz	??_main& (0+255),f,c
   558  00110C  D7FC               	goto	u737
   559  00110E  2A1B               	incf	main@i_103,f,c
   560  001110  D7F3               	goto	l1252
   561  001112                     l1260:
   562                           
   563                           ;main.c: 42: printf("radio get bw\r\n");
   564  001112  0E6C               	movlw	low STR_3
   565  001114  6E11               	movwf	printf@f,c
   566  001116  0E10               	movlw	high STR_3
   567  001118  6E12               	movwf	printf@f+1,c
   568  00111A  ECD1  F009         	call	_printf	;wreg free
   569                           
   570                           ;main.c: 43: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   571  00111E  0E00               	movlw	0
   572  001120  6E1C               	movwf	main@i_105,c
   573  001122                     l1264:
   574  001122  0E09               	movlw	9
   575  001124  641C               	cpfsgt	main@i_105,c
   576  001126  D001               	goto	l1268
   577  001128  D009               	goto	l1272
   578  00112A                     l1268:
   579  00112A  0ED0               	movlw	208
   580  00112C  6E16               	movwf	??_main& (0+255),c
   581  00112E  0ECA               	movlw	202
   582  001130                     u747:
   583  001130  2EE8               	decfsz	wreg,f,c
   584  001132  D7FE               	goto	u747
   585  001134  2E16               	decfsz	??_main& (0+255),f,c
   586  001136  D7FC               	goto	u747
   587  001138  2A1C               	incf	main@i_105,f,c
   588  00113A  D7F3               	goto	l1264
   589  00113C                     l1272:
   590                           
   591                           ;main.c: 44: printf("radio get cr\r\n");
   592  00113C  0E5D               	movlw	low STR_4
   593  00113E  6E11               	movwf	printf@f,c
   594  001140  0E10               	movlw	high STR_4
   595  001142  6E12               	movwf	printf@f+1,c
   596  001144  ECD1  F009         	call	_printf	;wreg free
   597                           
   598                           ;main.c: 45: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   599  001148  0E00               	movlw	0
   600  00114A  6E1D               	movwf	main@i_107,c
   601  00114C                     l1276:
   602  00114C  0E09               	movlw	9
   603  00114E  641D               	cpfsgt	main@i_107,c
   604  001150  D001               	goto	l1280
   605  001152  D009               	goto	l1284
   606  001154                     l1280:
   607  001154  0ED0               	movlw	208
   608  001156  6E16               	movwf	??_main& (0+255),c
   609  001158  0ECA               	movlw	202
   610  00115A                     u757:
   611  00115A  2EE8               	decfsz	wreg,f,c
   612  00115C  D7FE               	goto	u757
   613  00115E  2E16               	decfsz	??_main& (0+255),f,c
   614  001160  D7FC               	goto	u757
   615  001162  2A1D               	incf	main@i_107,f,c
   616  001164  D7F3               	goto	l1276
   617  001166                     l1284:
   618                           
   619                           ;main.c: 46: printf("radio get prlen\r\n");
   620  001166  0E2C               	movlw	low STR_5
   621  001168  6E11               	movwf	printf@f,c
   622  00116A  0E10               	movlw	high STR_5
   623  00116C  6E12               	movwf	printf@f+1,c
   624  00116E  ECD1  F009         	call	_printf	;wreg free
   625                           
   626                           ;main.c: 47: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   627  001172  0E00               	movlw	0
   628  001174  6E1E               	movwf	main@i_109,c
   629  001176                     l1288:
   630  001176  0E09               	movlw	9
   631  001178  641E               	cpfsgt	main@i_109,c
   632  00117A  D001               	goto	l1292
   633  00117C  D009               	goto	l1296
   634  00117E                     l1292:
   635  00117E  0ED0               	movlw	208
   636  001180  6E16               	movwf	??_main& (0+255),c
   637  001182  0ECA               	movlw	202
   638  001184                     u767:
   639  001184  2EE8               	decfsz	wreg,f,c
   640  001186  D7FE               	goto	u767
   641  001188  2E16               	decfsz	??_main& (0+255),f,c
   642  00118A  D7FC               	goto	u767
   643  00118C  2A1E               	incf	main@i_109,f,c
   644  00118E  D7F3               	goto	l1288
   645  001190                     l1296:
   646                           
   647                           ;main.c: 48: printf("radio get pwr\r\n");
   648  001190  0E3E               	movlw	low STR_6
   649  001192  6E11               	movwf	printf@f,c
   650  001194  0E10               	movlw	high STR_6
   651  001196  6E12               	movwf	printf@f+1,c
   652  001198  ECD1  F009         	call	_printf	;wreg free
   653                           
   654                           ;main.c: 49: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   655  00119C  0E00               	movlw	0
   656  00119E  6E1F               	movwf	main@i_111,c
   657  0011A0                     l1300:
   658  0011A0  0E09               	movlw	9
   659  0011A2  641F               	cpfsgt	main@i_111,c
   660  0011A4  D001               	goto	l1304
   661  0011A6  D009               	goto	l1308
   662  0011A8                     l1304:
   663  0011A8  0ED0               	movlw	208
   664  0011AA  6E16               	movwf	??_main& (0+255),c
   665  0011AC  0ECA               	movlw	202
   666  0011AE                     u777:
   667  0011AE  2EE8               	decfsz	wreg,f,c
   668  0011B0  D7FE               	goto	u777
   669  0011B2  2E16               	decfsz	??_main& (0+255),f,c
   670  0011B4  D7FC               	goto	u777
   671  0011B6  2A1F               	incf	main@i_111,f,c
   672  0011B8  D7F3               	goto	l1300
   673  0011BA                     l1308:
   674                           
   675                           ;main.c: 51: printf("radio set pwr 15\r\n");
   676  0011BA  0E19               	movlw	low STR_7
   677  0011BC  6E11               	movwf	printf@f,c
   678  0011BE  0E10               	movlw	high STR_7
   679  0011C0  6E12               	movwf	printf@f+1,c
   680  0011C2  ECD1  F009         	call	_printf	;wreg free
   681                           
   682                           ;main.c: 52: for(uint8_t i=0;i<10;i++) { _delay((unsigned long)((10)*(64000000/4000.0)))
      +                          ; }
   683  0011C6  0E00               	movlw	0
   684  0011C8  6E20               	movwf	main@i_113,c
   685  0011CA                     l1312:
   686  0011CA  0E09               	movlw	9
   687  0011CC  6420               	cpfsgt	main@i_113,c
   688  0011CE  D001               	goto	l1316
   689  0011D0  D009               	goto	l1320
   690  0011D2                     l1316:
   691  0011D2  0ED0               	movlw	208
   692  0011D4  6E16               	movwf	??_main& (0+255),c
   693  0011D6  0ECA               	movlw	202
   694  0011D8                     u787:
   695  0011D8  2EE8               	decfsz	wreg,f,c
   696  0011DA  D7FE               	goto	u787
   697  0011DC  2E16               	decfsz	??_main& (0+255),f,c
   698  0011DE  D7FC               	goto	u787
   699  0011E0  2A20               	incf	main@i_113,f,c
   700  0011E2  D7F3               	goto	l1312
   701  0011E4                     l1320:
   702                           
   703                           ;main.c: 54: int val=1;
   704  0011E4  0E00               	movlw	0
   705  0011E6  6E23               	movwf	main@val+1,c
   706  0011E8  0E01               	movlw	1
   707  0011EA  6E22               	movwf	main@val,c
   708                           
   709                           ;main.c: 55: int dir=1;
   710  0011EC  0E00               	movlw	0
   711  0011EE  6E18               	movwf	main@dir+1,c
   712  0011F0  0E01               	movlw	1
   713  0011F2  6E17               	movwf	main@dir,c
   714  0011F4                     l1322:
   715                           
   716                           ;main.c: 58: printf("radio tx 123456789012\r\n");
   717  0011F4  0E01               	movlw	low STR_8
   718  0011F6  6E11               	movwf	printf@f,c
   719  0011F8  0E10               	movlw	high STR_8
   720  0011FA  6E12               	movwf	printf@f+1,c
   721  0011FC  ECD1  F009         	call	_printf	;wreg free
   722                           
   723                           ;main.c: 60: for(uint8_t i=0;i<100;i++) {
   724  001200  0E00               	movlw	0
   725  001202  6E21               	movwf	main@i_117,c
   726  001204                     l1326:
   727  001204  0E63               	movlw	99
   728  001206  6421               	cpfsgt	main@i_117,c
   729  001208  D001               	goto	l1330
   730  00120A  D7F4               	goto	l1322
   731  00120C                     l1330:
   732                           
   733                           ;main.c: 61: val=val+dir*10;
   734  00120C  C017  F00F         	movff	main@dir,___wmul@multiplier
   735  001210  C018  F010         	movff	main@dir+1,___wmul@multiplier+1
   736  001214  0E00               	movlw	0
   737  001216  6E12               	movwf	___wmul@multiplicand+1,c
   738  001218  0E0A               	movlw	10
   739  00121A  6E11               	movwf	___wmul@multiplicand,c
   740  00121C  ECFA  F009         	call	___wmul	;wreg free
   741  001220  5022               	movf	main@val,w,c
   742  001222  240F               	addwf	?___wmul,w,c
   743  001224  6E22               	movwf	main@val,c
   744  001226  5023               	movf	main@val+1,w,c
   745  001228  2010               	addwfc	?___wmul+1,w,c
   746  00122A  6E23               	movwf	main@val+1,c
   747                           
   748                           ;main.c: 62: EPWM1_LoadDutyValue((uint16_t) val);
   749  00122C  C022  F00F         	movff	main@val,EPWM1_LoadDutyValue@dutyValue
   750  001230  C023  F010         	movff	main@val+1,EPWM1_LoadDutyValue@dutyValue+1
   751  001234  EC8C  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   752                           
   753                           ;main.c: 63: _delay((unsigned long)((10)*(64000000/4000.0)));
   754  001238  0ED0               	movlw	208
   755  00123A  6E16               	movwf	??_main& (0+255),c
   756  00123C  0ECA               	movlw	202
   757  00123E                     u797:
   758  00123E  2EE8               	decfsz	wreg,f,c
   759  001240  D7FE               	goto	u797
   760  001242  2E16               	decfsz	??_main& (0+255),f,c
   761  001244  D7FC               	goto	u797
   762                           
   763                           ;main.c: 64: if(val>1010)dir=-1;
   764  001246  BE23               	btfsc	main@val+1,7,c
   765  001248  D008               	goto	l1340
   766  00124A  0EF3               	movlw	243
   767  00124C  5C22               	subwf	main@val,w,c
   768  00124E  0E03               	movlw	3
   769  001250  5823               	subwfb	main@val+1,w,c
   770  001252  A0D8               	btfss	status,0,c
   771  001254  D002               	goto	l1340
   772  001256  6817               	setf	main@dir,c
   773  001258  6818               	setf	main@dir+1,c
   774  00125A                     l1340:
   775                           
   776                           ;main.c: 65: if(val<11)dir=1;
   777  00125A  BE23               	btfsc	main@val+1,7,c
   778  00125C  D006               	goto	l1342
   779  00125E  5023               	movf	main@val+1,w,c
   780  001260  E108               	bnz	l1344
   781  001262  0E0B               	movlw	11
   782  001264  5C22               	subwf	main@val,w,c
   783  001266  B0D8               	btfsc	status,0,c
   784  001268  D004               	goto	l1344
   785  00126A                     l1342:
   786  00126A  0E00               	movlw	0
   787  00126C  6E18               	movwf	main@dir+1,c
   788  00126E  0E01               	movlw	1
   789  001270  6E17               	movwf	main@dir,c
   790  001272                     l1344:
   791  001272  2A21               	incf	main@i_117,f,c
   792  001274  D7C7               	goto	l1326
   793  001276                     __end_of_main:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           intcon	equ	0xFF2
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           status	equ	0xFD8
   801                           
   802 ;; *************** function _printf *****************
   803 ;; Defined at:
   804 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  f               2   16[COMRAM] PTR const unsigned char 
   807 ;;		 -> STR_8(24), STR_7(19), STR_6(16), STR_5(18), 
   808 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(14), 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  tmpval          4    0        struct .
   811 ;;  cp              3    0        PTR const unsigned char 
   812 ;;  ap              2   18[COMRAM] PTR void [1]
   813 ;;		 -> ?_printf(2), 
   814 ;;  len             2    0        unsigned int 
   815 ;;  val             2    0        unsigned int 
   816 ;;  c               1   20[COMRAM] char 
   817 ;;  flag            1    0        unsigned char 
   818 ;;  prec            1    0        char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2   16[COMRAM] int 
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        5 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    4
   835 ;; This function calls:
   836 ;;		_putch
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text1
   843  0013A2                     __ptext1:
   844                           	opt stack 0
   845  0013A2                     _printf:
   846                           	opt stack 26
   847                           
   848                           ;doprnt.c: 466: va_list ap;
   849                           ;doprnt.c: 499: signed char c;
   850                           ;doprnt.c: 506: signed char prec;
   851                           ;doprnt.c: 508: unsigned char flag;
   852                           ;doprnt.c: 523: union {
   853                           ;doprnt.c: 524: unsigned long vd;
   854                           ;doprnt.c: 525: double integ;
   855                           ;doprnt.c: 526: } tmpval;
   856                           ;doprnt.c: 528: unsigned int val;
   857                           ;doprnt.c: 529: unsigned len;
   858                           ;doprnt.c: 530: const char * cp;
   859                           ;doprnt.c: 533: *ap = __va_start();
   860                           
   861                           ;incstack = 0
   862  0013A2  0E13               	movlw	low (?_printf+2)
   863  0013A4  6E13               	movwf	printf@ap,c
   864  0013A6  0E00               	movlw	high (?_printf+2)
   865  0013A8  6E14               	movwf	printf@ap+1,c
   866                           
   867                           ;doprnt.c: 536: while(c = *f++) {
   868  0013AA  D003               	goto	l1162
   869  0013AC                     l1160:
   870                           
   871                           ;doprnt.c: 540: {
   872                           ;doprnt.c: 541: (putch(c) );
   873  0013AC  5015               	movf	printf@c,w,c
   874  0013AE  EC3A  F00A         	call	_putch
   875  0013B2                     l1162:
   876  0013B2  C011  FFF6         	movff	printf@f,tblptrl
   877  0013B6  C012  FFF7         	movff	printf@f+1,tblptrh
   878  0013BA  4A11               	infsnz	printf@f,f,c
   879  0013BC  2A12               	incf	printf@f+1,f,c
   880  0013BE                     	if	0	;tblptru may be non-zero
   881  0013BE                     	endif
   882  0013BE                     	if	0	;tblptru may be non-zero
   883  0013BE                     	endif
   884  0013BE  0008               	tblrd		*
   885  0013C0  CFF5 F015          	movff	tablat,printf@c
   886  0013C4  5015               	movf	printf@c,w,c
   887  0013C6  B4D8               	btfsc	status,2,c
   888  0013C8  0012               	return	
   889  0013CA  D7F0               	goto	l1160
   890  0013CC                     __end_of_printf:
   891                           	opt stack 0
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           intcon	equ	0xFF2
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _putch *****************
   902 ;; Defined at:
   903 ;;		line 162 in file "mcc_generated_files/eusart1.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  txData          1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  txData          1   15[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    3
   924 ;; This function calls:
   925 ;;		_EUSART1_Write
   926 ;; This function is called by:
   927 ;;		_printf
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text2
   932  001474                     __ptext2:
   933                           	opt stack 0
   934  001474                     _putch:
   935                           	opt stack 26
   936                           
   937                           ;incstack = 0
   938                           ;putch@txData stored from wreg
   939  001474  6E10               	movwf	putch@txData,c
   940                           
   941                           ;eusart1.c: 164: EUSART1_Write(txData);
   942  001476  5010               	movf	putch@txData,w,c
   943  001478  EC3B  F009         	call	_EUSART1_Write
   944  00147C  0012               	return		;funcret
   945  00147E                     __end_of_putch:
   946                           	opt stack 0
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           intcon	equ	0xFF2
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _EUSART1_Write *****************
   957 ;; Defined at:
   958 ;;		line 134 in file "mcc_generated_files/eusart1.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  txData          1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  txData          1   14[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        1 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    2
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_putch
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text3
   987  001276                     __ptext3:
   988                           	opt stack 0
   989  001276                     _EUSART1_Write:
   990                           	opt stack 26
   991                           
   992                           ;incstack = 0
   993                           ;EUSART1_Write@txData stored from wreg
   994  001276  6E0F               	movwf	EUSART1_Write@txData,c
   995  001278                     l1140:
   996  001278  5029               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   997  00127A  B4D8               	btfsc	status,2,c
   998  00127C  D7FD               	goto	l1140
   999                           
  1000                           ;eusart1.c: 138: }
  1001                           ;eusart1.c: 140: if(0 == PIE1bits.TX1IE)
  1002  00127E  B89D               	btfsc	3997,4,c	;volatile
  1003  001280  D003               	goto	l132
  1004                           
  1005                           ;eusart1.c: 141: {
  1006                           ;eusart1.c: 142: TXREG1 = txData;
  1007  001282  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1008                           
  1009                           ;eusart1.c: 143: }
  1010  001286  D012               	goto	l1154
  1011  001288                     l132:
  1012                           
  1013                           ;eusart1.c: 144: else
  1014                           ;eusart1.c: 145: {
  1015                           ;eusart1.c: 146: PIE1bits.TX1IE = 0;
  1016  001288  989D               	bcf	3997,4,c	;volatile
  1017                           
  1018                           ;eusart1.c: 147: eusart1TxBuffer[eusart1TxHead++] = txData;
  1019  00128A  5027               	movf	_eusart1TxHead,w,c
  1020  00128C  0D01               	mullw	1
  1021  00128E  0EA0               	movlw	low _eusart1TxBuffer
  1022  001290  24F3               	addwf	prodl,w,c
  1023  001292  6ED9               	movwf	fsr2l,c
  1024  001294  0E00               	movlw	high _eusart1TxBuffer
  1025  001296  20F4               	addwfc	prodh,w,c
  1026  001298  6EDA               	movwf	fsr2h,c
  1027  00129A  C00F  FFDF         	movff	EUSART1_Write@txData,indf2
  1028  00129E  2A27               	incf	_eusart1TxHead,f,c
  1029                           
  1030                           ;eusart1.c: 148: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1031  0012A0  0E3F               	movlw	63
  1032  0012A2  6427               	cpfsgt	_eusart1TxHead,c
  1033  0012A4  D002               	goto	l1152
  1034                           
  1035                           ;eusart1.c: 149: {
  1036                           ;eusart1.c: 150: eusart1TxHead = 0;
  1037  0012A6  0E00               	movlw	0
  1038  0012A8  6E27               	movwf	_eusart1TxHead,c
  1039  0012AA                     l1152:
  1040                           
  1041                           ;eusart1.c: 151: }
  1042                           ;eusart1.c: 152: eusart1TxBufferRemaining--;
  1043  0012AA  0629               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1044  0012AC                     l1154:
  1045                           
  1046                           ;eusart1.c: 153: }
  1047                           ;eusart1.c: 154: PIE1bits.TX1IE = 1;
  1048  0012AC  889D               	bsf	3997,4,c	;volatile
  1049  0012AE  0012               	return		;funcret
  1050  0012B0                     __end_of_EUSART1_Write:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           prodh	equ	0xFF4
  1057                           prodl	equ	0xFF3
  1058                           intcon	equ	0xFF2
  1059                           postinc0	equ	0xFEE
  1060                           wreg	equ	0xFE8
  1061                           indf2	equ	0xFDF
  1062                           fsr2h	equ	0xFDA
  1063                           fsr2l	equ	0xFD9
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function ___wmul *****************
  1067 ;; Defined at:
  1068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  multiplier      2   14[COMRAM] unsigned int 
  1071 ;;  multiplicand    2   16[COMRAM] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  product         2   18[COMRAM] unsigned int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2   14[COMRAM] unsigned int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, prodl, prodh
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        6 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    2
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text4
  1098  0013F4                     __ptext4:
  1099                           	opt stack 0
  1100  0013F4                     ___wmul:
  1101                           	opt stack 28
  1102                           
  1103                           ;incstack = 0
  1104  0013F4  500F               	movf	___wmul@multiplier,w,c
  1105  0013F6  0211               	mulwf	___wmul@multiplicand,c
  1106  0013F8  CFF3 F013          	movff	prodl,___wmul@product
  1107  0013FC  CFF4 F014          	movff	prodh,___wmul@product+1
  1108  001400  500F               	movf	___wmul@multiplier,w,c
  1109  001402  0212               	mulwf	___wmul@multiplicand+1,c
  1110  001404  50F3               	movf	prodl,w,c
  1111  001406  2614               	addwf	___wmul@product+1,f,c
  1112  001408  5010               	movf	___wmul@multiplier+1,w,c
  1113  00140A  0211               	mulwf	___wmul@multiplicand,c
  1114  00140C  50F3               	movf	prodl,w,c
  1115  00140E  2614               	addwf	___wmul@product+1,f,c
  1116  001410  C013  F00F         	movff	___wmul@product,?___wmul
  1117  001414  C014  F010         	movff	___wmul@product+1,?___wmul+1
  1118  001418  0012               	return	
  1119  00141A                     __end_of___wmul:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           indf2	equ	0xFDF
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function _SYSTEM_Initialize *****************
  1136 ;; Defined at:
  1137 ;;		line 112 in file "mcc_generated_files/mcc.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2    2[None  ] int 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    4
  1158 ;; This function calls:
  1159 ;;		_EPWM1_Initialize
  1160 ;;		_EUSART1_Initialize
  1161 ;;		_INTERRUPT_Initialize
  1162 ;;		_OSCILLATOR_Initialize
  1163 ;;		_PIN_MANAGER_Initialize
  1164 ;;		_TMR2_Initialize
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text5
  1171  00143A                     __ptext5:
  1172                           	opt stack 0
  1173  00143A                     _SYSTEM_Initialize:
  1174                           	opt stack 26
  1175                           
  1176                           ;mcc.c: 115: INTERRUPT_Initialize();
  1177                           
  1178                           ;incstack = 0
  1179  00143A  EC3F  F00A         	call	_INTERRUPT_Initialize	;wreg free
  1180                           
  1181                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  1182  00143E  EC58  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1183                           
  1184                           ;mcc.c: 117: OSCILLATOR_Initialize();
  1185  001442  EC33  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  1186                           
  1187                           ;mcc.c: 118: EPWM1_Initialize();
  1188  001446  EC0D  F00A         	call	_EPWM1_Initialize	;wreg free
  1189                           
  1190                           ;mcc.c: 119: TMR2_Initialize();
  1191  00144A  EC2A  F00A         	call	_TMR2_Initialize	;wreg free
  1192                           
  1193                           ;mcc.c: 120: EUSART1_Initialize();
  1194  00144E  EC72  F009         	call	_EUSART1_Initialize	;wreg free
  1195  001452  0012               	return		;funcret
  1196  001454                     __end_of_SYSTEM_Initialize:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodh	equ	0xFF4
  1203                           prodl	equ	0xFF3
  1204                           intcon	equ	0xFF2
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           indf2	equ	0xFDF
  1208                           fsr2h	equ	0xFDA
  1209                           fsr2l	equ	0xFD9
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _TMR2_Initialize *****************
  1213 ;; Defined at:
  1214 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    3
  1235 ;; This function calls:
  1236 ;;		_TMR2_StartTimer
  1237 ;; This function is called by:
  1238 ;;		_SYSTEM_Initialize
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text6
  1243  001454                     __ptext6:
  1244                           	opt stack 0
  1245  001454                     _TMR2_Initialize:
  1246                           	opt stack 26
  1247                           
  1248                           ;tmr2.c: 63: T2CON = 0x00;
  1249                           
  1250                           ;incstack = 0
  1251  001454  0E00               	movlw	0
  1252  001456  6EBA               	movwf	4026,c	;volatile
  1253                           
  1254                           ;tmr2.c: 66: PR2 = 0xFF;
  1255  001458  68BB               	setf	4027,c	;volatile
  1256                           
  1257                           ;tmr2.c: 69: TMR2 = 0x00;
  1258  00145A  0E00               	movlw	0
  1259  00145C  6EBC               	movwf	4028,c	;volatile
  1260                           
  1261                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  1262  00145E  929E               	bcf	3998,1,c	;volatile
  1263                           
  1264                           ;tmr2.c: 75: TMR2_StartTimer();
  1265  001460  EC43  F00A         	call	_TMR2_StartTimer	;wreg free
  1266  001464  0012               	return		;funcret
  1267  001466                     __end_of_TMR2_Initialize:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           prodh	equ	0xFF4
  1274                           prodl	equ	0xFF3
  1275                           intcon	equ	0xFF2
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           indf2	equ	0xFDF
  1279                           fsr2h	equ	0xFDA
  1280                           fsr2l	equ	0xFD9
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _TMR2_StartTimer *****************
  1284 ;; Defined at:
  1285 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		None
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    2
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_TMR2_Initialize
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text7
  1314  001486                     __ptext7:
  1315                           	opt stack 0
  1316  001486                     _TMR2_StartTimer:
  1317                           	opt stack 26
  1318                           
  1319                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  1320                           
  1321                           ;incstack = 0
  1322  001486  84BA               	bsf	4026,2,c	;volatile
  1323  001488  0012               	return		;funcret
  1324  00148A                     __end_of_TMR2_StartTimer:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           prodh	equ	0xFF4
  1331                           prodl	equ	0xFF3
  1332                           intcon	equ	0xFF2
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           indf2	equ	0xFDF
  1336                           fsr2h	equ	0xFDA
  1337                           fsr2l	equ	0xFD9
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _PIN_MANAGER_Initialize *****************
  1341 ;; Defined at:
  1342 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_SYSTEM_Initialize
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text8
  1371  0012B0                     __ptext8:
  1372                           	opt stack 0
  1373  0012B0                     _PIN_MANAGER_Initialize:
  1374                           	opt stack 27
  1375                           
  1376                           ;pin_manager.c: 51: LATB = 0x0;
  1377                           
  1378                           ;incstack = 0
  1379  0012B0  0E00               	movlw	0
  1380  0012B2  6E8A               	movwf	3978,c	;volatile
  1381                           
  1382                           ;pin_manager.c: 52: LATA = 0x0;
  1383  0012B4  0E00               	movlw	0
  1384  0012B6  6E89               	movwf	3977,c	;volatile
  1385                           
  1386                           ;pin_manager.c: 53: LATC = 0x0;
  1387  0012B8  0E00               	movlw	0
  1388  0012BA  6E8B               	movwf	3979,c	;volatile
  1389                           
  1390                           ;pin_manager.c: 54: ANSELA = 0x2F;
  1391  0012BC  0E2F               	movlw	47
  1392  0012BE  010F               	movlb	15	; () banked
  1393  0012C0  6F38               	movwf	56,b	;volatile
  1394                           
  1395                           ;pin_manager.c: 55: ANSELB = 0x3E;
  1396  0012C2  0E3E               	movlw	62
  1397  0012C4  010F               	movlb	15	; () banked
  1398  0012C6  6F39               	movwf	57,b	;volatile
  1399                           
  1400                           ;pin_manager.c: 56: ANSELC = 0x38;
  1401  0012C8  0E38               	movlw	56
  1402  0012CA  010F               	movlb	15	; () banked
  1403  0012CC  6F3A               	movwf	58,b	;volatile
  1404                           
  1405                           ;pin_manager.c: 57: TRISB = 0xC8;
  1406  0012CE  0EC8               	movlw	200
  1407  0012D0  6E93               	movwf	3987,c	;volatile
  1408                           
  1409                           ;pin_manager.c: 58: TRISC = 0xF9;
  1410  0012D2  0EF9               	movlw	249
  1411  0012D4  6E94               	movwf	3988,c	;volatile
  1412                           
  1413                           ;pin_manager.c: 59: WPUB = 0xFE;
  1414  0012D6  0EFE               	movlw	254
  1415  0012D8  6E61               	movwf	3937,c	;volatile
  1416                           
  1417                           ;pin_manager.c: 60: TRISA = 0xEF;
  1418  0012DA  0EEF               	movlw	239
  1419  0012DC  6E92               	movwf	3986,c	;volatile
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  1423  0012DE  8EF1               	bsf	intcon2,7,c	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  1427  0012E0  96F2               	bcf	intcon,3,c	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430  0012E2  0012               	return		;funcret
  1431  0012E4                     __end_of_PIN_MANAGER_Initialize:
  1432                           	opt stack 0
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           prodh	equ	0xFF4
  1438                           prodl	equ	0xFF3
  1439                           intcon	equ	0xFF2
  1440                           intcon2	equ	0xFF1
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           indf2	equ	0xFDF
  1444                           fsr2h	equ	0xFDA
  1445                           fsr2l	equ	0xFD9
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _OSCILLATOR_Initialize *****************
  1449 ;; Defined at:
  1450 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    2
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_SYSTEM_Initialize
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text9
  1479  001466                     __ptext9:
  1480                           	opt stack 0
  1481  001466                     _OSCILLATOR_Initialize:
  1482                           	opt stack 27
  1483                           
  1484                           ;mcc.c: 126: OSCCON = 0x70;
  1485                           
  1486                           ; BSR set to: 15
  1487                           ;incstack = 0
  1488  001466  0E70               	movlw	112
  1489  001468  6ED3               	movwf	4051,c	;volatile
  1490                           
  1491                           ;mcc.c: 128: OSCCON2 = 0x04;
  1492  00146A  0E04               	movlw	4
  1493  00146C  6ED2               	movwf	4050,c	;volatile
  1494                           
  1495                           ;mcc.c: 130: OSCTUNE = 0x40;
  1496  00146E  0E40               	movlw	64
  1497  001470  6E9B               	movwf	3995,c	;volatile
  1498  001472  0012               	return		;funcret
  1499  001474                     __end_of_OSCILLATOR_Initialize:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           prodh	equ	0xFF4
  1506                           prodl	equ	0xFF3
  1507                           intcon	equ	0xFF2
  1508                           intcon2	equ	0xFF1
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           indf2	equ	0xFDF
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _INTERRUPT_Initialize *****************
  1517 ;; Defined at:
  1518 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		None
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    2
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_SYSTEM_Initialize
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text10
  1547  00147E                     __ptext10:
  1548                           	opt stack 0
  1549  00147E                     _INTERRUPT_Initialize:
  1550                           	opt stack 27
  1551                           
  1552                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1553                           
  1554                           ;incstack = 0
  1555  00147E  9ED0               	bcf	4048,7,c	;volatile
  1556                           
  1557                           ;interrupt_manager.c: 60: IPR1bits.TX1IP = 0;
  1558  001480  989F               	bcf	3999,4,c	;volatile
  1559                           
  1560                           ;interrupt_manager.c: 62: IPR1bits.RC1IP = 0;
  1561  001482  9A9F               	bcf	3999,5,c	;volatile
  1562  001484  0012               	return		;funcret
  1563  001486                     __end_of_INTERRUPT_Initialize:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           prodh	equ	0xFF4
  1570                           prodl	equ	0xFF3
  1571                           intcon	equ	0xFF2
  1572                           intcon2	equ	0xFF1
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           indf2	equ	0xFDF
  1576                           fsr2h	equ	0xFDA
  1577                           fsr2l	equ	0xFD9
  1578                           status	equ	0xFD8
  1579                           
  1580 ;; *************** function _EUSART1_Initialize *****************
  1581 ;; Defined at:
  1582 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_SYSTEM_Initialize
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text11
  1611  0012E4                     __ptext11:
  1612                           	opt stack 0
  1613  0012E4                     _EUSART1_Initialize:
  1614                           	opt stack 27
  1615                           
  1616                           ;eusart1.c: 79: PIE1bits.RC1IE = 0;
  1617                           
  1618                           ;incstack = 0
  1619  0012E4  9A9D               	bcf	3997,5,c	;volatile
  1620                           
  1621                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  1622  0012E6  989D               	bcf	3997,4,c	;volatile
  1623                           
  1624                           ;eusart1.c: 85: BAUDCON1 = 0x00;
  1625  0012E8  0E00               	movlw	0
  1626  0012EA  6EB8               	movwf	4024,c	;volatile
  1627                           
  1628                           ;eusart1.c: 88: RCSTA1 = 0x90;
  1629  0012EC  0E90               	movlw	144
  1630  0012EE  6EAB               	movwf	4011,c	;volatile
  1631                           
  1632                           ;eusart1.c: 91: TXSTA1 = 0x20;
  1633  0012F0  0E20               	movlw	32
  1634  0012F2  6EAC               	movwf	4012,c	;volatile
  1635                           
  1636                           ;eusart1.c: 94: SPBRG1 = 0x10;
  1637  0012F4  0E10               	movlw	16
  1638  0012F6  6EAF               	movwf	4015,c	;volatile
  1639                           
  1640                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  1641  0012F8  0E00               	movlw	0
  1642  0012FA  6EB0               	movwf	4016,c	;volatile
  1643                           
  1644                           ;eusart1.c: 101: eusart1TxHead = 0;
  1645  0012FC  0E00               	movlw	0
  1646  0012FE  6E27               	movwf	_eusart1TxHead,c
  1647                           
  1648                           ;eusart1.c: 102: eusart1TxTail = 0;
  1649  001300  0E00               	movlw	0
  1650  001302  6E28               	movwf	_eusart1TxTail,c
  1651                           
  1652                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1653  001304  0E40               	movlw	64
  1654  001306  6E29               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1655                           
  1656                           ;eusart1.c: 105: eusart1RxHead = 0;
  1657  001308  0E00               	movlw	0
  1658  00130A  6E25               	movwf	_eusart1RxHead,c
  1659                           
  1660                           ;eusart1.c: 106: eusart1RxTail = 0;
  1661  00130C  0E00               	movlw	0
  1662  00130E  6E26               	movwf	_eusart1RxTail,c
  1663                           
  1664                           ;eusart1.c: 107: eusart1RxCount = 0;
  1665  001310  0E00               	movlw	0
  1666  001312  6E24               	movwf	_eusart1RxCount,c	;volatile
  1667                           
  1668                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  1669  001314  8A9D               	bsf	3997,5,c	;volatile
  1670  001316  0012               	return		;funcret
  1671  001318                     __end_of_EUSART1_Initialize:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           prodh	equ	0xFF4
  1678                           prodl	equ	0xFF3
  1679                           intcon	equ	0xFF2
  1680                           intcon2	equ	0xFF1
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _EPWM1_Initialize *****************
  1689 ;; Defined at:
  1690 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    2
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_SYSTEM_Initialize
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text12
  1719  00141A                     __ptext12:
  1720                           	opt stack 0
  1721  00141A                     _EPWM1_Initialize:
  1722                           	opt stack 27
  1723                           
  1724                           ;epwm1.c: 69: CCP1CON = 0x0E;
  1725                           
  1726                           ;incstack = 0
  1727  00141A  0E0E               	movlw	14
  1728  00141C  6EBD               	movwf	4029,c	;volatile
  1729                           
  1730                           ;epwm1.c: 72: ECCP1AS = 0x00;
  1731  00141E  0E00               	movlw	0
  1732  001420  6EB6               	movwf	4022,c	;volatile
  1733                           
  1734                           ;epwm1.c: 75: PWM1CON = 0x82;
  1735  001422  0E82               	movlw	130
  1736  001424  6EB7               	movwf	4023,c	;volatile
  1737                           
  1738                           ;epwm1.c: 78: PSTR1CON = 0x01;
  1739  001426  0E01               	movlw	1
  1740  001428  6EB9               	movwf	4025,c	;volatile
  1741                           
  1742                           ;epwm1.c: 81: CCPR1L = 0x00;
  1743  00142A  0E00               	movlw	0
  1744  00142C  6EBE               	movwf	4030,c	;volatile
  1745                           
  1746                           ;epwm1.c: 84: CCPR1H = 0x00;
  1747  00142E  0E00               	movlw	0
  1748  001430  6EBF               	movwf	4031,c	;volatile
  1749                           
  1750                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  1751  001432  0EFC               	movlw	-4
  1752  001434  010F               	movlb	15	; () banked
  1753  001436  1749               	andwf	73,f,b	;volatile
  1754                           
  1755                           ; BSR set to: 15
  1756  001438  0012               	return		;funcret
  1757  00143A                     __end_of_EPWM1_Initialize:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           intcon2	equ	0xFF1
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           indf2	equ	0xFDF
  1770                           fsr2h	equ	0xFDA
  1771                           fsr2l	equ	0xFD9
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function _EPWM1_LoadDutyValue *****************
  1775 ;; Defined at:
  1776 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        4 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text13
  1805  001318                     __ptext13:
  1806                           	opt stack 0
  1807  001318                     _EPWM1_LoadDutyValue:
  1808                           	opt stack 28
  1809                           
  1810                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1811                           
  1812                           ; BSR set to: 15
  1813                           ;incstack = 0
  1814  001318  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1815  00131C  C010  F012         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1816  001320  90D8               	bcf	status,0,c
  1817  001322  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1818  001324  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1819  001326  90D8               	bcf	status,0,c
  1820  001328  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1821  00132A  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1822  00132C  5011               	movf	??_EPWM1_LoadDutyValue,w,c
  1823  00132E  6EBE               	movwf	4030,c	;volatile
  1824                           
  1825                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1826  001330  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1827  001334  0E03               	movlw	3
  1828  001336  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1829  001338  3A11               	swapf	??_EPWM1_LoadDutyValue,f,c
  1830  00133A  0EF0               	movlw	240
  1831  00133C  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1832  00133E  50BD               	movf	4029,w,c	;volatile
  1833  001340  0BCF               	andlw	207
  1834  001342  1011               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1835  001344  6EBD               	movwf	4029,c	;volatile
  1836  001346  0012               	return		;funcret
  1837  001348                     __end_of_EPWM1_LoadDutyValue:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           intcon2	equ	0xFF1
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           indf2	equ	0xFDF
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _INTERRUPT_InterruptManager *****************
  1855 ;; Defined at:
  1856 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;Total ram usage:       14 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    1
  1877 ;; This function calls:
  1878 ;;		_EUSART1_Receive_ISR
  1879 ;;		_EUSART1_Transmit_ISR
  1880 ;; This function is called by:
  1881 ;;		Interrupt level 2
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	intcode
  1886  000008                     __pintcode:
  1887                           	opt stack 0
  1888  000008                     _INTERRUPT_InterruptManager:
  1889                           	opt stack 26
  1890                           
  1891                           ;incstack = 0
  1892  000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1893  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1894  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1895  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1896  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1897  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1898  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1899  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1900  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1901  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1902  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1903  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1904  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1905  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1906  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1907                           
  1908                           ;interrupt_manager.c: 68: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1909  000042  B89D               	btfsc	3997,4,c	;volatile
  1910  000044  A89E               	btfss	3998,4,c	;volatile
  1911  000046  D003               	goto	i2l54
  1912                           
  1913                           ;interrupt_manager.c: 69: {
  1914                           ;interrupt_manager.c: 70: EUSART1_Transmit_ISR();
  1915  000048  ECA4  F009         	call	_EUSART1_Transmit_ISR	;wreg free
  1916                           
  1917                           ;interrupt_manager.c: 71: }
  1918  00004C  D005               	goto	i2l58
  1919  00004E                     i2l54:
  1920                           
  1921                           ;interrupt_manager.c: 72: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1922  00004E  BA9D               	btfsc	3997,5,c	;volatile
  1923  000050  AA9E               	btfss	3998,5,c	;volatile
  1924  000052  D002               	goto	i2l58
  1925                           
  1926                           ;interrupt_manager.c: 73: {
  1927                           ;interrupt_manager.c: 74: EUSART1_Receive_ISR();
  1928  000054  ECBB  F009         	call	_EUSART1_Receive_ISR	;wreg free
  1929  000058                     i2l58:
  1930  000058  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1931  00005C  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1932  000060  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1933  000064  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1934  000068  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1935  00006C  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1936  000070  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1937  000074  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1938  000078  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1939  00007C  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1940  000080  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1941  000084  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1942  000088  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1943  00008C  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1944  000090  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1945  000092  0011               	retfie		f
  1946  000094                     __end_of_INTERRUPT_InterruptManager:
  1947                           	opt stack 0
  1948                           pclatu	equ	0xFFB
  1949                           pclath	equ	0xFFA
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           prodh	equ	0xFF4
  1955                           prodl	equ	0xFF3
  1956                           intcon	equ	0xFF2
  1957                           intcon2	equ	0xFF1
  1958                           postinc0	equ	0xFEE
  1959                           fsr0h	equ	0xFEA
  1960                           fsr0l	equ	0xFE9
  1961                           wreg	equ	0xFE8
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _EUSART1_Transmit_ISR *****************
  1970 ;; Defined at:
  1971 ;;		line 167 in file "mcc_generated_files/eusart1.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_INTERRUPT_InterruptManager
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text15
  1999  001348                     __ptext15:
  2000                           	opt stack 0
  2001  001348                     _EUSART1_Transmit_ISR:
  2002                           	opt stack 26
  2003                           
  2004                           ;eusart1.c: 171: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  2005                           
  2006                           ;incstack = 0
  2007  001348  0E40               	movlw	64
  2008  00134A  6029               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  2009  00134C  D012               	goto	i2l144
  2010                           
  2011                           ;eusart1.c: 172: {
  2012                           ;eusart1.c: 173: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2013  00134E  5028               	movf	_eusart1TxTail,w,c
  2014  001350  0D01               	mullw	1
  2015  001352  0EA0               	movlw	low _eusart1TxBuffer
  2016  001354  24F3               	addwf	prodl,w,c
  2017  001356  6ED9               	movwf	fsr2l,c
  2018  001358  0E00               	movlw	high _eusart1TxBuffer
  2019  00135A  20F4               	addwfc	prodh,w,c
  2020  00135C  6EDA               	movwf	fsr2h,c
  2021  00135E  50DF               	movf	indf2,w,c
  2022  001360  6EAD               	movwf	4013,c	;volatile
  2023  001362  2A28               	incf	_eusart1TxTail,f,c
  2024                           
  2025                           ;eusart1.c: 174: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  2026  001364  0E3F               	movlw	63
  2027  001366  6428               	cpfsgt	_eusart1TxTail,c
  2028  001368  D002               	goto	i2l1176
  2029                           
  2030                           ;eusart1.c: 175: {
  2031                           ;eusart1.c: 176: eusart1TxTail = 0;
  2032  00136A  0E00               	movlw	0
  2033  00136C  6E28               	movwf	_eusart1TxTail,c
  2034  00136E                     i2l1176:
  2035                           
  2036                           ;eusart1.c: 177: }
  2037                           ;eusart1.c: 178: eusart1TxBufferRemaining++;
  2038  00136E  2A29               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2039                           
  2040                           ;eusart1.c: 179: }
  2041  001370  0012               	return	
  2042  001372                     i2l144:
  2043                           
  2044                           ;eusart1.c: 180: else
  2045                           ;eusart1.c: 181: {
  2046                           ;eusart1.c: 182: PIE1bits.TX1IE = 0;
  2047  001372  989D               	bcf	3997,4,c	;volatile
  2048  001374  0012               	return	
  2049  001376                     __end_of_EUSART1_Transmit_ISR:
  2050                           	opt stack 0
  2051                           pclatu	equ	0xFFB
  2052                           pclath	equ	0xFFA
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           prodh	equ	0xFF4
  2058                           prodl	equ	0xFF3
  2059                           intcon	equ	0xFF2
  2060                           intcon2	equ	0xFF1
  2061                           postinc0	equ	0xFEE
  2062                           fsr0h	equ	0xFEA
  2063                           fsr0l	equ	0xFE9
  2064                           wreg	equ	0xFE8
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _EUSART1_Receive_ISR *****************
  2073 ;; Defined at:
  2074 ;;		line 186 in file "mcc_generated_files/eusart1.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_INTERRUPT_InterruptManager
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text16
  2102  001376                     __ptext16:
  2103                           	opt stack 0
  2104  001376                     _EUSART1_Receive_ISR:
  2105                           	opt stack 26
  2106                           
  2107                           ;eusart1.c: 188: if(1 == RCSTA1bits.OERR)
  2108                           
  2109                           ;incstack = 0
  2110  001376  A2AB               	btfss	4011,1,c	;volatile
  2111  001378  D002               	goto	i2l1182
  2112                           
  2113                           ;eusart1.c: 189: {
  2114                           ;eusart1.c: 192: RCSTA1bits.CREN = 0;
  2115  00137A  98AB               	bcf	4011,4,c	;volatile
  2116                           
  2117                           ;eusart1.c: 193: RCSTA1bits.CREN = 1;
  2118  00137C  88AB               	bsf	4011,4,c	;volatile
  2119  00137E                     i2l1182:
  2120                           
  2121                           ;eusart1.c: 194: }
  2122                           ;eusart1.c: 197: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2123  00137E  5025               	movf	_eusart1RxHead,w,c
  2124  001380  0D01               	mullw	1
  2125  001382  0E60               	movlw	low _eusart1RxBuffer
  2126  001384  24F3               	addwf	prodl,w,c
  2127  001386  6ED9               	movwf	fsr2l,c
  2128  001388  0E00               	movlw	high _eusart1RxBuffer
  2129  00138A  20F4               	addwfc	prodh,w,c
  2130  00138C  6EDA               	movwf	fsr2h,c
  2131  00138E  CFAE FFDF          	movff	4014,indf2	;volatile
  2132  001392  2A25               	incf	_eusart1RxHead,f,c
  2133                           
  2134                           ;eusart1.c: 198: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2135  001394  0E3F               	movlw	63
  2136  001396  6425               	cpfsgt	_eusart1RxHead,c
  2137  001398  D002               	goto	i2l1190
  2138                           
  2139                           ;eusart1.c: 199: {
  2140                           ;eusart1.c: 200: eusart1RxHead = 0;
  2141  00139A  0E00               	movlw	0
  2142  00139C  6E25               	movwf	_eusart1RxHead,c
  2143  00139E                     i2l1190:
  2144                           
  2145                           ;eusart1.c: 201: }
  2146                           ;eusart1.c: 202: eusart1RxCount++;
  2147  00139E  2A24               	incf	_eusart1RxCount,f,c	;volatile
  2148  0013A0  0012               	return		;funcret
  2149  0013A2                     __end_of_EUSART1_Receive_ISR:
  2150                           	opt stack 0
  2151                           pclatu	equ	0xFFB
  2152                           pclath	equ	0xFFA
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           intcon2	equ	0xFF1
  2161                           postinc0	equ	0xFEE
  2162                           fsr0h	equ	0xFEA
  2163                           fsr0l	equ	0xFE9
  2164                           wreg	equ	0xFE8
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           indf2	equ	0xFDF
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           pclatu	equ	0xFFB
  2172                           pclath	equ	0xFFA
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           intcon2	equ	0xFF1
  2181                           postinc0	equ	0xFEE
  2182                           fsr0h	equ	0xFEA
  2183                           fsr0l	equ	0xFE9
  2184                           wreg	equ	0xFE8
  2185                           fsr1h	equ	0xFE2
  2186                           fsr1l	equ	0xFE1
  2187                           indf2	equ	0xFDF
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192                           	psect	rparam
  2193  0000                     pclatu	equ	0xFFB
  2194                           pclath	equ	0xFFA
  2195                           tblptru	equ	0xFF8
  2196                           tblptrh	equ	0xFF7
  2197                           tblptrl	equ	0xFF6
  2198                           tablat	equ	0xFF5
  2199                           prodh	equ	0xFF4
  2200                           prodl	equ	0xFF3
  2201                           intcon	equ	0xFF2
  2202                           intcon2	equ	0xFF1
  2203                           postinc0	equ	0xFEE
  2204                           fsr0h	equ	0xFEA
  2205                           fsr0l	equ	0xFE9
  2206                           wreg	equ	0xFE8
  2207                           fsr1h	equ	0xFE2
  2208                           fsr1l	equ	0xFE1
  2209                           indf2	equ	0xFDF
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214                           	psect	temp
  2215  00002A                     btemp:
  2216                           	opt stack 0
  2217  00002A                     	ds	1
  2218  0000                     int$flags	set	btemp
  2219                           pclatu	equ	0xFFB
  2220                           pclath	equ	0xFFA
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           intcon	equ	0xFF2
  2228                           intcon2	equ	0xFF1
  2229                           postinc0	equ	0xFEE
  2230                           fsr0h	equ	0xFEA
  2231                           fsr0l	equ	0xFE9
  2232                           wreg	equ	0xFE8
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8


Data Sizes:
    Strings     136
    Constant    0
    Data        0
    BSS         133
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      41
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[16]), STR_5(CODE[18]), 
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _putch->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    1548
                                             21 COMRAM    14    14      0
                _EPWM1_LoadDutyValue
                  _SYSTEM_Initialize
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     624
                                             16 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     287
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     108
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___wmul
   _printf
     _putch
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      29       1       43.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9      12        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 03 03:10:02 2016

           _eusart1TxBufferRemaining 0029                  ___wmul@multiplicand 0011  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l132 1288                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                u707 1098                                  u717 10B2  
                                u727 10DC                                  u737 1106  
                                u747 1130                                  u757 115A  
                                u767 1184                                  u777 11AE  
                                u787 11D8                                  u797 123E  
                    _TMR2_Initialize 1454                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1140 1278                                 l1300 11A0  
                               l1152 12AA                                 l1160 13AC  
                               l1320 11E4                                 l1312 11CA  
                               l1304 11A8                                 l1240 10CE  
                               l1232 10AC                                 l1154 12AC  
                               l1162 13B2                                 l1330 120C  
                               l1322 11F4                                 l1340 125A  
                               l1316 11D2                                 l1308 11BA  
                               l1260 1112                                 l1252 10F8  
                               l1244 10D6                                 l1236 10BE  
                               l1228 10A4                                 l1342 126A  
                               l1326 1204                                 l1344 1272  
                               l1280 1154                                 l1272 113C  
                               l1264 1122                                 l1256 1100  
                               l1248 10E8                                 l1292 117E  
                               l1284 1166                                 l1276 114C  
                               l1268 112A                                 l1296 1190  
                               l1288 1176                                 STR_1 107B  
                               STR_2 104E                                 STR_3 106C  
                               STR_4 105D                                 STR_5 102C  
                               STR_6 103E                                 STR_7 1019  
                               STR_8 1001                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               i2l54 004E                                 i2l58 0058  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 1276                                 _main 108A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 002A  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
              ??_EPWM1_LoadDutyValue 0011                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1474  
                              ?_main 0001                                _T2CON 000FBA  
                     __CFG_DEBUG$OFF 000000                                i2l144 1372  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1348  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 1474                                main@i 0019  
                     ?_EUSART1_Write 0001                                tablat 000FF5  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                    _TMR2_StartTimer 1486                       __CFG_PBADEN$ON 000000  
                    __initialization 13CC           __end_of_EUSART1_Initialize 1318  
                       __end_of_main 1276              __end_of_TMR2_Initialize 1466  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 0016  
                      __activetblptr 000001                ?_EUSART1_Transmit_ISR 0001  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             i2l1190 139E                               i2l1182 137E  
                             i2l1176 136E                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                         _CCPTMRS0bits 000F49  
                             ___wmul 13F4                       __CFG_STVREN$ON 000000  
                             clear_0 13D2                               _printf 13A2  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    ??_EUSART1_Write 000F              __end_of_TMR2_StartTimer 148A  
                    _eusart1RxBuffer 0060        __size_of_INTERRUPT_Initialize 0008  
                    _eusart1TxBuffer 00A0                    _SYSTEM_Initialize 143A  
                         __accesstop 0060              __end_of__initialization 13E2  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                  ?_EPWM1_Initialize 0001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 000F                   ??_EPWM1_Initialize 000F  
                      __end_of_putch 147E                     ?_TMR2_Initialize 0001  
             ??_EUSART1_Transmit_ISR 0001          __end_of_EUSART1_Receive_ISR 13A2  
          __end_of_SYSTEM_Initialize 1454                              ??_putch 0010  
                      _eusart1RxHead 0025                        _eusart1TxHead 0027  
                      _eusart1RxTail 0026                           __pbssBANK0 0060  
                      _eusart1TxTail 0028                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 0029                   __CFG_CCP2MX$PORTC1 000000  
                            ?___wmul 000F                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
                            ?_printf 0011                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                            _SPBRGH1 000FB0                     ?_TMR2_StartTimer 0001  
        __end_of_EPWM1_LoadDutyValue 1348                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                    __size_of___wmul 0026                         __psmallconst 1000  
                            __pcinit 13CC                              __ramtop 1000  
                            __ptext0 108A                              __ptext1 13A2  
                            __ptext2 1474                              __ptext3 1276  
                            __ptext4 13F4                              __ptext5 143A  
                            __ptext6 1454                              __ptext7 1486  
                            __ptext8 12B0                              __ptext9 1466  
                    __size_of_printf 002A                _OSCILLATOR_Initialize 1466  
                          _T2CONbits 000FBA                   _EUSART1_Initialize 12E4  
           ??_PIN_MANAGER_Initialize 000F                              main@dir 0017  
         __size_of_SYSTEM_Initialize 001A                              main@val 0022  
               end_of_initialization 13E2                  ?_EUSART1_Initialize 0001  
                            printf@c 0015                              printf@f 0011  
                            postinc0 000FEE                 ??_EUSART1_Initialize 000F  
                EUSART1_Write@txData 000F         __end_of_INTERRUPT_Initialize 1486  
                     __end_of___wmul 141A               ?_OSCILLATOR_Initialize 0001  
                     __end_of_printf 13CC                  start_initialization 13CC  
          __size_of_EPWM1_Initialize 0020      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0010         EPWM1_LoadDutyValue@dutyValue 000F  
              __end_of_EUSART1_Write 12B0                             ??___wmul 0013  
                           ??_printf 0013                       _eusart1RxCount 0024  
                        __pbssCOMRAM 0024        __size_of_EUSART1_Transmit_ISR 002E  
           __size_of_TMR2_Initialize 0012         __size_of_EUSART1_Receive_ISR 002C  
             _PIN_MANAGER_Initialize 12B0                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 0001                     __CFG_PRICLKEN$ON 000000  
                        __smallconst 1000                             _BAUDCON1 000FB8  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 147E  
                     ___wmul@product 0013                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
__size_of_INTERRUPT_InterruptManager 008C                             _PIR1bits 000F9E  
       __size_of_EPWM1_LoadDutyValue 0030                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                             _PSTR1CON 000FB9  
                          main@i_101 001A                            main@i_111 001F  
                          main@i_103 001B                            main@i_113 0020  
                          main@i_105 001C                            main@i_107 001D  
                          main@i_117 0021                            main@i_109 001E  
                  ___wmul@multiplier 000F                     _EPWM1_Initialize 141A  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 000F                             __Hrparam 0000  
                           __Lrparam 0000                         __Lsmallconst 1000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 000F          __size_of_EUSART1_Initialize 0034  
                           __ptext10 147E                             __ptext11 12E4  
                           __ptext12 141A                             __ptext13 1318  
                           __ptext15 1348                             __ptext16 1376  
                      __size_of_main 01EC                             int$flags 002A  
                  ??_TMR2_StartTimer 000F   __end_of_INTERRUPT_InterruptManager 0094  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 1376  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 000F  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
            ?_PIN_MANAGER_Initialize 0001                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 1376                             printf@ap 0013  
             __size_of_EUSART1_Write 003A                    __CFG_T3CMX$PORTC0 000000  
                _EPWM1_LoadDutyValue 1318                ??_EUSART1_Receive_ISR 0001  
     __end_of_PIN_MANAGER_Initialize 12E4                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 143A                 ?_EPWM1_LoadDutyValue 000F  
